#!/bin/sh
#Network diagram
#              -------------admin network (ssh)-------------------------------------
#                    |                                  |                        |
#+-----------------------+  +----------------------------------------+  +-----------------------+
#|    Packet receiver    |  |             Device under test          |  |     Packet generator  |
#|        pxetest1       |  |             pxetest2                   |  |        pxetest3       |
#|                       |  |                                        |  |                       |
#|                       |  |                   mce0: 198.18.0.2/24  |<=| vcxl0: 198.18.0.13/24 |
#|                       |  |                          2001:2::2/64  |  |         2001:2::13/64 |
#|                       |  |                     7c:fe:90:73:49:0a  |  |     00:07:43:30:f5:b1 |
#|                       |  |                                        |  |                       |
#| vcxl0: 198.19.0.11/24 |<=| cxl1: 198.19.0.2/24                    |<=| vcxl1: 198.18.0.113/24|
#|  2001:2:0:8000::11/64 |  | 2001:2:0:8000::2/64                    |  |         2001:2::113/64|
#|     00:07:43:2e:c7:31 |  | 00:07:43:2c:bc:58                      |  |     00:07:43:30:f5:b9 |
#|                       |  |                                        |  |                       |
#|                       |  |          static routes                 |  |                       |
#|                       |  |      198.18.0.0/16 > 198.18.0.13       |  |                       |
#|                       |  |      198.19.0.0/16 > 198.19.0.11       |  |                       |
#|                       |  |        2001:2::/49 > 2001:2::13        |  |                       |
#|                       |  | 2001:2:0:8000::/49 > 2001:2:0:8000::11 |  |                       |
#|                       |  |                                        |  |                       |
#| /boot/loader.conf:    |  |                static arp              |  | /boot/loader.conf:    |
#| hw.cxgbe.num_vis=2    |  | 198.18.0.13 > 00:07:43:30:f5:b1        |  | hw.cxgbe.num_vis=2    |
#| hw.cxgbe.nnmrxq_vi=8  |  | 198.19.0.11 > 00:07:43:2c:14:b1        |  | hw.cxgbe.nnmrxq_vi=6  |
#| hw.cxgbe.nnmtxq_vi=8  |  |                                        |  | hw.cxgbe.nnmtxq_vi=6  |
#| hw.cxgbe.nm_txcsum=1  |  |                                        |  | hw.cxgbe.nm_txcsum=1  |
#+-----------------------+  +----------------------------------------+  +-----------------------+

# Admin network IP
SENDER_ADMIN="pxetest3"
RECEIVER_ADMIN="pxetest1"
DUT_ADMIN="pxetest2"
REF_ADMIN=""

# LAB network IP and data
SENDER_LAB_IP="198.18.0.13"
RECEIVER_LAB_IP="198.19.0.11"

#netmap pkt-gen need these information:
# Auto extracting them?
SENDER_LAB_IF="vcxl0"
SENDER_LAB_IF_MAC="00:07:43:30:f5:b1"
RECEIVER_LAB_IF="vcxl0"
RECEIVER_LAB_IF_MAC="00:07:43:2c:14:b1"
# ssh pxetest3 ping -c 2 198.18.0.2
# ssh pxetest3 arp -n 198.18.0.2 | cut -d ' ' -f 4
DUT_LAB_IF_MAC_SENDER_SIDE="7c:fe:90:73:49:0a"
DUT_LAB_IF_MAC_RECEIVER_SIDE="00:07:43:2c:bc:58"

# Netmap pkt size didn't include CRC (4 Bytes)
# RFC2544 ask to try with:
# 64, 128, 256, 512, 1024, 1280, 1518
# This mean for netmap pktgen:
# 60, 124, 252, 508, 1020, 1276, 1514
# But need to add 2 for inet6
# So, just generate 1 byte payload UDP packet with Ethernet padding
: ${PKT_SIZE:="43"}

# PMC event to collect
: ${PMC_EVENT:="cpu_clk_unhalted.thread"}

#Timeout: Number of seconds / 5 to wait before declaring a problem for DUT rebooting process
REBOOT_TIMEOUT=240

#Is DUT online? This step allow the switch to fill its MAC table (avoiding  to
# broadcast this storm to all ports)
IS_DUT_ONLINE_TARGET=${DUT_ADMIN}
IS_DUT_ONLINE_CMD="ping -c 2 ${RECEIVER_LAB_IP} && ping -c 2 ${SENDER_LAB_IP}"

##### Standard forwarding bench
: ${AF:="4"}
: ${SENDER_LAB_NET:="198.18.10.1:2001-198.18.10.71"}
: ${RECEIVER_LAB_NET:="198.19.10.1:2001-198.19.10.70"}
: ${PKT_TO_SEND:="2000000000"}

#Bench commands
# to be able to use -p 4, hw.cxgbe.nnmtxq_vi=4 must be declared
# Generating 10Mpps x 4 = 40 Mpps
RECEIVER_START_CMD="pkt-gen -N -f rx -i ${RECEIVER_LAB_IF} -w 2 -W"
RECEIVER_STOP_CMD="pkill pkt-gen"
SENDER_STOP_CMD="pkill pkt-gen"

#Standard
SENDER_START_CMD="pkt-gen -N -f tx -i ${SENDER_LAB_IF} -n ${PKT_TO_SEND} \
-${AF} -d ${RECEIVER_LAB_NET} -D ${DUT_LAB_IF_MAC_SENDER_SIDE} -p 4 \
-s ${SENDER_LAB_NET} -S ${SENDER_LAB_IF_MAC} -w 2 -l ${PKT_SIZE}"
