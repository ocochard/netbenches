<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ipf_state_check (6 samples, 0.34%)</title><rect x="612.9" y="37" width="4.0" height="15.0" fill="rgb(216,71,23)" rx="2" ry="2" />
<text  x="615.95" y="47.5" ></text>
</g>
<g >
<title>ip_findroute (33 samples, 1.86%)</title><rect x="138.2" y="85" width="21.9" height="15.0" fill="rgb(233,52,28)" rx="2" ry="2" />
<text  x="141.16" y="95.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (6 samples, 0.34%)</title><rect x="749.7" y="165" width="4.0" height="15.0" fill="rgb(235,75,52)" rx="2" ry="2" />
<text  x="752.74" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.06%)</title><rect x="665.4" y="197" width="0.7" height="15.0" fill="rgb(232,228,38)" rx="2" ry="2" />
<text  x="668.41" y="207.5" ></text>
</g>
<g >
<title>fork_exit (1,124 samples, 63.25%)</title><rect x="18.6" y="277" width="746.4" height="15.0" fill="rgb(246,213,12)" rx="2" ry="2" />
<text  x="21.63" y="287.5" >fork_exit</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (1 samples, 0.06%)</title><rect x="1177.4" y="229" width="0.6" height="15.0" fill="rgb(246,14,22)" rx="2" ry="2" />
<text  x="1180.38" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (14 samples, 0.79%)</title><rect x="953.6" y="53" width="9.3" height="15.0" fill="rgb(218,187,30)" rx="2" ry="2" />
<text  x="956.60" y="63.5" ></text>
</g>
<g >
<title>in_lltable_lookup (8 samples, 0.45%)</title><rect x="100.3" y="53" width="5.3" height="15.0" fill="rgb(239,134,27)" rx="2" ry="2" />
<text  x="103.31" y="63.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (6 samples, 0.34%)</title><rect x="759.0" y="213" width="4.0" height="15.0" fill="rgb(213,118,25)" rx="2" ry="2" />
<text  x="762.04" y="223.5" ></text>
</g>
<g >
<title>pfil_run_hooks (712 samples, 40.07%)</title><rect x="160.1" y="85" width="472.8" height="15.0" fill="rgb(227,1,32)" rx="2" ry="2" />
<text  x="163.07" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>ipf_check (284 samples, 15.98%)</title><rect x="765.0" y="85" width="188.6" height="15.0" fill="rgb(232,158,8)" rx="2" ry="2" />
<text  x="768.01" y="95.5" >ipf_check</text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.06%)</title><rect x="1184.0" y="245" width="0.7" height="15.0" fill="rgb(218,157,23)" rx="2" ry="2" />
<text  x="1187.02" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.06%)</title><rect x="1174.1" y="213" width="0.6" height="15.0" fill="rgb(234,128,45)" rx="2" ry="2" />
<text  x="1177.06" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (284 samples, 15.98%)</title><rect x="765.0" y="197" width="188.6" height="15.0" fill="rgb(246,82,19)" rx="2" ry="2" />
<text  x="768.01" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>ether_output_frame (14 samples, 0.79%)</title><rect x="953.6" y="85" width="9.3" height="15.0" fill="rgb(210,179,27)" rx="2" ry="2" />
<text  x="956.60" y="95.5" ></text>
</g>
<g >
<title>iflib_encap (63 samples, 3.55%)</title><rect x="711.9" y="181" width="41.8" height="15.0" fill="rgb(237,189,2)" rx="2" ry="2" />
<text  x="714.89" y="191.5" >ifl..</text>
</g>
<g >
<title>ether_nh_input (313 samples, 17.61%)</title><rect x="953.6" y="181" width="207.8" height="15.0" fill="rgb(254,131,1)" rx="2" ry="2" />
<text  x="956.60" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (4 samples, 0.23%)</title><rect x="651.5" y="197" width="2.6" height="15.0" fill="rgb(226,54,6)" rx="2" ry="2" />
<text  x="654.46" y="207.5" ></text>
</g>
<g >
<title>iflib_txq_drain (118 samples, 6.64%)</title><rect x="680.0" y="197" width="78.4" height="15.0" fill="rgb(211,82,15)" rx="2" ry="2" />
<text  x="683.02" y="207.5" >iflib_txq..</text>
</g>
<g >
<title>m_free (13 samples, 0.73%)</title><rect x="703.3" y="149" width="8.6" height="15.0" fill="rgb(248,144,3)" rx="2" ry="2" />
<text  x="706.26" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (284 samples, 15.98%)</title><rect x="765.0" y="277" width="188.6" height="15.0" fill="rgb(241,127,38)" rx="2" ry="2" />
<text  x="768.01" y="287.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>__mtx_lock_sleep (146 samples, 8.22%)</title><rect x="856.7" y="53" width="96.9" height="15.0" fill="rgb(225,149,19)" rx="2" ry="2" />
<text  x="859.65" y="63.5" >__mtx_lock_..</text>
</g>
<g >
<title>ipf_check (693 samples, 39.00%)</title><rect x="172.7" y="53" width="460.2" height="15.0" fill="rgb(222,165,2)" rx="2" ry="2" />
<text  x="175.69" y="63.5" >ipf_check</text>
</g>
<g >
<title>mb_dtor_mbuf (4 samples, 0.23%)</title><rect x="707.2" y="117" width="2.7" height="15.0" fill="rgb(221,144,35)" rx="2" ry="2" />
<text  x="710.24" y="127.5" ></text>
</g>
<g >
<title>timercb (4 samples, 0.23%)</title><rect x="1187.3" y="261" width="2.7" height="15.0" fill="rgb(238,157,11)" rx="2" ry="2" />
<text  x="1190.34" y="271.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.06%)</title><rect x="134.2" y="69" width="0.6" height="15.0" fill="rgb(221,169,16)" rx="2" ry="2" />
<text  x="137.18" y="79.5" ></text>
</g>
<g >
<title>ipf_makefrip (14 samples, 0.79%)</title><rect x="1106.3" y="53" width="9.3" height="15.0" fill="rgb(238,81,20)" rx="2" ry="2" />
<text  x="1109.33" y="63.5" ></text>
</g>
<g >
<title>et_start (1 samples, 0.06%)</title><rect x="1188.0" y="229" width="0.7" height="15.0" fill="rgb(231,17,6)" rx="2" ry="2" />
<text  x="1191.01" y="239.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (20 samples, 1.13%)</title><rect x="1169.4" y="245" width="13.3" height="15.0" fill="rgb(214,60,42)" rx="2" ry="2" />
<text  x="1172.41" y="255.5" ></text>
</g>
<g >
<title>ipf_check (299 samples, 16.83%)</title><rect x="962.9" y="69" width="198.5" height="15.0" fill="rgb(237,222,41)" rx="2" ry="2" />
<text  x="965.90" y="79.5" >ipf_check</text>
</g>
<g >
<title>ip_tryforward (284 samples, 15.98%)</title><rect x="765.0" y="133" width="188.6" height="15.0" fill="rgb(246,6,18)" rx="2" ry="2" />
<text  x="768.01" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>pfil_run_hooks (284 samples, 15.98%)</title><rect x="765.0" y="117" width="188.6" height="15.0" fill="rgb(244,57,23)" rx="2" ry="2" />
<text  x="768.01" y="127.5" >pfil_run_hooks</text>
</g>
<g >
<title>ipf_scanlist (146 samples, 8.22%)</title><rect x="856.7" y="69" width="96.9" height="15.0" fill="rgb(243,29,48)" rx="2" ry="2" />
<text  x="859.65" y="79.5" >ipf_scanlist</text>
</g>
<g >
<title>wakeup (2 samples, 0.11%)</title><rect x="763.7" y="229" width="1.3" height="15.0" fill="rgb(225,52,54)" rx="2" ry="2" />
<text  x="766.69" y="239.5" ></text>
</g>
<g >
<title>ip_input (313 samples, 17.61%)</title><rect x="953.6" y="133" width="207.8" height="15.0" fill="rgb(247,202,40)" rx="2" ry="2" />
<text  x="956.60" y="143.5" >ip_input</text>
</g>
<g >
<title>uma_zalloc_arg (4 samples, 0.23%)</title><rect x="648.8" y="181" width="2.7" height="15.0" fill="rgb(233,33,28)" rx="2" ry="2" />
<text  x="651.81" y="191.5" ></text>
</g>
<g >
<title>intr_execute_handlers (35 samples, 1.97%)</title><rect x="1161.4" y="277" width="23.3" height="15.0" fill="rgb(228,131,50)" rx="2" ry="2" />
<text  x="1164.45" y="287.5" >i..</text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.17%)</title><rect x="709.9" y="117" width="2.0" height="15.0" fill="rgb(222,197,11)" rx="2" ry="2" />
<text  x="712.90" y="127.5" ></text>
</g>
<g >
<title>arpresolve (26 samples, 1.46%)</title><rect x="89.7" y="69" width="17.2" height="15.0" fill="rgb(205,148,30)" rx="2" ry="2" />
<text  x="92.68" y="79.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (4 samples, 0.23%)</title><rect x="699.3" y="165" width="2.6" height="15.0" fill="rgb(249,99,11)" rx="2" ry="2" />
<text  x="702.27" y="175.5" ></text>
</g>
<g >
<title>lock_delay (138 samples, 7.77%)</title><rect x="765.0" y="37" width="91.7" height="15.0" fill="rgb(234,168,3)" rx="2" ry="2" />
<text  x="768.01" y="47.5" >lock_delay</text>
</g>
<g >
<title>lock_delay (134 samples, 7.54%)</title><rect x="962.9" y="37" width="89.0" height="15.0" fill="rgb(250,157,12)" rx="2" ry="2" />
<text  x="965.90" y="47.5" >lock_delay</text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.06%)</title><rect x="1182.0" y="213" width="0.7" height="15.0" fill="rgb(248,93,14)" rx="2" ry="2" />
<text  x="1185.03" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (14 samples, 0.79%)</title><rect x="953.6" y="69" width="9.3" height="15.0" fill="rgb(238,42,12)" rx="2" ry="2" />
<text  x="956.60" y="79.5" ></text>
</g>
<g >
<title>iflib_if_transmit (34 samples, 1.91%)</title><rect x="111.6" y="53" width="22.6" height="15.0" fill="rgb(205,26,45)" rx="2" ry="2" />
<text  x="114.60" y="63.5" >i..</text>
</g>
<g >
<title>soft_get_config (1 samples, 0.06%)</title><rect x="1189.3" y="181" width="0.7" height="15.0" fill="rgb(218,125,44)" rx="2" ry="2" />
<text  x="1192.34" y="191.5" ></text>
</g>
<g >
<title>ipf_auth_check (5 samples, 0.28%)</title><rect x="430.3" y="37" width="3.4" height="15.0" fill="rgb(236,209,31)" rx="2" ry="2" />
<text  x="433.34" y="47.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (284 samples, 15.98%)</title><rect x="765.0" y="101" width="188.6" height="15.0" fill="rgb(252,57,49)" rx="2" ry="2" />
<text  x="768.01" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>_task_fn_tx (126 samples, 7.09%)</title><rect x="679.4" y="229" width="83.6" height="15.0" fill="rgb(248,74,48)" rx="2" ry="2" />
<text  x="682.35" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.06%)</title><rect x="1173.4" y="213" width="0.7" height="15.0" fill="rgb(243,116,46)" rx="2" ry="2" />
<text  x="1176.40" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.06%)</title><rect x="22.0" y="181" width="0.6" height="15.0" fill="rgb(225,173,28)" rx="2" ry="2" />
<text  x="24.95" y="191.5" ></text>
</g>
<g >
<title>intr_event_handle (27 samples, 1.52%)</title><rect x="1166.8" y="261" width="17.9" height="15.0" fill="rgb(208,117,17)" rx="2" ry="2" />
<text  x="1169.76" y="271.5" ></text>
</g>
<g >
<title>ipf_checkv4sum (11 samples, 0.62%)</title><rect x="1106.3" y="37" width="7.3" height="15.0" fill="rgb(234,9,51)" rx="2" ry="2" />
<text  x="1109.33" y="47.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (1 samples, 0.06%)</title><rect x="646.2" y="101" width="0.6" height="15.0" fill="rgb(223,207,6)" rx="2" ry="2" />
<text  x="649.15" y="111.5" ></text>
</g>
<g >
<title>ip_input (284 samples, 15.98%)</title><rect x="765.0" y="149" width="188.6" height="15.0" fill="rgb(252,60,23)" rx="2" ry="2" />
<text  x="768.01" y="159.5" >ip_input</text>
</g>
<g >
<title>grouptaskqueue_enqueue (6 samples, 0.34%)</title><rect x="118.9" y="37" width="4.0" height="15.0" fill="rgb(232,5,37)" rx="2" ry="2" />
<text  x="121.90" y="47.5" ></text>
</g>
<g >
<title>ipf_scanlist (69 samples, 3.88%)</title><rect x="1115.6" y="53" width="45.8" height="15.0" fill="rgb(214,164,51)" rx="2" ry="2" />
<text  x="1118.63" y="63.5" >ipf_..</text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.06%)</title><rect x="633.5" y="197" width="0.7" height="15.0" fill="rgb(222,31,29)" rx="2" ry="2" />
<text  x="636.53" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (284 samples, 15.98%)</title><rect x="765.0" y="165" width="188.6" height="15.0" fill="rgb(221,85,5)" rx="2" ry="2" />
<text  x="768.01" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>handleevents (3 samples, 0.17%)</title><rect x="1188.0" y="245" width="2.0" height="15.0" fill="rgb(218,204,30)" rx="2" ry="2" />
<text  x="1191.01" y="255.5" ></text>
</g>
<g >
<title>ipf_derefrule (82 samples, 4.61%)</title><rect x="1051.9" y="53" width="54.4" height="15.0" fill="rgb(252,194,46)" rx="2" ry="2" />
<text  x="1054.88" y="63.5" >ipf_d..</text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.11%)</title><rect x="763.7" y="213" width="1.3" height="15.0" fill="rgb(246,201,4)" rx="2" ry="2" />
<text  x="766.69" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (313 samples, 17.61%)</title><rect x="953.6" y="197" width="207.8" height="15.0" fill="rgb(242,126,38)" rx="2" ry="2" />
<text  x="956.60" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>gtaskqueue_thread_loop (1,124 samples, 63.25%)</title><rect x="18.6" y="261" width="746.4" height="15.0" fill="rgb(224,90,51)" rx="2" ry="2" />
<text  x="21.63" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>binuptime (1 samples, 0.06%)</title><rect x="1187.3" y="245" width="0.7" height="15.0" fill="rgb(252,161,24)" rx="2" ry="2" />
<text  x="1190.34" y="255.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (69 samples, 3.88%)</title><rect x="1115.6" y="37" width="45.8" height="15.0" fill="rgb(252,20,30)" rx="2" ry="2" />
<text  x="1118.63" y="47.5" >__mt..</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.06%)</title><rect x="1176.1" y="181" width="0.6" height="15.0" fill="rgb(244,117,2)" rx="2" ry="2" />
<text  x="1179.06" y="191.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (299 samples, 16.83%)</title><rect x="962.9" y="85" width="198.5" height="15.0" fill="rgb(225,109,6)" rx="2" ry="2" />
<text  x="965.90" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>iflib_txd_db_check (7 samples, 0.39%)</title><rect x="753.7" y="181" width="4.7" height="15.0" fill="rgb(232,44,28)" rx="2" ry="2" />
<text  x="756.73" y="191.5" ></text>
</g>
<g >
<title>ether_demux (284 samples, 15.98%)</title><rect x="765.0" y="181" width="188.6" height="15.0" fill="rgb(229,175,9)" rx="2" ry="2" />
<text  x="768.01" y="191.5" >ether_demux</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (7 samples, 0.39%)</title><rect x="745.1" y="149" width="4.6" height="15.0" fill="rgb(217,135,29)" rx="2" ry="2" />
<text  x="748.09" y="159.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (2 samples, 0.11%)</title><rect x="644.2" y="117" width="1.3" height="15.0" fill="rgb(240,223,1)" rx="2" ry="2" />
<text  x="647.16" y="127.5" ></text>
</g>
<g >
<title>ether_output (84 samples, 4.73%)</title><rect x="79.1" y="85" width="55.7" height="15.0" fill="rgb(243,125,25)" rx="2" ry="2" />
<text  x="82.06" y="95.5" >ether..</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.06%)</title><rect x="763.0" y="229" width="0.7" height="15.0" fill="rgb(244,173,49)" rx="2" ry="2" />
<text  x="766.02" y="239.5" ></text>
</g>
<g >
<title>tscp_get_timecount_low (1 samples, 0.06%)</title><rect x="1187.3" y="229" width="0.7" height="15.0" fill="rgb(238,148,23)" rx="2" ry="2" />
<text  x="1190.34" y="239.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (10 samples, 0.56%)</title><rect x="743.1" y="165" width="6.6" height="15.0" fill="rgb(248,192,53)" rx="2" ry="2" />
<text  x="746.10" y="175.5" ></text>
</g>
<g >
<title>lapic_eoi (2 samples, 0.11%)</title><rect x="1182.7" y="245" width="1.3" height="15.0" fill="rgb(228,127,1)" rx="2" ry="2" />
<text  x="1185.70" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.06%)</title><rect x="1174.7" y="181" width="0.7" height="15.0" fill="rgb(250,160,11)" rx="2" ry="2" />
<text  x="1177.73" y="191.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (17 samples, 0.96%)</title><rect x="122.9" y="37" width="11.3" height="15.0" fill="rgb(209,136,9)" rx="2" ry="2" />
<text  x="125.89" y="47.5" ></text>
</g>
<g >
<title>hardclock (2 samples, 0.11%)</title><rect x="1188.7" y="229" width="1.3" height="15.0" fill="rgb(222,208,27)" rx="2" ry="2" />
<text  x="1191.67" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (1 samples, 0.06%)</title><rect x="648.1" y="181" width="0.7" height="15.0" fill="rgb(223,132,49)" rx="2" ry="2" />
<text  x="651.14" y="191.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (32 samples, 1.80%)</title><rect x="690.6" y="181" width="21.3" height="15.0" fill="rgb(239,224,5)" rx="2" ry="2" />
<text  x="693.64" y="191.5" >i..</text>
</g>
<g >
<title>rxd_frag_to_sd (19 samples, 1.07%)</title><rect x="666.1" y="197" width="12.6" height="15.0" fill="rgb(241,20,20)" rx="2" ry="2" />
<text  x="669.07" y="207.5" ></text>
</g>
<g >
<title>ether_input (898 samples, 50.53%)</title><rect x="36.6" y="197" width="596.3" height="15.0" fill="rgb(219,136,7)" rx="2" ry="2" />
<text  x="39.56" y="207.5" >ether_input</text>
</g>
<g >
<title>ipf_derefrule (138 samples, 7.77%)</title><rect x="765.0" y="69" width="91.7" height="15.0" fill="rgb(227,56,34)" rx="2" ry="2" />
<text  x="768.01" y="79.5" >ipf_derefr..</text>
</g>
<g >
<title>ipf_derefrule (91 samples, 5.12%)</title><rect x="433.7" y="37" width="60.4" height="15.0" fill="rgb(236,129,2)" rx="2" ry="2" />
<text  x="436.66" y="47.5" >ipf_de..</text>
</g>
<g >
<title>memcpy_erms (6 samples, 0.34%)</title><rect x="661.4" y="197" width="4.0" height="15.0" fill="rgb(208,16,50)" rx="2" ry="2" />
<text  x="664.42" y="207.5" ></text>
</g>
<g >
<title>Xtimerint (1 samples, 0.06%)</title><rect x="15.3" y="277" width="0.7" height="15.0" fill="rgb(229,192,38)" rx="2" ry="2" />
<text  x="18.31" y="287.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.06%)</title><rect x="646.8" y="101" width="0.7" height="15.0" fill="rgb(239,36,34)" rx="2" ry="2" />
<text  x="649.81" y="111.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (4 samples, 0.23%)</title><rect x="12.7" y="277" width="2.6" height="15.0" fill="rgb(209,18,32)" rx="2" ry="2" />
<text  x="15.66" y="287.5" ></text>
</g>
<g >
<title>ether_output (14 samples, 0.79%)</title><rect x="953.6" y="101" width="9.3" height="15.0" fill="rgb(205,58,2)" rx="2" ry="2" />
<text  x="956.60" y="111.5" ></text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.06%)</title><rect x="646.8" y="117" width="0.7" height="15.0" fill="rgb(250,210,3)" rx="2" ry="2" />
<text  x="649.81" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (1,124 samples, 63.25%)</title><rect x="18.6" y="245" width="746.4" height="15.0" fill="rgb(243,210,9)" rx="2" ry="2" />
<text  x="21.63" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>memset_erms (24 samples, 1.35%)</title><rect x="616.9" y="37" width="16.0" height="15.0" fill="rgb(232,166,4)" rx="2" ry="2" />
<text  x="619.93" y="47.5" ></text>
</g>
<g >
<title>pagezero_erms (1 samples, 0.06%)</title><rect x="646.2" y="85" width="0.6" height="15.0" fill="rgb(254,160,52)" rx="2" ry="2" />
<text  x="649.15" y="95.5" ></text>
</g>
<g >
<title>ipf_nat_checkout (10 samples, 0.56%)</title><rect x="521.3" y="37" width="6.7" height="15.0" fill="rgb(214,25,19)" rx="2" ry="2" />
<text  x="524.31" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (284 samples, 15.98%)</title><rect x="765.0" y="213" width="188.6" height="15.0" fill="rgb(247,180,13)" rx="2" ry="2" />
<text  x="768.01" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.39%)</title><rect x="643.5" y="181" width="4.6" height="15.0" fill="rgb(214,129,2)" rx="2" ry="2" />
<text  x="646.49" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_intr (4 samples, 0.23%)</title><rect x="1184.7" y="277" width="2.6" height="15.0" fill="rgb(209,124,43)" rx="2" ry="2" />
<text  x="1187.69" y="287.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.06%)</title><rect x="632.9" y="197" width="0.6" height="15.0" fill="rgb(248,138,33)" rx="2" ry="2" />
<text  x="635.87" y="207.5" ></text>
</g>
<g >
<title>__rw_rlock_int (60 samples, 3.38%)</title><rect x="355.3" y="37" width="39.8" height="15.0" fill="rgb(224,151,9)" rx="2" ry="2" />
<text  x="358.30" y="47.5" >__r..</text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.11%)</title><rect x="1175.4" y="197" width="1.3" height="15.0" fill="rgb(250,26,17)" rx="2" ry="2" />
<text  x="1178.39" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (313 samples, 17.61%)</title><rect x="953.6" y="261" width="207.8" height="15.0" fill="rgb(230,101,5)" rx="2" ry="2" />
<text  x="956.60" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_rxeof (313 samples, 17.61%)</title><rect x="953.6" y="229" width="207.8" height="15.0" fill="rgb(237,43,11)" rx="2" ry="2" />
<text  x="956.60" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.34%)</title><rect x="643.5" y="133" width="4.0" height="15.0" fill="rgb(245,9,50)" rx="2" ry="2" />
<text  x="646.49" y="143.5" ></text>
</g>
<g >
<title>ether_input (313 samples, 17.61%)</title><rect x="953.6" y="213" width="207.8" height="15.0" fill="rgb(249,194,21)" rx="2" ry="2" />
<text  x="956.60" y="223.5" >ether_input</text>
</g>
<g >
<title>ether_demux (873 samples, 49.13%)</title><rect x="53.2" y="149" width="579.7" height="15.0" fill="rgb(238,72,15)" rx="2" ry="2" />
<text  x="56.16" y="159.5" >ether_demux</text>
</g>
<g >
<title>_task_fn_rx (993 samples, 55.88%)</title><rect x="20.0" y="229" width="659.4" height="15.0" fill="rgb(239,229,20)" rx="2" ry="2" />
<text  x="22.96" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ip_tryforward (854 samples, 48.06%)</title><rect x="65.8" y="101" width="567.1" height="15.0" fill="rgb(209,199,10)" rx="2" ry="2" />
<text  x="68.78" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ipf_makefrip (29 samples, 1.63%)</title><rect x="494.1" y="37" width="19.2" height="15.0" fill="rgb(235,93,6)" rx="2" ry="2" />
<text  x="497.09" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (2 samples, 0.11%)</title><rect x="105.6" y="53" width="1.3" height="15.0" fill="rgb(206,48,51)" rx="2" ry="2" />
<text  x="108.62" y="63.5" ></text>
</g>
<g >
<title>fib4_lookup (30 samples, 1.69%)</title><rect x="140.2" y="69" width="19.9" height="15.0" fill="rgb(217,24,31)" rx="2" ry="2" />
<text  x="143.15" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (896 samples, 50.42%)</title><rect x="37.9" y="181" width="595.0" height="15.0" fill="rgb(247,72,1)" rx="2" ry="2" />
<text  x="40.89" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>doreti (3 samples, 0.17%)</title><rect x="16.6" y="277" width="2.0" height="15.0" fill="rgb(219,1,47)" rx="2" ry="2" />
<text  x="19.64" y="287.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.06%)</title><rect x="19.3" y="229" width="0.7" height="15.0" fill="rgb(211,206,40)" rx="2" ry="2" />
<text  x="22.30" y="239.5" ></text>
</g>
<g >
<title>uma_small_alloc (2 samples, 0.11%)</title><rect x="645.5" y="117" width="1.3" height="15.0" fill="rgb(251,7,9)" rx="2" ry="2" />
<text  x="648.49" y="127.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.06%)</title><rect x="647.5" y="133" width="0.6" height="15.0" fill="rgb(229,87,51)" rx="2" ry="2" />
<text  x="650.48" y="143.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.06%)</title><rect x="762.4" y="197" width="0.6" height="15.0" fill="rgb(254,96,12)" rx="2" ry="2" />
<text  x="765.36" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (888 samples, 49.97%)</title><rect x="43.2" y="165" width="589.7" height="15.0" fill="rgb(225,224,53)" rx="2" ry="2" />
<text  x="46.20" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>Xapic_isr1 (4 samples, 0.23%)</title><rect x="10.0" y="277" width="2.7" height="15.0" fill="rgb(252,138,53)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (703 samples, 39.56%)</title><rect x="166.0" y="69" width="466.9" height="15.0" fill="rgb(217,89,52)" rx="2" ry="2" />
<text  x="169.05" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>__mtx_lock_sleep (138 samples, 7.77%)</title><rect x="765.0" y="53" width="91.7" height="15.0" fill="rgb(223,196,46)" rx="2" ry="2" />
<text  x="768.01" y="63.5" >__mtx_lock..</text>
</g>
<g >
<title>in_localip (5 samples, 0.28%)</title><rect x="134.8" y="85" width="3.4" height="15.0" fill="rgb(249,212,17)" rx="2" ry="2" />
<text  x="137.84" y="95.5" ></text>
</g>
<g >
<title>lapic_handle_timer (4 samples, 0.23%)</title><rect x="1187.3" y="277" width="2.7" height="15.0" fill="rgb(206,224,37)" rx="2" ry="2" />
<text  x="1190.34" y="287.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.06%)</title><rect x="647.5" y="101" width="0.6" height="15.0" fill="rgb(249,16,38)" rx="2" ry="2" />
<text  x="650.48" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (313 samples, 17.61%)</title><rect x="953.6" y="149" width="207.8" height="15.0" fill="rgb(207,90,12)" rx="2" ry="2" />
<text  x="956.60" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>cache_alloc (7 samples, 0.39%)</title><rect x="643.5" y="165" width="4.6" height="15.0" fill="rgb(234,37,40)" rx="2" ry="2" />
<text  x="646.49" y="175.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.06%)</title><rect x="644.8" y="101" width="0.7" height="15.0" fill="rgb(227,63,22)" rx="2" ry="2" />
<text  x="647.82" y="111.5" ></text>
</g>
<g >
<title>ether_input (284 samples, 15.98%)</title><rect x="765.0" y="229" width="188.6" height="15.0" fill="rgb(206,153,50)" rx="2" ry="2" />
<text  x="768.01" y="239.5" >ether_input</text>
</g>
<g >
<title>_rw_runlock_cookie_int (9 samples, 0.51%)</title><rect x="395.1" y="37" width="6.0" height="15.0" fill="rgb(225,99,13)" rx="2" ry="2" />
<text  x="398.14" y="47.5" ></text>
</g>
<g >
<title>pmc_hook_handler (1 samples, 0.06%)</title><rect x="1189.3" y="213" width="0.7" height="15.0" fill="rgb(250,156,3)" rx="2" ry="2" />
<text  x="1192.34" y="223.5" ></text>
</g>
<g >
<title>lock_delay (146 samples, 8.22%)</title><rect x="856.7" y="37" width="96.9" height="15.0" fill="rgb(219,47,11)" rx="2" ry="2" />
<text  x="859.65" y="47.5" >lock_delay</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.06%)</title><rect x="1174.7" y="197" width="0.7" height="15.0" fill="rgb(242,177,48)" rx="2" ry="2" />
<text  x="1177.73" y="207.5" ></text>
</g>
<g >
<title>pmc_process_samples (1 samples, 0.06%)</title><rect x="1189.3" y="197" width="0.7" height="15.0" fill="rgb(251,29,10)" rx="2" ry="2" />
<text  x="1192.34" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (11 samples, 0.62%)</title><rect x="152.8" y="53" width="7.3" height="15.0" fill="rgb(225,195,26)" rx="2" ry="2" />
<text  x="155.77" y="63.5" ></text>
</g>
<g >
<title>all (1,777 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(220,86,49)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>_rw_wowned (44 samples, 2.48%)</title><rect x="401.1" y="37" width="29.2" height="15.0" fill="rgb(237,118,23)" rx="2" ry="2" />
<text  x="404.12" y="47.5" >_r..</text>
</g>
<g >
<title>uma_zfree_arg (12 samples, 0.68%)</title><rect x="703.9" y="133" width="8.0" height="15.0" fill="rgb(211,139,20)" rx="2" ry="2" />
<text  x="706.92" y="143.5" ></text>
</g>
<g >
<title>drain_ring_lockless (118 samples, 6.64%)</title><rect x="680.0" y="213" width="78.4" height="15.0" fill="rgb(247,156,25)" rx="2" ry="2" />
<text  x="683.02" y="223.5" >drain_rin..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (7 samples, 0.39%)</title><rect x="1172.1" y="229" width="4.6" height="15.0" fill="rgb(239,67,48)" rx="2" ry="2" />
<text  x="1175.07" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (74 samples, 4.16%)</title><rect x="306.2" y="37" width="49.1" height="15.0" fill="rgb(253,85,31)" rx="2" ry="2" />
<text  x="309.16" y="47.5" >__mt..</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.06%)</title><rect x="758.4" y="213" width="0.6" height="15.0" fill="rgb(224,199,9)" rx="2" ry="2" />
<text  x="761.37" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (865 samples, 48.68%)</title><rect x="58.5" y="133" width="574.4" height="15.0" fill="rgb(230,0,42)" rx="2" ry="2" />
<text  x="61.47" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_rxeof (988 samples, 55.60%)</title><rect x="22.6" y="213" width="656.1" height="15.0" fill="rgb(237,102,47)" rx="2" ry="2" />
<text  x="25.62" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>pfil_run_hooks (299 samples, 16.83%)</title><rect x="962.9" y="101" width="198.5" height="15.0" fill="rgb(251,52,8)" rx="2" ry="2" />
<text  x="965.90" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>m_adj (4 samples, 0.23%)</title><rect x="55.8" y="133" width="2.7" height="15.0" fill="rgb(245,76,19)" rx="2" ry="2" />
<text  x="58.82" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.11%)</title><rect x="21.3" y="213" width="1.3" height="15.0" fill="rgb(230,162,13)" rx="2" ry="2" />
<text  x="24.29" y="223.5" ></text>
</g>
<g >
<title>iflib_fl_refill (26 samples, 1.46%)</title><rect x="634.2" y="197" width="17.3" height="15.0" fill="rgb(216,227,10)" rx="2" ry="2" />
<text  x="637.20" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (10 samples, 0.56%)</title><rect x="654.1" y="197" width="6.7" height="15.0" fill="rgb(236,70,42)" rx="2" ry="2" />
<text  x="657.12" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (313 samples, 17.61%)</title><rect x="953.6" y="117" width="207.8" height="15.0" fill="rgb(226,73,14)" rx="2" ry="2" />
<text  x="956.60" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.34%)</title><rect x="958.9" y="37" width="4.0" height="15.0" fill="rgb(211,153,32)" rx="2" ry="2" />
<text  x="961.91" y="47.5" ></text>
</g>
<g >
<title>netmap_rx_irq (1 samples, 0.06%)</title><rect x="678.7" y="213" width="0.7" height="15.0" fill="rgb(231,200,52)" rx="2" ry="2" />
<text  x="681.69" y="223.5" ></text>
</g>
<g >
<title>m_freem (15 samples, 0.84%)</title><rect x="701.9" y="165" width="10.0" height="15.0" fill="rgb(208,64,13)" rx="2" ry="2" />
<text  x="704.93" y="175.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (82 samples, 4.61%)</title><rect x="1051.9" y="37" width="54.4" height="15.0" fill="rgb(211,7,47)" rx="2" ry="2" />
<text  x="1054.88" y="47.5" >__mtx..</text>
</g>
<g >
<title>m_pkthdr_init (1 samples, 0.06%)</title><rect x="660.8" y="197" width="0.6" height="15.0" fill="rgb(233,24,10)" rx="2" ry="2" />
<text  x="663.76" y="207.5" ></text>
</g>
<g >
<title>zone_import (7 samples, 0.39%)</title><rect x="643.5" y="149" width="4.6" height="15.0" fill="rgb(240,133,11)" rx="2" ry="2" />
<text  x="646.49" y="159.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (5 samples, 0.28%)</title><rect x="1178.0" y="229" width="3.4" height="15.0" fill="rgb(231,217,50)" rx="2" ry="2" />
<text  x="1181.05" y="239.5" ></text>
</g>
<g >
<title>ip_input (859 samples, 48.34%)</title><rect x="62.5" y="117" width="570.4" height="15.0" fill="rgb(229,29,39)" rx="2" ry="2" />
<text  x="65.46" y="127.5" >ip_input</text>
</g>
<g >
<title>ipf_nat_checkin (12 samples, 0.68%)</title><rect x="513.3" y="37" width="8.0" height="15.0" fill="rgb(233,167,38)" rx="2" ry="2" />
<text  x="516.34" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (134 samples, 7.54%)</title><rect x="962.9" y="53" width="89.0" height="15.0" fill="rgb(238,166,27)" rx="2" ry="2" />
<text  x="965.90" y="63.5" >__mtx_lock..</text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.06%)</title><rect x="16.0" y="277" width="0.6" height="15.0" fill="rgb(223,6,52)" rx="2" ry="2" />
<text  x="18.98" y="287.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (1 samples, 0.06%)</title><rect x="1176.7" y="229" width="0.7" height="15.0" fill="rgb(210,115,31)" rx="2" ry="2" />
<text  x="1179.72" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.45%)</title><rect x="953.6" y="37" width="5.3" height="15.0" fill="rgb(246,65,48)" rx="2" ry="2" />
<text  x="956.60" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (1 samples, 0.06%)</title><rect x="22.0" y="197" width="0.6" height="15.0" fill="rgb(205,215,25)" rx="2" ry="2" />
<text  x="24.95" y="207.5" ></text>
</g>
<g >
<title>ipf_pr_pullup (3 samples, 0.17%)</title><rect x="1113.6" y="37" width="2.0" height="15.0" fill="rgb(247,32,25)" rx="2" ry="2" />
<text  x="1116.64" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.06%)</title><rect x="647.5" y="117" width="0.6" height="15.0" fill="rgb(217,16,31)" rx="2" ry="2" />
<text  x="650.48" y="127.5" ></text>
</g>
<g >
<title>_task_fn_rx (313 samples, 17.61%)</title><rect x="953.6" y="245" width="207.8" height="15.0" fill="rgb(251,92,15)" rx="2" ry="2" />
<text  x="956.60" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>iflib_rxeof (284 samples, 15.98%)</title><rect x="765.0" y="245" width="188.6" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="768.01" y="255.5" >iflib_rxeof</text>
</g>
<g >
<title>ether_output_frame (41 samples, 2.31%)</title><rect x="106.9" y="69" width="27.3" height="15.0" fill="rgb(234,136,37)" rx="2" ry="2" />
<text  x="109.95" y="79.5" >e..</text>
</g>
<g >
<title>ixgbe_msix_que (2 samples, 0.11%)</title><rect x="1181.4" y="229" width="1.3" height="15.0" fill="rgb(243,200,47)" rx="2" ry="2" />
<text  x="1184.37" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (3 samples, 0.17%)</title><rect x="1174.7" y="213" width="2.0" height="15.0" fill="rgb(250,131,24)" rx="2" ry="2" />
<text  x="1177.73" y="223.5" ></text>
</g>
<g >
<title>intr_lookup_source (3 samples, 0.17%)</title><rect x="1185.4" y="261" width="1.9" height="15.0" fill="rgb(207,15,38)" rx="2" ry="2" />
<text  x="1188.35" y="271.5" ></text>
</g>
<g >
<title>_task_fn_rx (284 samples, 15.98%)</title><rect x="765.0" y="261" width="188.6" height="15.0" fill="rgb(252,2,17)" rx="2" ry="2" />
<text  x="768.01" y="271.5" >_task_fn_rx</text>
</g>
<g >
<title>gtaskqueue_thread_loop (313 samples, 17.61%)</title><rect x="953.6" y="277" width="207.8" height="15.0" fill="rgb(247,25,16)" rx="2" ry="2" />
<text  x="956.60" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ipf_scanlist (128 samples, 7.20%)</title><rect x="528.0" y="37" width="84.9" height="15.0" fill="rgb(212,68,27)" rx="2" ry="2" />
<text  x="530.95" y="47.5" >ipf_scanlist</text>
</g>
<g >
<title>ether_demux (313 samples, 17.61%)</title><rect x="953.6" y="165" width="207.8" height="15.0" fill="rgb(219,97,23)" rx="2" ry="2" />
<text  x="956.60" y="175.5" >ether_demux</text>
</g>
</g>
</svg>
