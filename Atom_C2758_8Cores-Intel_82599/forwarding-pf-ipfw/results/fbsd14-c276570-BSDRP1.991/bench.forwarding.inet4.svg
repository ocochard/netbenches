<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>sleepq_lock (5 samples, 0.20%)</title><rect x="1072.8" y="213" width="2.3" height="15.0" fill="rgb(243,97,9)" rx="2" ry="2" />
<text  x="1075.83" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (89 samples, 3.48%)</title><rect x="960.3" y="165" width="41.0" height="15.0" fill="rgb(239,104,17)" rx="2" ry="2" />
<text  x="963.27" y="175.5" >bus..</text>
</g>
<g >
<title>handleevents (4 samples, 0.16%)</title><rect x="1188.2" y="245" width="1.8" height="15.0" fill="rgb(225,25,8)" rx="2" ry="2" />
<text  x="1191.15" y="255.5" ></text>
</g>
<g >
<title>ether_input (4 samples, 0.16%)</title><rect x="1078.4" y="229" width="1.8" height="15.0" fill="rgb(208,22,50)" rx="2" ry="2" />
<text  x="1081.37" y="239.5" ></text>
</g>
<g >
<title>ether_demux (85 samples, 3.32%)</title><rect x="1080.2" y="165" width="39.2" height="15.0" fill="rgb(215,220,28)" rx="2" ry="2" />
<text  x="1083.21" y="175.5" >eth..</text>
</g>
<g >
<title>cache_alloc (1 samples, 0.04%)</title><rect x="543.7" y="165" width="0.5" height="15.0" fill="rgb(230,123,37)" rx="2" ry="2" />
<text  x="546.72" y="175.5" ></text>
</g>
<g >
<title>ether_input (85 samples, 3.32%)</title><rect x="1080.2" y="213" width="39.2" height="15.0" fill="rgb(254,26,9)" rx="2" ry="2" />
<text  x="1083.21" y="223.5" >eth..</text>
</g>
<g >
<title>spinlock_exit (7 samples, 0.27%)</title><rect x="1068.2" y="229" width="3.2" height="15.0" fill="rgb(221,24,23)" rx="2" ry="2" />
<text  x="1071.22" y="239.5" ></text>
</g>
<g >
<title>mi_switch (1 samples, 0.04%)</title><rect x="1077.9" y="245" width="0.5" height="15.0" fill="rgb(221,80,49)" rx="2" ry="2" />
<text  x="1080.90" y="255.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,331 samples, 52.03%)</title><rect x="61.7" y="213" width="614.0" height="15.0" fill="rgb(228,122,24)" rx="2" ry="2" />
<text  x="64.67" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>gtaskqueue_run_locked (4 samples, 0.16%)</title><rect x="1078.4" y="277" width="1.8" height="15.0" fill="rgb(240,134,11)" rx="2" ry="2" />
<text  x="1081.37" y="287.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (3 samples, 0.12%)</title><rect x="43.2" y="229" width="1.4" height="15.0" fill="rgb(250,161,48)" rx="2" ry="2" />
<text  x="46.21" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (4 samples, 0.16%)</title><rect x="1078.4" y="85" width="1.8" height="15.0" fill="rgb(246,53,13)" rx="2" ry="2" />
<text  x="1081.37" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.12%)</title><rect x="26.6" y="37" width="1.4" height="15.0" fill="rgb(239,120,6)" rx="2" ry="2" />
<text  x="29.61" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (56 samples, 2.19%)</title><rect x="574.2" y="197" width="25.8" height="15.0" fill="rgb(238,41,12)" rx="2" ry="2" />
<text  x="577.17" y="207.5" >i..</text>
</g>
<g >
<title>ip_findroute (100 samples, 3.91%)</title><rect x="459.3" y="85" width="46.1" height="15.0" fill="rgb(223,19,13)" rx="2" ry="2" />
<text  x="462.30" y="95.5" >ip_f..</text>
</g>
<g >
<title>iflib_rxeof (4 samples, 0.16%)</title><rect x="1078.4" y="245" width="1.8" height="15.0" fill="rgb(251,220,18)" rx="2" ry="2" />
<text  x="1081.37" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.16%)</title><rect x="26.6" y="229" width="1.9" height="15.0" fill="rgb(212,193,8)" rx="2" ry="2" />
<text  x="29.61" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,361 samples, 53.21%)</title><rect x="48.3" y="229" width="627.8" height="15.0" fill="rgb(241,81,24)" rx="2" ry="2" />
<text  x="51.29" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>all (2,558 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(206,88,2)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.04%)</title><rect x="1065.4" y="197" width="0.5" height="15.0" fill="rgb(219,75,45)" rx="2" ry="2" />
<text  x="1068.45" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (44 samples, 1.72%)</title><rect x="1080.2" y="37" width="20.3" height="15.0" fill="rgb(206,145,28)" rx="2" ry="2" />
<text  x="1083.21" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (55 samples, 2.15%)</title><rect x="1001.3" y="165" width="25.4" height="15.0" fill="rgb(247,85,7)" rx="2" ry="2" />
<text  x="1004.33" y="175.5" >i..</text>
</g>
<g >
<title>intr_event_handle (124 samples, 4.85%)</title><rect x="1128.6" y="261" width="57.2" height="15.0" fill="rgb(222,39,45)" rx="2" ry="2" />
<text  x="1131.65" y="271.5" >intr_e..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (33 samples, 1.29%)</title><rect x="392.0" y="37" width="15.2" height="15.0" fill="rgb(210,47,39)" rx="2" ry="2" />
<text  x="394.95" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (37 samples, 1.45%)</title><rect x="1100.5" y="37" width="17.1" height="15.0" fill="rgb(242,106,18)" rx="2" ry="2" />
<text  x="1103.51" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (694 samples, 27.13%)</title><rect x="185.3" y="133" width="320.1" height="15.0" fill="rgb(253,174,12)" rx="2" ry="2" />
<text  x="188.29" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>m_pkthdr_init (10 samples, 0.39%)</title><rect x="600.0" y="197" width="4.6" height="15.0" fill="rgb(229,96,33)" rx="2" ry="2" />
<text  x="603.00" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.20%)</title><rect x="1065.9" y="229" width="2.3" height="15.0" fill="rgb(241,98,49)" rx="2" ry="2" />
<text  x="1068.91" y="239.5" ></text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.12%)</title><rect x="511.0" y="197" width="1.4" height="15.0" fill="rgb(206,27,29)" rx="2" ry="2" />
<text  x="513.97" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (47 samples, 1.84%)</title><rect x="483.8" y="53" width="21.6" height="15.0" fill="rgb(231,185,21)" rx="2" ry="2" />
<text  x="486.75" y="63.5" >b..</text>
</g>
<g >
<title>gtaskqueue_run_locked (2,268 samples, 88.66%)</title><rect x="31.7" y="245" width="1046.2" height="15.0" fill="rgb(241,199,51)" rx="2" ry="2" />
<text  x="34.68" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>taskqueue_thread_enqueue (1 samples, 0.04%)</title><rect x="1158.2" y="213" width="0.4" height="15.0" fill="rgb(210,88,13)" rx="2" ry="2" />
<text  x="1161.17" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (63 samples, 2.46%)</title><rect x="972.3" y="149" width="29.0" height="15.0" fill="rgb(222,156,23)" rx="2" ry="2" />
<text  x="975.27" y="159.5" >bo..</text>
</g>
<g >
<title>wakeup_any (4 samples, 0.16%)</title><rect x="26.6" y="69" width="1.9" height="15.0" fill="rgb(232,94,42)" rx="2" ry="2" />
<text  x="29.61" y="79.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (1 samples, 0.04%)</title><rect x="31.2" y="245" width="0.5" height="15.0" fill="rgb(215,165,0)" rx="2" ry="2" />
<text  x="34.22" y="255.5" ></text>
</g>
<g >
<title>intr_execute_handlers (144 samples, 5.63%)</title><rect x="1119.4" y="277" width="66.4" height="15.0" fill="rgb(219,138,42)" rx="2" ry="2" />
<text  x="1122.42" y="287.5" >intr_ex..</text>
</g>
<g >
<title>hardclock (4 samples, 0.16%)</title><rect x="1188.2" y="229" width="1.8" height="15.0" fill="rgb(220,48,14)" rx="2" ry="2" />
<text  x="1191.15" y="239.5" ></text>
</g>
<g >
<title>fork_exit (2,270 samples, 88.74%)</title><rect x="31.2" y="277" width="1047.2" height="15.0" fill="rgb(210,159,31)" rx="2" ry="2" />
<text  x="34.22" y="287.5" >fork_exit</text>
</g>
<g >
<title>uma_zalloc_arg (37 samples, 1.45%)</title><rect x="550.2" y="181" width="17.0" height="15.0" fill="rgb(210,224,30)" rx="2" ry="2" />
<text  x="553.18" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (217 samples, 8.48%)</title><rect x="343.5" y="69" width="100.1" height="15.0" fill="rgb(211,120,14)" rx="2" ry="2" />
<text  x="346.52" y="79.5" >ether_output..</text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.16%)</title><rect x="1078.4" y="213" width="1.8" height="15.0" fill="rgb(249,91,18)" rx="2" ry="2" />
<text  x="1081.37" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (85 samples, 3.32%)</title><rect x="1080.2" y="277" width="39.2" height="15.0" fill="rgb(215,217,2)" rx="2" ry="2" />
<text  x="1083.21" y="287.5" >gta..</text>
</g>
<g >
<title>iflib_fast_intr_rxtx (103 samples, 4.03%)</title><rect x="1137.9" y="245" width="47.5" height="15.0" fill="rgb(209,4,38)" rx="2" ry="2" />
<text  x="1140.87" y="255.5" >ifli..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (20 samples, 0.78%)</title><rect x="51.5" y="213" width="9.2" height="15.0" fill="rgb(253,97,31)" rx="2" ry="2" />
<text  x="54.52" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (5 samples, 0.20%)</title><rect x="58.4" y="181" width="2.3" height="15.0" fill="rgb(233,184,24)" rx="2" ry="2" />
<text  x="61.44" y="191.5" ></text>
</g>
<g >
<title>iflib_encap (374 samples, 14.62%)</title><rect x="854.2" y="181" width="172.5" height="15.0" fill="rgb(228,77,49)" rx="2" ry="2" />
<text  x="857.18" y="191.5" >iflib_encap</text>
</g>
<g >
<title>memmove_erms (9 samples, 0.35%)</title><rect x="339.4" y="53" width="4.1" height="15.0" fill="rgb(223,162,53)" rx="2" ry="2" />
<text  x="342.37" y="63.5" ></text>
</g>
<g >
<title>in_localip (20 samples, 0.78%)</title><rect x="450.1" y="85" width="9.2" height="15.0" fill="rgb(220,170,54)" rx="2" ry="2" />
<text  x="453.08" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.20%)</title><rect x="183.0" y="133" width="2.3" height="15.0" fill="rgb(217,68,23)" rx="2" ry="2" />
<text  x="185.99" y="143.5" ></text>
</g>
<g >
<title>m_free (84 samples, 3.28%)</title><rect x="815.4" y="149" width="38.8" height="15.0" fill="rgb(220,171,15)" rx="2" ry="2" />
<text  x="818.43" y="159.5" >m_f..</text>
</g>
<g >
<title>ether_output (4 samples, 0.16%)</title><rect x="26.6" y="133" width="1.9" height="15.0" fill="rgb(225,82,20)" rx="2" ry="2" />
<text  x="29.61" y="143.5" ></text>
</g>
<g >
<title>ip_tryforward (4 samples, 0.16%)</title><rect x="26.6" y="149" width="1.9" height="15.0" fill="rgb(240,34,21)" rx="2" ry="2" />
<text  x="29.61" y="159.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.04%)</title><rect x="1165.6" y="213" width="0.4" height="15.0" fill="rgb(240,217,12)" rx="2" ry="2" />
<text  x="1168.55" y="223.5" ></text>
</g>
<g >
<title>fib4_lookup (83 samples, 3.24%)</title><rect x="467.1" y="69" width="38.3" height="15.0" fill="rgb(240,229,48)" rx="2" ry="2" />
<text  x="470.15" y="79.5" >fib..</text>
</g>
<g >
<title>wakeup (14 samples, 0.55%)</title><rect x="1071.4" y="229" width="6.5" height="15.0" fill="rgb(254,208,30)" rx="2" ry="2" />
<text  x="1074.45" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.16%)</title><rect x="26.6" y="181" width="1.9" height="15.0" fill="rgb(208,26,35)" rx="2" ry="2" />
<text  x="29.61" y="191.5" ></text>
</g>
<g >
<title>ether_output (4 samples, 0.16%)</title><rect x="1078.4" y="117" width="1.8" height="15.0" fill="rgb(211,126,4)" rx="2" ry="2" />
<text  x="1081.37" y="127.5" ></text>
</g>
<g >
<title>wakeup_any (3 samples, 0.12%)</title><rect x="1118.0" y="37" width="1.4" height="15.0" fill="rgb(216,203,4)" rx="2" ry="2" />
<text  x="1121.04" y="47.5" ></text>
</g>
<g >
<title>lapic_handle_intr (5 samples, 0.20%)</title><rect x="1185.8" y="277" width="2.4" height="15.0" fill="rgb(224,86,41)" rx="2" ry="2" />
<text  x="1188.85" y="287.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (9 samples, 0.35%)</title><rect x="1058.5" y="213" width="4.2" height="15.0" fill="rgb(239,219,5)" rx="2" ry="2" />
<text  x="1061.53" y="223.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.04%)</title><rect x="1065.0" y="197" width="0.4" height="15.0" fill="rgb(231,189,7)" rx="2" ry="2" />
<text  x="1067.99" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (85 samples, 3.32%)</title><rect x="1080.2" y="149" width="39.2" height="15.0" fill="rgb(227,86,37)" rx="2" ry="2" />
<text  x="1083.21" y="159.5" >net..</text>
</g>
<g >
<title>iflib_rxeof (85 samples, 3.32%)</title><rect x="1080.2" y="229" width="39.2" height="15.0" fill="rgb(229,86,20)" rx="2" ry="2" />
<text  x="1083.21" y="239.5" >ifl..</text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.08%)</title><rect x="508.2" y="149" width="0.9" height="15.0" fill="rgb(232,144,21)" rx="2" ry="2" />
<text  x="511.20" y="159.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (8 samples, 0.31%)</title><rect x="44.6" y="229" width="3.7" height="15.0" fill="rgb(253,183,40)" rx="2" ry="2" />
<text  x="47.60" y="239.5" ></text>
</g>
<g >
<title>netmap_rx_irq (1 samples, 0.04%)</title><rect x="675.7" y="213" width="0.4" height="15.0" fill="rgb(237,220,7)" rx="2" ry="2" />
<text  x="678.65" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (85 samples, 3.32%)</title><rect x="1080.2" y="85" width="39.2" height="15.0" fill="rgb(238,3,21)" rx="2" ry="2" />
<text  x="1083.21" y="95.5" >eth..</text>
</g>
<g >
<title>doreti (6 samples, 0.23%)</title><rect x="28.5" y="277" width="2.7" height="15.0" fill="rgb(244,33,39)" rx="2" ry="2" />
<text  x="31.45" y="287.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (85 samples, 3.32%)</title><rect x="1080.2" y="53" width="39.2" height="15.0" fill="rgb(206,127,0)" rx="2" ry="2" />
<text  x="1083.21" y="63.5" >gro..</text>
</g>
<g >
<title>cache_alloc_retry (10 samples, 0.39%)</title><rect x="540.0" y="181" width="4.6" height="15.0" fill="rgb(214,67,3)" rx="2" ry="2" />
<text  x="543.03" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.04%)</title><rect x="1050.2" y="165" width="0.5" height="15.0" fill="rgb(223,190,35)" rx="2" ry="2" />
<text  x="1053.23" y="175.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (1 samples, 0.04%)</title><rect x="544.2" y="165" width="0.4" height="15.0" fill="rgb(249,116,19)" rx="2" ry="2" />
<text  x="547.18" y="175.5" ></text>
</g>
<g >
<title>iflib_if_transmit (183 samples, 7.15%)</title><rect x="359.2" y="53" width="84.4" height="15.0" fill="rgb(210,13,24)" rx="2" ry="2" />
<text  x="362.20" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>Xtimerint (1 samples, 0.04%)</title><rect x="25.7" y="277" width="0.4" height="15.0" fill="rgb(236,38,24)" rx="2" ry="2" />
<text  x="28.68" y="287.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.23%)</title><rect x="1160.0" y="197" width="2.8" height="15.0" fill="rgb(253,73,12)" rx="2" ry="2" />
<text  x="1163.02" y="207.5" ></text>
</g>
<g >
<title>ether_demux (753 samples, 29.44%)</title><rect x="158.1" y="149" width="347.3" height="15.0" fill="rgb(209,52,32)" rx="2" ry="2" />
<text  x="161.08" y="159.5" >ether_demux</text>
</g>
<g >
<title>memcpy_erms (44 samples, 1.72%)</title><rect x="604.6" y="197" width="20.3" height="15.0" fill="rgb(215,45,43)" rx="2" ry="2" />
<text  x="607.61" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (68 samples, 2.66%)</title><rect x="412.3" y="37" width="31.3" height="15.0" fill="rgb(239,69,7)" rx="2" ry="2" />
<text  x="415.25" y="47.5" >if..</text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.16%)</title><rect x="1078.4" y="165" width="1.8" height="15.0" fill="rgb(237,167,33)" rx="2" ry="2" />
<text  x="1081.37" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.08%)</title><rect x="111.0" y="181" width="0.9" height="15.0" fill="rgb(224,179,18)" rx="2" ry="2" />
<text  x="114.02" y="191.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (110 samples, 4.30%)</title><rect x="624.9" y="197" width="50.8" height="15.0" fill="rgb(245,68,8)" rx="2" ry="2" />
<text  x="627.91" y="207.5" >rxd_f..</text>
</g>
<g >
<title>m_freem (94 samples, 3.67%)</title><rect x="810.8" y="165" width="43.4" height="15.0" fill="rgb(246,130,49)" rx="2" ry="2" />
<text  x="813.81" y="175.5" >m_fr..</text>
</g>
<g >
<title>Xapic_isr1 (15 samples, 0.59%)</title><rect x="10.0" y="277" width="6.9" height="15.0" fill="rgb(211,201,3)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (7 samples, 0.27%)</title><rect x="1062.7" y="213" width="3.2" height="15.0" fill="rgb(232,77,29)" rx="2" ry="2" />
<text  x="1065.68" y="223.5" ></text>
</g>
<g >
<title>ether_input (874 samples, 34.17%)</title><rect x="105.9" y="197" width="403.2" height="15.0" fill="rgb(211,47,7)" rx="2" ry="2" />
<text  x="108.95" y="207.5" >ether_input</text>
</g>
<g >
<title>ether_output_frame (4 samples, 0.16%)</title><rect x="1078.4" y="101" width="1.8" height="15.0" fill="rgb(213,169,13)" rx="2" ry="2" />
<text  x="1081.37" y="111.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (12 samples, 0.47%)</title><rect x="561.7" y="165" width="5.5" height="15.0" fill="rgb(213,117,40)" rx="2" ry="2" />
<text  x="564.71" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.27%)</title><rect x="1153.1" y="213" width="3.2" height="15.0" fill="rgb(243,25,48)" rx="2" ry="2" />
<text  x="1156.10" y="223.5" ></text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.08%)</title><rect x="1187.2" y="261" width="1.0" height="15.0" fill="rgb(232,113,23)" rx="2" ry="2" />
<text  x="1190.23" y="271.5" ></text>
</g>
<g >
<title>iflib_rxeof (4 samples, 0.16%)</title><rect x="26.6" y="261" width="1.9" height="15.0" fill="rgb(245,1,40)" rx="2" ry="2" />
<text  x="29.61" y="271.5" ></text>
</g>
<g >
<title>ip_tryforward (4 samples, 0.16%)</title><rect x="1078.4" y="133" width="1.8" height="15.0" fill="rgb(229,18,0)" rx="2" ry="2" />
<text  x="1081.37" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (4 samples, 0.16%)</title><rect x="26.6" y="117" width="1.9" height="15.0" fill="rgb(234,30,40)" rx="2" ry="2" />
<text  x="29.61" y="127.5" ></text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.04%)</title><rect x="26.1" y="277" width="0.5" height="15.0" fill="rgb(208,160,43)" rx="2" ry="2" />
<text  x="29.15" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.20%)</title><rect x="56.1" y="165" width="2.3" height="15.0" fill="rgb(229,168,44)" rx="2" ry="2" />
<text  x="59.13" y="175.5" ></text>
</g>
<g >
<title>ether_input (4 samples, 0.16%)</title><rect x="26.6" y="245" width="1.9" height="15.0" fill="rgb(241,28,54)" rx="2" ry="2" />
<text  x="29.61" y="255.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (67 samples, 2.62%)</title><rect x="1026.7" y="181" width="30.9" height="15.0" fill="rgb(223,188,32)" rx="2" ry="2" />
<text  x="1029.70" y="191.5" >if..</text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.12%)</title><rect x="1078.8" y="37" width="1.4" height="15.0" fill="rgb(228,83,9)" rx="2" ry="2" />
<text  x="1081.83" y="47.5" ></text>
</g>
<g >
<title>ether_output (85 samples, 3.32%)</title><rect x="1080.2" y="101" width="39.2" height="15.0" fill="rgb(210,152,11)" rx="2" ry="2" />
<text  x="1083.21" y="111.5" >eth..</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.04%)</title><rect x="725.0" y="181" width="0.5" height="15.0" fill="rgb(208,229,36)" rx="2" ry="2" />
<text  x="728.01" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.04%)</title><rect x="1057.6" y="181" width="0.5" height="15.0" fill="rgb(249,77,51)" rx="2" ry="2" />
<text  x="1060.61" y="191.5" ></text>
</g>
<g >
<title>m_adj (22 samples, 0.86%)</title><rect x="172.8" y="133" width="10.2" height="15.0" fill="rgb(219,11,26)" rx="2" ry="2" />
<text  x="175.84" y="143.5" ></text>
</g>
<g >
<title>iflib_if_transmit (85 samples, 3.32%)</title><rect x="1080.2" y="69" width="39.2" height="15.0" fill="rgb(226,118,9)" rx="2" ry="2" />
<text  x="1083.21" y="79.5" >ifl..</text>
</g>
<g >
<title>netisr_dispatch_src (861 samples, 33.66%)</title><rect x="111.9" y="181" width="397.2" height="15.0" fill="rgb(244,151,9)" rx="2" ry="2" />
<text  x="114.95" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>rsb_flush (1 samples, 0.04%)</title><rect x="1077.9" y="229" width="0.5" height="15.0" fill="rgb(242,170,50)" rx="2" ry="2" />
<text  x="1080.90" y="239.5" ></text>
</g>
<g >
<title>sleepq_broadcast (2 samples, 0.08%)</title><rect x="1071.9" y="213" width="0.9" height="15.0" fill="rgb(228,33,7)" rx="2" ry="2" />
<text  x="1074.91" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.20%)</title><rect x="1160.5" y="181" width="2.3" height="15.0" fill="rgb(245,157,19)" rx="2" ry="2" />
<text  x="1163.48" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.16%)</title><rect x="1078.4" y="69" width="1.8" height="15.0" fill="rgb(224,12,35)" rx="2" ry="2" />
<text  x="1081.37" y="79.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (4 samples, 0.16%)</title><rect x="46.4" y="213" width="1.9" height="15.0" fill="rgb(212,217,10)" rx="2" ry="2" />
<text  x="49.44" y="223.5" ></text>
</g>
<g >
<title>arpresolve (76 samples, 2.97%)</title><rect x="308.5" y="69" width="35.0" height="15.0" fill="rgb(209,144,41)" rx="2" ry="2" />
<text  x="311.46" y="79.5" >ar..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (32 samples, 1.25%)</title><rect x="1149.9" y="229" width="14.7" height="15.0" fill="rgb(254,48,36)" rx="2" ry="2" />
<text  x="1152.87" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.12%)</title><rect x="1163.2" y="181" width="1.4" height="15.0" fill="rgb(254,31,2)" rx="2" ry="2" />
<text  x="1166.24" y="191.5" ></text>
</g>
<g >
<title>ip_tryforward (85 samples, 3.32%)</title><rect x="1080.2" y="117" width="39.2" height="15.0" fill="rgb(234,198,31)" rx="2" ry="2" />
<text  x="1083.21" y="127.5" >ip_..</text>
</g>
<g >
<title>_task_fn_rx (4 samples, 0.16%)</title><rect x="26.6" y="277" width="1.9" height="15.0" fill="rgb(213,84,15)" rx="2" ry="2" />
<text  x="29.61" y="287.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.04%)</title><rect x="509.1" y="197" width="0.5" height="15.0" fill="rgb(252,188,34)" rx="2" ry="2" />
<text  x="512.12" y="207.5" ></text>
</g>
<g >
<title>iflib_get_ifp (1 samples, 0.04%)</title><rect x="1184.0" y="213" width="0.5" height="15.0" fill="rgb(247,202,6)" rx="2" ry="2" />
<text  x="1187.00" y="223.5" ></text>
</g>
<g >
<title>ether_demux (4 samples, 0.16%)</title><rect x="1078.4" y="181" width="1.8" height="15.0" fill="rgb(244,195,14)" rx="2" ry="2" />
<text  x="1081.37" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.04%)</title><rect x="1078.4" y="37" width="0.4" height="15.0" fill="rgb(227,165,44)" rx="2" ry="2" />
<text  x="1081.37" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.04%)</title><rect x="60.3" y="165" width="0.4" height="15.0" fill="rgb(230,22,51)" rx="2" ry="2" />
<text  x="63.28" y="175.5" ></text>
</g>
<g >
<title>lapic_handle_timer (4 samples, 0.16%)</title><rect x="1188.2" y="277" width="1.8" height="15.0" fill="rgb(221,206,40)" rx="2" ry="2" />
<text  x="1191.15" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.08%)</title><rect x="1184.5" y="213" width="0.9" height="15.0" fill="rgb(219,182,54)" rx="2" ry="2" />
<text  x="1187.46" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (15 samples, 0.59%)</title><rect x="1050.7" y="165" width="6.9" height="15.0" fill="rgb(243,215,5)" rx="2" ry="2" />
<text  x="1053.69" y="175.5" ></text>
</g>
<g >
<title>ip_tryforward (608 samples, 23.77%)</title><rect x="225.0" y="101" width="280.4" height="15.0" fill="rgb(250,103,50)" rx="2" ry="2" />
<text  x="227.96" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ether_nh_input (826 samples, 32.29%)</title><rect x="128.1" y="165" width="381.0" height="15.0" fill="rgb(245,188,38)" rx="2" ry="2" />
<text  x="131.09" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.04%)</title><rect x="1058.1" y="213" width="0.4" height="15.0" fill="rgb(225,176,15)" rx="2" ry="2" />
<text  x="1061.07" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (4 samples, 0.16%)</title><rect x="1164.6" y="229" width="1.9" height="15.0" fill="rgb(254,71,43)" rx="2" ry="2" />
<text  x="1167.63" y="239.5" ></text>
</g>
<g >
<title>pmc_hook_handler (4 samples, 0.16%)</title><rect x="1188.2" y="213" width="1.8" height="15.0" fill="rgb(240,44,52)" rx="2" ry="2" />
<text  x="1191.15" y="223.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (14 samples, 0.55%)</title><rect x="1178.9" y="229" width="6.5" height="15.0" fill="rgb(231,10,29)" rx="2" ry="2" />
<text  x="1181.93" y="239.5" ></text>
</g>
<g >
<title>in_lltable_lookup (21 samples, 0.82%)</title><rect x="329.7" y="53" width="9.7" height="15.0" fill="rgb(207,210,3)" rx="2" ry="2" />
<text  x="332.68" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (4 samples, 0.16%)</title><rect x="1078.4" y="261" width="1.8" height="15.0" fill="rgb(240,161,17)" rx="2" ry="2" />
<text  x="1081.37" y="271.5" ></text>
</g>
<g >
<title>pmc_process_samples (3 samples, 0.12%)</title><rect x="1188.6" y="197" width="1.4" height="15.0" fill="rgb(233,130,51)" rx="2" ry="2" />
<text  x="1191.62" y="207.5" ></text>
</g>
<g >
<title>memcmp (6 samples, 0.23%)</title><rect x="505.4" y="149" width="2.8" height="15.0" fill="rgb(226,117,17)" rx="2" ry="2" />
<text  x="508.43" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (2,269 samples, 88.70%)</title><rect x="31.2" y="261" width="1046.7" height="15.0" fill="rgb(206,141,32)" rx="2" ry="2" />
<text  x="34.22" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>taskqueue_thread_enqueue (1 samples, 0.04%)</title><rect x="1117.6" y="37" width="0.4" height="15.0" fill="rgb(213,184,28)" rx="2" ry="2" />
<text  x="1120.58" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (8 samples, 0.31%)</title><rect x="850.5" y="117" width="3.7" height="15.0" fill="rgb(250,132,44)" rx="2" ry="2" />
<text  x="853.48" y="127.5" ></text>
</g>
<g >
<title>iflib_txq_drain (806 samples, 31.51%)</title><rect x="686.3" y="197" width="371.8" height="15.0" fill="rgb(250,116,10)" rx="2" ry="2" />
<text  x="689.26" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>sleepq_release (6 samples, 0.23%)</title><rect x="1075.1" y="213" width="2.8" height="15.0" fill="rgb(235,144,16)" rx="2" ry="2" />
<text  x="1078.14" y="223.5" ></text>
</g>
<g >
<title>ip_input (4 samples, 0.16%)</title><rect x="1078.4" y="149" width="1.8" height="15.0" fill="rgb(216,8,15)" rx="2" ry="2" />
<text  x="1081.37" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (4 samples, 0.16%)</title><rect x="26.6" y="213" width="1.9" height="15.0" fill="rgb(238,8,21)" rx="2" ry="2" />
<text  x="29.61" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.04%)</title><rect x="549.7" y="181" width="0.5" height="15.0" fill="rgb(241,159,30)" rx="2" ry="2" />
<text  x="552.72" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.16%)</title><rect x="26.6" y="85" width="1.9" height="15.0" fill="rgb(246,226,28)" rx="2" ry="2" />
<text  x="29.61" y="95.5" ></text>
</g>
<g >
<title>timercb (4 samples, 0.16%)</title><rect x="1188.2" y="261" width="1.8" height="15.0" fill="rgb(238,87,36)" rx="2" ry="2" />
<text  x="1191.15" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (15 samples, 0.59%)</title><rect x="567.2" y="197" width="7.0" height="15.0" fill="rgb(220,181,15)" rx="2" ry="2" />
<text  x="570.25" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.16%)</title><rect x="52.4" y="197" width="1.9" height="15.0" fill="rgb(234,224,49)" rx="2" ry="2" />
<text  x="55.44" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (85 samples, 3.32%)</title><rect x="1080.2" y="245" width="39.2" height="15.0" fill="rgb(223,50,29)" rx="2" ry="2" />
<text  x="1083.21" y="255.5" >_ta..</text>
</g>
<g >
<title>wakeup_any (4 samples, 0.16%)</title><rect x="1078.4" y="53" width="1.8" height="15.0" fill="rgb(234,39,38)" rx="2" ry="2" />
<text  x="1081.37" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (4 samples, 0.16%)</title><rect x="26.6" y="101" width="1.9" height="15.0" fill="rgb(252,55,17)" rx="2" ry="2" />
<text  x="29.61" y="111.5" ></text>
</g>
<g >
<title>ether_demux (4 samples, 0.16%)</title><rect x="26.6" y="197" width="1.9" height="15.0" fill="rgb(243,15,24)" rx="2" ry="2" />
<text  x="29.61" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (13 samples, 0.51%)</title><rect x="1158.6" y="213" width="6.0" height="15.0" fill="rgb(247,16,3)" rx="2" ry="2" />
<text  x="1161.63" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.20%)</title><rect x="999.0" y="133" width="2.3" height="15.0" fill="rgb(242,137,51)" rx="2" ry="2" />
<text  x="1002.02" y="143.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (279 samples, 10.91%)</title><rect x="725.5" y="181" width="128.7" height="15.0" fill="rgb(215,46,1)" rx="2" ry="2" />
<text  x="728.47" y="191.5" >iflib_completed_..</text>
</g>
<g >
<title>spinlock_exit (4 samples, 0.16%)</title><rect x="1156.3" y="213" width="1.9" height="15.0" fill="rgb(221,171,45)" rx="2" ry="2" />
<text  x="1159.33" y="223.5" ></text>
</g>
<g >
<title>lapic_eoi (1 samples, 0.04%)</title><rect x="1185.4" y="245" width="0.4" height="15.0" fill="rgb(233,4,53)" rx="2" ry="2" />
<text  x="1188.39" y="255.5" ></text>
</g>
<g >
<title>iflib_fl_refill (119 samples, 4.65%)</title><rect x="512.4" y="197" width="54.8" height="15.0" fill="rgb(224,132,44)" rx="2" ry="2" />
<text  x="515.35" y="207.5" >iflib..</text>
</g>
<g >
<title>softclock_thread (1 samples, 0.04%)</title><rect x="1077.9" y="261" width="0.5" height="15.0" fill="rgb(249,20,16)" rx="2" ry="2" />
<text  x="1080.90" y="271.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.04%)</title><rect x="28.0" y="53" width="0.5" height="15.0" fill="rgb(233,77,37)" rx="2" ry="2" />
<text  x="30.99" y="63.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.08%)</title><rect x="60.7" y="213" width="1.0" height="15.0" fill="rgb(246,99,27)" rx="2" ry="2" />
<text  x="63.74" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (11 samples, 0.43%)</title><rect x="544.6" y="181" width="5.1" height="15.0" fill="rgb(212,86,54)" rx="2" ry="2" />
<text  x="547.64" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.04%)</title><rect x="1166.0" y="213" width="0.5" height="15.0" fill="rgb(251,207,54)" rx="2" ry="2" />
<text  x="1169.01" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (85 samples, 3.32%)</title><rect x="1080.2" y="261" width="39.2" height="15.0" fill="rgb(246,180,10)" rx="2" ry="2" />
<text  x="1083.21" y="271.5" >gta..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (27 samples, 1.06%)</title><rect x="798.4" y="165" width="12.4" height="15.0" fill="rgb(213,3,36)" rx="2" ry="2" />
<text  x="801.36" y="175.5" ></text>
</g>
<g >
<title>uma_zfree_arg (72 samples, 2.81%)</title><rect x="821.0" y="133" width="33.2" height="15.0" fill="rgb(235,211,10)" rx="2" ry="2" />
<text  x="823.96" y="143.5" >um..</text>
</g>
<g >
<title>_ck_epoch_addref (1 samples, 0.04%)</title><rect x="44.1" y="213" width="0.5" height="15.0" fill="rgb(246,28,50)" rx="2" ry="2" />
<text  x="47.14" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (18 samples, 0.70%)</title><rect x="1170.6" y="229" width="8.3" height="15.0" fill="rgb(224,24,46)" rx="2" ry="2" />
<text  x="1173.63" y="239.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (12 samples, 0.47%)</title><rect x="844.9" y="117" width="5.6" height="15.0" fill="rgb(243,222,24)" rx="2" ry="2" />
<text  x="847.95" y="127.5" ></text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.12%)</title><rect x="26.6" y="53" width="1.4" height="15.0" fill="rgb(244,165,50)" rx="2" ry="2" />
<text  x="29.61" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (85 samples, 3.32%)</title><rect x="1080.2" y="197" width="39.2" height="15.0" fill="rgb(245,81,54)" rx="2" ry="2" />
<text  x="1083.21" y="207.5" >net..</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.04%)</title><rect x="28.0" y="37" width="0.5" height="15.0" fill="rgb(224,17,54)" rx="2" ry="2" />
<text  x="30.99" y="47.5" ></text>
</g>
<g >
<title>ip_input (85 samples, 3.32%)</title><rect x="1080.2" y="133" width="39.2" height="15.0" fill="rgb(221,148,10)" rx="2" ry="2" />
<text  x="1083.21" y="143.5" >ip_..</text>
</g>
<g >
<title>wakeup_any (12 samples, 0.47%)</title><rect x="55.2" y="197" width="5.5" height="15.0" fill="rgb(238,12,53)" rx="2" ry="2" />
<text  x="58.21" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (85 samples, 3.32%)</title><rect x="1080.2" y="181" width="39.2" height="15.0" fill="rgb(233,17,46)" rx="2" ry="2" />
<text  x="1083.21" y="191.5" >eth..</text>
</g>
<g >
<title>if_getsoftc (11 samples, 0.43%)</title><rect x="407.2" y="37" width="5.1" height="15.0" fill="rgb(239,42,6)" rx="2" ry="2" />
<text  x="410.18" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.04%)</title><rect x="1074.7" y="197" width="0.4" height="15.0" fill="rgb(222,22,17)" rx="2" ry="2" />
<text  x="1077.68" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.12%)</title><rect x="509.6" y="197" width="1.4" height="15.0" fill="rgb(239,68,50)" rx="2" ry="2" />
<text  x="512.59" y="207.5" ></text>
</g>
<g >
<title>_task_fn_tx (845 samples, 33.03%)</title><rect x="676.1" y="229" width="389.8" height="15.0" fill="rgb(250,142,21)" rx="2" ry="2" />
<text  x="679.11" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.04%)</title><rect x="1189.5" y="181" width="0.5" height="15.0" fill="rgb(206,216,50)" rx="2" ry="2" />
<text  x="1192.54" y="191.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.16%)</title><rect x="1162.8" y="197" width="1.8" height="15.0" fill="rgb(207,93,17)" rx="2" ry="2" />
<text  x="1165.78" y="207.5" ></text>
</g>
<g >
<title>drain_ring_lockless (816 samples, 31.90%)</title><rect x="681.6" y="213" width="376.5" height="15.0" fill="rgb(246,176,28)" rx="2" ry="2" />
<text  x="684.65" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ether_output (374 samples, 14.62%)</title><rect x="277.6" y="85" width="172.5" height="15.0" fill="rgb(251,31,49)" rx="2" ry="2" />
<text  x="280.55" y="95.5" >ether_output</text>
</g>
<g >
<title>Xapic_isr1_pti (19 samples, 0.74%)</title><rect x="16.9" y="277" width="8.8" height="15.0" fill="rgb(238,1,46)" rx="2" ry="2" />
<text  x="19.92" y="287.5" ></text>
</g>
<g >
<title>ip_input (664 samples, 25.96%)</title><rect x="199.1" y="117" width="306.3" height="15.0" fill="rgb(254,101,20)" rx="2" ry="2" />
<text  x="202.13" y="127.5" >ip_input</text>
</g>
<g >
<title>sleepq_lock (7 samples, 0.27%)</title><rect x="55.2" y="181" width="3.2" height="15.0" fill="rgb(212,65,42)" rx="2" ry="2" />
<text  x="58.21" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (9 samples, 0.35%)</title><rect x="1166.5" y="229" width="4.1" height="15.0" fill="rgb(213,99,1)" rx="2" ry="2" />
<text  x="1169.47" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (4 samples, 0.16%)</title><rect x="1078.4" y="197" width="1.8" height="15.0" fill="rgb(239,151,6)" rx="2" ry="2" />
<text  x="1081.37" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (14 samples, 0.55%)</title><rect x="443.6" y="69" width="6.5" height="15.0" fill="rgb(210,6,28)" rx="2" ry="2" />
<text  x="446.62" y="79.5" ></text>
</g>
<g >
<title>ip_input (4 samples, 0.16%)</title><rect x="26.6" y="165" width="1.9" height="15.0" fill="rgb(239,63,16)" rx="2" ry="2" />
<text  x="29.61" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.08%)</title><rect x="54.3" y="197" width="0.9" height="15.0" fill="rgb(252,139,52)" rx="2" ry="2" />
<text  x="57.28" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (2 samples, 0.08%)</title><rect x="959.4" y="165" width="0.9" height="15.0" fill="rgb(230,157,36)" rx="2" ry="2" />
<text  x="962.35" y="175.5" ></text>
</g>
</g>
</svg>
