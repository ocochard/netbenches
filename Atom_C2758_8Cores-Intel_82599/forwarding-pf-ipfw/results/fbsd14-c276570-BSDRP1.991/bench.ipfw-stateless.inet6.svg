<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>memcmp (7 samples, 0.31%)</title><rect x="702.1" y="149" width="3.6" height="15.0" fill="rgb(248,52,44)" rx="2" ry="2" />
<text  x="705.06" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.09%)</title><rect x="30.6" y="85" width="1.0" height="15.0" fill="rgb(235,129,4)" rx="2" ry="2" />
<text  x="33.57" y="95.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (43 samples, 1.87%)</title><rect x="311.3" y="37" width="22.1" height="15.0" fill="rgb(241,184,20)" rx="2" ry="2" />
<text  x="314.30" y="47.5" >i..</text>
</g>
<g >
<title>_task_fn_rx (33 samples, 1.44%)</title><rect x="1101.6" y="245" width="16.9" height="15.0" fill="rgb(243,60,49)" rx="2" ry="2" />
<text  x="1104.56" y="255.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (51 samples, 2.22%)</title><rect x="1015.2" y="165" width="26.2" height="15.0" fill="rgb(212,74,27)" rx="2" ry="2" />
<text  x="1018.19" y="175.5" >b..</text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.26%)</title><rect x="1098.0" y="213" width="3.1" height="15.0" fill="rgb(223,93,46)" rx="2" ry="2" />
<text  x="1100.97" y="223.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.04%)</title><rect x="735.5" y="53" width="0.5" height="15.0" fill="rgb(219,199,4)" rx="2" ry="2" />
<text  x="738.48" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (35 samples, 1.53%)</title><rect x="757.6" y="197" width="18.0" height="15.0" fill="rgb(253,174,29)" rx="2" ry="2" />
<text  x="760.59" y="207.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (7 samples, 0.31%)</title><rect x="1176.1" y="229" width="3.6" height="15.0" fill="rgb(209,138,34)" rx="2" ry="2" />
<text  x="1179.12" y="239.5" ></text>
</g>
<g >
<title>m_freem (66 samples, 2.88%)</title><rect x="910.8" y="165" width="33.9" height="15.0" fill="rgb(225,172,54)" rx="2" ry="2" />
<text  x="913.81" y="175.5" >m_..</text>
</g>
<g >
<title>cache_alloc (7 samples, 0.31%)</title><rect x="732.4" y="165" width="3.6" height="15.0" fill="rgb(247,139,15)" rx="2" ry="2" />
<text  x="735.40" y="175.5" ></text>
</g>
<g >
<title>ipfw_check_packet (393 samples, 17.12%)</title><rect x="500.0" y="69" width="202.1" height="15.0" fill="rgb(214,75,41)" rx="2" ry="2" />
<text  x="503.00" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.13%)</title><rect x="1039.9" y="133" width="1.5" height="15.0" fill="rgb(220,83,27)" rx="2" ry="2" />
<text  x="1042.86" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.09%)</title><rect x="30.6" y="229" width="1.0" height="15.0" fill="rgb(250,82,49)" rx="2" ry="2" />
<text  x="33.57" y="239.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.04%)</title><rect x="1101.1" y="181" width="0.5" height="15.0" fill="rgb(218,42,47)" rx="2" ry="2" />
<text  x="1104.05" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (2 samples, 0.09%)</title><rect x="30.6" y="277" width="1.0" height="15.0" fill="rgb(223,21,26)" rx="2" ry="2" />
<text  x="33.57" y="287.5" ></text>
</g>
<g >
<title>ether_demux (2 samples, 0.09%)</title><rect x="30.6" y="197" width="1.0" height="15.0" fill="rgb(244,73,16)" rx="2" ry="2" />
<text  x="33.57" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (33 samples, 1.44%)</title><rect x="1101.6" y="53" width="16.9" height="15.0" fill="rgb(208,61,27)" rx="2" ry="2" />
<text  x="1104.56" y="63.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (23 samples, 1.00%)</title><rect x="739.1" y="181" width="11.8" height="15.0" fill="rgb(253,137,37)" rx="2" ry="2" />
<text  x="742.08" y="191.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (26 samples, 1.13%)</title><rect x="357.1" y="53" width="13.3" height="15.0" fill="rgb(212,90,22)" rx="2" ry="2" />
<text  x="360.06" y="63.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.13%)</title><rect x="38.8" y="229" width="1.5" height="15.0" fill="rgb(250,37,23)" rx="2" ry="2" />
<text  x="41.79" y="239.5" ></text>
</g>
<g >
<title>ether_demux (1,121 samples, 48.85%)</title><rect x="125.7" y="149" width="576.4" height="15.0" fill="rgb(217,143,10)" rx="2" ry="2" />
<text  x="128.69" y="159.5" >ether_demux</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (7 samples, 0.31%)</title><rect x="1162.2" y="229" width="3.6" height="15.0" fill="rgb(253,170,19)" rx="2" ry="2" />
<text  x="1165.24" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (33 samples, 1.44%)</title><rect x="1101.6" y="261" width="16.9" height="15.0" fill="rgb(210,30,35)" rx="2" ry="2" />
<text  x="1104.56" y="271.5" ></text>
</g>
<g >
<title>ether_input (1,220 samples, 53.16%)</title><rect x="78.9" y="197" width="627.3" height="15.0" fill="rgb(219,225,50)" rx="2" ry="2" />
<text  x="81.90" y="207.5" >ether_input</text>
</g>
<g >
<title>timercb (8 samples, 0.35%)</title><rect x="1185.9" y="261" width="4.1" height="15.0" fill="rgb(226,117,19)" rx="2" ry="2" />
<text  x="1188.89" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (55 samples, 2.40%)</title><rect x="1041.4" y="165" width="28.3" height="15.0" fill="rgb(216,97,30)" rx="2" ry="2" />
<text  x="1044.41" y="175.5" >i..</text>
</g>
<g >
<title>iflib_txq_drain (512 samples, 22.31%)</title><rect x="828.0" y="197" width="263.3" height="15.0" fill="rgb(246,133,43)" rx="2" ry="2" />
<text  x="831.03" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>grouptaskqueue_enqueue (22 samples, 0.96%)</title><rect x="297.4" y="37" width="11.3" height="15.0" fill="rgb(216,19,37)" rx="2" ry="2" />
<text  x="300.42" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (33 samples, 1.44%)</title><rect x="1101.6" y="277" width="16.9" height="15.0" fill="rgb(250,226,48)" rx="2" ry="2" />
<text  x="1104.56" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (33 samples, 1.44%)</title><rect x="1101.6" y="197" width="16.9" height="15.0" fill="rgb(210,58,25)" rx="2" ry="2" />
<text  x="1104.56" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.04%)</title><rect x="1101.1" y="85" width="0.5" height="15.0" fill="rgb(205,170,9)" rx="2" ry="2" />
<text  x="1104.05" y="95.5" ></text>
</g>
<g >
<title>m_tag_locate (9 samples, 0.39%)</title><rect x="697.4" y="53" width="4.7" height="15.0" fill="rgb(224,222,3)" rx="2" ry="2" />
<text  x="700.43" y="63.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (86 samples, 3.75%)</title><rect x="1135.5" y="245" width="44.2" height="15.0" fill="rgb(216,184,36)" rx="2" ry="2" />
<text  x="1138.50" y="255.5" >ifli..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.09%)</title><rect x="41.9" y="213" width="1.0" height="15.0" fill="rgb(216,210,10)" rx="2" ry="2" />
<text  x="44.88" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (17 samples, 0.74%)</title><rect x="1101.6" y="37" width="8.7" height="15.0" fill="rgb(216,148,47)" rx="2" ry="2" />
<text  x="1104.56" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (23 samples, 1.00%)</title><rect x="778.2" y="197" width="11.8" height="15.0" fill="rgb(253,217,6)" rx="2" ry="2" />
<text  x="781.16" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (6 samples, 0.26%)</title><rect x="941.7" y="117" width="3.0" height="15.0" fill="rgb(254,84,37)" rx="2" ry="2" />
<text  x="944.66" y="127.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (31 samples, 1.35%)</title><rect x="1025.5" y="149" width="15.9" height="15.0" fill="rgb(217,109,13)" rx="2" ry="2" />
<text  x="1028.47" y="159.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (4 samples, 0.17%)</title><rect x="32.6" y="245" width="2.1" height="15.0" fill="rgb(249,205,30)" rx="2" ry="2" />
<text  x="35.62" y="255.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.04%)</title><rect x="1101.1" y="37" width="0.5" height="15.0" fill="rgb(248,200,18)" rx="2" ry="2" />
<text  x="1104.05" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.04%)</title><rect x="705.7" y="149" width="0.5" height="15.0" fill="rgb(244,103,8)" rx="2" ry="2" />
<text  x="708.66" y="159.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.04%)</title><rect x="1101.1" y="261" width="0.5" height="15.0" fill="rgb(205,145,11)" rx="2" ry="2" />
<text  x="1104.05" y="271.5" ></text>
</g>
<g >
<title>ether_input (2 samples, 0.09%)</title><rect x="30.6" y="245" width="1.0" height="15.0" fill="rgb(253,124,38)" rx="2" ry="2" />
<text  x="33.57" y="255.5" ></text>
</g>
<g >
<title>wakeup_any (1 samples, 0.04%)</title><rect x="1118.0" y="37" width="0.5" height="15.0" fill="rgb(254,44,10)" rx="2" ry="2" />
<text  x="1121.02" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (2,078 samples, 90.54%)</title><rect x="32.6" y="261" width="1068.5" height="15.0" fill="rgb(229,157,4)" rx="2" ry="2" />
<text  x="35.62" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ixgbe_if_update_admin_status (2 samples, 0.09%)</title><rect x="40.3" y="213" width="1.1" height="15.0" fill="rgb(228,104,19)" rx="2" ry="2" />
<text  x="43.34" y="223.5" ></text>
</g>
<g >
<title>pfil_run_hooks (433 samples, 18.87%)</title><rect x="479.4" y="85" width="222.7" height="15.0" fill="rgb(251,153,23)" rx="2" ry="2" />
<text  x="482.43" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>iflib_fl_refill (81 samples, 3.53%)</title><rect x="709.3" y="197" width="41.6" height="15.0" fill="rgb(241,195,28)" rx="2" ry="2" />
<text  x="712.26" y="207.5" >ifl..</text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.04%)</title><rect x="1101.1" y="197" width="0.5" height="15.0" fill="rgb(208,131,49)" rx="2" ry="2" />
<text  x="1104.05" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.09%)</title><rect x="30.6" y="213" width="1.0" height="15.0" fill="rgb(205,80,17)" rx="2" ry="2" />
<text  x="33.57" y="223.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (3 samples, 0.13%)</title><rect x="733.4" y="101" width="1.6" height="15.0" fill="rgb(215,73,3)" rx="2" ry="2" />
<text  x="736.42" y="111.5" ></text>
</g>
<g >
<title>lradix6_lookup (116 samples, 5.05%)</title><rect x="417.2" y="53" width="59.7" height="15.0" fill="rgb(216,133,52)" rx="2" ry="2" />
<text  x="420.22" y="63.5" >lradix..</text>
</g>
<g >
<title>ip6_tryforward (2 samples, 0.09%)</title><rect x="30.6" y="149" width="1.0" height="15.0" fill="rgb(250,118,12)" rx="2" ry="2" />
<text  x="33.57" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.09%)</title><rect x="30.6" y="37" width="1.0" height="15.0" fill="rgb(227,161,3)" rx="2" ry="2" />
<text  x="33.57" y="47.5" ></text>
</g>
<g >
<title>ip6_input (2 samples, 0.09%)</title><rect x="30.6" y="165" width="1.0" height="15.0" fill="rgb(208,92,10)" rx="2" ry="2" />
<text  x="33.57" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.04%)</title><rect x="1161.7" y="213" width="0.5" height="15.0" fill="rgb(250,136,8)" rx="2" ry="2" />
<text  x="1164.72" y="223.5" ></text>
</g>
<g >
<title>_rm_rlock (26 samples, 1.13%)</title><rect x="382.3" y="69" width="13.3" height="15.0" fill="rgb(228,105,15)" rx="2" ry="2" />
<text  x="385.25" y="79.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (175 samples, 7.63%)</title><rect x="854.8" y="181" width="89.9" height="15.0" fill="rgb(237,188,25)" rx="2" ry="2" />
<text  x="857.77" y="191.5" >iflib_comp..</text>
</g>
<g >
<title>ether_output (286 samples, 12.46%)</title><rect x="227.0" y="85" width="147.0" height="15.0" fill="rgb(205,188,22)" rx="2" ry="2" />
<text  x="229.98" y="95.5" >ether_output</text>
</g>
<g >
<title>rn_match (101 samples, 4.40%)</title><rect x="424.9" y="37" width="52.0" height="15.0" fill="rgb(238,224,43)" rx="2" ry="2" />
<text  x="427.93" y="47.5" >rn_ma..</text>
</g>
<g >
<title>ether_input (1 samples, 0.04%)</title><rect x="1101.1" y="229" width="0.5" height="15.0" fill="rgb(219,40,44)" rx="2" ry="2" />
<text  x="1104.05" y="239.5" ></text>
</g>
<g >
<title>uma_small_alloc (4 samples, 0.17%)</title><rect x="732.9" y="117" width="2.1" height="15.0" fill="rgb(226,214,26)" rx="2" ry="2" />
<text  x="735.91" y="127.5" ></text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.09%)</title><rect x="30.6" y="117" width="1.0" height="15.0" fill="rgb(238,210,25)" rx="2" ry="2" />
<text  x="33.57" y="127.5" ></text>
</g>
<g >
<title>pmc_hook_handler (5 samples, 0.22%)</title><rect x="1186.9" y="213" width="2.6" height="15.0" fill="rgb(246,52,48)" rx="2" ry="2" />
<text  x="1189.92" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,526 samples, 66.49%)</title><rect x="41.4" y="229" width="784.6" height="15.0" fill="rgb(234,50,34)" rx="2" ry="2" />
<text  x="44.36" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (4 samples, 0.17%)</title><rect x="1160.2" y="229" width="2.0" height="15.0" fill="rgb(229,74,42)" rx="2" ry="2" />
<text  x="1163.18" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.04%)</title><rect x="790.0" y="197" width="0.5" height="15.0" fill="rgb(226,180,53)" rx="2" ry="2" />
<text  x="792.98" y="207.5" ></text>
</g>
<g >
<title>netmap_rx_irq (1 samples, 0.04%)</title><rect x="825.5" y="213" width="0.5" height="15.0" fill="rgb(236,17,40)" rx="2" ry="2" />
<text  x="828.46" y="223.5" ></text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.31%)</title><rect x="732.4" y="181" width="3.6" height="15.0" fill="rgb(252,171,6)" rx="2" ry="2" />
<text  x="735.40" y="191.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (5 samples, 0.22%)</title><rect x="748.3" y="165" width="2.6" height="15.0" fill="rgb(211,13,6)" rx="2" ry="2" />
<text  x="751.34" y="175.5" ></text>
</g>
<g >
<title>ip6_input (33 samples, 1.44%)</title><rect x="1101.6" y="133" width="16.9" height="15.0" fill="rgb(236,82,7)" rx="2" ry="2" />
<text  x="1104.56" y="143.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (2 samples, 0.09%)</title><rect x="39.3" y="213" width="1.0" height="15.0" fill="rgb(214,172,42)" rx="2" ry="2" />
<text  x="42.31" y="223.5" ></text>
</g>
<g >
<title>m_free (62 samples, 2.70%)</title><rect x="912.9" y="149" width="31.8" height="15.0" fill="rgb(221,78,13)" rx="2" ry="2" />
<text  x="915.87" y="159.5" >m_..</text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.09%)</title><rect x="1090.3" y="165" width="1.0" height="15.0" fill="rgb(226,137,52)" rx="2" ry="2" />
<text  x="1093.25" y="175.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.04%)</title><rect x="38.3" y="229" width="0.5" height="15.0" fill="rgb(243,15,35)" rx="2" ry="2" />
<text  x="41.28" y="239.5" ></text>
</g>
<g >
<title>drain_ring_lockless (515 samples, 22.44%)</title><rect x="826.5" y="213" width="264.8" height="15.0" fill="rgb(206,3,22)" rx="2" ry="2" />
<text  x="829.49" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.09%)</title><rect x="30.6" y="101" width="1.0" height="15.0" fill="rgb(240,38,46)" rx="2" ry="2" />
<text  x="33.57" y="111.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.09%)</title><rect x="400.2" y="69" width="1.1" height="15.0" fill="rgb(233,9,13)" rx="2" ry="2" />
<text  x="403.25" y="79.5" ></text>
</g>
<g >
<title>ip6_input (1,061 samples, 46.23%)</title><rect x="156.5" y="117" width="545.6" height="15.0" fill="rgb(252,224,10)" rx="2" ry="2" />
<text  x="159.54" y="127.5" >ip6_input</text>
</g>
<g >
<title>mb_dtor_mbuf (10 samples, 0.44%)</title><rect x="936.5" y="117" width="5.2" height="15.0" fill="rgb(213,128,32)" rx="2" ry="2" />
<text  x="939.52" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.13%)</title><rect x="144.7" y="133" width="1.6" height="15.0" fill="rgb(246,207,15)" rx="2" ry="2" />
<text  x="147.71" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (20 samples, 0.87%)</title><rect x="1165.8" y="229" width="10.3" height="15.0" fill="rgb(254,189,51)" rx="2" ry="2" />
<text  x="1168.83" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (1 samples, 0.04%)</title><rect x="1101.1" y="53" width="0.5" height="15.0" fill="rgb(223,110,38)" rx="2" ry="2" />
<text  x="1104.05" y="63.5" ></text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.04%)</title><rect x="1101.1" y="245" width="0.5" height="15.0" fill="rgb(251,74,17)" rx="2" ry="2" />
<text  x="1104.05" y="255.5" ></text>
</g>
<g >
<title>ip6_tryforward (1 samples, 0.04%)</title><rect x="1101.1" y="133" width="0.5" height="15.0" fill="rgb(217,208,35)" rx="2" ry="2" />
<text  x="1104.05" y="143.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.13%)</title><rect x="706.2" y="197" width="1.5" height="15.0" fill="rgb(247,59,25)" rx="2" ry="2" />
<text  x="709.17" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,208 samples, 52.64%)</title><rect x="85.1" y="181" width="621.1" height="15.0" fill="rgb(222,51,34)" rx="2" ry="2" />
<text  x="88.07" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>gtaskqueue_run_locked (1 samples, 0.04%)</title><rect x="1101.1" y="277" width="0.5" height="15.0" fill="rgb(212,84,6)" rx="2" ry="2" />
<text  x="1104.05" y="287.5" ></text>
</g>
<g >
<title>keg_alloc_slab (7 samples, 0.31%)</title><rect x="732.4" y="133" width="3.6" height="15.0" fill="rgb(236,73,51)" rx="2" ry="2" />
<text  x="735.40" y="143.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (42 samples, 1.83%)</title><rect x="1069.7" y="181" width="21.6" height="15.0" fill="rgb(230,86,29)" rx="2" ry="2" />
<text  x="1072.69" y="191.5" >i..</text>
</g>
<g >
<title>taskqueue_thread_enqueue (1 samples, 0.04%)</title><rect x="1117.5" y="37" width="0.5" height="15.0" fill="rgb(232,104,27)" rx="2" ry="2" />
<text  x="1120.50" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.13%)</title><rect x="83.5" y="181" width="1.6" height="15.0" fill="rgb(243,81,20)" rx="2" ry="2" />
<text  x="86.53" y="191.5" ></text>
</g>
<g >
<title>memmove_erms (7 samples, 0.31%)</title><rect x="370.4" y="53" width="3.6" height="15.0" fill="rgb(246,81,36)" rx="2" ry="2" />
<text  x="373.43" y="63.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.04%)</title><rect x="1101.1" y="69" width="0.5" height="15.0" fill="rgb(248,180,9)" rx="2" ry="2" />
<text  x="1104.05" y="79.5" ></text>
</g>
<g >
<title>_rm_runlock (9 samples, 0.39%)</title><rect x="395.6" y="69" width="4.6" height="15.0" fill="rgb(227,48,26)" rx="2" ry="2" />
<text  x="398.62" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,081 samples, 47.10%)</title><rect x="146.3" y="133" width="555.8" height="15.0" fill="rgb(211,51,1)" rx="2" ry="2" />
<text  x="149.25" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>m_adj (15 samples, 0.65%)</title><rect x="137.0" y="133" width="7.7" height="15.0" fill="rgb(209,163,41)" rx="2" ry="2" />
<text  x="140.00" y="143.5" ></text>
</g>
<g >
<title>fork_exit (2,078 samples, 90.54%)</title><rect x="32.6" y="277" width="1068.5" height="15.0" fill="rgb(226,23,20)" rx="2" ry="2" />
<text  x="35.62" y="287.5" >fork_exit</text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.04%)</title><rect x="1187.9" y="181" width="0.6" height="15.0" fill="rgb(234,75,2)" rx="2" ry="2" />
<text  x="1190.94" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.09%)</title><rect x="41.9" y="197" width="1.0" height="15.0" fill="rgb(207,82,12)" rx="2" ry="2" />
<text  x="44.88" y="207.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (24 samples, 1.05%)</title><rect x="18.2" y="277" width="12.4" height="15.0" fill="rgb(223,133,22)" rx="2" ry="2" />
<text  x="21.23" y="287.5" ></text>
</g>
<g >
<title>all (2,295 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(207,222,8)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>lapic_handle_intr (9 samples, 0.39%)</title><rect x="1180.7" y="277" width="4.7" height="15.0" fill="rgb(240,58,2)" rx="2" ry="2" />
<text  x="1183.75" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.04%)</title><rect x="1101.1" y="165" width="0.5" height="15.0" fill="rgb(231,98,53)" rx="2" ry="2" />
<text  x="1104.05" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,522 samples, 66.32%)</title><rect x="42.9" y="213" width="782.6" height="15.0" fill="rgb(220,75,35)" rx="2" ry="2" />
<text  x="45.91" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.04%)</title><rect x="1100.5" y="197" width="0.6" height="15.0" fill="rgb(241,181,34)" rx="2" ry="2" />
<text  x="1103.54" y="207.5" ></text>
</g>
<g >
<title>memcmp (5 samples, 0.22%)</title><rect x="476.9" y="85" width="2.5" height="15.0" fill="rgb(205,98,35)" rx="2" ry="2" />
<text  x="479.86" y="95.5" ></text>
</g>
<g >
<title>_rm_runlock (18 samples, 0.78%)</title><rect x="688.2" y="37" width="9.2" height="15.0" fill="rgb(243,52,45)" rx="2" ry="2" />
<text  x="691.18" y="47.5" ></text>
</g>
<g >
<title>memcmp (3 samples, 0.13%)</title><rect x="368.9" y="37" width="1.5" height="15.0" fill="rgb(251,48,33)" rx="2" ry="2" />
<text  x="371.88" y="47.5" ></text>
</g>
<g >
<title>ether_input (33 samples, 1.44%)</title><rect x="1101.6" y="213" width="16.9" height="15.0" fill="rgb(224,119,10)" rx="2" ry="2" />
<text  x="1104.56" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.04%)</title><rect x="1101.1" y="213" width="0.5" height="15.0" fill="rgb(206,127,35)" rx="2" ry="2" />
<text  x="1104.05" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (13 samples, 0.57%)</title><rect x="750.9" y="197" width="6.7" height="15.0" fill="rgb(231,36,22)" rx="2" ry="2" />
<text  x="753.91" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (33 samples, 1.44%)</title><rect x="1101.6" y="229" width="16.9" height="15.0" fill="rgb(207,1,42)" rx="2" ry="2" />
<text  x="1104.56" y="239.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (1 samples, 0.04%)</title><rect x="1091.3" y="213" width="0.5" height="15.0" fill="rgb(230,126,52)" rx="2" ry="2" />
<text  x="1094.28" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (33 samples, 1.44%)</title><rect x="1101.6" y="69" width="16.9" height="15.0" fill="rgb(243,73,48)" rx="2" ry="2" />
<text  x="1104.56" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (33 samples, 1.44%)</title><rect x="1101.6" y="149" width="16.9" height="15.0" fill="rgb(207,142,36)" rx="2" ry="2" />
<text  x="1104.56" y="159.5" ></text>
</g>
<g >
<title>handleevents (7 samples, 0.31%)</title><rect x="1186.4" y="245" width="3.6" height="15.0" fill="rgb(241,125,3)" rx="2" ry="2" />
<text  x="1189.40" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.04%)</title><rect x="1156.1" y="181" width="0.5" height="15.0" fill="rgb(245,11,6)" rx="2" ry="2" />
<text  x="1159.07" y="191.5" ></text>
</g>
<g >
<title>intr_execute_handlers (121 samples, 5.27%)</title><rect x="1118.5" y="277" width="62.2" height="15.0" fill="rgb(211,113,50)" rx="2" ry="2" />
<text  x="1121.53" y="287.5" >intr_e..</text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.04%)</title><rect x="1161.2" y="213" width="0.5" height="15.0" fill="rgb(246,5,28)" rx="2" ry="2" />
<text  x="1164.21" y="223.5" ></text>
</g>
<g >
<title>nd6_resolve (66 samples, 2.88%)</title><rect x="340.1" y="69" width="33.9" height="15.0" fill="rgb(229,207,22)" rx="2" ry="2" />
<text  x="343.09" y="79.5" >nd..</text>
</g>
<g >
<title>ixgbe_read_reg (2 samples, 0.09%)</title><rect x="40.3" y="181" width="1.1" height="15.0" fill="rgb(216,145,31)" rx="2" ry="2" />
<text  x="43.34" y="191.5" ></text>
</g>
<g >
<title>ip6_tryforward (1,002 samples, 43.66%)</title><rect x="186.9" y="101" width="515.2" height="15.0" fill="rgb(250,166,36)" rx="2" ry="2" />
<text  x="189.87" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (5 samples, 0.22%)</title><rect x="1087.7" y="165" width="2.6" height="15.0" fill="rgb(219,109,25)" rx="2" ry="2" />
<text  x="1090.68" y="175.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.04%)</title><rect x="735.5" y="69" width="0.5" height="15.0" fill="rgb(234,104,54)" rx="2" ry="2" />
<text  x="738.48" y="79.5" ></text>
</g>
<g >
<title>iflib_if_transmit (117 samples, 5.10%)</title><rect x="273.3" y="53" width="60.1" height="15.0" fill="rgb(252,215,26)" rx="2" ry="2" />
<text  x="276.25" y="63.5" >iflib_..</text>
</g>
<g >
<title>doreti (2 samples, 0.09%)</title><rect x="31.6" y="277" width="1.0" height="15.0" fill="rgb(208,227,19)" rx="2" ry="2" />
<text  x="34.59" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.04%)</title><rect x="1189.5" y="229" width="0.5" height="15.0" fill="rgb(208,48,18)" rx="2" ry="2" />
<text  x="1192.49" y="239.5" ></text>
</g>
<g >
<title>ether_demux (33 samples, 1.44%)</title><rect x="1101.6" y="165" width="16.9" height="15.0" fill="rgb(245,157,10)" rx="2" ry="2" />
<text  x="1104.56" y="175.5" ></text>
</g>
<g >
<title>pmc_process_samples (5 samples, 0.22%)</title><rect x="1186.9" y="197" width="2.6" height="15.0" fill="rgb(210,45,49)" rx="2" ry="2" />
<text  x="1189.92" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (6 samples, 0.26%)</title><rect x="736.0" y="181" width="3.1" height="15.0" fill="rgb(210,117,25)" rx="2" ry="2" />
<text  x="739.00" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.26%)</title><rect x="1094.4" y="229" width="3.1" height="15.0" fill="rgb(210,200,45)" rx="2" ry="2" />
<text  x="1097.37" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.09%)</title><rect x="30.6" y="53" width="1.0" height="15.0" fill="rgb(227,64,44)" rx="2" ry="2" />
<text  x="33.57" y="63.5" ></text>
</g>
<g >
<title>wakeup (7 samples, 0.31%)</title><rect x="1097.5" y="229" width="3.6" height="15.0" fill="rgb(246,211,52)" rx="2" ry="2" />
<text  x="1100.45" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (13 samples, 0.57%)</title><rect x="333.4" y="69" width="6.7" height="15.0" fill="rgb(219,109,20)" rx="2" ry="2" />
<text  x="336.41" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (22 samples, 0.96%)</title><rect x="1148.9" y="229" width="11.3" height="15.0" fill="rgb(245,179,14)" rx="2" ry="2" />
<text  x="1151.87" y="239.5" ></text>
</g>
<g >
<title>zone_import (2 samples, 0.09%)</title><rect x="735.0" y="101" width="1.0" height="15.0" fill="rgb(235,186,0)" rx="2" ry="2" />
<text  x="737.97" y="111.5" ></text>
</g>
<g >
<title>ip6_input (1 samples, 0.04%)</title><rect x="1101.1" y="149" width="0.5" height="15.0" fill="rgb(225,78,44)" rx="2" ry="2" />
<text  x="1104.05" y="159.5" ></text>
</g>
<g >
<title>msi_vector (2 samples, 0.09%)</title><rect x="1179.7" y="261" width="1.0" height="15.0" fill="rgb(225,211,50)" rx="2" ry="2" />
<text  x="1182.72" y="271.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.04%)</title><rect x="735.5" y="85" width="0.5" height="15.0" fill="rgb(207,11,0)" rx="2" ry="2" />
<text  x="738.48" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.09%)</title><rect x="1093.3" y="229" width="1.1" height="15.0" fill="rgb(216,80,19)" rx="2" ry="2" />
<text  x="1096.34" y="239.5" ></text>
</g>
<g >
<title>if_getsoftc (5 samples, 0.22%)</title><rect x="308.7" y="37" width="2.6" height="15.0" fill="rgb(241,184,33)" rx="2" ry="2" />
<text  x="311.73" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (2 samples, 0.09%)</title><rect x="30.6" y="261" width="1.0" height="15.0" fill="rgb(250,167,7)" rx="2" ry="2" />
<text  x="33.57" y="271.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (3 samples, 0.13%)</title><rect x="1091.8" y="213" width="1.5" height="15.0" fill="rgb(253,124,14)" rx="2" ry="2" />
<text  x="1094.80" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (2 samples, 0.09%)</title><rect x="30.6" y="69" width="1.0" height="15.0" fill="rgb(208,116,13)" rx="2" ry="2" />
<text  x="33.57" y="79.5" ></text>
</g>
<g >
<title>ip6_tryforward (33 samples, 1.44%)</title><rect x="1101.6" y="117" width="16.9" height="15.0" fill="rgb(233,124,7)" rx="2" ry="2" />
<text  x="1104.56" y="127.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (66 samples, 2.88%)</title><rect x="790.5" y="197" width="33.9" height="15.0" fill="rgb(249,182,44)" rx="2" ry="2" />
<text  x="793.50" y="207.5" >rx..</text>
</g>
<g >
<title>_rm_rlock (36 samples, 1.57%)</title><rect x="669.7" y="37" width="18.5" height="15.0" fill="rgb(250,201,22)" rx="2" ry="2" />
<text  x="672.67" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.13%)</title><rect x="1151.4" y="213" width="1.6" height="15.0" fill="rgb(231,164,52)" rx="2" ry="2" />
<text  x="1154.44" y="223.5" ></text>
</g>
<g >
<title>iflib_encap (243 samples, 10.59%)</title><rect x="944.7" y="181" width="125.0" height="15.0" fill="rgb(247,17,39)" rx="2" ry="2" />
<text  x="947.75" y="191.5" >iflib_encap</text>
</g>
<g >
<title>ixgbe_update_stats_counters (2 samples, 0.09%)</title><rect x="40.3" y="197" width="1.1" height="15.0" fill="rgb(244,139,43)" rx="2" ry="2" />
<text  x="43.34" y="207.5" ></text>
</g>
<g >
<title>ether_output (33 samples, 1.44%)</title><rect x="1101.6" y="101" width="16.9" height="15.0" fill="rgb(219,62,12)" rx="2" ry="2" />
<text  x="1104.56" y="111.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (10 samples, 0.44%)</title><rect x="905.7" y="165" width="5.1" height="15.0" fill="rgb(214,181,32)" rx="2" ry="2" />
<text  x="908.67" y="175.5" ></text>
</g>
<g >
<title>ipfw_chk (339 samples, 14.77%)</title><rect x="523.1" y="53" width="174.3" height="15.0" fill="rgb(208,101,2)" rx="2" ry="2" />
<text  x="526.13" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>in6_localip (53 samples, 2.31%)</title><rect x="374.0" y="85" width="27.3" height="15.0" fill="rgb(231,13,40)" rx="2" ry="2" />
<text  x="377.03" y="95.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.09%)</title><rect x="30.6" y="181" width="1.0" height="15.0" fill="rgb(226,28,9)" rx="2" ry="2" />
<text  x="33.57" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (9 samples, 0.39%)</title><rect x="1185.4" y="277" width="4.6" height="15.0" fill="rgb(253,71,33)" rx="2" ry="2" />
<text  x="1188.37" y="287.5" ></text>
</g>
<g >
<title>soft_get_config (2 samples, 0.09%)</title><rect x="1188.5" y="181" width="1.0" height="15.0" fill="rgb(243,22,45)" rx="2" ry="2" />
<text  x="1191.46" y="191.5" ></text>
</g>
<g >
<title>zone_import (7 samples, 0.31%)</title><rect x="732.4" y="149" width="3.6" height="15.0" fill="rgb(251,13,17)" rx="2" ry="2" />
<text  x="735.40" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (33 samples, 1.44%)</title><rect x="1101.6" y="181" width="16.9" height="15.0" fill="rgb(224,77,51)" rx="2" ry="2" />
<text  x="1104.56" y="191.5" ></text>
</g>
<g >
<title>fib6_lookup (142 samples, 6.19%)</title><rect x="403.8" y="69" width="73.1" height="15.0" fill="rgb(238,20,16)" rx="2" ry="2" />
<text  x="406.85" y="79.5" >fib6_loo..</text>
</g>
<g >
<title>ether_output_frame (136 samples, 5.93%)</title><rect x="263.5" y="69" width="69.9" height="15.0" fill="rgb(226,164,38)" rx="2" ry="2" />
<text  x="266.48" y="79.5" >ether_o..</text>
</g>
<g >
<title>_task_fn_tx (520 samples, 22.66%)</title><rect x="826.0" y="229" width="267.3" height="15.0" fill="rgb(247,4,25)" rx="2" ry="2" />
<text  x="828.97" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.09%)</title><rect x="1155.6" y="197" width="1.0" height="15.0" fill="rgb(236,0,3)" rx="2" ry="2" />
<text  x="1158.55" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (7 samples, 0.31%)</title><rect x="1156.6" y="197" width="3.6" height="15.0" fill="rgb(220,188,16)" rx="2" ry="2" />
<text  x="1159.58" y="207.5" ></text>
</g>
<g >
<title>zone_alloc_item (2 samples, 0.09%)</title><rect x="735.0" y="117" width="1.0" height="15.0" fill="rgb(210,11,2)" rx="2" ry="2" />
<text  x="737.97" y="127.5" ></text>
</g>
<g >
<title>ether_output (2 samples, 0.09%)</title><rect x="30.6" y="133" width="1.0" height="15.0" fill="rgb(226,75,10)" rx="2" ry="2" />
<text  x="33.57" y="143.5" ></text>
</g>
<g >
<title>pagezero_erms (3 samples, 0.13%)</title><rect x="733.4" y="85" width="1.6" height="15.0" fill="rgb(243,121,5)" rx="2" ry="2" />
<text  x="736.42" y="95.5" ></text>
</g>
<g >
<title>ether_nh_input (1,187 samples, 51.72%)</title><rect x="95.9" y="165" width="610.3" height="15.0" fill="rgb(253,206,49)" rx="2" ry="2" />
<text  x="98.86" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.09%)</title><rect x="1178.7" y="213" width="1.0" height="15.0" fill="rgb(211,103,23)" rx="2" ry="2" />
<text  x="1181.69" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1 (16 samples, 0.70%)</title><rect x="10.0" y="277" width="8.2" height="15.0" fill="rgb(242,13,53)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>uma_zfree_arg (52 samples, 2.27%)</title><rect x="918.0" y="133" width="26.7" height="15.0" fill="rgb(254,190,53)" rx="2" ry="2" />
<text  x="921.01" y="143.5" >u..</text>
</g>
<g >
<title>tcp_lro_flush_all (2 samples, 0.09%)</title><rect x="824.4" y="197" width="1.1" height="15.0" fill="rgb(243,98,44)" rx="2" ry="2" />
<text  x="827.43" y="207.5" ></text>
</g>
<g >
<title>ether_output (1 samples, 0.04%)</title><rect x="1101.1" y="117" width="0.5" height="15.0" fill="rgb(232,94,17)" rx="2" ry="2" />
<text  x="1104.05" y="127.5" ></text>
</g>
<g >
<title>wakeup_any (10 samples, 0.44%)</title><rect x="1155.0" y="213" width="5.2" height="15.0" fill="rgb(229,54,48)" rx="2" ry="2" />
<text  x="1158.04" y="223.5" ></text>
</g>
<g >
<title>intr_lookup_source (8 samples, 0.35%)</title><rect x="1181.3" y="261" width="4.1" height="15.0" fill="rgb(224,160,24)" rx="2" ry="2" />
<text  x="1184.26" y="271.5" ></text>
</g>
<g >
<title>iflib_get_ifp (2 samples, 0.09%)</title><rect x="1177.7" y="213" width="1.0" height="15.0" fill="rgb(231,41,26)" rx="2" ry="2" />
<text  x="1180.66" y="223.5" ></text>
</g>
<g >
<title>hardclock (6 samples, 0.26%)</title><rect x="1186.4" y="229" width="3.1" height="15.0" fill="rgb(245,34,54)" rx="2" ry="2" />
<text  x="1189.40" y="239.5" ></text>
</g>
<g >
<title>m_pkthdr_init (5 samples, 0.22%)</title><rect x="775.6" y="197" width="2.6" height="15.0" fill="rgb(234,110,20)" rx="2" ry="2" />
<text  x="778.59" y="207.5" ></text>
</g>
<g >
<title>intr_event_handle (102 samples, 4.44%)</title><rect x="1127.3" y="261" width="52.4" height="15.0" fill="rgb(220,67,37)" rx="2" ry="2" />
<text  x="1130.27" y="271.5" >intr_..</text>
</g>
<g >
<title>ether_output_frame (33 samples, 1.44%)</title><rect x="1101.6" y="85" width="16.9" height="15.0" fill="rgb(233,185,8)" rx="2" ry="2" />
<text  x="1104.56" y="95.5" ></text>
</g>
<g >
<title>spinlock_exit (4 samples, 0.17%)</title><rect x="1153.0" y="213" width="2.0" height="15.0" fill="rgb(241,77,3)" rx="2" ry="2" />
<text  x="1155.98" y="223.5" ></text>
</g>
<g >
<title>ip6_findroute (147 samples, 6.41%)</title><rect x="401.3" y="85" width="75.6" height="15.0" fill="rgb(207,151,25)" rx="2" ry="2" />
<text  x="404.28" y="95.5" >ip6_find..</text>
</g>
<g >
<title>_task_fn_admin (2 samples, 0.09%)</title><rect x="40.3" y="229" width="1.1" height="15.0" fill="rgb(216,222,32)" rx="2" ry="2" />
<text  x="43.34" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.04%)</title><rect x="732.4" y="117" width="0.5" height="15.0" fill="rgb(218,115,5)" rx="2" ry="2" />
<text  x="735.40" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (14 samples, 0.61%)</title><rect x="1110.3" y="37" width="7.2" height="15.0" fill="rgb(248,46,32)" rx="2" ry="2" />
<text  x="1113.31" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (2,074 samples, 90.37%)</title><rect x="34.7" y="245" width="1066.4" height="15.0" fill="rgb(210,221,9)" rx="2" ry="2" />
<text  x="37.68" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.04%)</title><rect x="1101.1" y="101" width="0.5" height="15.0" fill="rgb(233,137,41)" rx="2" ry="2" />
<text  x="1104.05" y="111.5" ></text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.13%)</title><rect x="707.7" y="197" width="1.6" height="15.0" fill="rgb(231,196,25)" rx="2" ry="2" />
<text  x="710.72" y="207.5" ></text>
</g>
</g>
</svg>
