<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>m_adj (13 samples, 0.53%)</title><rect x="169.1" y="133" width="6.4" height="15.0" fill="rgb(212,68,28)" rx="2" ry="2" />
<text  x="172.14" y="143.5" ></text>
</g>
<g >
<title>drain_ring_lockless (614 samples, 25.25%)</title><rect x="770.3" y="213" width="297.9" height="15.0" fill="rgb(247,57,13)" rx="2" ry="2" />
<text  x="773.30" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>in6_lltable_lookup (33 samples, 1.36%)</title><rect x="454.0" y="53" width="16.0" height="15.0" fill="rgb(239,167,32)" rx="2" ry="2" />
<text  x="456.96" y="63.5" ></text>
</g>
<g >
<title>ether_demux (64 samples, 2.63%)</title><rect x="1080.8" y="165" width="31.1" height="15.0" fill="rgb(226,138,12)" rx="2" ry="2" />
<text  x="1083.83" y="175.5" >et..</text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.12%)</title><rect x="53.2" y="165" width="1.4" height="15.0" fill="rgb(253,29,39)" rx="2" ry="2" />
<text  x="56.18" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.25%)</title><rect x="1076.9" y="213" width="3.0" height="15.0" fill="rgb(247,72,50)" rx="2" ry="2" />
<text  x="1079.95" y="223.5" ></text>
</g>
<g >
<title>ether_input (2 samples, 0.08%)</title><rect x="26.0" y="245" width="1.0" height="15.0" fill="rgb(248,38,32)" rx="2" ry="2" />
<text  x="29.01" y="255.5" ></text>
</g>
<g >
<title>memcmp (4 samples, 0.16%)</title><rect x="611.2" y="149" width="1.9" height="15.0" fill="rgb(225,177,20)" rx="2" ry="2" />
<text  x="614.16" y="159.5" ></text>
</g>
<g >
<title>ether_output_frame (245 samples, 10.07%)</title><rect x="305.5" y="69" width="118.9" height="15.0" fill="rgb(220,198,1)" rx="2" ry="2" />
<text  x="308.49" y="79.5" >ether_output_f..</text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.16%)</title><rect x="1072.6" y="229" width="1.9" height="15.0" fill="rgb(252,132,52)" rx="2" ry="2" />
<text  x="1075.58" y="239.5" ></text>
</g>
<g >
<title>ip6_input (862 samples, 35.44%)</title><rect x="192.9" y="117" width="418.3" height="15.0" fill="rgb(236,204,23)" rx="2" ry="2" />
<text  x="195.92" y="127.5" >ip6_input</text>
</g>
<g >
<title>_epoch_exit_preempt (4 samples, 0.16%)</title><rect x="43.5" y="229" width="1.9" height="15.0" fill="rgb(231,53,12)" rx="2" ry="2" />
<text  x="46.48" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (4 samples, 0.16%)</title><rect x="1162.8" y="229" width="2.0" height="15.0" fill="rgb(254,28,54)" rx="2" ry="2" />
<text  x="1165.83" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_timer (10 samples, 0.41%)</title><rect x="1185.1" y="277" width="4.9" height="15.0" fill="rgb(236,142,36)" rx="2" ry="2" />
<text  x="1188.15" y="287.5" ></text>
</g>
<g >
<title>ether_output (2 samples, 0.08%)</title><rect x="26.0" y="133" width="1.0" height="15.0" fill="rgb(212,194,43)" rx="2" ry="2" />
<text  x="29.01" y="143.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.04%)</title><rect x="26.5" y="53" width="0.5" height="15.0" fill="rgb(220,150,26)" rx="2" ry="2" />
<text  x="29.50" y="63.5" ></text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.33%)</title><rect x="644.6" y="181" width="3.9" height="15.0" fill="rgb(253,165,53)" rx="2" ry="2" />
<text  x="647.64" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (34 samples, 1.40%)</title><rect x="360.8" y="37" width="16.5" height="15.0" fill="rgb(238,194,18)" rx="2" ry="2" />
<text  x="363.80" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (2 samples, 0.08%)</title><rect x="26.0" y="277" width="1.0" height="15.0" fill="rgb(241,28,37)" rx="2" ry="2" />
<text  x="29.01" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (64 samples, 2.63%)</title><rect x="1080.8" y="245" width="31.1" height="15.0" fill="rgb(208,23,52)" rx="2" ry="2" />
<text  x="1083.83" y="255.5" >_t..</text>
</g>
<g >
<title>doreti (6 samples, 0.25%)</title><rect x="27.0" y="277" width="2.9" height="15.0" fill="rgb(233,57,44)" rx="2" ry="2" />
<text  x="29.98" y="287.5" ></text>
</g>
<g >
<title>sleepq_broadcast (2 samples, 0.08%)</title><rect x="1076.0" y="213" width="0.9" height="15.0" fill="rgb(240,0,39)" rx="2" ry="2" />
<text  x="1078.98" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.33%)</title><rect x="1152.2" y="213" width="3.8" height="15.0" fill="rgb(251,63,2)" rx="2" ry="2" />
<text  x="1155.15" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (6 samples, 0.25%)</title><rect x="1069.7" y="213" width="2.9" height="15.0" fill="rgb(232,56,54)" rx="2" ry="2" />
<text  x="1072.67" y="223.5" ></text>
</g>
<g >
<title>iflib_encap (310 samples, 12.75%)</title><rect x="889.2" y="181" width="150.4" height="15.0" fill="rgb(216,56,34)" rx="2" ry="2" />
<text  x="892.18" y="191.5" >iflib_encap</text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.08%)</title><rect x="1157.5" y="197" width="1.0" height="15.0" fill="rgb(219,47,46)" rx="2" ry="2" />
<text  x="1160.49" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (64 samples, 2.63%)</title><rect x="1080.8" y="85" width="31.1" height="15.0" fill="rgb(253,158,24)" rx="2" ry="2" />
<text  x="1083.83" y="95.5" >et..</text>
</g>
<g >
<title>lradix6_lookup (159 samples, 6.54%)</title><rect x="534.0" y="53" width="77.2" height="15.0" fill="rgb(240,38,54)" rx="2" ry="2" />
<text  x="537.01" y="63.5" >lradix6_..</text>
</g>
<g >
<title>spinlock_exit (5 samples, 0.21%)</title><rect x="1158.9" y="181" width="2.5" height="15.0" fill="rgb(208,2,6)" rx="2" ry="2" />
<text  x="1161.95" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.12%)</title><rect x="48.8" y="197" width="1.5" height="15.0" fill="rgb(226,129,28)" rx="2" ry="2" />
<text  x="51.82" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (8 samples, 0.33%)</title><rect x="700.4" y="197" width="3.9" height="15.0" fill="rgb(212,227,11)" rx="2" ry="2" />
<text  x="703.44" y="207.5" ></text>
</g>
<g >
<title>ether_input (64 samples, 2.63%)</title><rect x="1080.8" y="213" width="31.1" height="15.0" fill="rgb(254,28,4)" rx="2" ry="2" />
<text  x="1083.83" y="223.5" >et..</text>
</g>
<g >
<title>iflib_if_transmit (212 samples, 8.72%)</title><rect x="321.5" y="53" width="102.9" height="15.0" fill="rgb(227,87,50)" rx="2" ry="2" />
<text  x="324.50" y="63.5" >iflib_if_tra..</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.04%)</title><rect x="26.0" y="37" width="0.5" height="15.0" fill="rgb(234,155,41)" rx="2" ry="2" />
<text  x="29.01" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (15 samples, 0.62%)</title><rect x="47.8" y="213" width="7.3" height="15.0" fill="rgb(241,17,31)" rx="2" ry="2" />
<text  x="50.85" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (6 samples, 0.25%)</title><rect x="1158.5" y="197" width="2.9" height="15.0" fill="rgb(215,216,20)" rx="2" ry="2" />
<text  x="1161.46" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.08%)</title><rect x="26.0" y="101" width="1.0" height="15.0" fill="rgb(226,135,38)" rx="2" ry="2" />
<text  x="29.01" y="111.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (1 samples, 0.04%)</title><rect x="648.5" y="181" width="0.5" height="15.0" fill="rgb(212,82,10)" rx="2" ry="2" />
<text  x="651.52" y="191.5" ></text>
</g>
<g >
<title>hardclock (9 samples, 0.37%)</title><rect x="1185.6" y="229" width="4.4" height="15.0" fill="rgb(219,112,54)" rx="2" ry="2" />
<text  x="1188.63" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,462 samples, 60.12%)</title><rect x="55.1" y="213" width="709.4" height="15.0" fill="rgb(227,155,11)" rx="2" ry="2" />
<text  x="58.12" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.25%)</title><rect x="51.7" y="181" width="2.9" height="15.0" fill="rgb(210,29,31)" rx="2" ry="2" />
<text  x="54.73" y="191.5" ></text>
</g>
<g >
<title>_thread_lock (1 samples, 0.04%)</title><rect x="1079.9" y="245" width="0.4" height="15.0" fill="rgb(248,212,48)" rx="2" ry="2" />
<text  x="1082.86" y="255.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (60 samples, 2.47%)</title><rect x="985.7" y="165" width="29.1" height="15.0" fill="rgb(217,10,5)" rx="2" ry="2" />
<text  x="988.73" y="175.5" >bu..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (4 samples, 0.16%)</title><rect x="1061.4" y="165" width="2.0" height="15.0" fill="rgb(229,2,25)" rx="2" ry="2" />
<text  x="1064.42" y="175.5" ></text>
</g>
<g >
<title>memcmp (1 samples, 0.04%)</title><rect x="508.3" y="69" width="0.5" height="15.0" fill="rgb(235,108,36)" rx="2" ry="2" />
<text  x="511.30" y="79.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (3 samples, 0.12%)</title><rect x="1161.4" y="229" width="1.4" height="15.0" fill="rgb(248,203,11)" rx="2" ry="2" />
<text  x="1164.37" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.08%)</title><rect x="26.0" y="85" width="1.0" height="15.0" fill="rgb(234,95,31)" rx="2" ry="2" />
<text  x="29.01" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,051 samples, 43.22%)</title><rect x="103.6" y="181" width="510.0" height="15.0" fill="rgb(248,204,0)" rx="2" ry="2" />
<text  x="106.64" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>nd6_resolve (79 samples, 3.25%)</title><rect x="435.5" y="69" width="38.3" height="15.0" fill="rgb(216,167,45)" rx="2" ry="2" />
<text  x="438.52" y="79.5" >nd6..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.04%)</title><rect x="1067.7" y="181" width="0.5" height="15.0" fill="rgb(249,130,0)" rx="2" ry="2" />
<text  x="1070.73" y="191.5" ></text>
</g>
<g >
<title>Xapic_isr1 (16 samples, 0.66%)</title><rect x="10.0" y="277" width="7.8" height="15.0" fill="rgb(238,89,1)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (64 samples, 2.63%)</title><rect x="1080.8" y="181" width="31.1" height="15.0" fill="rgb(206,138,41)" rx="2" ry="2" />
<text  x="1083.83" y="191.5" >et..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (3 samples, 0.12%)</title><rect x="649.0" y="181" width="1.5" height="15.0" fill="rgb(207,71,45)" rx="2" ry="2" />
<text  x="652.00" y="191.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.33%)</title><rect x="644.6" y="165" width="3.9" height="15.0" fill="rgb(235,13,38)" rx="2" ry="2" />
<text  x="647.64" y="175.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (17 samples, 0.70%)</title><rect x="17.8" y="277" width="8.2" height="15.0" fill="rgb(239,77,35)" rx="2" ry="2" />
<text  x="20.76" y="287.5" ></text>
</g>
<g >
<title>in6_localip (72 samples, 2.96%)</title><rect x="473.8" y="85" width="35.0" height="15.0" fill="rgb(227,1,30)" rx="2" ry="2" />
<text  x="476.85" y="95.5" >in..</text>
</g>
<g >
<title>_epoch_enter_preempt (3 samples, 0.12%)</title><rect x="42.0" y="229" width="1.5" height="15.0" fill="rgb(250,43,53)" rx="2" ry="2" />
<text  x="45.02" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (37 samples, 1.52%)</title><rect x="996.9" y="149" width="17.9" height="15.0" fill="rgb(236,173,33)" rx="2" ry="2" />
<text  x="999.89" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.04%)</title><rect x="1072.1" y="197" width="0.5" height="15.0" fill="rgb(220,152,19)" rx="2" ry="2" />
<text  x="1075.10" y="207.5" ></text>
</g>
<g >
<title>zone_import (3 samples, 0.12%)</title><rect x="647.1" y="101" width="1.4" height="15.0" fill="rgb(250,150,3)" rx="2" ry="2" />
<text  x="650.06" y="111.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (58 samples, 2.38%)</title><rect x="1039.6" y="181" width="28.1" height="15.0" fill="rgb(249,152,26)" rx="2" ry="2" />
<text  x="1042.59" y="191.5" >i..</text>
</g>
<g >
<title>mb_dtor_mbuf (2 samples, 0.08%)</title><rect x="884.8" y="117" width="1.0" height="15.0" fill="rgb(215,104,22)" rx="2" ry="2" />
<text  x="887.81" y="127.5" ></text>
</g>
<g >
<title>zone_alloc_item (3 samples, 0.12%)</title><rect x="647.1" y="117" width="1.4" height="15.0" fill="rgb(241,199,17)" rx="2" ry="2" />
<text  x="650.06" y="127.5" ></text>
</g>
<g >
<title>rn_match (153 samples, 6.29%)</title><rect x="536.9" y="37" width="74.3" height="15.0" fill="rgb(227,15,20)" rx="2" ry="2" />
<text  x="539.92" y="47.5" >rn_match</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (185 samples, 7.61%)</title><rect x="799.4" y="181" width="89.8" height="15.0" fill="rgb(235,121,39)" rx="2" ry="2" />
<text  x="802.42" y="191.5" >iflib_comp..</text>
</g>
<g >
<title>softclock_thread (2 samples, 0.08%)</title><rect x="1079.9" y="261" width="0.9" height="15.0" fill="rgb(226,183,2)" rx="2" ry="2" />
<text  x="1082.86" y="271.5" ></text>
</g>
<g >
<title>iflib_fl_refill (114 samples, 4.69%)</title><rect x="615.5" y="197" width="55.3" height="15.0" fill="rgb(228,127,36)" rx="2" ry="2" />
<text  x="618.53" y="207.5" >iflib..</text>
</g>
<g >
<title>softclock_call_cc (1 samples, 0.04%)</title><rect x="1080.3" y="245" width="0.5" height="15.0" fill="rgb(253,31,30)" rx="2" ry="2" />
<text  x="1083.35" y="255.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (4 samples, 0.16%)</title><rect x="645.1" y="101" width="2.0" height="15.0" fill="rgb(217,103,24)" rx="2" ry="2" />
<text  x="648.12" y="111.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (2 samples, 0.08%)</title><rect x="1189.0" y="181" width="1.0" height="15.0" fill="rgb(227,23,26)" rx="2" ry="2" />
<text  x="1192.03" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (1,016 samples, 41.78%)</title><rect x="120.6" y="165" width="493.0" height="15.0" fill="rgb(216,183,11)" rx="2" ry="2" />
<text  x="123.62" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>handleevents (9 samples, 0.37%)</title><rect x="1185.6" y="245" width="4.4" height="15.0" fill="rgb(233,184,43)" rx="2" ry="2" />
<text  x="1188.63" y="255.5" ></text>
</g>
<g >
<title>ip6_tryforward (780 samples, 32.07%)</title><rect x="232.7" y="101" width="378.5" height="15.0" fill="rgb(213,57,10)" rx="2" ry="2" />
<text  x="235.71" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>iflib_rxeof (64 samples, 2.63%)</title><rect x="1080.8" y="229" width="31.1" height="15.0" fill="rgb(231,103,35)" rx="2" ry="2" />
<text  x="1083.83" y="239.5" >if..</text>
</g>
<g >
<title>memmove_erms (8 samples, 0.33%)</title><rect x="470.0" y="53" width="3.8" height="15.0" fill="rgb(253,60,44)" rx="2" ry="2" />
<text  x="472.97" y="63.5" ></text>
</g>
<g >
<title>iflib_txq_drain (608 samples, 25.00%)</title><rect x="773.2" y="197" width="295.0" height="15.0" fill="rgb(212,34,9)" rx="2" ry="2" />
<text  x="776.22" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>m_free (54 samples, 2.22%)</title><rect x="863.0" y="149" width="26.2" height="15.0" fill="rgb(219,218,35)" rx="2" ry="2" />
<text  x="865.98" y="159.5" >m..</text>
</g>
<g >
<title>tcp_lro_flush_all (3 samples, 0.12%)</title><rect x="763.0" y="197" width="1.5" height="15.0" fill="rgb(226,63,49)" rx="2" ry="2" />
<text  x="766.03" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (64 samples, 2.63%)</title><rect x="1080.8" y="261" width="31.1" height="15.0" fill="rgb(236,193,52)" rx="2" ry="2" />
<text  x="1083.83" y="271.5" >gt..</text>
</g>
<g >
<title>zone_import (8 samples, 0.33%)</title><rect x="644.6" y="149" width="3.9" height="15.0" fill="rgb(220,35,38)" rx="2" ry="2" />
<text  x="647.64" y="159.5" ></text>
</g>
<g >
<title>ether_input (1,055 samples, 43.38%)</title><rect x="101.7" y="197" width="511.9" height="15.0" fill="rgb(220,167,32)" rx="2" ry="2" />
<text  x="104.70" y="207.5" >ether_input</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.04%)</title><rect x="614.1" y="197" width="0.5" height="15.0" fill="rgb(250,142,32)" rx="2" ry="2" />
<text  x="617.07" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (3 samples, 0.12%)</title><rect x="44.0" y="213" width="1.4" height="15.0" fill="rgb(228,179,40)" rx="2" ry="2" />
<text  x="46.96" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (2 samples, 0.08%)</title><rect x="26.0" y="261" width="1.0" height="15.0" fill="rgb(252,98,42)" rx="2" ry="2" />
<text  x="29.01" y="271.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.04%)</title><rect x="647.5" y="69" width="0.5" height="15.0" fill="rgb(213,227,30)" rx="2" ry="2" />
<text  x="650.55" y="79.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.04%)</title><rect x="54.6" y="181" width="0.5" height="15.0" fill="rgb(248,99,23)" rx="2" ry="2" />
<text  x="57.64" y="191.5" ></text>
</g>
<g >
<title>ip6_findroute (211 samples, 8.68%)</title><rect x="508.8" y="85" width="102.4" height="15.0" fill="rgb(228,144,44)" rx="2" ry="2" />
<text  x="511.78" y="95.5" >ip6_findroute</text>
</g>
<g >
<title>_task_fn_rx (1,482 samples, 60.94%)</title><rect x="45.4" y="229" width="719.1" height="15.0" fill="rgb(216,222,15)" rx="2" ry="2" />
<text  x="48.42" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>grouptaskqueue_enqueue (64 samples, 2.63%)</title><rect x="1080.8" y="53" width="31.1" height="15.0" fill="rgb(211,151,38)" rx="2" ry="2" />
<text  x="1083.83" y="63.5" >gr..</text>
</g>
<g >
<title>memcpy_erms (35 samples, 1.44%)</title><rect x="704.3" y="197" width="17.0" height="15.0" fill="rgb(224,68,44)" rx="2" ry="2" />
<text  x="707.32" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (2 samples, 0.08%)</title><rect x="29.9" y="245" width="1.0" height="15.0" fill="rgb(229,146,48)" rx="2" ry="2" />
<text  x="32.89" y="255.5" ></text>
</g>
<g >
<title>wakeup (8 samples, 0.33%)</title><rect x="1076.0" y="229" width="3.9" height="15.0" fill="rgb(248,101,54)" rx="2" ry="2" />
<text  x="1078.98" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (895 samples, 36.80%)</title><rect x="176.9" y="133" width="434.3" height="15.0" fill="rgb(240,73,51)" rx="2" ry="2" />
<text  x="179.91" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pmc_hook_handler (6 samples, 0.25%)</title><rect x="1187.1" y="213" width="2.9" height="15.0" fill="rgb(228,173,1)" rx="2" ry="2" />
<text  x="1190.09" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.12%)</title><rect x="175.5" y="133" width="1.4" height="15.0" fill="rgb(220,79,47)" rx="2" ry="2" />
<text  x="178.45" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.08%)</title><rect x="1078.9" y="197" width="1.0" height="15.0" fill="rgb(223,160,27)" rx="2" ry="2" />
<text  x="1081.89" y="207.5" ></text>
</g>
<g >
<title>all (2,432 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(211,97,33)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (3 samples, 0.12%)</title><rect x="984.3" y="165" width="1.4" height="15.0" fill="rgb(223,215,38)" rx="2" ry="2" />
<text  x="987.28" y="175.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.08%)</title><rect x="614.6" y="197" width="0.9" height="15.0" fill="rgb(218,215,44)" rx="2" ry="2" />
<text  x="617.56" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (1 samples, 0.04%)</title><rect x="647.5" y="85" width="0.5" height="15.0" fill="rgb(234,189,33)" rx="2" ry="2" />
<text  x="650.55" y="95.5" ></text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.08%)</title><rect x="26.0" y="213" width="1.0" height="15.0" fill="rgb(248,79,43)" rx="2" ry="2" />
<text  x="29.01" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (64 samples, 2.63%)</title><rect x="1080.8" y="197" width="31.1" height="15.0" fill="rgb(224,173,43)" rx="2" ry="2" />
<text  x="1083.83" y="207.5" >ne..</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.04%)</title><rect x="26.5" y="37" width="0.5" height="15.0" fill="rgb(228,112,3)" rx="2" ry="2" />
<text  x="29.50" y="47.5" ></text>
</g>
<g >
<title>ether_demux (2 samples, 0.08%)</title><rect x="26.0" y="197" width="1.0" height="15.0" fill="rgb(226,2,34)" rx="2" ry="2" />
<text  x="29.01" y="207.5" ></text>
</g>
<g >
<title>cpu_tick_calibration (1 samples, 0.04%)</title><rect x="1186.6" y="213" width="0.5" height="15.0" fill="rgb(234,14,28)" rx="2" ry="2" />
<text  x="1189.60" y="223.5" ></text>
</g>
<g >
<title>_rm_rlock (38 samples, 1.56%)</title><rect x="482.1" y="69" width="18.4" height="15.0" fill="rgb(221,139,20)" rx="2" ry="2" />
<text  x="485.10" y="79.5" ></text>
</g>
<g >
<title>intr_event_handle (113 samples, 4.65%)</title><rect x="1124.5" y="261" width="54.8" height="15.0" fill="rgb(228,74,14)" rx="2" ry="2" />
<text  x="1127.50" y="271.5" >intr_..</text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.12%)</title><rect x="1013.4" y="133" width="1.4" height="15.0" fill="rgb(217,86,53)" rx="2" ry="2" />
<text  x="1016.39" y="143.5" ></text>
</g>
<g >
<title>spinlock_exit (36 samples, 1.48%)</title><rect x="1094.4" y="37" width="17.5" height="15.0" fill="rgb(212,84,28)" rx="2" ry="2" />
<text  x="1097.42" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (18 samples, 0.74%)</title><rect x="1164.8" y="229" width="8.7" height="15.0" fill="rgb(251,168,5)" rx="2" ry="2" />
<text  x="1167.77" y="239.5" ></text>
</g>
<g >
<title>pmc_process_samples (5 samples, 0.21%)</title><rect x="1187.6" y="197" width="2.4" height="15.0" fill="rgb(237,182,1)" rx="2" ry="2" />
<text  x="1190.57" y="207.5" ></text>
</g>
<g >
<title>msi_vector (3 samples, 0.12%)</title><rect x="1179.3" y="261" width="1.5" height="15.0" fill="rgb(215,57,54)" rx="2" ry="2" />
<text  x="1182.33" y="271.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (3 samples, 0.12%)</title><rect x="1068.2" y="213" width="1.5" height="15.0" fill="rgb(243,171,1)" rx="2" ry="2" />
<text  x="1071.22" y="223.5" ></text>
</g>
<g >
<title>memcmp (5 samples, 0.21%)</title><rect x="467.5" y="37" width="2.5" height="15.0" fill="rgb(230,206,25)" rx="2" ry="2" />
<text  x="470.54" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.08%)</title><rect x="1157.5" y="181" width="1.0" height="15.0" fill="rgb(253,149,9)" rx="2" ry="2" />
<text  x="1160.49" y="191.5" ></text>
</g>
<g >
<title>intr_lookup_source (6 samples, 0.25%)</title><rect x="1182.2" y="261" width="2.9" height="15.0" fill="rgb(224,226,11)" rx="2" ry="2" />
<text  x="1185.24" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (23 samples, 0.95%)</title><rect x="1150.2" y="229" width="11.2" height="15.0" fill="rgb(233,199,31)" rx="2" ry="2" />
<text  x="1153.21" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_intr (9 samples, 0.37%)</title><rect x="1180.8" y="277" width="4.3" height="15.0" fill="rgb(228,58,3)" rx="2" ry="2" />
<text  x="1183.78" y="287.5" ></text>
</g>
<g >
<title>timercb (9 samples, 0.37%)</title><rect x="1185.6" y="261" width="4.4" height="15.0" fill="rgb(247,100,8)" rx="2" ry="2" />
<text  x="1188.63" y="271.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (88 samples, 3.62%)</title><rect x="1136.6" y="245" width="42.7" height="15.0" fill="rgb(223,64,54)" rx="2" ry="2" />
<text  x="1139.63" y="255.5" >ifli..</text>
</g>
<g >
<title>rxd_frag_to_sd (84 samples, 3.45%)</title><rect x="722.3" y="197" width="40.7" height="15.0" fill="rgb(244,195,6)" rx="2" ry="2" />
<text  x="725.27" y="207.5" >rxd..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (18 samples, 0.74%)</title><rect x="670.8" y="197" width="8.8" height="15.0" fill="rgb(238,206,35)" rx="2" ry="2" />
<text  x="673.84" y="207.5" ></text>
</g>
<g >
<title>logtimeout (1 samples, 0.04%)</title><rect x="1080.3" y="229" width="0.5" height="15.0" fill="rgb(245,176,34)" rx="2" ry="2" />
<text  x="1083.35" y="239.5" ></text>
</g>
<g >
<title>pmap_kextract (7 samples, 0.29%)</title><rect x="885.8" y="117" width="3.4" height="15.0" fill="rgb(207,218,26)" rx="2" ry="2" />
<text  x="888.78" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.04%)</title><rect x="613.1" y="149" width="0.5" height="15.0" fill="rgb(211,225,51)" rx="2" ry="2" />
<text  x="616.10" y="159.5" ></text>
</g>
<g >
<title>uma_zfree_arg (44 samples, 1.81%)</title><rect x="867.8" y="133" width="21.4" height="15.0" fill="rgb(230,39,40)" rx="2" ry="2" />
<text  x="870.83" y="143.5" >u..</text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.08%)</title><rect x="26.0" y="117" width="1.0" height="15.0" fill="rgb(221,59,52)" rx="2" ry="2" />
<text  x="29.01" y="127.5" ></text>
</g>
<g >
<title>wakeup_any (2 samples, 0.08%)</title><rect x="26.0" y="69" width="1.0" height="15.0" fill="rgb(238,24,12)" rx="2" ry="2" />
<text  x="29.01" y="79.5" ></text>
</g>
<g >
<title>_rm_runlock (16 samples, 0.66%)</title><rect x="500.5" y="69" width="7.8" height="15.0" fill="rgb(230,109,11)" rx="2" ry="2" />
<text  x="503.53" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.25%)</title><rect x="1176.4" y="213" width="2.9" height="15.0" fill="rgb(208,87,24)" rx="2" ry="2" />
<text  x="1179.41" y="223.5" ></text>
</g>
<g >
<title>ip6_input (2 samples, 0.08%)</title><rect x="26.0" y="165" width="1.0" height="15.0" fill="rgb(212,19,5)" rx="2" ry="2" />
<text  x="29.01" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (8 samples, 0.33%)</title><rect x="1157.5" y="213" width="3.9" height="15.0" fill="rgb(232,32,7)" rx="2" ry="2" />
<text  x="1160.49" y="223.5" ></text>
</g>
<g >
<title>ether_output (418 samples, 17.19%)</title><rect x="271.0" y="85" width="202.8" height="15.0" fill="rgb(246,8,44)" rx="2" ry="2" />
<text  x="274.04" y="95.5" >ether_output</text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.12%)</title><rect x="798.0" y="181" width="1.4" height="15.0" fill="rgb(238,77,44)" rx="2" ry="2" />
<text  x="800.96" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.08%)</title><rect x="721.3" y="197" width="1.0" height="15.0" fill="rgb(210,119,50)" rx="2" ry="2" />
<text  x="724.30" y="207.5" ></text>
</g>
<g >
<title>ip6_tryforward (2 samples, 0.08%)</title><rect x="26.0" y="149" width="1.0" height="15.0" fill="rgb(244,213,41)" rx="2" ry="2" />
<text  x="29.01" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.08%)</title><rect x="26.0" y="181" width="1.0" height="15.0" fill="rgb(205,178,25)" rx="2" ry="2" />
<text  x="29.01" y="191.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (12 samples, 0.49%)</title><rect x="1173.5" y="229" width="5.8" height="15.0" fill="rgb(215,176,11)" rx="2" ry="2" />
<text  x="1176.50" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.04%)</title><rect x="48.3" y="197" width="0.5" height="15.0" fill="rgb(251,17,2)" rx="2" ry="2" />
<text  x="51.33" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (64 samples, 2.63%)</title><rect x="1080.8" y="149" width="31.1" height="15.0" fill="rgb(212,29,47)" rx="2" ry="2" />
<text  x="1083.83" y="159.5" >ne..</text>
</g>
<g >
<title>if_getsoftc (13 samples, 0.53%)</title><rect x="377.3" y="37" width="6.3" height="15.0" fill="rgb(206,11,42)" rx="2" ry="2" />
<text  x="380.29" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.12%)</title><rect x="1074.5" y="229" width="1.5" height="15.0" fill="rgb(239,173,20)" rx="2" ry="2" />
<text  x="1077.52" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (43 samples, 1.77%)</title><rect x="679.6" y="197" width="20.8" height="15.0" fill="rgb(239,107,6)" rx="2" ry="2" />
<text  x="682.57" y="207.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (2 samples, 0.08%)</title><rect x="50.3" y="197" width="0.9" height="15.0" fill="rgb(239,164,51)" rx="2" ry="2" />
<text  x="53.27" y="207.5" ></text>
</g>
<g >
<title>uma_small_alloc (5 samples, 0.21%)</title><rect x="644.6" y="117" width="2.5" height="15.0" fill="rgb(209,155,11)" rx="2" ry="2" />
<text  x="647.64" y="127.5" ></text>
</g>
<g >
<title>memcpy_erms (23 samples, 0.95%)</title><rect x="424.4" y="69" width="11.1" height="15.0" fill="rgb(209,140,18)" rx="2" ry="2" />
<text  x="427.36" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (2,162 samples, 88.90%)</title><rect x="30.9" y="245" width="1049.0" height="15.0" fill="rgb(207,0,26)" rx="2" ry="2" />
<text  x="33.86" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>_task_fn_tx (635 samples, 26.11%)</title><rect x="764.5" y="229" width="308.1" height="15.0" fill="rgb(234,21,4)" rx="2" ry="2" />
<text  x="767.48" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>intr_execute_handlers (142 samples, 5.84%)</title><rect x="1111.9" y="277" width="68.9" height="15.0" fill="rgb(219,83,33)" rx="2" ry="2" />
<text  x="1114.88" y="287.5" >intr_ex..</text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.04%)</title><rect x="648.0" y="85" width="0.5" height="15.0" fill="rgb(207,148,21)" rx="2" ry="2" />
<text  x="651.03" y="95.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (9 samples, 0.37%)</title><rect x="1063.4" y="165" width="4.3" height="15.0" fill="rgb(208,134,46)" rx="2" ry="2" />
<text  x="1066.36" y="175.5" ></text>
</g>
<g >
<title>fib6_lookup (199 samples, 8.18%)</title><rect x="514.6" y="69" width="96.6" height="15.0" fill="rgb(209,120,24)" rx="2" ry="2" />
<text  x="517.61" y="79.5" >fib6_lookup</text>
</g>
<g >
<title>iflib_if_transmit (64 samples, 2.63%)</title><rect x="1080.8" y="69" width="31.1" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="1083.83" y="79.5" >if..</text>
</g>
<g >
<title>uma_zalloc_arg (42 samples, 1.73%)</title><rect x="650.5" y="181" width="20.3" height="15.0" fill="rgb(214,193,44)" rx="2" ry="2" />
<text  x="653.46" y="191.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.04%)</title><rect x="613.6" y="197" width="0.5" height="15.0" fill="rgb(209,160,17)" rx="2" ry="2" />
<text  x="616.59" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (84 samples, 3.45%)</title><rect x="383.6" y="37" width="40.8" height="15.0" fill="rgb(217,165,44)" rx="2" ry="2" />
<text  x="386.60" y="47.5" >ifm..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (23 samples, 0.95%)</title><rect x="847.0" y="165" width="11.1" height="15.0" fill="rgb(226,202,51)" rx="2" ry="2" />
<text  x="849.97" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (2,164 samples, 88.98%)</title><rect x="29.9" y="261" width="1050.0" height="15.0" fill="rgb(252,164,41)" rx="2" ry="2" />
<text  x="32.89" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.12%)</title><rect x="1156.0" y="213" width="1.5" height="15.0" fill="rgb(228,42,31)" rx="2" ry="2" />
<text  x="1159.04" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.08%)</title><rect x="26.0" y="229" width="1.0" height="15.0" fill="rgb(225,178,33)" rx="2" ry="2" />
<text  x="29.01" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (51 samples, 2.10%)</title><rect x="1014.8" y="165" width="24.8" height="15.0" fill="rgb(223,156,26)" rx="2" ry="2" />
<text  x="1017.84" y="175.5" >i..</text>
</g>
<g >
<title>pagezero_erms (4 samples, 0.16%)</title><rect x="645.1" y="85" width="2.0" height="15.0" fill="rgb(250,86,46)" rx="2" ry="2" />
<text  x="648.12" y="95.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (64 samples, 2.63%)</title><rect x="1080.8" y="277" width="31.1" height="15.0" fill="rgb(245,44,26)" rx="2" ry="2" />
<text  x="1083.83" y="287.5" >gt..</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.04%)</title><rect x="26.0" y="53" width="0.5" height="15.0" fill="rgb(214,143,43)" rx="2" ry="2" />
<text  x="29.01" y="63.5" ></text>
</g>
<g >
<title>ether_demux (942 samples, 38.73%)</title><rect x="154.1" y="149" width="457.1" height="15.0" fill="rgb(244,62,49)" rx="2" ry="2" />
<text  x="157.10" y="159.5" >ether_demux</text>
</g>
<g >
<title>mb_ctor_mbuf (16 samples, 0.66%)</title><rect x="663.1" y="165" width="7.7" height="15.0" fill="rgb(247,201,36)" rx="2" ry="2" />
<text  x="666.08" y="175.5" ></text>
</g>
<g >
<title>m_freem (64 samples, 2.63%)</title><rect x="858.1" y="165" width="31.1" height="15.0" fill="rgb(245,105,28)" rx="2" ry="2" />
<text  x="861.12" y="175.5" >m_..</text>
</g>
<g >
<title>wakeup_any (8 samples, 0.33%)</title><rect x="51.2" y="197" width="3.9" height="15.0" fill="rgb(239,115,19)" rx="2" ry="2" />
<text  x="54.24" y="207.5" ></text>
</g>
<g >
<title>fork_exit (2,166 samples, 89.06%)</title><rect x="29.9" y="277" width="1050.9" height="15.0" fill="rgb(209,27,54)" rx="2" ry="2" />
<text  x="32.89" y="287.5" >fork_exit</text>
</g>
<g >
<title>ip6_input (64 samples, 2.63%)</title><rect x="1080.8" y="133" width="31.1" height="15.0" fill="rgb(248,103,46)" rx="2" ry="2" />
<text  x="1083.83" y="143.5" >ip..</text>
</g>
<g >
<title>keg_alloc_slab (8 samples, 0.33%)</title><rect x="644.6" y="133" width="3.9" height="15.0" fill="rgb(226,137,29)" rx="2" ry="2" />
<text  x="647.64" y="143.5" ></text>
</g>
<g >
<title>ip6_tryforward (64 samples, 2.63%)</title><rect x="1080.8" y="117" width="31.1" height="15.0" fill="rgb(243,3,16)" rx="2" ry="2" />
<text  x="1083.83" y="127.5" >ip..</text>
</g>
<g >
<title>ether_output (64 samples, 2.63%)</title><rect x="1080.8" y="101" width="31.1" height="15.0" fill="rgb(212,30,10)" rx="2" ry="2" />
<text  x="1083.83" y="111.5" >et..</text>
</g>
<g >
<title>spinlock_enter (28 samples, 1.15%)</title><rect x="1080.8" y="37" width="13.6" height="15.0" fill="rgb(206,138,42)" rx="2" ry="2" />
<text  x="1083.83" y="47.5" ></text>
</g>
</g>
</svg>
