<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>pf_test6 (284 samples, 14.07%)</title><rect x="428.1" y="53" width="166.1" height="15.0" fill="rgb(241,95,48)" rx="2" ry="2" />
<text  x="431.09" y="63.5" >pf_test6</text>
</g>
<g >
<title>ifmp_ring_enqueue (36 samples, 1.78%)</title><rect x="252.1" y="37" width="21.0" height="15.0" fill="rgb(216,217,31)" rx="2" ry="2" />
<text  x="255.08" y="47.5" ></text>
</g>
<g >
<title>pf_get_translation (20 samples, 0.99%)</title><rect x="957.3" y="53" width="11.7" height="15.0" fill="rgb(224,67,51)" rx="2" ry="2" />
<text  x="960.27" y="63.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (7 samples, 0.35%)</title><rect x="293.6" y="53" width="4.1" height="15.0" fill="rgb(225,174,35)" rx="2" ry="2" />
<text  x="296.60" y="63.5" ></text>
</g>
<g >
<title>memset_erms (7 samples, 0.35%)</title><rect x="646.2" y="37" width="4.1" height="15.0" fill="rgb(251,80,43)" rx="2" ry="2" />
<text  x="649.19" y="47.5" ></text>
</g>
<g >
<title>pf_get_translation (13 samples, 0.64%)</title><rect x="937.4" y="53" width="7.6" height="15.0" fill="rgb(213,99,47)" rx="2" ry="2" />
<text  x="940.39" y="63.5" ></text>
</g>
<g >
<title>ip6_input (1,039 samples, 51.49%)</title><rect x="127.5" y="117" width="607.6" height="15.0" fill="rgb(242,161,43)" rx="2" ry="2" />
<text  x="130.53" y="127.5" >ip6_input</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (10 samples, 0.50%)</title><rect x="1157.3" y="229" width="5.8" height="15.0" fill="rgb(236,57,13)" rx="2" ry="2" />
<text  x="1160.25" y="239.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (40 samples, 1.98%)</title><rect x="771.3" y="197" width="23.4" height="15.0" fill="rgb(220,44,13)" rx="2" ry="2" />
<text  x="774.33" y="207.5" >r..</text>
</g>
<g >
<title>_epoch_exit_preempt (2 samples, 0.10%)</title><rect x="36.9" y="229" width="1.2" height="15.0" fill="rgb(220,165,0)" rx="2" ry="2" />
<text  x="39.90" y="239.5" ></text>
</g>
<g >
<title>pf_test_state_udp (77 samples, 3.82%)</title><rect x="1016.3" y="53" width="45.1" height="15.0" fill="rgb(224,102,45)" rx="2" ry="2" />
<text  x="1019.33" y="63.5" >pf_t..</text>
</g>
<g >
<title>uma_zalloc_arg (8 samples, 0.40%)</title><rect x="751.4" y="181" width="4.7" height="15.0" fill="rgb(209,92,9)" rx="2" ry="2" />
<text  x="754.45" y="191.5" ></text>
</g>
<g >
<title>pf_dummynet_route (19 samples, 0.94%)</title><rect x="488.9" y="37" width="11.1" height="15.0" fill="rgb(249,67,42)" rx="2" ry="2" />
<text  x="491.90" y="47.5" ></text>
</g>
<g >
<title>ether_output (182 samples, 9.02%)</title><rect x="195.4" y="85" width="106.4" height="15.0" fill="rgb(232,212,4)" rx="2" ry="2" />
<text  x="198.36" y="95.5" >ether_output</text>
</g>
<g >
<title>pf_pull_hdr (4 samples, 0.20%)</title><rect x="509.4" y="37" width="2.3" height="15.0" fill="rgb(210,104,52)" rx="2" ry="2" />
<text  x="512.37" y="47.5" ></text>
</g>
<g >
<title>pf_test6 (98 samples, 4.86%)</title><rect x="1004.1" y="69" width="57.3" height="15.0" fill="rgb(210,185,41)" rx="2" ry="2" />
<text  x="1007.05" y="79.5" >pf_test6</text>
</g>
<g >
<title>_rm_rlock (14 samples, 0.69%)</title><rect x="474.3" y="37" width="8.2" height="15.0" fill="rgb(205,28,53)" rx="2" ry="2" />
<text  x="477.28" y="47.5" ></text>
</g>
<g >
<title>pf_normalize_ip6 (9 samples, 0.45%)</title><rect x="660.2" y="37" width="5.3" height="15.0" fill="rgb(225,51,20)" rx="2" ry="2" />
<text  x="663.23" y="47.5" ></text>
</g>
<g >
<title>ether_input (1,147 samples, 56.84%)</title><rect x="66.1" y="197" width="670.7" height="15.0" fill="rgb(244,82,40)" rx="2" ry="2" />
<text  x="69.13" y="207.5" >ether_input</text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(245,171,43)" rx="2" ry="2" />
<text  x="1192.42" y="191.5" ></text>
</g>
<g >
<title>pf_check6_out (88 samples, 4.36%)</title><rect x="1061.4" y="85" width="51.4" height="15.0" fill="rgb(234,95,50)" rx="2" ry="2" />
<text  x="1064.36" y="95.5" >pf_ch..</text>
</g>
<g >
<title>netisr_dispatch_src (89 samples, 4.41%)</title><rect x="933.3" y="165" width="52.0" height="15.0" fill="rgb(225,97,44)" rx="2" ry="2" />
<text  x="936.30" y="175.5" >netis..</text>
</g>
<g >
<title>soft_get_config (1 samples, 0.05%)</title><rect x="1188.8" y="181" width="0.6" height="15.0" fill="rgb(208,119,10)" rx="2" ry="2" />
<text  x="1191.83" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.15%)</title><rect x="1161.3" y="213" width="1.8" height="15.0" fill="rgb(230,136,36)" rx="2" ry="2" />
<text  x="1164.35" y="223.5" ></text>
</g>
<g >
<title>hardclock (6 samples, 0.30%)</title><rect x="1186.5" y="229" width="3.5" height="15.0" fill="rgb(235,179,35)" rx="2" ry="2" />
<text  x="1189.49" y="239.5" ></text>
</g>
<g >
<title>nd6_resolve (43 samples, 2.13%)</title><rect x="276.6" y="69" width="25.2" height="15.0" fill="rgb(209,229,28)" rx="2" ry="2" />
<text  x="279.64" y="79.5" >n..</text>
</g>
<g >
<title>iflib_fl_refill (32 samples, 1.59%)</title><rect x="737.4" y="197" width="18.7" height="15.0" fill="rgb(214,132,12)" rx="2" ry="2" />
<text  x="740.41" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.05%)</title><rect x="926.9" y="213" width="0.6" height="15.0" fill="rgb(234,221,51)" rx="2" ry="2" />
<text  x="929.87" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (89 samples, 4.41%)</title><rect x="933.3" y="213" width="52.0" height="15.0" fill="rgb(252,179,0)" rx="2" ry="2" />
<text  x="936.30" y="223.5" >netis..</text>
</g>
<g >
<title>pf_test_state_udp (58 samples, 2.87%)</title><rect x="1078.9" y="53" width="33.9" height="15.0" fill="rgb(207,181,42)" rx="2" ry="2" />
<text  x="1081.90" y="63.5" >pf..</text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.05%)</title><rect x="1188.2" y="181" width="0.6" height="15.0" fill="rgb(211,192,20)" rx="2" ry="2" />
<text  x="1191.25" y="191.5" ></text>
</g>
<g >
<title>pfi_kkif_match (1 samples, 0.05%)</title><rect x="1015.7" y="37" width="0.6" height="15.0" fill="rgb(231,125,39)" rx="2" ry="2" />
<text  x="1018.75" y="47.5" ></text>
</g>
<g >
<title>_rm_runlock (2 samples, 0.10%)</title><rect x="645.0" y="37" width="1.2" height="15.0" fill="rgb(246,103,5)" rx="2" ry="2" />
<text  x="648.02" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (22 samples, 1.09%)</title><rect x="891.8" y="165" width="12.8" height="15.0" fill="rgb(221,154,13)" rx="2" ry="2" />
<text  x="894.78" y="175.5" ></text>
</g>
<g >
<title>pf_test_rule (20 samples, 0.99%)</title><rect x="957.3" y="69" width="11.7" height="15.0" fill="rgb(207,77,11)" rx="2" ry="2" />
<text  x="960.27" y="79.5" ></text>
</g>
<g >
<title>pf_find_state (19 samples, 0.94%)</title><rect x="945.0" y="53" width="11.1" height="15.0" fill="rgb(236,175,44)" rx="2" ry="2" />
<text  x="948.00" y="63.5" ></text>
</g>
<g >
<title>m_copydata (7 samples, 0.35%)</title><rect x="933.3" y="53" width="4.1" height="15.0" fill="rgb(211,71,16)" rx="2" ry="2" />
<text  x="936.30" y="63.5" ></text>
</g>
<g >
<title>m_copydata (2 samples, 0.10%)</title><rect x="956.1" y="53" width="1.2" height="15.0" fill="rgb(254,138,41)" rx="2" ry="2" />
<text  x="959.11" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (6 samples, 0.30%)</title><rect x="273.1" y="69" width="3.5" height="15.0" fill="rgb(218,154,47)" rx="2" ry="2" />
<text  x="276.13" y="79.5" ></text>
</g>
<g >
<title>pf_check6_in (294 samples, 14.57%)</title><rect x="422.2" y="69" width="172.0" height="15.0" fill="rgb(236,143,46)" rx="2" ry="2" />
<text  x="425.24" y="79.5" >pf_check6_in</text>
</g>
<g >
<title>pf_test6 (50 samples, 2.48%)</title><rect x="956.1" y="85" width="29.2" height="15.0" fill="rgb(245,134,54)" rx="2" ry="2" />
<text  x="959.11" y="95.5" >pf..</text>
</g>
<g >
<title>ip6_tryforward (218 samples, 10.80%)</title><rect x="985.3" y="117" width="127.5" height="15.0" fill="rgb(205,113,22)" rx="2" ry="2" />
<text  x="988.34" y="127.5" >ip6_tryforward</text>
</g>
<g >
<title>pmc_process_samples (5 samples, 0.25%)</title><rect x="1187.1" y="197" width="2.9" height="15.0" fill="rgb(220,183,7)" rx="2" ry="2" />
<text  x="1190.08" y="207.5" ></text>
</g>
<g >
<title>m_copydata (14 samples, 0.69%)</title><rect x="1004.1" y="37" width="8.1" height="15.0" fill="rgb(218,132,40)" rx="2" ry="2" />
<text  x="1007.05" y="47.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.05%)</title><rect x="36.3" y="229" width="0.6" height="15.0" fill="rgb(236,54,49)" rx="2" ry="2" />
<text  x="39.31" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.10%)</title><rect x="923.9" y="165" width="1.2" height="15.0" fill="rgb(221,175,42)" rx="2" ry="2" />
<text  x="926.94" y="175.5" ></text>
</g>
<g >
<title>pf_test_state_udp (24 samples, 1.19%)</title><rect x="721.0" y="37" width="14.1" height="15.0" fill="rgb(224,184,20)" rx="2" ry="2" />
<text  x="724.04" y="47.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (14 samples, 0.69%)</title><rect x="1172.5" y="229" width="8.1" height="15.0" fill="rgb(223,153,29)" rx="2" ry="2" />
<text  x="1175.46" y="239.5" ></text>
</g>
<g >
<title>pf_test_rule (94 samples, 4.66%)</title><rect x="666.1" y="37" width="54.9" height="15.0" fill="rgb(245,173,36)" rx="2" ry="2" />
<text  x="669.08" y="47.5" >pf_te..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (6 samples, 0.30%)</title><rect x="747.9" y="181" width="3.5" height="15.0" fill="rgb(226,37,54)" rx="2" ry="2" />
<text  x="750.94" y="191.5" ></text>
</g>
<g >
<title>memcmp (11 samples, 0.55%)</title><rect x="400.0" y="85" width="6.5" height="15.0" fill="rgb(220,160,30)" rx="2" ry="2" />
<text  x="403.02" y="95.5" ></text>
</g>
<g >
<title>pf_test6 (231 samples, 11.45%)</title><rect x="600.0" y="53" width="135.1" height="15.0" fill="rgb(221,131,42)" rx="2" ry="2" />
<text  x="603.00" y="63.5" >pf_test6</text>
</g>
<g >
<title>netisr_dispatch_src (218 samples, 10.80%)</title><rect x="985.3" y="149" width="127.5" height="15.0" fill="rgb(238,134,39)" rx="2" ry="2" />
<text  x="988.34" y="159.5" >netisr_dispatch_..</text>
</g>
<g >
<title>uma_zfree_arg (25 samples, 1.24%)</title><rect x="838.0" y="133" width="14.6" height="15.0" fill="rgb(207,84,31)" rx="2" ry="2" />
<text  x="840.99" y="143.5" ></text>
</g>
<g >
<title>lapic_eoi (2 samples, 0.10%)</title><rect x="1180.6" y="245" width="1.2" height="15.0" fill="rgb(243,21,3)" rx="2" ry="2" />
<text  x="1183.64" y="255.5" ></text>
</g>
<g >
<title>lapic_handle_timer (8 samples, 0.40%)</title><rect x="1185.3" y="277" width="4.7" height="15.0" fill="rgb(248,204,39)" rx="2" ry="2" />
<text  x="1188.32" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.30%)</title><rect x="1148.5" y="213" width="3.5" height="15.0" fill="rgb(240,137,36)" rx="2" ry="2" />
<text  x="1151.48" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (1 samples, 0.05%)</title><rect x="831.6" y="165" width="0.5" height="15.0" fill="rgb(250,145,36)" rx="2" ry="2" />
<text  x="834.56" y="175.5" ></text>
</g>
<g >
<title>memcmp (3 samples, 0.15%)</title><rect x="735.1" y="149" width="1.7" height="15.0" fill="rgb(252,176,22)" rx="2" ry="2" />
<text  x="738.07" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,049 samples, 51.98%)</title><rect x="121.7" y="133" width="613.4" height="15.0" fill="rgb(227,218,1)" rx="2" ry="2" />
<text  x="124.68" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.05%)</title><rect x="1152.6" y="197" width="0.6" height="15.0" fill="rgb(230,59,29)" rx="2" ry="2" />
<text  x="1155.58" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (2 samples, 0.10%)</title><rect x="927.5" y="213" width="1.1" height="15.0" fill="rgb(211,129,31)" rx="2" ry="2" />
<text  x="930.45" y="223.5" ></text>
</g>
<g >
<title>ether_demux (218 samples, 10.80%)</title><rect x="985.3" y="165" width="127.5" height="15.0" fill="rgb(246,40,10)" rx="2" ry="2" />
<text  x="988.34" y="175.5" >ether_demux</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (12 samples, 0.59%)</title><rect x="897.6" y="149" width="7.0" height="15.0" fill="rgb(226,225,44)" rx="2" ry="2" />
<text  x="900.63" y="159.5" ></text>
</g>
<g >
<title>pf_test6 (88 samples, 4.36%)</title><rect x="1061.4" y="69" width="51.4" height="15.0" fill="rgb(215,75,46)" rx="2" ry="2" />
<text  x="1064.36" y="79.5" >pf_te..</text>
</g>
<g >
<title>m_free (27 samples, 1.34%)</title><rect x="836.8" y="149" width="15.8" height="15.0" fill="rgb(245,181,52)" rx="2" ry="2" />
<text  x="839.82" y="159.5" ></text>
</g>
<g >
<title>pf_check6_in (39 samples, 1.93%)</title><rect x="933.3" y="101" width="22.8" height="15.0" fill="rgb(252,111,45)" rx="2" ry="2" />
<text  x="936.30" y="111.5" >p..</text>
</g>
<g >
<title>ether_nh_input (1,117 samples, 55.35%)</title><rect x="83.7" y="165" width="653.1" height="15.0" fill="rgb(241,37,41)" rx="2" ry="2" />
<text  x="86.68" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>pf_get_translation (21 samples, 1.04%)</title><rect x="1065.5" y="37" width="12.2" height="15.0" fill="rgb(223,133,8)" rx="2" ry="2" />
<text  x="1068.45" y="47.5" ></text>
</g>
<g >
<title>pf_test_rule (115 samples, 5.70%)</title><rect x="511.7" y="37" width="67.2" height="15.0" fill="rgb(244,172,21)" rx="2" ry="2" />
<text  x="514.70" y="47.5" >pf_test..</text>
</g>
<g >
<title>pf_test_rule (7 samples, 0.35%)</title><rect x="1012.2" y="53" width="4.1" height="15.0" fill="rgb(217,195,33)" rx="2" ry="2" />
<text  x="1015.24" y="63.5" ></text>
</g>
<g >
<title>pf_find_state (77 samples, 3.82%)</title><rect x="1016.3" y="37" width="45.1" height="15.0" fill="rgb(229,68,2)" rx="2" ry="2" />
<text  x="1019.33" y="47.5" >pf_f..</text>
</g>
<g >
<title>intr_lookup_source (3 samples, 0.15%)</title><rect x="1183.6" y="261" width="1.7" height="15.0" fill="rgb(216,37,39)" rx="2" ry="2" />
<text  x="1186.57" y="271.5" ></text>
</g>
<g >
<title>memcmp (1 samples, 0.05%)</title><rect x="321.1" y="69" width="0.6" height="15.0" fill="rgb(240,105,53)" rx="2" ry="2" />
<text  x="324.08" y="79.5" ></text>
</g>
<g >
<title>m_pkthdr_init (2 samples, 0.10%)</title><rect x="764.9" y="197" width="1.2" height="15.0" fill="rgb(229,151,35)" rx="2" ry="2" />
<text  x="767.90" y="207.5" ></text>
</g>
<g >
<title>ip6_input (218 samples, 10.80%)</title><rect x="985.3" y="133" width="127.5" height="15.0" fill="rgb(249,172,36)" rx="2" ry="2" />
<text  x="988.34" y="143.5" >ip6_input</text>
</g>
<g >
<title>memcpy_erms (9 samples, 0.45%)</title><rect x="766.1" y="197" width="5.2" height="15.0" fill="rgb(241,38,40)" rx="2" ry="2" />
<text  x="769.07" y="207.5" ></text>
</g>
<g >
<title>lradix6_lookup (98 samples, 4.86%)</title><rect x="342.7" y="53" width="57.3" height="15.0" fill="rgb(205,112,40)" rx="2" ry="2" />
<text  x="345.72" y="63.5" >lradix..</text>
</g>
<g >
<title>pf_get_translation (6 samples, 0.30%)</title><rect x="1012.2" y="37" width="3.5" height="15.0" fill="rgb(239,199,39)" rx="2" ry="2" />
<text  x="1015.24" y="47.5" ></text>
</g>
<g >
<title>pfi_kkif_match (2 samples, 0.10%)</title><rect x="1077.7" y="37" width="1.2" height="15.0" fill="rgb(228,118,47)" rx="2" ry="2" />
<text  x="1080.73" y="47.5" ></text>
</g>
<g >
<title>timercb (8 samples, 0.40%)</title><rect x="1185.3" y="261" width="4.7" height="15.0" fill="rgb(247,104,20)" rx="2" ry="2" />
<text  x="1188.32" y="271.5" ></text>
</g>
<g >
<title>pmap_kextract (4 samples, 0.20%)</title><rect x="850.3" y="117" width="2.3" height="15.0" fill="rgb(231,144,27)" rx="2" ry="2" />
<text  x="853.27" y="127.5" ></text>
</g>
<g >
<title>_rm_runlock (4 samples, 0.20%)</title><rect x="318.7" y="69" width="2.4" height="15.0" fill="rgb(234,134,48)" rx="2" ry="2" />
<text  x="321.74" y="79.5" ></text>
</g>
<g >
<title>pf_test_rule (23 samples, 1.14%)</title><rect x="1065.5" y="53" width="13.4" height="15.0" fill="rgb(233,62,23)" rx="2" ry="2" />
<text  x="1068.45" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.10%)</title><rect x="1156.1" y="181" width="1.2" height="15.0" fill="rgb(241,162,50)" rx="2" ry="2" />
<text  x="1159.09" y="191.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.05%)</title><rect x="932.7" y="213" width="0.6" height="15.0" fill="rgb(225,74,30)" rx="2" ry="2" />
<text  x="935.72" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (89 samples, 4.41%)</title><rect x="221.1" y="69" width="52.0" height="15.0" fill="rgb(245,164,49)" rx="2" ry="2" />
<text  x="224.09" y="79.5" >ether..</text>
</g>
<g >
<title>pf_test_state_udp (26 samples, 1.29%)</title><rect x="578.9" y="37" width="15.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="581.95" y="47.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (1 samples, 0.05%)</title><rect x="36.3" y="213" width="0.6" height="15.0" fill="rgb(242,140,49)" rx="2" ry="2" />
<text  x="39.31" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (218 samples, 10.80%)</title><rect x="985.3" y="277" width="127.5" height="15.0" fill="rgb(236,153,8)" rx="2" ry="2" />
<text  x="988.34" y="287.5" >gtaskqueue_threa..</text>
</g>
<g >
<title>ether_demux (1,076 samples, 53.32%)</title><rect x="105.9" y="149" width="629.2" height="15.0" fill="rgb(251,107,31)" rx="2" ry="2" />
<text  x="108.90" y="159.5" >ether_demux</text>
</g>
<g >
<title>pf_match_translation (13 samples, 0.64%)</title><rect x="937.4" y="37" width="7.6" height="15.0" fill="rgb(219,136,0)" rx="2" ry="2" />
<text  x="940.39" y="47.5" ></text>
</g>
<g >
<title>netmap_rx_irq (1 samples, 0.05%)</title><rect x="795.3" y="213" width="0.6" height="15.0" fill="rgb(230,157,41)" rx="2" ry="2" />
<text  x="798.30" y="223.5" ></text>
</g>
<g >
<title>m_freem (35 samples, 1.73%)</title><rect x="832.1" y="165" width="20.5" height="15.0" fill="rgb(205,219,30)" rx="2" ry="2" />
<text  x="835.14" y="175.5" ></text>
</g>
<g >
<title>_task_fn_rx (89 samples, 4.41%)</title><rect x="933.3" y="261" width="52.0" height="15.0" fill="rgb(244,189,35)" rx="2" ry="2" />
<text  x="936.30" y="271.5" >_task..</text>
</g>
<g >
<title>iflib_rxeof (89 samples, 4.41%)</title><rect x="933.3" y="245" width="52.0" height="15.0" fill="rgb(239,108,26)" rx="2" ry="2" />
<text  x="936.30" y="255.5" >iflib..</text>
</g>
<g >
<title>intr_execute_handlers (118 samples, 5.85%)</title><rect x="1112.8" y="277" width="69.0" height="15.0" fill="rgb(210,156,48)" rx="2" ry="2" />
<text  x="1115.81" y="287.5" >intr_ex..</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="1152.6" y="181" width="0.6" height="15.0" fill="rgb(231,154,46)" rx="2" ry="2" />
<text  x="1155.58" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (218 samples, 10.80%)</title><rect x="985.3" y="197" width="127.5" height="15.0" fill="rgb(206,204,20)" rx="2" ry="2" />
<text  x="988.34" y="207.5" >netisr_dispatch_..</text>
</g>
<g >
<title>netisr_dispatch_src (1,138 samples, 56.39%)</title><rect x="71.4" y="181" width="665.4" height="15.0" fill="rgb(248,63,52)" rx="2" ry="2" />
<text  x="74.40" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.05%)</title><rect x="932.1" y="213" width="0.6" height="15.0" fill="rgb(228,53,46)" rx="2" ry="2" />
<text  x="935.13" y="223.5" ></text>
</g>
<g >
<title>ip6_input (89 samples, 4.41%)</title><rect x="933.3" y="149" width="52.0" height="15.0" fill="rgb(207,51,34)" rx="2" ry="2" />
<text  x="936.30" y="159.5" >ip6_i..</text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.10%)</title><rect x="1179.5" y="213" width="1.1" height="15.0" fill="rgb(223,128,50)" rx="2" ry="2" />
<text  x="1182.47" y="223.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (3 samples, 0.15%)</title><rect x="848.5" y="117" width="1.8" height="15.0" fill="rgb(207,55,21)" rx="2" ry="2" />
<text  x="851.51" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (9 samples, 0.45%)</title><rect x="1167.2" y="229" width="5.3" height="15.0" fill="rgb(223,70,29)" rx="2" ry="2" />
<text  x="1170.20" y="239.5" ></text>
</g>
<g >
<title>pf_dummynet_route (17 samples, 0.84%)</title><rect x="650.3" y="37" width="9.9" height="15.0" fill="rgb(243,89,35)" rx="2" ry="2" />
<text  x="653.29" y="47.5" ></text>
</g>
<g >
<title>_rm_rlock (18 samples, 0.89%)</title><rect x="308.2" y="69" width="10.5" height="15.0" fill="rgb(222,212,40)" rx="2" ry="2" />
<text  x="311.22" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3 samples, 0.15%)</title><rect x="39.2" y="213" width="1.8" height="15.0" fill="rgb(240,62,35)" rx="2" ry="2" />
<text  x="42.24" y="223.5" ></text>
</g>
<g >
<title>pf_pull_hdr (7 samples, 0.35%)</title><rect x="1061.4" y="53" width="4.1" height="15.0" fill="rgb(207,41,13)" rx="2" ry="2" />
<text  x="1064.36" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (89 samples, 4.41%)</title><rect x="933.3" y="197" width="52.0" height="15.0" fill="rgb(228,167,43)" rx="2" ry="2" />
<text  x="936.30" y="207.5" >ether..</text>
</g>
<g >
<title>gtaskqueue_run_locked (218 samples, 10.80%)</title><rect x="985.3" y="261" width="127.5" height="15.0" fill="rgb(239,52,21)" rx="2" ry="2" />
<text  x="988.34" y="271.5" >gtaskqueue_run_l..</text>
</g>
<g >
<title>pfil_run_hooks (186 samples, 9.22%)</title><rect x="1004.1" y="101" width="108.7" height="15.0" fill="rgb(214,94,49)" rx="2" ry="2" />
<text  x="1007.05" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>iflib_rxeof (1,290 samples, 63.92%)</title><rect x="41.0" y="213" width="754.3" height="15.0" fill="rgb(251,210,12)" rx="2" ry="2" />
<text  x="43.99" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>pf_check6_in (98 samples, 4.86%)</title><rect x="1004.1" y="85" width="57.3" height="15.0" fill="rgb(211,150,54)" rx="2" ry="2" />
<text  x="1007.05" y="95.5" >pf_che..</text>
</g>
<g >
<title>wakeup_any (9 samples, 0.45%)</title><rect x="1152.0" y="213" width="5.3" height="15.0" fill="rgb(247,161,17)" rx="2" ry="2" />
<text  x="1154.99" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (23 samples, 1.14%)</title><rect x="1143.8" y="229" width="13.5" height="15.0" fill="rgb(229,64,1)" rx="2" ry="2" />
<text  x="1146.81" y="239.5" ></text>
</g>
<g >
<title>pf_pull_hdr (1 samples, 0.05%)</title><rect x="665.5" y="37" width="0.6" height="15.0" fill="rgb(249,0,36)" rx="2" ry="2" />
<text  x="668.49" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.15%)</title><rect x="928.6" y="229" width="1.8" height="15.0" fill="rgb(234,34,27)" rx="2" ry="2" />
<text  x="931.62" y="239.5" ></text>
</g>
<g >
<title>pmap_kextract (2 samples, 0.10%)</title><rect x="903.5" y="133" width="1.1" height="15.0" fill="rgb(251,14,25)" rx="2" ry="2" />
<text  x="906.48" y="143.5" ></text>
</g>
<g >
<title>fork_exit (1,540 samples, 76.31%)</title><rect x="32.8" y="277" width="900.5" height="15.0" fill="rgb(224,46,28)" rx="2" ry="2" />
<text  x="35.80" y="287.5" >fork_exit</text>
</g>
<g >
<title>iflib_fast_intr_rxtx (85 samples, 4.21%)</title><rect x="1130.9" y="245" width="49.7" height="15.0" fill="rgb(248,67,25)" rx="2" ry="2" />
<text  x="1133.94" y="255.5" >iflib..</text>
</g>
<g >
<title>ether_demux (89 samples, 4.41%)</title><rect x="933.3" y="181" width="52.0" height="15.0" fill="rgb(218,136,15)" rx="2" ry="2" />
<text  x="936.30" y="191.5" >ether..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (11 samples, 0.55%)</title><rect x="245.6" y="37" width="6.5" height="15.0" fill="rgb(248,208,29)" rx="2" ry="2" />
<text  x="248.65" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.40%)</title><rect x="1143.8" y="213" width="4.7" height="15.0" fill="rgb(242,64,10)" rx="2" ry="2" />
<text  x="1146.81" y="223.5" ></text>
</g>
<g >
<title>all (2,018 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(214,134,21)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>pf_match_translation (20 samples, 0.99%)</title><rect x="957.3" y="37" width="11.7" height="15.0" fill="rgb(238,213,10)" rx="2" ry="2" />
<text  x="960.27" y="47.5" ></text>
</g>
<g >
<title>handleevents (7 samples, 0.35%)</title><rect x="1185.9" y="245" width="4.1" height="15.0" fill="rgb(251,224,17)" rx="2" ry="2" />
<text  x="1188.91" y="255.5" ></text>
</g>
<g >
<title>in6_localip (34 samples, 1.68%)</title><rect x="301.8" y="85" width="19.9" height="15.0" fill="rgb(206,52,12)" rx="2" ry="2" />
<text  x="304.78" y="95.5" ></text>
</g>
<g >
<title>ip6_tryforward (988 samples, 48.96%)</title><rect x="157.4" y="101" width="577.7" height="15.0" fill="rgb(242,71,31)" rx="2" ry="2" />
<text  x="160.35" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>memmove_erms (7 samples, 0.35%)</title><rect x="297.7" y="53" width="4.1" height="15.0" fill="rgb(237,190,27)" rx="2" ry="2" />
<text  x="300.69" y="63.5" ></text>
</g>
<g >
<title>pf_normalize_ip6 (16 samples, 0.79%)</title><rect x="500.0" y="37" width="9.4" height="15.0" fill="rgb(229,163,39)" rx="2" ry="2" />
<text  x="503.01" y="47.5" ></text>
</g>
<g >
<title>_task_fn_tx (227 samples, 11.25%)</title><rect x="795.9" y="229" width="132.7" height="15.0" fill="rgb(207,144,29)" rx="2" ry="2" />
<text  x="798.89" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>_task_fn_rx (218 samples, 10.80%)</title><rect x="985.3" y="245" width="127.5" height="15.0" fill="rgb(225,207,50)" rx="2" ry="2" />
<text  x="988.34" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>murmur3_32_hash32 (28 samples, 1.39%)</title><rect x="969.0" y="37" width="16.3" height="15.0" fill="rgb(206,80,25)" rx="2" ry="2" />
<text  x="971.97" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (562 samples, 27.85%)</title><rect x="406.5" y="85" width="328.6" height="15.0" fill="rgb(210,139,24)" rx="2" ry="2" />
<text  x="409.45" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>memmove_erms (7 samples, 0.35%)</title><rect x="933.3" y="37" width="4.1" height="15.0" fill="rgb(223,196,45)" rx="2" ry="2" />
<text  x="936.30" y="47.5" ></text>
</g>
<g >
<title>pf_check6_out (50 samples, 2.48%)</title><rect x="956.1" y="101" width="29.2" height="15.0" fill="rgb(235,50,27)" rx="2" ry="2" />
<text  x="959.11" y="111.5" >pf..</text>
</g>
<g >
<title>iflib_rxeof (218 samples, 10.80%)</title><rect x="985.3" y="229" width="127.5" height="15.0" fill="rgb(245,46,46)" rx="2" ry="2" />
<text  x="988.34" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>sleepq_signal (7 samples, 0.35%)</title><rect x="1153.2" y="197" width="4.1" height="15.0" fill="rgb(220,106,44)" rx="2" ry="2" />
<text  x="1156.16" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="932.1" y="197" width="0.6" height="15.0" fill="rgb(226,203,38)" rx="2" ry="2" />
<text  x="935.13" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (11 samples, 0.55%)</title><rect x="758.5" y="197" width="6.4" height="15.0" fill="rgb(205,81,53)" rx="2" ry="2" />
<text  x="761.46" y="207.5" ></text>
</g>
<g >
<title>sleepq_broadcast (2 samples, 0.10%)</title><rect x="931.0" y="213" width="1.1" height="15.0" fill="rgb(252,192,21)" rx="2" ry="2" />
<text  x="933.96" y="223.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (72 samples, 3.57%)</title><rect x="810.5" y="181" width="42.1" height="15.0" fill="rgb(210,213,18)" rx="2" ry="2" />
<text  x="813.51" y="191.5" >ifl..</text>
</g>
<g >
<title>ether_output_frame (32 samples, 1.59%)</title><rect x="985.3" y="85" width="18.8" height="15.0" fill="rgb(207,194,23)" rx="2" ry="2" />
<text  x="988.34" y="95.5" ></text>
</g>
<g >
<title>lapic_handle_intr (6 samples, 0.30%)</title><rect x="1181.8" y="277" width="3.5" height="15.0" fill="rgb(239,31,21)" rx="2" ry="2" />
<text  x="1184.81" y="287.5" ></text>
</g>
<g >
<title>iflib_encap (106 samples, 5.25%)</title><rect x="852.6" y="181" width="62.0" height="15.0" fill="rgb(253,179,17)" rx="2" ry="2" />
<text  x="855.61" y="191.5" >iflib_..</text>
</g>
<g >
<title>spinlock_exit (18 samples, 0.89%)</title><rect x="993.5" y="37" width="10.6" height="15.0" fill="rgb(244,76,20)" rx="2" ry="2" />
<text  x="996.53" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.15%)</title><rect x="925.1" y="165" width="1.8" height="15.0" fill="rgb(251,35,31)" rx="2" ry="2" />
<text  x="928.11" y="175.5" ></text>
</g>
<g >
<title>memset_erms (10 samples, 0.50%)</title><rect x="483.1" y="37" width="5.8" height="15.0" fill="rgb(230,229,51)" rx="2" ry="2" />
<text  x="486.05" y="47.5" ></text>
</g>
<g >
<title>pf_check6_out (241 samples, 11.94%)</title><rect x="594.2" y="69" width="140.9" height="15.0" fill="rgb(211,201,11)" rx="2" ry="2" />
<text  x="597.15" y="79.5" >pf_check6_out</text>
</g>
<g >
<title>ip6_findroute (134 samples, 6.64%)</title><rect x="321.7" y="85" width="78.3" height="15.0" fill="rgb(249,66,14)" rx="2" ry="2" />
<text  x="324.67" y="95.5" >ip6_findr..</text>
</g>
<g >
<title>pf_test_state_udp (19 samples, 0.94%)</title><rect x="945.0" y="69" width="11.1" height="15.0" fill="rgb(248,116,40)" rx="2" ry="2" />
<text  x="948.00" y="79.5" ></text>
</g>
<g >
<title>_rm_runlock (1 samples, 0.05%)</title><rect x="482.5" y="37" width="0.6" height="15.0" fill="rgb(250,57,12)" rx="2" ry="2" />
<text  x="485.47" y="47.5" ></text>
</g>
<g >
<title>ether_input (89 samples, 4.41%)</title><rect x="933.3" y="229" width="52.0" height="15.0" fill="rgb(254,74,12)" rx="2" ry="2" />
<text  x="936.30" y="239.5" >ether..</text>
</g>
<g >
<title>intr_event_handle (103 samples, 5.10%)</title><rect x="1121.6" y="261" width="60.2" height="15.0" fill="rgb(232,167,26)" rx="2" ry="2" />
<text  x="1124.59" y="271.5" >intr_e..</text>
</g>
<g >
<title>pf_find_state (58 samples, 2.87%)</title><rect x="1078.9" y="37" width="33.9" height="15.0" fill="rgb(208,47,16)" rx="2" ry="2" />
<text  x="1081.90" y="47.5" >pf..</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.05%)</title><rect x="736.8" y="197" width="0.6" height="15.0" fill="rgb(225,32,42)" rx="2" ry="2" />
<text  x="739.83" y="207.5" ></text>
</g>
<g >
<title>wakeup (5 samples, 0.25%)</title><rect x="930.4" y="229" width="2.9" height="15.0" fill="rgb(253,222,21)" rx="2" ry="2" />
<text  x="933.38" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (89 samples, 4.41%)</title><rect x="933.3" y="277" width="52.0" height="15.0" fill="rgb(247,122,46)" rx="2" ry="2" />
<text  x="936.30" y="287.5" >gtask..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (17 samples, 0.84%)</title><rect x="904.6" y="165" width="10.0" height="15.0" fill="rgb(229,121,41)" rx="2" ry="2" />
<text  x="907.65" y="175.5" ></text>
</g>
<g >
<title>binuptime (1 samples, 0.05%)</title><rect x="1185.3" y="245" width="0.6" height="15.0" fill="rgb(224,6,16)" rx="2" ry="2" />
<text  x="1188.32" y="255.5" ></text>
</g>
<g >
<title>ip6_tryforward (89 samples, 4.41%)</title><rect x="933.3" y="133" width="52.0" height="15.0" fill="rgb(241,214,49)" rx="2" ry="2" />
<text  x="936.30" y="143.5" >ip6_t..</text>
</g>
<g >
<title>tcp_lro_flush_all (1 samples, 0.05%)</title><rect x="794.7" y="197" width="0.6" height="15.0" fill="rgb(228,86,44)" rx="2" ry="2" />
<text  x="797.72" y="207.5" ></text>
</g>
<g >
<title>_rm_rlock (11 samples, 0.55%)</title><rect x="638.6" y="37" width="6.4" height="15.0" fill="rgb(218,191,32)" rx="2" ry="2" />
<text  x="641.59" y="47.5" ></text>
</g>
<g >
<title>pf_pull_hdr (7 samples, 0.35%)</title><rect x="933.3" y="69" width="4.1" height="15.0" fill="rgb(212,152,43)" rx="2" ry="2" />
<text  x="936.30" y="79.5" ></text>
</g>
<g >
<title>ether_input (218 samples, 10.80%)</title><rect x="985.3" y="213" width="127.5" height="15.0" fill="rgb(227,153,39)" rx="2" ry="2" />
<text  x="988.34" y="223.5" >ether_input</text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.05%)</title><rect x="121.1" y="133" width="0.6" height="15.0" fill="rgb(246,83,19)" rx="2" ry="2" />
<text  x="124.10" y="143.5" ></text>
</g>
<g >
<title>pf_pull_hdr (2 samples, 0.10%)</title><rect x="956.1" y="69" width="1.2" height="15.0" fill="rgb(205,128,27)" rx="2" ry="2" />
<text  x="959.11" y="79.5" ></text>
</g>
<g >
<title>iflib_if_transmit (76 samples, 3.77%)</title><rect x="228.7" y="53" width="44.4" height="15.0" fill="rgb(215,17,25)" rx="2" ry="2" />
<text  x="231.69" y="63.5" >ifli..</text>
</g>
<g >
<title>pf_test_rule (13 samples, 0.64%)</title><rect x="937.4" y="69" width="7.6" height="15.0" fill="rgb(249,30,2)" rx="2" ry="2" />
<text  x="940.39" y="79.5" ></text>
</g>
<g >
<title>memmove_erms (2 samples, 0.10%)</title><rect x="956.1" y="37" width="1.2" height="15.0" fill="rgb(207,78,16)" rx="2" ry="2" />
<text  x="959.11" y="47.5" ></text>
</g>
<g >
<title>drain_ring_lockless (220 samples, 10.90%)</title><rect x="798.2" y="213" width="128.7" height="15.0" fill="rgb(227,41,14)" rx="2" ry="2" />
<text  x="801.23" y="223.5" >drain_ring_lockl..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (4 samples, 0.20%)</title><rect x="756.1" y="197" width="2.4" height="15.0" fill="rgb(224,227,25)" rx="2" ry="2" />
<text  x="759.12" y="207.5" ></text>
</g>
<g >
<title>m_adj (6 samples, 0.30%)</title><rect x="117.6" y="133" width="3.5" height="15.0" fill="rgb(226,27,51)" rx="2" ry="2" />
<text  x="120.59" y="143.5" ></text>
</g>
<g >
<title>pmc_hook_handler (5 samples, 0.25%)</title><rect x="1187.1" y="213" width="2.9" height="15.0" fill="rgb(252,169,21)" rx="2" ry="2" />
<text  x="1190.08" y="223.5" ></text>
</g>
<g >
<title>iflib_get_ifp (2 samples, 0.10%)</title><rect x="1178.3" y="213" width="1.2" height="15.0" fill="rgb(224,75,9)" rx="2" ry="2" />
<text  x="1181.31" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.10%)</title><rect x="39.8" y="197" width="1.2" height="15.0" fill="rgb(234,78,38)" rx="2" ry="2" />
<text  x="42.82" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (14 samples, 0.69%)</title><rect x="985.3" y="37" width="8.2" height="15.0" fill="rgb(238,72,24)" rx="2" ry="2" />
<text  x="988.34" y="47.5" ></text>
</g>
<g >
<title>rn_match (93 samples, 4.61%)</title><rect x="345.6" y="37" width="54.4" height="15.0" fill="rgb(246,49,54)" rx="2" ry="2" />
<text  x="348.64" y="47.5" >rn_ma..</text>
</g>
<g >
<title>pfil_run_hooks (89 samples, 4.41%)</title><rect x="933.3" y="117" width="52.0" height="15.0" fill="rgb(242,165,49)" rx="2" ry="2" />
<text  x="936.30" y="127.5" >pfil_..</text>
</g>
<g >
<title>iflib_txq_drain (218 samples, 10.80%)</title><rect x="799.4" y="197" width="127.5" height="15.0" fill="rgb(237,32,4)" rx="2" ry="2" />
<text  x="802.40" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>Xapic_isr1_pti (17 samples, 0.84%)</title><rect x="20.5" y="277" width="10.0" height="15.0" fill="rgb(249,58,48)" rx="2" ry="2" />
<text  x="23.53" y="287.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (32 samples, 1.59%)</title><rect x="985.3" y="53" width="18.8" height="15.0" fill="rgb(243,157,33)" rx="2" ry="2" />
<text  x="988.34" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (32 samples, 1.59%)</title><rect x="985.3" y="69" width="18.8" height="15.0" fill="rgb(235,117,1)" rx="2" ry="2" />
<text  x="988.34" y="79.5" ></text>
</g>
<g >
<title>fib6_lookup (118 samples, 5.85%)</title><rect x="331.0" y="69" width="69.0" height="15.0" fill="rgb(217,79,13)" rx="2" ry="2" />
<text  x="334.02" y="79.5" >fib6_lo..</text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.05%)</title><rect x="30.5" y="277" width="0.6" height="15.0" fill="rgb(254,74,3)" rx="2" ry="2" />
<text  x="33.47" y="287.5" ></text>
</g>
<g >
<title>pf_test6 (39 samples, 1.93%)</title><rect x="933.3" y="85" width="22.8" height="15.0" fill="rgb(224,58,18)" rx="2" ry="2" />
<text  x="936.30" y="95.5" >p..</text>
</g>
<g >
<title>m_copydata (7 samples, 0.35%)</title><rect x="1061.4" y="37" width="4.1" height="15.0" fill="rgb(222,61,38)" rx="2" ry="2" />
<text  x="1064.36" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (18 samples, 0.89%)</title><rect x="10.0" y="277" width="10.5" height="15.0" fill="rgb(221,43,2)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (1,540 samples, 76.31%)</title><rect x="32.8" y="261" width="900.5" height="15.0" fill="rgb(234,61,16)" rx="2" ry="2" />
<text  x="35.80" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (1 samples, 0.05%)</title><rect x="891.2" y="165" width="0.6" height="15.0" fill="rgb(254,83,32)" rx="2" ry="2" />
<text  x="894.20" y="175.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,296 samples, 64.22%)</title><rect x="38.1" y="229" width="757.8" height="15.0" fill="rgb(207,19,2)" rx="2" ry="2" />
<text  x="41.07" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>pf_find_state (28 samples, 1.39%)</title><rect x="969.0" y="53" width="16.3" height="15.0" fill="rgb(205,115,31)" rx="2" ry="2" />
<text  x="971.97" y="63.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (19 samples, 0.94%)</title><rect x="945.0" y="37" width="11.1" height="15.0" fill="rgb(215,159,52)" rx="2" ry="2" />
<text  x="948.00" y="47.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (21 samples, 1.04%)</title><rect x="914.6" y="181" width="12.3" height="15.0" fill="rgb(242,217,15)" rx="2" ry="2" />
<text  x="917.59" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (1,540 samples, 76.31%)</title><rect x="32.8" y="245" width="900.5" height="15.0" fill="rgb(254,74,51)" rx="2" ry="2" />
<text  x="35.80" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ether_nh_input (218 samples, 10.80%)</title><rect x="985.3" y="181" width="127.5" height="15.0" fill="rgb(224,72,12)" rx="2" ry="2" />
<text  x="988.34" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>pf_test_state_udp (28 samples, 1.39%)</title><rect x="969.0" y="69" width="16.3" height="15.0" fill="rgb(219,32,53)" rx="2" ry="2" />
<text  x="971.97" y="79.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (7 samples, 0.35%)</title><rect x="1163.1" y="229" width="4.1" height="15.0" fill="rgb(206,193,8)" rx="2" ry="2" />
<text  x="1166.10" y="239.5" ></text>
</g>
<g >
<title>doreti (3 samples, 0.15%)</title><rect x="31.1" y="277" width="1.7" height="15.0" fill="rgb(230,219,25)" rx="2" ry="2" />
<text  x="34.05" y="287.5" ></text>
</g>
<g >
<title>ether_output (32 samples, 1.59%)</title><rect x="985.3" y="101" width="18.8" height="15.0" fill="rgb(218,1,6)" rx="2" ry="2" />
<text  x="988.34" y="111.5" ></text>
</g>
<g >
<title>pf_pull_hdr (14 samples, 0.69%)</title><rect x="1004.1" y="53" width="8.1" height="15.0" fill="rgb(215,45,53)" rx="2" ry="2" />
<text  x="1007.05" y="63.5" ></text>
</g>
</g>
</svg>
