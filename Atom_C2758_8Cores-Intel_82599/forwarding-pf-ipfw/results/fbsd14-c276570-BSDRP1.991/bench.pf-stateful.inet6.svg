<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>wakeup_any (6 samples, 0.30%)</title><rect x="29.5" y="197" width="3.6" height="15.0" fill="rgb(233,50,45)" rx="2" ry="2" />
<text  x="32.52" y="207.5" ></text>
</g>
<g >
<title>_rm_rlock (14 samples, 0.70%)</title><rect x="290.4" y="69" width="8.2" height="15.0" fill="rgb(237,130,39)" rx="2" ry="2" />
<text  x="293.36" y="79.5" ></text>
</g>
<g >
<title>iflib_rxeof (63 samples, 3.16%)</title><rect x="845.8" y="245" width="37.2" height="15.0" fill="rgb(220,92,29)" rx="2" ry="2" />
<text  x="848.76" y="255.5" >ifl..</text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.05%)</title><rect x="813.2" y="133" width="0.6" height="15.0" fill="rgb(207,3,29)" rx="2" ry="2" />
<text  x="816.23" y="143.5" ></text>
</g>
<g >
<title>ether_output (20 samples, 1.00%)</title><rect x="883.0" y="101" width="11.9" height="15.0" fill="rgb(246,85,6)" rx="2" ry="2" />
<text  x="886.02" y="111.5" ></text>
</g>
<g >
<title>pf_dummynet_route (13 samples, 0.65%)</title><rect x="451.2" y="37" width="7.7" height="15.0" fill="rgb(219,146,25)" rx="2" ry="2" />
<text  x="454.24" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (886 samples, 44.41%)</title><rect x="77.4" y="165" width="524.1" height="15.0" fill="rgb(254,136,34)" rx="2" ry="2" />
<text  x="80.43" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.40%)</title><rect x="620.4" y="181" width="4.7" height="15.0" fill="rgb(217,141,16)" rx="2" ry="2" />
<text  x="623.41" y="191.5" ></text>
</g>
<g >
<title>all (1,995 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,131,21)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (839 samples, 42.06%)</title><rect x="103.5" y="133" width="496.2" height="15.0" fill="rgb(238,43,19)" rx="2" ry="2" />
<text  x="106.45" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pf_test_state_udp (42 samples, 2.11%)</title><rect x="574.9" y="37" width="24.8" height="15.0" fill="rgb(227,145,4)" rx="2" ry="2" />
<text  x="577.86" y="47.5" >p..</text>
</g>
<g >
<title>intr_execute_handlers (73 samples, 3.66%)</title><rect x="1137.4" y="277" width="43.1" height="15.0" fill="rgb(224,181,19)" rx="2" ry="2" />
<text  x="1140.36" y="287.5" >intr..</text>
</g>
<g >
<title>iflib_get_ifp (1 samples, 0.05%)</title><rect x="1178.8" y="213" width="0.6" height="15.0" fill="rgb(245,67,14)" rx="2" ry="2" />
<text  x="1181.76" y="223.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (2 samples, 0.10%)</title><rect x="624.0" y="85" width="1.1" height="15.0" fill="rgb(227,35,13)" rx="2" ry="2" />
<text  x="626.95" y="95.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.10%)</title><rect x="601.5" y="197" width="1.2" height="15.0" fill="rgb(251,6,37)" rx="2" ry="2" />
<text  x="604.48" y="207.5" ></text>
</g>
<g >
<title>pf_test6 (194 samples, 9.72%)</title><rect x="386.2" y="53" width="114.7" height="15.0" fill="rgb(212,17,12)" rx="2" ry="2" />
<text  x="389.18" y="63.5" >pf_test6</text>
</g>
<g >
<title>_task_fn_rx (63 samples, 3.16%)</title><rect x="845.8" y="261" width="37.2" height="15.0" fill="rgb(225,42,5)" rx="2" ry="2" />
<text  x="848.76" y="271.5" >_ta..</text>
</g>
<g >
<title>lapic_eoi (1 samples, 0.05%)</title><rect x="1179.9" y="245" width="0.6" height="15.0" fill="rgb(247,48,29)" rx="2" ry="2" />
<text  x="1182.94" y="255.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (16 samples, 0.80%)</title><rect x="272.0" y="53" width="9.5" height="15.0" fill="rgb(220,150,53)" rx="2" ry="2" />
<text  x="275.03" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (80 samples, 4.01%)</title><rect x="211.1" y="53" width="47.3" height="15.0" fill="rgb(219,34,20)" rx="2" ry="2" />
<text  x="214.10" y="63.5" >ifli..</text>
</g>
<g >
<title>_rm_rlock (21 samples, 1.05%)</title><rect x="546.5" y="37" width="12.4" height="15.0" fill="rgb(213,89,50)" rx="2" ry="2" />
<text  x="549.47" y="47.5" ></text>
</g>
<g >
<title>ether_input (430 samples, 21.55%)</title><rect x="883.0" y="213" width="254.4" height="15.0" fill="rgb(243,167,42)" rx="2" ry="2" />
<text  x="886.02" y="223.5" >ether_input</text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.05%)</title><rect x="665.4" y="197" width="0.5" height="15.0" fill="rgb(243,66,0)" rx="2" ry="2" />
<text  x="668.36" y="207.5" ></text>
</g>
<g >
<title>pf_pull_hdr (5 samples, 0.25%)</title><rect x="468.4" y="37" width="3.0" height="15.0" fill="rgb(239,176,31)" rx="2" ry="2" />
<text  x="471.40" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="839.8" y="197" width="0.6" height="15.0" fill="rgb(206,126,9)" rx="2" ry="2" />
<text  x="842.84" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (9 samples, 0.45%)</title><rect x="725.7" y="165" width="5.3" height="15.0" fill="rgb(227,60,31)" rx="2" ry="2" />
<text  x="728.69" y="175.5" ></text>
</g>
<g >
<title>fork_exit (1,393 samples, 69.82%)</title><rect x="21.8" y="277" width="824.0" height="15.0" fill="rgb(249,111,18)" rx="2" ry="2" />
<text  x="24.83" y="287.5" >fork_exit</text>
</g>
<g >
<title>ip6_input (63 samples, 3.16%)</title><rect x="845.8" y="149" width="37.2" height="15.0" fill="rgb(221,149,44)" rx="2" ry="2" />
<text  x="848.76" y="159.5" >ip6..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (20 samples, 1.00%)</title><rect x="883.0" y="53" width="11.9" height="15.0" fill="rgb(237,159,4)" rx="2" ry="2" />
<text  x="886.02" y="63.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.05%)</title><rect x="1188.2" y="181" width="0.6" height="15.0" fill="rgb(225,21,54)" rx="2" ry="2" />
<text  x="1191.23" y="191.5" ></text>
</g>
<g >
<title>m_copydata (2 samples, 0.10%)</title><rect x="862.3" y="53" width="1.2" height="15.0" fill="rgb(218,73,29)" rx="2" ry="2" />
<text  x="865.32" y="63.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (1 samples, 0.05%)</title><rect x="622.8" y="101" width="0.6" height="15.0" fill="rgb(216,119,19)" rx="2" ry="2" />
<text  x="625.77" y="111.5" ></text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.10%)</title><rect x="29.5" y="181" width="1.2" height="15.0" fill="rgb(231,54,21)" rx="2" ry="2" />
<text  x="32.52" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (1,393 samples, 69.82%)</title><rect x="21.8" y="245" width="824.0" height="15.0" fill="rgb(211,71,35)" rx="2" ry="2" />
<text  x="24.83" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.05%)</title><rect x="1165.2" y="197" width="0.5" height="15.0" fill="rgb(221,22,45)" rx="2" ry="2" />
<text  x="1168.16" y="207.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (9 samples, 0.45%)</title><rect x="15.9" y="277" width="5.3" height="15.0" fill="rgb(220,171,52)" rx="2" ry="2" />
<text  x="18.91" y="287.5" ></text>
</g>
<g >
<title>ip6_tryforward (430 samples, 21.55%)</title><rect x="883.0" y="117" width="254.4" height="15.0" fill="rgb(238,89,37)" rx="2" ry="2" />
<text  x="886.02" y="127.5" >ip6_tryforward</text>
</g>
<g >
<title>pf_find_state (25 samples, 1.25%)</title><rect x="847.5" y="53" width="14.8" height="15.0" fill="rgb(205,36,54)" rx="2" ry="2" />
<text  x="850.53" y="63.5" ></text>
</g>
<g >
<title>pf_get_translation (1 samples, 0.05%)</title><rect x="1016.7" y="37" width="0.6" height="15.0" fill="rgb(220,91,15)" rx="2" ry="2" />
<text  x="1019.70" y="47.5" ></text>
</g>
<g >
<title>iflib_txq_drain (245 samples, 12.28%)</title><rect x="692.6" y="197" width="144.9" height="15.0" fill="rgb(228,28,9)" rx="2" ry="2" />
<text  x="695.57" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (11 samples, 0.55%)</title><rect x="1169.3" y="229" width="6.5" height="15.0" fill="rgb(230,215,38)" rx="2" ry="2" />
<text  x="1172.30" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (63 samples, 3.16%)</title><rect x="845.8" y="213" width="37.2" height="15.0" fill="rgb(253,73,53)" rx="2" ry="2" />
<text  x="848.76" y="223.5" >net..</text>
</g>
<g >
<title>ip6_input (826 samples, 41.40%)</title><rect x="111.1" y="117" width="488.6" height="15.0" fill="rgb(252,203,30)" rx="2" ry="2" />
<text  x="114.14" y="127.5" >ip6_input</text>
</g>
<g >
<title>iflib_txd_db_check (21 samples, 1.05%)</title><rect x="825.1" y="181" width="12.4" height="15.0" fill="rgb(215,206,29)" rx="2" ry="2" />
<text  x="828.06" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (4 samples, 0.20%)</title><rect x="1166.9" y="229" width="2.4" height="15.0" fill="rgb(229,65,23)" rx="2" ry="2" />
<text  x="1169.93" y="239.5" ></text>
</g>
<g >
<title>iflib_fl_refill (61 samples, 3.06%)</title><rect x="602.7" y="197" width="36.0" height="15.0" fill="rgb(213,50,39)" rx="2" ry="2" />
<text  x="605.66" y="207.5" >ifl..</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.05%)</title><rect x="704.4" y="181" width="0.6" height="15.0" fill="rgb(224,24,25)" rx="2" ry="2" />
<text  x="707.40" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (10 samples, 0.50%)</title><rect x="1159.8" y="229" width="5.9" height="15.0" fill="rgb(234,138,53)" rx="2" ry="2" />
<text  x="1162.83" y="239.5" ></text>
</g>
<g >
<title>pf_state_insert (1 samples, 0.05%)</title><rect x="902.5" y="37" width="0.6" height="15.0" fill="rgb(253,204,47)" rx="2" ry="2" />
<text  x="905.54" y="47.5" ></text>
</g>
<g >
<title>memcmp (5 samples, 0.25%)</title><rect x="363.7" y="85" width="3.0" height="15.0" fill="rgb(213,56,47)" rx="2" ry="2" />
<text  x="366.70" y="95.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.05%)</title><rect x="624.5" y="53" width="0.6" height="15.0" fill="rgb(248,148,11)" rx="2" ry="2" />
<text  x="627.55" y="63.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (34 samples, 1.70%)</title><rect x="665.9" y="197" width="20.2" height="15.0" fill="rgb(244,108,48)" rx="2" ry="2" />
<text  x="668.95" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (63 samples, 3.16%)</title><rect x="845.8" y="165" width="37.2" height="15.0" fill="rgb(208,72,6)" rx="2" ry="2" />
<text  x="848.76" y="175.5" >net..</text>
</g>
<g >
<title>pf_find_state (33 samples, 1.65%)</title><rect x="863.5" y="53" width="19.5" height="15.0" fill="rgb(225,125,52)" rx="2" ry="2" />
<text  x="866.50" y="63.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (9 samples, 0.45%)</title><rect x="633.4" y="165" width="5.3" height="15.0" fill="rgb(208,157,41)" rx="2" ry="2" />
<text  x="636.42" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.40%)</title><rect x="883.0" y="37" width="4.8" height="15.0" fill="rgb(217,26,5)" rx="2" ry="2" />
<text  x="886.02" y="47.5" ></text>
</g>
<g >
<title>memcmp (3 samples, 0.15%)</title><rect x="599.7" y="149" width="1.8" height="15.0" fill="rgb(246,92,6)" rx="2" ry="2" />
<text  x="602.70" y="159.5" ></text>
</g>
<g >
<title>timercb (8 samples, 0.40%)</title><rect x="1185.3" y="261" width="4.7" height="15.0" fill="rgb(215,5,21)" rx="2" ry="2" />
<text  x="1188.27" y="271.5" ></text>
</g>
<g >
<title>pf_test_rule (1 samples, 0.05%)</title><rect x="902.5" y="53" width="0.6" height="15.0" fill="rgb(232,59,6)" rx="2" ry="2" />
<text  x="905.54" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (12 samples, 0.60%)</title><rect x="887.8" y="37" width="7.1" height="15.0" fill="rgb(206,217,10)" rx="2" ry="2" />
<text  x="890.75" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (63 samples, 3.16%)</title><rect x="845.8" y="277" width="37.2" height="15.0" fill="rgb(235,156,2)" rx="2" ry="2" />
<text  x="848.76" y="287.5" >gta..</text>
</g>
<g >
<title>ether_output_frame (102 samples, 5.11%)</title><rect x="198.1" y="69" width="60.3" height="15.0" fill="rgb(220,193,46)" rx="2" ry="2" />
<text  x="201.09" y="79.5" >ether_..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (9 samples, 0.45%)</title><rect x="638.7" y="197" width="5.4" height="15.0" fill="rgb(240,116,1)" rx="2" ry="2" />
<text  x="641.74" y="207.5" ></text>
</g>
<g >
<title>pf_pull_hdr (2 samples, 0.10%)</title><rect x="573.7" y="37" width="1.2" height="15.0" fill="rgb(250,103,36)" rx="2" ry="2" />
<text  x="576.68" y="47.5" ></text>
</g>
<g >
<title>uma_zfree_arg (18 samples, 0.90%)</title><rect x="735.7" y="133" width="10.7" height="15.0" fill="rgb(237,200,48)" rx="2" ry="2" />
<text  x="738.74" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (9 samples, 0.45%)</title><rect x="27.7" y="213" width="5.4" height="15.0" fill="rgb(219,83,30)" rx="2" ry="2" />
<text  x="30.74" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.10%)</title><rect x="33.1" y="213" width="1.2" height="15.0" fill="rgb(233,165,33)" rx="2" ry="2" />
<text  x="36.07" y="223.5" ></text>
</g>
<g >
<title>if_getsoftc (5 samples, 0.25%)</title><rect x="238.9" y="37" width="3.0" height="15.0" fill="rgb(252,14,20)" rx="2" ry="2" />
<text  x="241.90" y="47.5" ></text>
</g>
<g >
<title>_rm_runlock (5 samples, 0.25%)</title><rect x="298.6" y="69" width="3.0" height="15.0" fill="rgb(237,96,39)" rx="2" ry="2" />
<text  x="301.64" y="79.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.10%)</title><rect x="1162.8" y="213" width="1.2" height="15.0" fill="rgb(240,32,52)" rx="2" ry="2" />
<text  x="1165.79" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_timer (8 samples, 0.40%)</title><rect x="1185.3" y="277" width="4.7" height="15.0" fill="rgb(243,51,4)" rx="2" ry="2" />
<text  x="1188.27" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,120 samples, 56.14%)</title><rect x="26.0" y="229" width="662.4" height="15.0" fill="rgb(229,150,6)" rx="2" ry="2" />
<text  x="28.97" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>pf_check6_in (28 samples, 1.40%)</title><rect x="845.8" y="101" width="16.5" height="15.0" fill="rgb(254,174,12)" rx="2" ry="2" />
<text  x="848.76" y="111.5" ></text>
</g>
<g >
<title>zone_import (3 samples, 0.15%)</title><rect x="623.4" y="101" width="1.7" height="15.0" fill="rgb(246,213,54)" rx="2" ry="2" />
<text  x="626.36" y="111.5" ></text>
</g>
<g >
<title>pf_dummynet_route (6 samples, 0.30%)</title><rect x="563.6" y="37" width="3.6" height="15.0" fill="rgb(254,228,11)" rx="2" ry="2" />
<text  x="566.62" y="47.5" ></text>
</g>
<g >
<title>doreti (1 samples, 0.05%)</title><rect x="21.2" y="277" width="0.6" height="15.0" fill="rgb(251,121,2)" rx="2" ry="2" />
<text  x="24.24" y="287.5" ></text>
</g>
<g >
<title>pmc_hook_handler (6 samples, 0.30%)</title><rect x="1186.5" y="213" width="3.5" height="15.0" fill="rgb(245,66,24)" rx="2" ry="2" />
<text  x="1189.45" y="223.5" ></text>
</g>
<g >
<title>pf_check6_out (35 samples, 1.75%)</title><rect x="862.3" y="101" width="20.7" height="15.0" fill="rgb(207,78,36)" rx="2" ry="2" />
<text  x="865.32" y="111.5" ></text>
</g>
<g >
<title>_rm_runlock (5 samples, 0.25%)</title><rect x="558.9" y="37" width="2.9" height="15.0" fill="rgb(224,89,37)" rx="2" ry="2" />
<text  x="561.89" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="844.6" y="197" width="0.6" height="15.0" fill="rgb(246,7,1)" rx="2" ry="2" />
<text  x="847.58" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (63 samples, 3.16%)</title><rect x="845.8" y="197" width="37.2" height="15.0" fill="rgb(210,51,35)" rx="2" ry="2" />
<text  x="848.76" y="207.5" >eth..</text>
</g>
<g >
<title>pf_test_rule (1 samples, 0.05%)</title><rect x="1016.7" y="53" width="0.6" height="15.0" fill="rgb(205,165,10)" rx="2" ry="2" />
<text  x="1019.70" y="63.5" ></text>
</g>
<g >
<title>fib6_lookup (102 samples, 5.11%)</title><rect x="303.4" y="69" width="60.3" height="15.0" fill="rgb(207,111,43)" rx="2" ry="2" />
<text  x="306.37" y="79.5" >fib6_l..</text>
</g>
<g >
<title>netisr_dispatch_src (430 samples, 21.55%)</title><rect x="883.0" y="149" width="254.4" height="15.0" fill="rgb(214,202,52)" rx="2" ry="2" />
<text  x="886.02" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pagezero_erms (1 samples, 0.05%)</title><rect x="622.8" y="85" width="0.6" height="15.0" fill="rgb(223,137,51)" rx="2" ry="2" />
<text  x="625.77" y="95.5" ></text>
</g>
<g >
<title>pf_check6_out (167 samples, 8.37%)</title><rect x="500.9" y="69" width="98.8" height="15.0" fill="rgb(212,163,48)" rx="2" ry="2" />
<text  x="503.93" y="79.5" >pf_check6_out</text>
</g>
<g >
<title>memmove_erms (3 samples, 0.15%)</title><rect x="281.5" y="53" width="1.8" height="15.0" fill="rgb(235,222,12)" rx="2" ry="2" />
<text  x="284.49" y="63.5" ></text>
</g>
<g >
<title>lapic_handle_intr (8 samples, 0.40%)</title><rect x="1180.5" y="277" width="4.8" height="15.0" fill="rgb(234,15,21)" rx="2" ry="2" />
<text  x="1183.54" y="287.5" ></text>
</g>
<g >
<title>pf_test6 (208 samples, 10.43%)</title><rect x="1014.3" y="69" width="123.1" height="15.0" fill="rgb(211,139,19)" rx="2" ry="2" />
<text  x="1017.33" y="79.5" >pf_test6</text>
</g>
<g >
<title>keg_alloc_slab (8 samples, 0.40%)</title><rect x="620.4" y="133" width="4.7" height="15.0" fill="rgb(223,102,32)" rx="2" ry="2" />
<text  x="623.41" y="143.5" ></text>
</g>
<g >
<title>ip6_tryforward (793 samples, 39.75%)</title><rect x="130.7" y="101" width="469.0" height="15.0" fill="rgb(235,162,2)" rx="2" ry="2" />
<text  x="133.66" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>iap_get_config (1 samples, 0.05%)</title><rect x="1187.6" y="181" width="0.6" height="15.0" fill="rgb(245,154,0)" rx="2" ry="2" />
<text  x="1190.63" y="191.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (2 samples, 0.10%)</title><rect x="621.0" y="117" width="1.2" height="15.0" fill="rgb(249,219,37)" rx="2" ry="2" />
<text  x="624.00" y="127.5" ></text>
</g>
<g >
<title>hardclock (7 samples, 0.35%)</title><rect x="1185.9" y="229" width="4.1" height="15.0" fill="rgb(252,159,1)" rx="2" ry="2" />
<text  x="1188.86" y="239.5" ></text>
</g>
<g >
<title>wakeup (6 samples, 0.30%)</title><rect x="842.2" y="229" width="3.6" height="15.0" fill="rgb(242,79,52)" rx="2" ry="2" />
<text  x="845.21" y="239.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (25 samples, 1.25%)</title><rect x="847.5" y="37" width="14.8" height="15.0" fill="rgb(224,20,37)" rx="2" ry="2" />
<text  x="850.53" y="47.5" ></text>
</g>
<g >
<title>pf_test_state_udp (25 samples, 1.25%)</title><rect x="847.5" y="69" width="14.8" height="15.0" fill="rgb(240,120,38)" rx="2" ry="2" />
<text  x="850.53" y="79.5" ></text>
</g>
<g >
<title>ip6_tryforward (63 samples, 3.16%)</title><rect x="845.8" y="133" width="37.2" height="15.0" fill="rgb(243,5,6)" rx="2" ry="2" />
<text  x="848.76" y="143.5" >ip6..</text>
</g>
<g >
<title>memset_erms (15 samples, 0.75%)</title><rect x="442.4" y="37" width="8.8" height="15.0" fill="rgb(248,11,43)" rx="2" ry="2" />
<text  x="445.37" y="47.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.05%)</title><rect x="845.2" y="213" width="0.6" height="15.0" fill="rgb(225,176,20)" rx="2" ry="2" />
<text  x="848.17" y="223.5" ></text>
</g>
<g >
<title>pf_test6 (35 samples, 1.75%)</title><rect x="862.3" y="85" width="20.7" height="15.0" fill="rgb(245,32,19)" rx="2" ry="2" />
<text  x="865.32" y="95.5" ></text>
</g>
<g >
<title>pf_test_state_udp (188 samples, 9.42%)</title><rect x="903.1" y="53" width="111.2" height="15.0" fill="rgb(212,132,4)" rx="2" ry="2" />
<text  x="906.13" y="63.5" >pf_test_state..</text>
</g>
<g >
<title>ether_input (908 samples, 45.51%)</title><rect x="64.4" y="197" width="537.1" height="15.0" fill="rgb(238,27,26)" rx="2" ry="2" />
<text  x="67.42" y="207.5" >ether_input</text>
</g>
<g >
<title>drain_ring_lockless (249 samples, 12.48%)</title><rect x="690.2" y="213" width="147.3" height="15.0" fill="rgb(211,143,22)" rx="2" ry="2" />
<text  x="693.20" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>pfil_run_hooks (394 samples, 19.75%)</title><rect x="366.7" y="85" width="233.0" height="15.0" fill="rgb(241,84,12)" rx="2" ry="2" />
<text  x="369.66" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.15%)</title><rect x="835.7" y="165" width="1.8" height="15.0" fill="rgb(247,154,7)" rx="2" ry="2" />
<text  x="838.70" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (13 samples, 0.65%)</title><rect x="644.1" y="197" width="7.7" height="15.0" fill="rgb(254,39,39)" rx="2" ry="2" />
<text  x="647.07" y="207.5" ></text>
</g>
<g >
<title>pf_pull_hdr (3 samples, 0.15%)</title><rect x="845.8" y="69" width="1.7" height="15.0" fill="rgb(231,218,23)" rx="2" ry="2" />
<text  x="848.76" y="79.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="1164.6" y="181" width="0.6" height="15.0" fill="rgb(230,49,16)" rx="2" ry="2" />
<text  x="1167.57" y="191.5" ></text>
</g>
<g >
<title>m_freem (26 samples, 1.30%)</title><rect x="731.0" y="165" width="15.4" height="15.0" fill="rgb(239,167,54)" rx="2" ry="2" />
<text  x="734.01" y="175.5" ></text>
</g>
<g >
<title>iflib_if_transmit (20 samples, 1.00%)</title><rect x="883.0" y="69" width="11.9" height="15.0" fill="rgb(226,198,14)" rx="2" ry="2" />
<text  x="886.02" y="79.5" ></text>
</g>
<g >
<title>m_copydata (4 samples, 0.20%)</title><rect x="1014.3" y="37" width="2.4" height="15.0" fill="rgb(231,73,54)" rx="2" ry="2" />
<text  x="1017.33" y="47.5" ></text>
</g>
<g >
<title>m_adj (8 samples, 0.40%)</title><rect x="96.9" y="133" width="4.8" height="15.0" fill="rgb(232,4,6)" rx="2" ry="2" />
<text  x="99.95" y="143.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.10%)</title><rect x="621.0" y="101" width="1.2" height="15.0" fill="rgb(231,108,29)" rx="2" ry="2" />
<text  x="624.00" y="111.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (430 samples, 21.55%)</title><rect x="883.0" y="261" width="254.4" height="15.0" fill="rgb(216,194,28)" rx="2" ry="2" />
<text  x="886.02" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>gtaskqueue_thread_loop (430 samples, 21.55%)</title><rect x="883.0" y="277" width="254.4" height="15.0" fill="rgb(232,38,24)" rx="2" ry="2" />
<text  x="886.02" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>pmc_process_samples (6 samples, 0.30%)</title><rect x="1186.5" y="197" width="3.5" height="15.0" fill="rgb(238,106,2)" rx="2" ry="2" />
<text  x="1189.45" y="207.5" ></text>
</g>
<g >
<title>_rm_rlock (12 samples, 0.60%)</title><rect x="433.5" y="37" width="7.1" height="15.0" fill="rgb(220,140,31)" rx="2" ry="2" />
<text  x="436.50" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (28 samples, 1.40%)</title><rect x="241.9" y="37" width="16.5" height="15.0" fill="rgb(212,205,36)" rx="2" ry="2" />
<text  x="244.86" y="47.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.20%)</title><rect x="30.7" y="181" width="2.4" height="15.0" fill="rgb(245,5,23)" rx="2" ry="2" />
<text  x="33.70" y="191.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (70 samples, 3.51%)</title><rect x="705.0" y="181" width="41.4" height="15.0" fill="rgb(239,220,54)" rx="2" ry="2" />
<text  x="707.99" y="191.5" >ifl..</text>
</g>
<g >
<title>iflib_fast_intr_rxtx (45 samples, 2.26%)</title><rect x="1153.3" y="245" width="26.6" height="15.0" fill="rgb(205,176,30)" rx="2" ry="2" />
<text  x="1156.33" y="255.5" >i..</text>
</g>
<g >
<title>pf_test_state_udp (50 samples, 2.51%)</title><rect x="471.4" y="37" width="29.5" height="15.0" fill="rgb(214,169,5)" rx="2" ry="2" />
<text  x="474.35" y="47.5" >pf..</text>
</g>
<g >
<title>pf_test6 (152 samples, 7.62%)</title><rect x="509.8" y="53" width="89.9" height="15.0" fill="rgb(222,228,44)" rx="2" ry="2" />
<text  x="512.80" y="63.5" >pf_test6</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (2 samples, 0.10%)</title><rect x="1165.7" y="229" width="1.2" height="15.0" fill="rgb(253,49,31)" rx="2" ry="2" />
<text  x="1168.75" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (5 samples, 0.25%)</title><rect x="258.4" y="69" width="3.0" height="15.0" fill="rgb(248,21,26)" rx="2" ry="2" />
<text  x="261.42" y="79.5" ></text>
</g>
<g >
<title>ether_input (63 samples, 3.16%)</title><rect x="845.8" y="229" width="37.2" height="15.0" fill="rgb(231,188,13)" rx="2" ry="2" />
<text  x="848.76" y="239.5" >eth..</text>
</g>
<g >
<title>m_pkthdr_init (4 samples, 0.20%)</title><rect x="651.8" y="197" width="2.3" height="15.0" fill="rgb(212,89,39)" rx="2" ry="2" />
<text  x="654.75" y="207.5" ></text>
</g>
<g >
<title>ether_demux (63 samples, 3.16%)</title><rect x="845.8" y="181" width="37.2" height="15.0" fill="rgb(221,115,36)" rx="2" ry="2" />
<text  x="848.76" y="191.5" >eth..</text>
</g>
<g >
<title>zone_import (8 samples, 0.40%)</title><rect x="620.4" y="149" width="4.7" height="15.0" fill="rgb(220,112,13)" rx="2" ry="2" />
<text  x="623.41" y="159.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.15%)</title><rect x="24.2" y="229" width="1.8" height="15.0" fill="rgb(251,142,19)" rx="2" ry="2" />
<text  x="27.20" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="32.5" y="165" width="0.6" height="15.0" fill="rgb(236,141,54)" rx="2" ry="2" />
<text  x="35.48" y="175.5" ></text>
</g>
<g >
<title>netmap_rx_irq (3 samples, 0.15%)</title><rect x="686.7" y="213" width="1.7" height="15.0" fill="rgb(207,127,27)" rx="2" ry="2" />
<text  x="689.65" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (19 samples, 0.95%)</title><rect x="654.1" y="197" width="11.3" height="15.0" fill="rgb(236,47,1)" rx="2" ry="2" />
<text  x="657.12" y="207.5" ></text>
</g>
<g >
<title>rn_match (69 samples, 3.46%)</title><rect x="322.9" y="37" width="40.8" height="15.0" fill="rgb(250,82,24)" rx="2" ry="2" />
<text  x="325.89" y="47.5" >rn_..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.10%)</title><rect x="834.5" y="165" width="1.2" height="15.0" fill="rgb(211,143,28)" rx="2" ry="2" />
<text  x="837.52" y="175.5" ></text>
</g>
<g >
<title>pf_test6 (28 samples, 1.40%)</title><rect x="845.8" y="85" width="16.5" height="15.0" fill="rgb(210,155,33)" rx="2" ry="2" />
<text  x="848.76" y="95.5" ></text>
</g>
<g >
<title>lradix6_lookup (76 samples, 3.81%)</title><rect x="318.8" y="53" width="44.9" height="15.0" fill="rgb(239,18,15)" rx="2" ry="2" />
<text  x="321.75" y="63.5" >lrad..</text>
</g>
<g >
<title>pf_check6_in (208 samples, 10.43%)</title><rect x="377.9" y="69" width="123.0" height="15.0" fill="rgb(213,80,27)" rx="2" ry="2" />
<text  x="380.90" y="79.5" >pf_check6_in</text>
</g>
<g >
<title>iflib_rxeof (1,103 samples, 55.29%)</title><rect x="34.3" y="213" width="652.4" height="15.0" fill="rgb(236,129,15)" rx="2" ry="2" />
<text  x="37.25" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>pf_find_state (188 samples, 9.42%)</title><rect x="903.1" y="37" width="111.2" height="15.0" fill="rgb(236,155,22)" rx="2" ry="2" />
<text  x="906.13" y="47.5" >pf_find_state</text>
</g>
<g >
<title>pf_pull_hdr (4 samples, 0.20%)</title><rect x="1014.3" y="53" width="2.4" height="15.0" fill="rgb(248,18,54)" rx="2" ry="2" />
<text  x="1017.33" y="63.5" ></text>
</g>
<g >
<title>pf_pull_hdr (13 samples, 0.65%)</title><rect x="894.9" y="53" width="7.6" height="15.0" fill="rgb(247,167,18)" rx="2" ry="2" />
<text  x="897.85" y="63.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (7 samples, 0.35%)</title><rect x="1175.8" y="229" width="4.1" height="15.0" fill="rgb(248,133,46)" rx="2" ry="2" />
<text  x="1178.80" y="239.5" ></text>
</g>
<g >
<title>ether_output (187 samples, 9.37%)</title><rect x="172.7" y="85" width="110.6" height="15.0" fill="rgb(237,40,39)" rx="2" ry="2" />
<text  x="175.66" y="95.5" >ether_output</text>
</g>
<g >
<title>pmap_kextract (4 samples, 0.20%)</title><rect x="744.0" y="117" width="2.4" height="15.0" fill="rgb(247,137,24)" rx="2" ry="2" />
<text  x="747.03" y="127.5" ></text>
</g>
<g >
<title>iflib_rxeof (430 samples, 21.55%)</title><rect x="883.0" y="229" width="254.4" height="15.0" fill="rgb(208,176,49)" rx="2" ry="2" />
<text  x="886.02" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>pfil_run_hooks (410 samples, 20.55%)</title><rect x="894.9" y="101" width="242.5" height="15.0" fill="rgb(235,228,33)" rx="2" ry="2" />
<text  x="897.85" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>iflib_encap (133 samples, 6.67%)</title><rect x="746.4" y="181" width="78.7" height="15.0" fill="rgb(238,35,36)" rx="2" ry="2" />
<text  x="749.39" y="191.5" >iflib_encap</text>
</g>
<g >
<title>_rm_runlock (3 samples, 0.15%)</title><rect x="440.6" y="37" width="1.8" height="15.0" fill="rgb(219,126,45)" rx="2" ry="2" />
<text  x="443.60" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (63 samples, 3.16%)</title><rect x="845.8" y="117" width="37.2" height="15.0" fill="rgb(218,109,39)" rx="2" ry="2" />
<text  x="848.76" y="127.5" >pfi..</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="30.1" y="165" width="0.6" height="15.0" fill="rgb(234,63,38)" rx="2" ry="2" />
<text  x="33.11" y="175.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (27 samples, 1.35%)</title><rect x="797.8" y="165" width="16.0" height="15.0" fill="rgb(244,33,36)" rx="2" ry="2" />
<text  x="800.85" y="175.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (1 samples, 0.05%)</title><rect x="686.1" y="197" width="0.6" height="15.0" fill="rgb(217,88,19)" rx="2" ry="2" />
<text  x="689.06" y="207.5" ></text>
</g>
<g >
<title>sleepq_broadcast (1 samples, 0.05%)</title><rect x="842.8" y="213" width="0.6" height="15.0" fill="rgb(217,102,18)" rx="2" ry="2" />
<text  x="845.80" y="223.5" ></text>
</g>
<g >
<title>in6_localip (31 samples, 1.55%)</title><rect x="283.3" y="85" width="18.3" height="15.0" fill="rgb(241,149,13)" rx="2" ry="2" />
<text  x="286.26" y="95.5" ></text>
</g>
<g >
<title>pf_normalize_ip6 (16 samples, 0.80%)</title><rect x="458.9" y="37" width="9.5" height="15.0" fill="rgb(240,130,44)" rx="2" ry="2" />
<text  x="461.93" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (2 samples, 0.10%)</title><rect x="862.3" y="37" width="1.2" height="15.0" fill="rgb(220,164,16)" rx="2" ry="2" />
<text  x="865.32" y="47.5" ></text>
</g>
<g >
<title>intr_lookup_source (5 samples, 0.25%)</title><rect x="1182.3" y="261" width="3.0" height="15.0" fill="rgb(237,83,37)" rx="2" ry="2" />
<text  x="1185.31" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (902 samples, 45.21%)</title><rect x="68.0" y="181" width="533.5" height="15.0" fill="rgb(242,33,4)" rx="2" ry="2" />
<text  x="70.96" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_nh_input (430 samples, 21.55%)</title><rect x="883.0" y="181" width="254.4" height="15.0" fill="rgb(246,206,15)" rx="2" ry="2" />
<text  x="886.02" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>ifmp_ring_check_drainage (3 samples, 0.15%)</title><rect x="837.5" y="213" width="1.8" height="15.0" fill="rgb(243,198,51)" rx="2" ry="2" />
<text  x="840.48" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (1 samples, 0.05%)</title><rect x="797.3" y="165" width="0.5" height="15.0" fill="rgb(220,229,2)" rx="2" ry="2" />
<text  x="800.26" y="175.5" ></text>
</g>
<g >
<title>memcmp (1 samples, 0.05%)</title><rect x="280.9" y="37" width="0.6" height="15.0" fill="rgb(225,43,0)" rx="2" ry="2" />
<text  x="283.90" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (430 samples, 21.55%)</title><rect x="883.0" y="245" width="254.4" height="15.0" fill="rgb(207,194,40)" rx="2" ry="2" />
<text  x="886.02" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.15%)</title><rect x="843.4" y="213" width="1.8" height="15.0" fill="rgb(237,161,0)" rx="2" ry="2" />
<text  x="846.39" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (4 samples, 0.20%)</title><rect x="625.1" y="181" width="2.4" height="15.0" fill="rgb(208,122,9)" rx="2" ry="2" />
<text  x="628.14" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (19 samples, 0.95%)</title><rect x="813.8" y="165" width="11.3" height="15.0" fill="rgb(230,7,44)" rx="2" ry="2" />
<text  x="816.82" y="175.5" ></text>
</g>
<g >
<title>pf_check6_out (208 samples, 10.43%)</title><rect x="1014.3" y="85" width="123.1" height="15.0" fill="rgb(215,70,44)" rx="2" ry="2" />
<text  x="1017.33" y="95.5" >pf_check6_out</text>
</g>
<g >
<title>grouptaskqueue_enqueue (12 samples, 0.60%)</title><rect x="231.8" y="37" width="7.1" height="15.0" fill="rgb(212,174,6)" rx="2" ry="2" />
<text  x="234.80" y="47.5" ></text>
</g>
<g >
<title>nd6_resolve (37 samples, 1.85%)</title><rect x="261.4" y="69" width="21.9" height="15.0" fill="rgb(239,93,43)" rx="2" ry="2" />
<text  x="264.38" y="79.5" >n..</text>
</g>
<g >
<title>wakeup_any (3 samples, 0.15%)</title><rect x="1164.0" y="213" width="1.7" height="15.0" fill="rgb(218,90,22)" rx="2" ry="2" />
<text  x="1166.97" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.15%)</title><rect x="101.7" y="133" width="1.8" height="15.0" fill="rgb(222,64,46)" rx="2" ry="2" />
<text  x="104.68" y="143.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (9 samples, 0.45%)</title><rect x="808.5" y="149" width="5.3" height="15.0" fill="rgb(241,181,35)" rx="2" ry="2" />
<text  x="811.50" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.15%)</title><rect x="840.4" y="229" width="1.8" height="15.0" fill="rgb(254,153,43)" rx="2" ry="2" />
<text  x="843.44" y="239.5" ></text>
</g>
<g >
<title>pf_test6 (202 samples, 10.13%)</title><rect x="894.9" y="69" width="119.4" height="15.0" fill="rgb(235,164,13)" rx="2" ry="2" />
<text  x="897.85" y="79.5" >pf_test6</text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.10%)</title><rect x="1164.0" y="197" width="1.2" height="15.0" fill="rgb(223,126,19)" rx="2" ry="2" />
<text  x="1166.97" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (1 samples, 0.05%)</title><rect x="619.8" y="165" width="0.6" height="15.0" fill="rgb(247,163,16)" rx="2" ry="2" />
<text  x="622.81" y="175.5" ></text>
</g>
<g >
<title>zone_alloc_item (3 samples, 0.15%)</title><rect x="623.4" y="117" width="1.7" height="15.0" fill="rgb(241,113,30)" rx="2" ry="2" />
<text  x="626.36" y="127.5" ></text>
</g>
<g >
<title>pf_test_state_udp (203 samples, 10.18%)</title><rect x="1017.3" y="53" width="120.1" height="15.0" fill="rgb(245,7,18)" rx="2" ry="2" />
<text  x="1020.29" y="63.5" >pf_test_state_..</text>
</g>
<g >
<title>pf_test_state_udp (33 samples, 1.65%)</title><rect x="863.5" y="69" width="19.5" height="15.0" fill="rgb(231,142,8)" rx="2" ry="2" />
<text  x="866.50" y="79.5" ></text>
</g>
<g >
<title>pf_normalize_ip6 (11 samples, 0.55%)</title><rect x="567.2" y="37" width="6.5" height="15.0" fill="rgb(239,69,36)" rx="2" ry="2" />
<text  x="570.17" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (2 samples, 0.10%)</title><rect x="839.3" y="213" width="1.1" height="15.0" fill="rgb(232,136,36)" rx="2" ry="2" />
<text  x="842.25" y="223.5" ></text>
</g>
<g >
<title>m_copydata (13 samples, 0.65%)</title><rect x="894.9" y="37" width="7.6" height="15.0" fill="rgb(221,38,11)" rx="2" ry="2" />
<text  x="897.85" y="47.5" ></text>
</g>
<g >
<title>m_copydata (3 samples, 0.15%)</title><rect x="845.8" y="53" width="1.7" height="15.0" fill="rgb(251,197,46)" rx="2" ry="2" />
<text  x="848.76" y="63.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="1179.4" y="213" width="0.5" height="15.0" fill="rgb(248,4,34)" rx="2" ry="2" />
<text  x="1182.35" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (430 samples, 21.55%)</title><rect x="883.0" y="197" width="254.4" height="15.0" fill="rgb(209,77,19)" rx="2" ry="2" />
<text  x="886.02" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>memset_erms (3 samples, 0.15%)</title><rect x="561.8" y="37" width="1.8" height="15.0" fill="rgb(233,190,25)" rx="2" ry="2" />
<text  x="564.85" y="47.5" ></text>
</g>
<g >
<title>handleevents (8 samples, 0.40%)</title><rect x="1185.3" y="245" width="4.7" height="15.0" fill="rgb(207,119,53)" rx="2" ry="2" />
<text  x="1188.27" y="255.5" ></text>
</g>
<g >
<title>m_free (22 samples, 1.10%)</title><rect x="733.4" y="149" width="13.0" height="15.0" fill="rgb(207,169,32)" rx="2" ry="2" />
<text  x="736.38" y="159.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.40%)</title><rect x="620.4" y="165" width="4.7" height="15.0" fill="rgb(217,29,26)" rx="2" ry="2" />
<text  x="623.41" y="175.5" ></text>
</g>
<g >
<title>_task_fn_tx (257 samples, 12.88%)</title><rect x="688.4" y="229" width="152.0" height="15.0" fill="rgb(228,76,1)" rx="2" ry="2" />
<text  x="691.43" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.10%)</title><rect x="1161.6" y="213" width="1.2" height="15.0" fill="rgb(207,88,53)" rx="2" ry="2" />
<text  x="1164.61" y="223.5" ></text>
</g>
<g >
<title>memmove_erms (3 samples, 0.15%)</title><rect x="845.8" y="37" width="1.7" height="15.0" fill="rgb(240,7,50)" rx="2" ry="2" />
<text  x="848.76" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (10 samples, 0.50%)</title><rect x="10.0" y="277" width="5.9" height="15.0" fill="rgb(244,23,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ether_demux (430 samples, 21.55%)</title><rect x="883.0" y="165" width="254.4" height="15.0" fill="rgb(238,151,33)" rx="2" ry="2" />
<text  x="886.02" y="175.5" >ether_demux</text>
</g>
<g >
<title>mb_dtor_mbuf (2 samples, 0.10%)</title><rect x="742.8" y="117" width="1.2" height="15.0" fill="rgb(250,153,39)" rx="2" ry="2" />
<text  x="745.84" y="127.5" ></text>
</g>
<g >
<title>pf_find_state (203 samples, 10.18%)</title><rect x="1017.3" y="37" width="120.1" height="15.0" fill="rgb(242,216,39)" rx="2" ry="2" />
<text  x="1020.29" y="47.5" >pf_find_state</text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.05%)</title><rect x="624.5" y="69" width="0.6" height="15.0" fill="rgb(231,144,0)" rx="2" ry="2" />
<text  x="627.55" y="79.5" ></text>
</g>
<g >
<title>intr_event_handle (58 samples, 2.91%)</title><rect x="1146.2" y="261" width="34.3" height="15.0" fill="rgb(206,33,21)" rx="2" ry="2" />
<text  x="1149.23" y="271.5" >in..</text>
</g>
<g >
<title>uma_zalloc_arg (19 samples, 0.95%)</title><rect x="627.5" y="181" width="11.2" height="15.0" fill="rgb(237,138,48)" rx="2" ry="2" />
<text  x="630.50" y="191.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (33 samples, 1.65%)</title><rect x="863.5" y="37" width="19.5" height="15.0" fill="rgb(251,194,20)" rx="2" ry="2" />
<text  x="866.50" y="47.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.05%)</title><rect x="1188.8" y="181" width="0.6" height="15.0" fill="rgb(237,69,42)" rx="2" ry="2" />
<text  x="1191.82" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (1,393 samples, 69.82%)</title><rect x="21.8" y="261" width="824.0" height="15.0" fill="rgb(211,167,0)" rx="2" ry="2" />
<text  x="24.83" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>uma_small_alloc (2 samples, 0.10%)</title><rect x="622.2" y="117" width="1.2" height="15.0" fill="rgb(221,44,37)" rx="2" ry="2" />
<text  x="625.18" y="127.5" ></text>
</g>
<g >
<title>ether_demux (861 samples, 43.16%)</title><rect x="90.4" y="149" width="509.3" height="15.0" fill="rgb(233,130,53)" rx="2" ry="2" />
<text  x="93.44" y="159.5" >ether_demux</text>
</g>
<g >
<title>ip6_input (430 samples, 21.55%)</title><rect x="883.0" y="133" width="254.4" height="15.0" fill="rgb(222,225,8)" rx="2" ry="2" />
<text  x="886.02" y="143.5" >ip6_input</text>
</g>
<g >
<title>ip6_findroute (105 samples, 5.26%)</title><rect x="301.6" y="85" width="62.1" height="15.0" fill="rgb(238,205,8)" rx="2" ry="2" />
<text  x="304.60" y="95.5" >ip6_fi..</text>
</g>
<g >
<title>pf_check6_in (202 samples, 10.13%)</title><rect x="894.9" y="85" width="119.4" height="15.0" fill="rgb(237,140,15)" rx="2" ry="2" />
<text  x="897.85" y="95.5" >pf_check6_in</text>
</g>
<g >
<title>ether_output_frame (20 samples, 1.00%)</title><rect x="883.0" y="85" width="11.9" height="15.0" fill="rgb(237,192,7)" rx="2" ry="2" />
<text  x="886.02" y="95.5" ></text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(230,41,26)" rx="2" ry="2" />
<text  x="1192.41" y="191.5" ></text>
</g>
<g >
<title>bus_dmamap_load (1 samples, 0.05%)</title><rect x="619.8" y="181" width="0.6" height="15.0" fill="rgb(218,159,12)" rx="2" ry="2" />
<text  x="622.81" y="191.5" ></text>
</g>
<g >
<title>pf_pull_hdr (2 samples, 0.10%)</title><rect x="862.3" y="69" width="1.2" height="15.0" fill="rgb(236,70,34)" rx="2" ry="2" />
<text  x="865.32" y="79.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (2 samples, 0.10%)</title><rect x="24.8" y="213" width="1.2" height="15.0" fill="rgb(252,106,29)" rx="2" ry="2" />
<text  x="27.79" y="223.5" ></text>
</g>
</g>
</svg>
