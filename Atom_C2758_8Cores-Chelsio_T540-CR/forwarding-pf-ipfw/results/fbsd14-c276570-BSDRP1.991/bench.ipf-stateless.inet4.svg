<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>netisr_dispatch (46 samples, 0.03%)</title><rect x="47.7" y="197" width="0.4" height="15.0" fill="rgb(220,93,14)" rx="2" ry="2" />
<text  x="50.74" y="207.5" ></text>
</g>
<g >
<title>intr_event_handle (32 samples, 0.02%)</title><rect x="952.5" y="261" width="0.2" height="15.0" fill="rgb(223,32,28)" rx="2" ry="2" />
<text  x="955.47" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (123,401 samples, 74.24%)</title><rect x="48.1" y="197" width="876.1" height="15.0" fill="rgb(214,159,13)" rx="2" ry="2" />
<text  x="51.07" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>lock_delay (10,391 samples, 6.25%)</title><rect x="1094.4" y="37" width="73.8" height="15.0" fill="rgb(254,203,1)" rx="2" ry="2" />
<text  x="1097.41" y="47.5" >lock_delay</text>
</g>
<g >
<title>cpu_idle (81 samples, 0.05%)</title><rect x="951.1" y="245" width="0.6" height="15.0" fill="rgb(218,72,23)" rx="2" ry="2" />
<text  x="954.12" y="255.5" ></text>
</g>
<g >
<title>ipf_auth_check (833 samples, 0.50%)</title><rect x="582.6" y="53" width="5.9" height="15.0" fill="rgb(237,227,26)" rx="2" ry="2" />
<text  x="585.55" y="63.5" ></text>
</g>
<g >
<title>ether_output_frame (8,699 samples, 5.23%)</title><rect x="132.7" y="85" width="61.8" height="15.0" fill="rgb(205,28,47)" rx="2" ry="2" />
<text  x="135.73" y="95.5" >ether_..</text>
</g>
<g >
<title>__mtx_lock_sleep (15,094 samples, 9.08%)</title><rect x="987.3" y="53" width="107.1" height="15.0" fill="rgb(223,149,15)" rx="2" ry="2" />
<text  x="990.25" y="63.5" >__mtx_lock_sl..</text>
</g>
<g >
<title>ffs_balloc_ufs2 (17 samples, 0.01%)</title><rect x="950.7" y="181" width="0.2" height="15.0" fill="rgb(242,182,25)" rx="2" ry="2" />
<text  x="953.73" y="191.5" ></text>
</g>
<g >
<title>lock_delay (15,094 samples, 9.08%)</title><rect x="987.3" y="37" width="107.1" height="15.0" fill="rgb(242,72,21)" rx="2" ry="2" />
<text  x="990.25" y="47.5" >lock_delay</text>
</g>
<g >
<title>m_freem (745 samples, 0.45%)</title><rect x="10.5" y="69" width="5.3" height="15.0" fill="rgb(236,225,0)" rx="2" ry="2" />
<text  x="13.55" y="79.5" ></text>
</g>
<g >
<title>ipf_check (97,260 samples, 58.52%)</title><rect x="232.0" y="69" width="690.5" height="15.0" fill="rgb(206,70,6)" rx="2" ry="2" />
<text  x="235.03" y="79.5" >ipf_check</text>
</g>
<g >
<title>service_iq_fl (1,747 samples, 1.05%)</title><rect x="1177.6" y="261" width="12.4" height="15.0" fill="rgb(252,111,38)" rx="2" ry="2" />
<text  x="1180.58" y="271.5" ></text>
</g>
<g >
<title>cpu_search_highest (19 samples, 0.01%)</title><rect x="951.8" y="229" width="0.1" height="15.0" fill="rgb(213,44,39)" rx="2" ry="2" />
<text  x="954.77" y="239.5" ></text>
</g>
<g >
<title>fib4_lookup (2,401 samples, 1.44%)</title><rect x="204.9" y="85" width="17.0" height="15.0" fill="rgb(245,75,40)" rx="2" ry="2" />
<text  x="207.90" y="95.5" ></text>
</g>
<g >
<title>uma_zfree_arg (745 samples, 0.45%)</title><rect x="10.5" y="37" width="5.3" height="15.0" fill="rgb(241,169,10)" rx="2" ry="2" />
<text  x="13.55" y="47.5" ></text>
</g>
<g >
<title>drain_ring (2,570 samples, 1.55%)</title><rect x="159.0" y="37" width="18.2" height="15.0" fill="rgb(242,222,43)" rx="2" ry="2" />
<text  x="161.95" y="47.5" ></text>
</g>
<g >
<title>ip_input (30,354 samples, 18.26%)</title><rect x="952.7" y="149" width="215.5" height="15.0" fill="rgb(248,29,28)" rx="2" ry="2" />
<text  x="955.70" y="159.5" >ip_input</text>
</g>
<g >
<title>pfil_run_hooks (98,680 samples, 59.37%)</title><rect x="221.9" y="101" width="700.6" height="15.0" fill="rgb(230,40,9)" rx="2" ry="2" />
<text  x="224.95" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>in_localip (802 samples, 0.48%)</title><rect x="197.6" y="101" width="5.7" height="15.0" fill="rgb(231,72,37)" rx="2" ry="2" />
<text  x="200.61" y="111.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (6,359 samples, 3.83%)</title><rect x="859.4" y="37" width="45.2" height="15.0" fill="rgb(208,179,44)" rx="2" ry="2" />
<text  x="862.42" y="47.5" >__mt..</text>
</g>
<g >
<title>keg_alloc_slab (25 samples, 0.02%)</title><rect x="950.5" y="149" width="0.2" height="15.0" fill="rgb(225,136,37)" rx="2" ry="2" />
<text  x="953.51" y="159.5" ></text>
</g>
<g >
<title>sched_switch (48 samples, 0.03%)</title><rect x="16.0" y="229" width="0.4" height="15.0" fill="rgb(227,120,11)" rx="2" ry="2" />
<text  x="19.03" y="239.5" ></text>
</g>
<g >
<title>zone_import (27 samples, 0.02%)</title><rect x="950.5" y="165" width="0.2" height="15.0" fill="rgb(249,229,40)" rx="2" ry="2" />
<text  x="953.50" y="175.5" ></text>
</g>
<g >
<title>t4_intr (131,605 samples, 79.18%)</title><rect x="16.4" y="245" width="934.3" height="15.0" fill="rgb(231,143,34)" rx="2" ry="2" />
<text  x="19.38" y="255.5" >t4_intr</text>
</g>
<g >
<title>ipf_derefrule (15,094 samples, 9.08%)</title><rect x="987.3" y="69" width="107.1" height="15.0" fill="rgb(205,14,42)" rx="2" ry="2" />
<text  x="990.25" y="79.5" >ipf_derefrule</text>
</g>
<g >
<title>ipf_scanlist (10,393 samples, 6.25%)</title><rect x="1094.4" y="69" width="73.8" height="15.0" fill="rgb(244,139,5)" rx="2" ry="2" />
<text  x="1097.41" y="79.5" >ipf_scan..</text>
</g>
<g >
<title>drain_ring (1,746 samples, 1.05%)</title><rect x="1177.6" y="69" width="12.4" height="15.0" fill="rgb(219,16,34)" rx="2" ry="2" />
<text  x="1180.58" y="79.5" ></text>
</g>
<g >
<title>mp_ring_enqueue (4,552 samples, 2.74%)</title><rect x="144.9" y="53" width="32.3" height="15.0" fill="rgb(212,225,6)" rx="2" ry="2" />
<text  x="147.88" y="63.5" >mp..</text>
</g>
<g >
<title>pmclog_process_callchain (20 samples, 0.01%)</title><rect x="1170.0" y="181" width="0.2" height="15.0" fill="rgb(248,204,5)" rx="2" ry="2" />
<text  x="1173.04" y="191.5" ></text>
</g>
<g >
<title>memmove_erms (301 samples, 0.18%)</title><rect x="130.6" y="69" width="2.1" height="15.0" fill="rgb(208,145,18)" rx="2" ry="2" />
<text  x="133.59" y="79.5" ></text>
</g>
<g >
<title>cxgbe_transmit (8,257 samples, 4.97%)</title><rect x="135.9" y="69" width="58.6" height="15.0" fill="rgb(219,59,26)" rx="2" ry="2" />
<text  x="138.87" y="79.5" >cxgbe_..</text>
</g>
<g >
<title>eth_tx (180 samples, 0.11%)</title><rect x="1170.9" y="101" width="1.3" height="15.0" fill="rgb(235,174,1)" rx="2" ry="2" />
<text  x="1173.87" y="111.5" ></text>
</g>
<g >
<title>sched_idletd (191 samples, 0.11%)</title><rect x="950.9" y="261" width="1.4" height="15.0" fill="rgb(227,118,28)" rx="2" ry="2" />
<text  x="953.95" y="271.5" ></text>
</g>
<g >
<title>bsearch4_lookup (1,120 samples, 0.67%)</title><rect x="214.0" y="69" width="7.9" height="15.0" fill="rgb(217,171,49)" rx="2" ry="2" />
<text  x="217.00" y="79.5" ></text>
</g>
<g >
<title>ether_input (30,354 samples, 18.26%)</title><rect x="952.7" y="229" width="215.5" height="15.0" fill="rgb(247,6,45)" rx="2" ry="2" />
<text  x="955.70" y="239.5" >ether_input</text>
</g>
<g >
<title>ether_input (745 samples, 0.45%)</title><rect x="10.5" y="277" width="5.3" height="15.0" fill="rgb(250,67,29)" rx="2" ry="2" />
<text  x="13.55" y="287.5" ></text>
</g>
<g >
<title>ether_output (180 samples, 0.11%)</title><rect x="1170.9" y="181" width="1.3" height="15.0" fill="rgb(236,147,14)" rx="2" ry="2" />
<text  x="1173.87" y="191.5" ></text>
</g>
<g >
<title>ether_demux (745 samples, 0.45%)</title><rect x="10.5" y="229" width="5.3" height="15.0" fill="rgb(211,78,1)" rx="2" ry="2" />
<text  x="13.55" y="239.5" ></text>
</g>
<g >
<title>fork_exit (131,926 samples, 79.37%)</title><rect x="15.8" y="277" width="936.6" height="15.0" fill="rgb(215,18,49)" rx="2" ry="2" />
<text  x="18.84" y="287.5" >fork_exit</text>
</g>
<g >
<title>m_freem (180 samples, 0.11%)</title><rect x="1170.9" y="85" width="1.3" height="15.0" fill="rgb(247,212,1)" rx="2" ry="2" />
<text  x="1173.87" y="95.5" ></text>
</g>
<g >
<title>uma_small_alloc (20 samples, 0.01%)</title><rect x="950.5" y="133" width="0.2" height="15.0" fill="rgb(208,223,29)" rx="2" ry="2" />
<text  x="953.51" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (180 samples, 0.11%)</title><rect x="1170.9" y="165" width="1.3" height="15.0" fill="rgb(235,170,30)" rx="2" ry="2" />
<text  x="1173.87" y="175.5" ></text>
</g>
<g >
<title>ip_tryforward (117,714 samples, 70.82%)</title><rect x="86.8" y="117" width="835.7" height="15.0" fill="rgb(238,139,50)" rx="2" ry="2" />
<text  x="89.82" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>ether_demux (30,354 samples, 18.26%)</title><rect x="952.7" y="181" width="215.5" height="15.0" fill="rgb(227,55,36)" rx="2" ry="2" />
<text  x="955.70" y="191.5" >ether_demux</text>
</g>
<g >
<title>tdq_move (17 samples, 0.01%)</title><rect x="952.2" y="245" width="0.1" height="15.0" fill="rgb(249,134,30)" rx="2" ry="2" />
<text  x="955.15" y="255.5" ></text>
</g>
<g >
<title>ip_input (180 samples, 0.11%)</title><rect x="1170.9" y="213" width="1.3" height="15.0" fill="rgb(252,64,54)" rx="2" ry="2" />
<text  x="1173.87" y="223.5" ></text>
</g>
<g >
<title>ether_output (745 samples, 0.45%)</title><rect x="10.5" y="165" width="5.3" height="15.0" fill="rgb(241,50,36)" rx="2" ry="2" />
<text  x="13.55" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (4,867 samples, 2.93%)</title><rect x="952.7" y="101" width="34.6" height="15.0" fill="rgb(242,52,24)" rx="2" ry="2" />
<text  x="955.70" y="111.5" >et..</text>
</g>
<g >
<title>_epoch_exit_preempt (79 samples, 0.05%)</title><rect x="36.0" y="213" width="0.6" height="15.0" fill="rgb(211,164,47)" rx="2" ry="2" />
<text  x="39.03" y="223.5" ></text>
</g>
<g >
<title>memmove_erms (971 samples, 0.58%)</title><rect x="931.8" y="197" width="6.8" height="15.0" fill="rgb(219,168,46)" rx="2" ry="2" />
<text  x="934.76" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (180 samples, 0.11%)</title><rect x="1170.9" y="261" width="1.3" height="15.0" fill="rgb(214,207,7)" rx="2" ry="2" />
<text  x="1173.87" y="271.5" ></text>
</g>
<g >
<title>pmap_kextract (450 samples, 0.27%)</title><rect x="188.8" y="37" width="3.2" height="15.0" fill="rgb(208,191,47)" rx="2" ry="2" />
<text  x="191.79" y="47.5" ></text>
</g>
<g >
<title>handleevents (265 samples, 0.16%)</title><rect x="1169.0" y="245" width="1.9" height="15.0" fill="rgb(243,133,26)" rx="2" ry="2" />
<text  x="1171.99" y="255.5" ></text>
</g>
<g >
<title>cxgbe_transmit (745 samples, 0.45%)</title><rect x="10.5" y="133" width="5.3" height="15.0" fill="rgb(240,197,15)" rx="2" ry="2" />
<text  x="13.55" y="143.5" ></text>
</g>
<g >
<title>ip_input (119,032 samples, 71.62%)</title><rect x="77.5" y="133" width="845.0" height="15.0" fill="rgb(246,217,32)" rx="2" ry="2" />
<text  x="80.46" y="143.5" >ip_input</text>
</g>
<g >
<title>pfil_run_hooks (25,487 samples, 15.33%)</title><rect x="987.3" y="117" width="180.9" height="15.0" fill="rgb(210,135,39)" rx="2" ry="2" />
<text  x="990.25" y="127.5" >pfil_run_hooks</text>
</g>
<g >
<title>memcmp (212 samples, 0.13%)</title><rect x="922.5" y="165" width="1.5" height="15.0" fill="rgb(230,188,37)" rx="2" ry="2" />
<text  x="925.53" y="175.5" ></text>
</g>
<g >
<title>ipf_check (25,487 samples, 15.33%)</title><rect x="987.3" y="85" width="180.9" height="15.0" fill="rgb(237,28,2)" rx="2" ry="2" />
<text  x="990.25" y="95.5" >ipf_check</text>
</g>
<g >
<title>ether_nh_input (764 samples, 0.46%)</title><rect x="1172.2" y="229" width="5.4" height="15.0" fill="rgb(212,214,35)" rx="2" ry="2" />
<text  x="1175.15" y="239.5" ></text>
</g>
<g >
<title>cxgbe_transmit (4,867 samples, 2.93%)</title><rect x="952.7" y="85" width="34.6" height="15.0" fill="rgb(212,131,34)" rx="2" ry="2" />
<text  x="955.70" y="95.5" >cx..</text>
</g>
<g >
<title>ether_demux (1,747 samples, 1.05%)</title><rect x="1177.6" y="197" width="12.4" height="15.0" fill="rgb(207,164,20)" rx="2" ry="2" />
<text  x="1180.58" y="207.5" ></text>
</g>
<g >
<title>drain_ring (180 samples, 0.11%)</title><rect x="1170.9" y="117" width="1.3" height="15.0" fill="rgb(244,96,31)" rx="2" ry="2" />
<text  x="1173.87" y="127.5" ></text>
</g>
<g >
<title>soft_get_config (22 samples, 0.01%)</title><rect x="1170.2" y="181" width="0.1" height="15.0" fill="rgb(212,49,6)" rx="2" ry="2" />
<text  x="1173.19" y="191.5" ></text>
</g>
<g >
<title>eth_tx (761 samples, 0.46%)</title><rect x="1172.2" y="69" width="5.4" height="15.0" fill="rgb(219,186,14)" rx="2" ry="2" />
<text  x="1175.15" y="79.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (623 samples, 0.37%)</title><rect x="43.3" y="197" width="4.4" height="15.0" fill="rgb(233,45,44)" rx="2" ry="2" />
<text  x="46.32" y="207.5" ></text>
</g>
<g >
<title>mi_switch (59 samples, 0.04%)</title><rect x="16.0" y="245" width="0.4" height="15.0" fill="rgb(227,104,35)" rx="2" ry="2" />
<text  x="18.96" y="255.5" ></text>
</g>
<g >
<title>lapic_et_start (19 samples, 0.01%)</title><rect x="1170.5" y="229" width="0.1" height="15.0" fill="rgb(213,24,25)" rx="2" ry="2" />
<text  x="1173.50" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (764 samples, 0.46%)</title><rect x="1172.2" y="197" width="5.4" height="15.0" fill="rgb(251,42,18)" rx="2" ry="2" />
<text  x="1175.15" y="207.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (20 samples, 0.01%)</title><rect x="950.5" y="117" width="0.2" height="15.0" fill="rgb(230,8,4)" rx="2" ry="2" />
<text  x="953.51" y="127.5" ></text>
</g>
<g >
<title>eth_tx (1,746 samples, 1.05%)</title><rect x="1177.6" y="53" width="12.4" height="15.0" fill="rgb(245,85,33)" rx="2" ry="2" />
<text  x="1180.58" y="63.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (37 samples, 0.02%)</title><rect x="951.3" y="213" width="0.2" height="15.0" fill="rgb(215,57,10)" rx="2" ry="2" />
<text  x="954.27" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (745 samples, 0.45%)</title><rect x="10.5" y="149" width="5.3" height="15.0" fill="rgb(217,185,43)" rx="2" ry="2" />
<text  x="13.55" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,747 samples, 1.05%)</title><rect x="1177.6" y="229" width="12.4" height="15.0" fill="rgb(224,58,9)" rx="2" ry="2" />
<text  x="1180.58" y="239.5" ></text>
</g>
<g >
<title>m_pkthdr_init (153 samples, 0.09%)</title><rect x="949.1" y="165" width="1.1" height="15.0" fill="rgb(216,75,42)" rx="2" ry="2" />
<text  x="952.11" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (17 samples, 0.01%)</title><rect x="924.0" y="165" width="0.2" height="15.0" fill="rgb(232,108,2)" rx="2" ry="2" />
<text  x="927.03" y="175.5" ></text>
</g>
<g >
<title>mp_ring_enqueue (4,766 samples, 2.87%)</title><rect x="952.7" y="69" width="33.8" height="15.0" fill="rgb(205,211,26)" rx="2" ry="2" />
<text  x="955.70" y="79.5" >mp..</text>
</g>
<g >
<title>__mtx_lock_sleep (10,392 samples, 6.25%)</title><rect x="1094.4" y="53" width="73.8" height="15.0" fill="rgb(233,51,5)" rx="2" ry="2" />
<text  x="1097.41" y="63.5" >__mtx_lo..</text>
</g>
<g >
<title>ipf_derefrule (16,033 samples, 9.65%)</title><rect x="588.5" y="53" width="113.8" height="15.0" fill="rgb(238,0,9)" rx="2" ry="2" />
<text  x="591.47" y="63.5" >ipf_derefrule</text>
</g>
<g >
<title>drain_ring (4,766 samples, 2.87%)</title><rect x="952.7" y="53" width="33.8" height="15.0" fill="rgb(240,159,28)" rx="2" ry="2" />
<text  x="955.70" y="63.5" >dr..</text>
</g>
<g >
<title>drain_ring (745 samples, 0.45%)</title><rect x="10.5" y="101" width="5.3" height="15.0" fill="rgb(215,180,53)" rx="2" ry="2" />
<text  x="13.55" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (180 samples, 0.11%)</title><rect x="1170.9" y="229" width="1.3" height="15.0" fill="rgb(214,6,44)" rx="2" ry="2" />
<text  x="1173.87" y="239.5" ></text>
</g>
<g >
<title>parse_pkt (101 samples, 0.06%)</title><rect x="986.5" y="69" width="0.8" height="15.0" fill="rgb(219,54,52)" rx="2" ry="2" />
<text  x="989.54" y="79.5" ></text>
</g>
<g >
<title>pmclog_loop (31 samples, 0.02%)</title><rect x="950.7" y="261" width="0.2" height="15.0" fill="rgb(205,90,16)" rx="2" ry="2" />
<text  x="953.71" y="271.5" ></text>
</g>
<g >
<title>mp_ring_enqueue (745 samples, 0.45%)</title><rect x="10.5" y="117" width="5.3" height="15.0" fill="rgb(206,228,41)" rx="2" ry="2" />
<text  x="13.55" y="127.5" ></text>
</g>
<g >
<title>ether_input (125,018 samples, 75.22%)</title><rect x="36.6" y="213" width="887.6" height="15.0" fill="rgb(233,103,12)" rx="2" ry="2" />
<text  x="39.59" y="223.5" >ether_input</text>
</g>
<g >
<title>service_iq_fl (764 samples, 0.46%)</title><rect x="1172.2" y="277" width="5.4" height="15.0" fill="rgb(245,109,6)" rx="2" ry="2" />
<text  x="1175.15" y="287.5" ></text>
</g>
<g >
<title>_rw_wowned (4,467 samples, 2.69%)</title><rect x="550.8" y="53" width="31.8" height="15.0" fill="rgb(237,223,49)" rx="2" ry="2" />
<text  x="553.84" y="63.5" >_r..</text>
</g>
<g >
<title>ip_input (1,747 samples, 1.05%)</title><rect x="1177.6" y="165" width="12.4" height="15.0" fill="rgb(254,110,8)" rx="2" ry="2" />
<text  x="1180.58" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (745 samples, 0.45%)</title><rect x="10.5" y="261" width="5.3" height="15.0" fill="rgb(211,121,9)" rx="2" ry="2" />
<text  x="13.55" y="271.5" ></text>
</g>
<g >
<title>ether_nh_input (122,725 samples, 73.84%)</title><rect x="52.9" y="181" width="871.3" height="15.0" fill="rgb(239,183,31)" rx="2" ry="2" />
<text  x="55.87" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>VOP_WRITE_APV (31 samples, 0.02%)</title><rect x="950.7" y="213" width="0.2" height="15.0" fill="rgb(240,177,35)" rx="2" ry="2" />
<text  x="953.71" y="223.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (89 samples, 0.05%)</title><rect x="1170.9" y="37" width="0.6" height="15.0" fill="rgb(235,61,22)" rx="2" ry="2" />
<text  x="1173.87" y="47.5" ></text>
</g>
<g >
<title>m_free (288 samples, 0.17%)</title><rect x="1172.2" y="37" width="2.0" height="15.0" fill="rgb(226,187,54)" rx="2" ry="2" />
<text  x="1175.15" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (91 samples, 0.05%)</title><rect x="1171.5" y="37" width="0.7" height="15.0" fill="rgb(232,122,49)" rx="2" ry="2" />
<text  x="1174.51" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (764 samples, 0.46%)</title><rect x="1172.2" y="245" width="5.4" height="15.0" fill="rgb(241,148,14)" rx="2" ry="2" />
<text  x="1175.15" y="255.5" ></text>
</g>
<g >
<title>pmap_kextract (101 samples, 0.06%)</title><rect x="986.5" y="37" width="0.8" height="15.0" fill="rgb(217,62,17)" rx="2" ry="2" />
<text  x="989.54" y="47.5" ></text>
</g>
<g >
<title>ipf_state_check (1,211 samples, 0.73%)</title><rect x="904.6" y="53" width="8.6" height="15.0" fill="rgb(242,118,3)" rx="2" ry="2" />
<text  x="907.56" y="63.5" ></text>
</g>
<g >
<title>ether_demux (180 samples, 0.11%)</title><rect x="1170.9" y="245" width="1.3" height="15.0" fill="rgb(240,83,6)" rx="2" ry="2" />
<text  x="1173.87" y="255.5" ></text>
</g>
<g >
<title>pmc_process_samples (125 samples, 0.08%)</title><rect x="1169.5" y="197" width="0.9" height="15.0" fill="rgb(239,158,19)" rx="2" ry="2" />
<text  x="1172.51" y="207.5" ></text>
</g>
<g >
<title>drain_ring (761 samples, 0.46%)</title><rect x="1172.2" y="85" width="5.4" height="15.0" fill="rgb(234,59,54)" rx="2" ry="2" />
<text  x="1175.15" y="95.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (691 samples, 0.42%)</title><rect x="945.3" y="181" width="4.9" height="15.0" fill="rgb(216,200,4)" rx="2" ry="2" />
<text  x="948.29" y="191.5" ></text>
</g>
<g >
<title>sglist_count (101 samples, 0.06%)</title><rect x="986.5" y="53" width="0.8" height="15.0" fill="rgb(207,53,2)" rx="2" ry="2" />
<text  x="989.54" y="63.5" ></text>
</g>
<g >
<title>m_freem (288 samples, 0.17%)</title><rect x="1172.2" y="53" width="2.0" height="15.0" fill="rgb(222,155,31)" rx="2" ry="2" />
<text  x="1175.15" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (440 samples, 0.26%)</title><rect x="194.5" y="85" width="3.1" height="15.0" fill="rgb(239,225,54)" rx="2" ry="2" />
<text  x="197.49" y="95.5" ></text>
</g>
<g >
<title>t4_intr (1,747 samples, 1.05%)</title><rect x="1177.6" y="277" width="12.4" height="15.0" fill="rgb(205,13,10)" rx="2" ry="2" />
<text  x="1180.58" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (119,615 samples, 71.97%)</title><rect x="73.3" y="149" width="849.2" height="15.0" fill="rgb(228,114,24)" rx="2" ry="2" />
<text  x="76.32" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch_src (745 samples, 0.45%)</title><rect x="10.5" y="213" width="5.3" height="15.0" fill="rgb(236,117,48)" rx="2" ry="2" />
<text  x="13.55" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (30,354 samples, 18.26%)</title><rect x="952.7" y="165" width="215.5" height="15.0" fill="rgb(247,147,54)" rx="2" ry="2" />
<text  x="955.70" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_input (764 samples, 0.46%)</title><rect x="1172.2" y="261" width="5.4" height="15.0" fill="rgb(205,224,28)" rx="2" ry="2" />
<text  x="1175.15" y="271.5" ></text>
</g>
<g >
<title>intr_execute_handlers (36 samples, 0.02%)</title><rect x="952.4" y="277" width="0.3" height="15.0" fill="rgb(215,221,26)" rx="2" ry="2" />
<text  x="955.44" y="287.5" ></text>
</g>
<g >
<title>ether_output_frame (1,746 samples, 1.05%)</title><rect x="1177.6" y="117" width="12.4" height="15.0" fill="rgb(205,125,14)" rx="2" ry="2" />
<text  x="1180.58" y="127.5" ></text>
</g>
<g >
<title>service_iq_fl (30,354 samples, 18.26%)</title><rect x="952.7" y="245" width="215.5" height="15.0" fill="rgb(230,18,30)" rx="2" ry="2" />
<text  x="955.70" y="255.5" >service_iq_fl</text>
</g>
<g >
<title>ithread_loop (30,354 samples, 18.26%)</title><rect x="952.7" y="277" width="215.5" height="15.0" fill="rgb(240,193,11)" rx="2" ry="2" />
<text  x="955.70" y="287.5" >ithread_loop</text>
</g>
<g >
<title>ip_tryforward (180 samples, 0.11%)</title><rect x="1170.9" y="197" width="1.3" height="15.0" fill="rgb(222,41,25)" rx="2" ry="2" />
<text  x="1173.87" y="207.5" ></text>
</g>
<g >
<title>ether_output (4,867 samples, 2.93%)</title><rect x="952.7" y="117" width="34.6" height="15.0" fill="rgb(216,227,16)" rx="2" ry="2" />
<text  x="955.70" y="127.5" >et..</text>
</g>
<g >
<title>memset_erms (1,319 samples, 0.79%)</title><rect x="913.2" y="53" width="9.3" height="15.0" fill="rgb(245,193,13)" rx="2" ry="2" />
<text  x="916.16" y="63.5" ></text>
</g>
<g >
<title>service_iq_fl (131,605 samples, 79.18%)</title><rect x="16.4" y="229" width="934.3" height="15.0" fill="rgb(251,158,37)" rx="2" ry="2" />
<text  x="19.38" y="239.5" >service_iq_fl</text>
</g>
<g >
<title>ip_input (745 samples, 0.45%)</title><rect x="10.5" y="197" width="5.3" height="15.0" fill="rgb(249,147,46)" rx="2" ry="2" />
<text  x="13.55" y="207.5" ></text>
</g>
<g >
<title>vn_io_fault (31 samples, 0.02%)</title><rect x="950.7" y="245" width="0.2" height="15.0" fill="rgb(206,172,42)" rx="2" ry="2" />
<text  x="953.71" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (30,354 samples, 18.26%)</title><rect x="952.7" y="213" width="215.5" height="15.0" fill="rgb(212,135,35)" rx="2" ry="2" />
<text  x="955.70" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>uma_zalloc_arg (1,627 samples, 0.98%)</title><rect x="938.6" y="197" width="11.6" height="15.0" fill="rgb(249,130,35)" rx="2" ry="2" />
<text  x="941.65" y="207.5" ></text>
</g>
<g >
<title>binuptime (46 samples, 0.03%)</title><rect x="1168.7" y="245" width="0.3" height="15.0" fill="rgb(249,26,12)" rx="2" ry="2" />
<text  x="1171.66" y="255.5" ></text>
</g>
<g >
<title>ffs_write (31 samples, 0.02%)</title><rect x="950.7" y="197" width="0.2" height="15.0" fill="rgb(232,172,28)" rx="2" ry="2" />
<text  x="953.71" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (96 samples, 0.06%)</title><rect x="72.6" y="149" width="0.7" height="15.0" fill="rgb(230,176,5)" rx="2" ry="2" />
<text  x="75.64" y="159.5" ></text>
</g>
<g >
<title>ipf_nat_checkout (441 samples, 0.27%)</title><rect x="739.6" y="53" width="3.1" height="15.0" fill="rgb(226,158,28)" rx="2" ry="2" />
<text  x="742.61" y="63.5" ></text>
</g>
<g >
<title>get_scatter_segment (3,669 samples, 2.21%)</title><rect x="924.2" y="213" width="26.0" height="15.0" fill="rgb(209,222,19)" rx="2" ry="2" />
<text  x="927.15" y="223.5" >g..</text>
</g>
<g >
<title>netisr_dispatch_src (1,747 samples, 1.05%)</title><rect x="1177.6" y="181" width="12.4" height="15.0" fill="rgb(232,22,6)" rx="2" ry="2" />
<text  x="1180.58" y="191.5" ></text>
</g>
<g >
<title>m_adj (448 samples, 0.27%)</title><rect x="69.5" y="149" width="3.1" height="15.0" fill="rgb(218,79,9)" rx="2" ry="2" />
<text  x="72.46" y="159.5" ></text>
</g>
<g >
<title>arpresolve (1,906 samples, 1.15%)</title><rect x="119.2" y="85" width="13.5" height="15.0" fill="rgb(227,118,44)" rx="2" ry="2" />
<text  x="122.20" y="95.5" ></text>
</g>
<g >
<title>acpi_cpu_idle_mwait (25 samples, 0.02%)</title><rect x="951.4" y="197" width="0.1" height="15.0" fill="rgb(226,195,43)" rx="2" ry="2" />
<text  x="954.35" y="207.5" ></text>
</g>
<g >
<title>ether_input (1,747 samples, 1.05%)</title><rect x="1177.6" y="245" width="12.4" height="15.0" fill="rgb(225,135,20)" rx="2" ry="2" />
<text  x="1180.58" y="255.5" ></text>
</g>
<g >
<title>ipf_nat_checkin (393 samples, 0.24%)</title><rect x="736.8" y="53" width="2.8" height="15.0" fill="rgb(206,149,37)" rx="2" ry="2" />
<text  x="739.82" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (8,001 samples, 4.81%)</title><rect x="645.5" y="37" width="56.8" height="15.0" fill="rgb(227,89,47)" rx="2" ry="2" />
<text  x="648.49" y="47.5" >__mtx_..</text>
</g>
<g >
<title>ipf_check_wrapper (25,487 samples, 15.33%)</title><rect x="987.3" y="101" width="180.9" height="15.0" fill="rgb(250,55,7)" rx="2" ry="2" />
<text  x="990.25" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>memmove_erms (473 samples, 0.28%)</title><rect x="1174.2" y="37" width="3.4" height="15.0" fill="rgb(224,86,38)" rx="2" ry="2" />
<text  x="1177.20" y="47.5" ></text>
</g>
<g >
<title>mp_ring_enqueue (180 samples, 0.11%)</title><rect x="1170.9" y="133" width="1.3" height="15.0" fill="rgb(218,29,43)" rx="2" ry="2" />
<text  x="1173.87" y="143.5" ></text>
</g>
<g >
<title>ipf_makefrip (4,863 samples, 2.93%)</title><rect x="702.3" y="53" width="34.5" height="15.0" fill="rgb(235,220,11)" rx="2" ry="2" />
<text  x="705.29" y="63.5" >ip..</text>
</g>
<g >
<title>ether_output (1,746 samples, 1.05%)</title><rect x="1177.6" y="133" width="12.4" height="15.0" fill="rgb(232,181,54)" rx="2" ry="2" />
<text  x="1180.58" y="143.5" ></text>
</g>
<g >
<title>cxgbe_transmit (1,746 samples, 1.05%)</title><rect x="1177.6" y="101" width="12.4" height="15.0" fill="rgb(221,177,49)" rx="2" ry="2" />
<text  x="1180.58" y="111.5" ></text>
</g>
<g >
<title>cpu_idleclock (19 samples, 0.01%)</title><rect x="951.6" y="229" width="0.1" height="15.0" fill="rgb(230,185,39)" rx="2" ry="2" />
<text  x="954.56" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (1,747 samples, 1.05%)</title><rect x="1177.6" y="213" width="12.4" height="15.0" fill="rgb(228,1,53)" rx="2" ry="2" />
<text  x="1180.58" y="223.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (793 samples, 0.48%)</title><rect x="545.2" y="53" width="5.6" height="15.0" fill="rgb(218,210,1)" rx="2" ry="2" />
<text  x="548.21" y="63.5" ></text>
</g>
<g >
<title>uma_zfree_arg (180 samples, 0.11%)</title><rect x="1170.9" y="53" width="1.3" height="15.0" fill="rgb(216,147,44)" rx="2" ry="2" />
<text  x="1173.87" y="63.5" ></text>
</g>
<g >
<title>__rw_rlock_int (5,278 samples, 3.18%)</title><rect x="507.7" y="53" width="37.5" height="15.0" fill="rgb(243,36,31)" rx="2" ry="2" />
<text  x="510.74" y="63.5" >__r..</text>
</g>
<g >
<title>ithread_loop (131,680 samples, 79.23%)</title><rect x="15.8" y="261" width="934.9" height="15.0" fill="rgb(241,2,52)" rx="2" ry="2" />
<text  x="18.85" y="271.5" >ithread_loop</text>
</g>
<g >
<title>ipf_check_wrapper (97,746 samples, 58.81%)</title><rect x="228.6" y="85" width="693.9" height="15.0" fill="rgb(208,105,42)" rx="2" ry="2" />
<text  x="231.58" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>mp_ring_enqueue (1,746 samples, 1.05%)</title><rect x="1177.6" y="85" width="12.4" height="15.0" fill="rgb(231,19,46)" rx="2" ry="2" />
<text  x="1180.58" y="95.5" ></text>
</g>
<g >
<title>refill_fl (50 samples, 0.03%)</title><rect x="950.4" y="213" width="0.3" height="15.0" fill="rgb(226,126,4)" rx="2" ry="2" />
<text  x="953.36" y="223.5" ></text>
</g>
<g >
<title>parse_pkt (2,435 samples, 1.47%)</title><rect x="177.2" y="53" width="17.3" height="15.0" fill="rgb(221,120,48)" rx="2" ry="2" />
<text  x="180.20" y="63.5" ></text>
</g>
<g >
<title>mp_ring_enqueue (761 samples, 0.46%)</title><rect x="1172.2" y="101" width="5.4" height="15.0" fill="rgb(229,210,48)" rx="2" ry="2" />
<text  x="1175.15" y="111.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (152 samples, 0.09%)</title><rect x="42.2" y="181" width="1.1" height="15.0" fill="rgb(208,32,52)" rx="2" ry="2" />
<text  x="45.24" y="191.5" ></text>
</g>
<g >
<title>ipf_scanlist (22,794 samples, 13.71%)</title><rect x="742.7" y="53" width="161.9" height="15.0" fill="rgb(209,150,44)" rx="2" ry="2" />
<text  x="745.74" y="63.5" >ipf_scanlist</text>
</g>
<g >
<title>ip_tryforward (745 samples, 0.45%)</title><rect x="10.5" y="181" width="5.3" height="15.0" fill="rgb(206,67,34)" rx="2" ry="2" />
<text  x="13.55" y="191.5" ></text>
</g>
<g >
<title>m_free (745 samples, 0.45%)</title><rect x="10.5" y="53" width="5.3" height="15.0" fill="rgb(228,184,25)" rx="2" ry="2" />
<text  x="13.55" y="63.5" ></text>
</g>
<g >
<title>eth_tx (4,766 samples, 2.87%)</title><rect x="952.7" y="37" width="33.8" height="15.0" fill="rgb(223,208,18)" rx="2" ry="2" />
<text  x="955.70" y="47.5" >et..</text>
</g>
<g >
<title>all (166,209 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(218,170,2)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>timercb (329 samples, 0.20%)</title><rect x="1168.5" y="261" width="2.4" height="15.0" fill="rgb(227,203,10)" rx="2" ry="2" />
<text  x="1171.54" y="271.5" ></text>
</g>
<g >
<title>cache_alloc (27 samples, 0.02%)</title><rect x="950.5" y="181" width="0.2" height="15.0" fill="rgb(209,56,36)" rx="2" ry="2" />
<text  x="953.50" y="191.5" ></text>
</g>
<g >
<title>ether_output (761 samples, 0.46%)</title><rect x="1172.2" y="149" width="5.4" height="15.0" fill="rgb(206,60,51)" rx="2" ry="2" />
<text  x="1175.15" y="159.5" ></text>
</g>
<g >
<title>ip_input (764 samples, 0.46%)</title><rect x="1172.2" y="181" width="5.4" height="15.0" fill="rgb(252,127,47)" rx="2" ry="2" />
<text  x="1175.15" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (375 samples, 0.23%)</title><rect x="1168.2" y="277" width="2.7" height="15.0" fill="rgb(232,220,10)" rx="2" ry="2" />
<text  x="1171.21" y="287.5" ></text>
</g>
<g >
<title>intr_event_schedule_thread (23 samples, 0.01%)</title><rect x="952.5" y="245" width="0.2" height="15.0" fill="rgb(224,87,43)" rx="2" ry="2" />
<text  x="955.51" y="255.5" ></text>
</g>
<g >
<title>ether_output_frame (761 samples, 0.46%)</title><rect x="1172.2" y="133" width="5.4" height="15.0" fill="rgb(206,179,12)" rx="2" ry="2" />
<text  x="1175.15" y="143.5" ></text>
</g>
<g >
<title>eth_tx (745 samples, 0.45%)</title><rect x="10.5" y="85" width="5.3" height="15.0" fill="rgb(217,54,34)" rx="2" ry="2" />
<text  x="13.55" y="95.5" ></text>
</g>
<g >
<title>m_freem (152 samples, 0.09%)</title><rect x="1177.6" y="37" width="1.1" height="15.0" fill="rgb(229,135,10)" rx="2" ry="2" />
<text  x="1180.58" y="47.5" ></text>
</g>
<g >
<title>hardclock (188 samples, 0.11%)</title><rect x="1169.2" y="229" width="1.3" height="15.0" fill="rgb(239,16,38)" rx="2" ry="2" />
<text  x="1172.17" y="239.5" ></text>
</g>
<g >
<title>vn_write (31 samples, 0.02%)</title><rect x="950.7" y="229" width="0.2" height="15.0" fill="rgb(213,106,10)" rx="2" ry="2" />
<text  x="953.71" y="239.5" ></text>
</g>
<g >
<title>doreti (15 samples, 0.01%)</title><rect x="10.4" y="277" width="0.1" height="15.0" fill="rgb(244,47,13)" rx="2" ry="2" />
<text  x="13.44" y="287.5" ></text>
</g>
<g >
<title>cpu_search_highest (30 samples, 0.02%)</title><rect x="951.7" y="245" width="0.2" height="15.0" fill="rgb(223,98,10)" rx="2" ry="2" />
<text  x="954.69" y="255.5" ></text>
</g>
<g >
<title>cxgbe_transmit (180 samples, 0.11%)</title><rect x="1170.9" y="149" width="1.3" height="15.0" fill="rgb(221,170,24)" rx="2" ry="2" />
<text  x="1173.87" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (745 samples, 0.45%)</title><rect x="10.5" y="245" width="5.3" height="15.0" fill="rgb(220,52,46)" rx="2" ry="2" />
<text  x="13.55" y="255.5" ></text>
</g>
<g >
<title>lock_delay (12,120 samples, 7.29%)</title><rect x="421.7" y="37" width="86.0" height="15.0" fill="rgb(242,81,11)" rx="2" ry="2" />
<text  x="424.69" y="47.5" >lock_delay</text>
</g>
<g >
<title>ether_output (13,193 samples, 7.94%)</title><rect x="103.9" y="101" width="93.7" height="15.0" fill="rgb(251,224,48)" rx="2" ry="2" />
<text  x="106.95" y="111.5" >ether_output</text>
</g>
<g >
<title>cache_alloc_retry (27 samples, 0.02%)</title><rect x="950.5" y="197" width="0.2" height="15.0" fill="rgb(209,32,30)" rx="2" ry="2" />
<text  x="953.50" y="207.5" ></text>
</g>
<g >
<title>ether_demux (764 samples, 0.46%)</title><rect x="1172.2" y="213" width="5.4" height="15.0" fill="rgb(223,217,46)" rx="2" ry="2" />
<text  x="1175.15" y="223.5" ></text>
</g>
<g >
<title>write_txpkt_wr (473 samples, 0.28%)</title><rect x="1174.2" y="53" width="3.4" height="15.0" fill="rgb(238,141,2)" rx="2" ry="2" />
<text  x="1177.20" y="63.5" ></text>
</g>
<g >
<title>m_free (180 samples, 0.11%)</title><rect x="1170.9" y="69" width="1.3" height="15.0" fill="rgb(218,164,20)" rx="2" ry="2" />
<text  x="1173.87" y="79.5" ></text>
</g>
<g >
<title>cxgbe_transmit (761 samples, 0.46%)</title><rect x="1172.2" y="117" width="5.4" height="15.0" fill="rgb(209,57,15)" rx="2" ry="2" />
<text  x="1175.15" y="127.5" ></text>
</g>
<g >
<title>ipf_pr_pullup (645 samples, 0.39%)</title><rect x="732.2" y="37" width="4.6" height="15.0" fill="rgb(213,89,13)" rx="2" ry="2" />
<text  x="735.24" y="47.5" ></text>
</g>
<g >
<title>pmc_hook_handler (134 samples, 0.08%)</title><rect x="1169.4" y="213" width="1.0" height="15.0" fill="rgb(222,125,21)" rx="2" ry="2" />
<text  x="1172.45" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (764 samples, 0.46%)</title><rect x="1172.2" y="165" width="5.4" height="15.0" fill="rgb(240,104,35)" rx="2" ry="2" />
<text  x="1175.15" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (30,354 samples, 18.26%)</title><rect x="952.7" y="197" width="215.5" height="15.0" fill="rgb(243,188,0)" rx="2" ry="2" />
<text  x="955.70" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>pagezero_erms (20 samples, 0.01%)</title><rect x="950.5" y="101" width="0.2" height="15.0" fill="rgb(223,88,35)" rx="2" ry="2" />
<text  x="953.51" y="111.5" ></text>
</g>
<g >
<title>Xtimerint_pti (22 samples, 0.01%)</title><rect x="10.3" y="277" width="0.1" height="15.0" fill="rgb(235,226,20)" rx="2" ry="2" />
<text  x="13.27" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (180 samples, 0.11%)</title><rect x="1170.9" y="277" width="1.3" height="15.0" fill="rgb(248,45,47)" rx="2" ry="2" />
<text  x="1173.87" y="287.5" ></text>
</g>
<g >
<title>t4_intr (30,354 samples, 18.26%)</title><rect x="952.7" y="261" width="215.5" height="15.0" fill="rgb(240,14,4)" rx="2" ry="2" />
<text  x="955.70" y="271.5" >t4_intr</text>
</g>
<g >
<title>__mtx_lock_sleep (19,212 samples, 11.56%)</title><rect x="371.3" y="53" width="136.4" height="15.0" fill="rgb(224,10,37)" rx="2" ry="2" />
<text  x="374.34" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>handleevents (16 samples, 0.01%)</title><rect x="951.1" y="213" width="0.1" height="15.0" fill="rgb(226,186,23)" rx="2" ry="2" />
<text  x="954.13" y="223.5" ></text>
</g>
<g >
<title>mi_switch (24 samples, 0.01%)</title><rect x="951.9" y="245" width="0.2" height="15.0" fill="rgb(241,59,43)" rx="2" ry="2" />
<text  x="954.93" y="255.5" ></text>
</g>
<g >
<title>ip_tryforward (30,354 samples, 18.26%)</title><rect x="952.7" y="133" width="215.5" height="15.0" fill="rgb(223,149,42)" rx="2" ry="2" />
<text  x="955.70" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>ipf_checkv4sum (1,074 samples, 0.65%)</title><rect x="724.6" y="37" width="7.6" height="15.0" fill="rgb(211,79,3)" rx="2" ry="2" />
<text  x="727.61" y="47.5" ></text>
</g>
<g >
<title>ether_demux (120,989 samples, 72.79%)</title><rect x="63.6" y="165" width="858.9" height="15.0" fill="rgb(226,134,36)" rx="2" ry="2" />
<text  x="66.57" y="175.5" >ether_demux</text>
</g>
<g >
<title>cpu_idle_acpi (41 samples, 0.02%)</title><rect x="951.3" y="229" width="0.3" height="15.0" fill="rgb(251,48,34)" rx="2" ry="2" />
<text  x="954.27" y="239.5" ></text>
</g>
<g >
<title>sglist_count (353 samples, 0.21%)</title><rect x="192.0" y="37" width="2.5" height="15.0" fill="rgb(214,192,26)" rx="2" ry="2" />
<text  x="194.98" y="47.5" ></text>
</g>
<g >
<title>in_lltable_lookup (501 samples, 0.30%)</title><rect x="127.0" y="69" width="3.6" height="15.0" fill="rgb(212,29,5)" rx="2" ry="2" />
<text  x="130.04" y="79.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (117 samples, 0.07%)</title><rect x="46.9" y="181" width="0.8" height="15.0" fill="rgb(242,218,22)" rx="2" ry="2" />
<text  x="49.91" y="191.5" ></text>
</g>
<g >
<title>ip_findroute (2,626 samples, 1.58%)</title><rect x="203.3" y="101" width="18.6" height="15.0" fill="rgb(249,112,48)" rx="2" ry="2" />
<text  x="206.31" y="111.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (516 samples, 0.31%)</title><rect x="39.7" y="197" width="3.6" height="15.0" fill="rgb(211,200,29)" rx="2" ry="2" />
<text  x="42.65" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (1,747 samples, 1.05%)</title><rect x="1177.6" y="149" width="12.4" height="15.0" fill="rgb(208,63,23)" rx="2" ry="2" />
<text  x="1180.58" y="159.5" ></text>
</g>
<g >
<title>cpu_activeclock (20 samples, 0.01%)</title><rect x="951.1" y="229" width="0.2" height="15.0" fill="rgb(241,103,16)" rx="2" ry="2" />
<text  x="954.12" y="239.5" ></text>
</g>
<g >
<title>Xtimerint (23 samples, 0.01%)</title><rect x="10.1" y="277" width="0.2" height="15.0" fill="rgb(236,64,41)" rx="2" ry="2" />
<text  x="13.11" y="287.5" ></text>
</g>
<g >
<title>write_txpkt_wr (1,594 samples, 0.96%)</title><rect x="1178.7" y="37" width="11.3" height="15.0" fill="rgb(208,10,32)" rx="2" ry="2" />
<text  x="1181.66" y="47.5" ></text>
</g>
</g>
</svg>
