<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>__mtx_lock_sleep (394 samples, 1.97%)</title><rect x="55.3" y="37" width="23.3" height="15.0" fill="rgb(222,134,22)" rx="2" ry="2" />
<text  x="58.30" y="47.5" >_..</text>
</g>
<g >
<title>__rw_rlock_int (408 samples, 2.04%)</title><rect x="78.6" y="37" width="24.1" height="15.0" fill="rgb(205,27,7)" rx="2" ry="2" />
<text  x="81.59" y="47.5" >_..</text>
</g>
<g >
<title>lock_delay (9 samples, 0.05%)</title><rect x="459.9" y="37" width="0.5" height="15.0" fill="rgb(252,228,36)" rx="2" ry="2" />
<text  x="462.88" y="47.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (1,387 samples, 6.95%)</title><rect x="1053.4" y="101" width="82.0" height="15.0" fill="rgb(208,78,17)" rx="2" ry="2" />
<text  x="1056.40" y="111.5" >pfil_mbuf..</text>
</g>
<g >
<title>ipf_state_check (3,455 samples, 17.31%)</title><rect x="460.7" y="69" width="204.3" height="15.0" fill="rgb(208,16,6)" rx="2" ry="2" />
<text  x="463.65" y="79.5" >ipf_state_check</text>
</g>
<g >
<title>ipf_check_wrapper (1,387 samples, 6.95%)</title><rect x="1053.4" y="85" width="82.0" height="15.0" fill="rgb(248,79,28)" rx="2" ry="2" />
<text  x="1056.40" y="95.5" >ipf_check..</text>
</g>
<g >
<title>ip_input (7,642 samples, 38.30%)</title><rect x="459.1" y="149" width="451.9" height="15.0" fill="rgb(207,122,6)" rx="2" ry="2" />
<text  x="462.12" y="159.5" >ip_input</text>
</g>
<g >
<title>fork_exit (7,595 samples, 38.06%)</title><rect x="10.0" y="277" width="449.1" height="15.0" fill="rgb(247,215,25)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >fork_exit</text>
</g>
<g >
<title>ipf_check (3,178 samples, 15.93%)</title><rect x="10.9" y="53" width="188.0" height="15.0" fill="rgb(231,215,51)" rx="2" ry="2" />
<text  x="13.95" y="63.5" >ipf_check</text>
</g>
<g >
<title>ipf_state_check (504 samples, 2.53%)</title><rect x="1105.6" y="53" width="29.8" height="15.0" fill="rgb(206,5,13)" rx="2" ry="2" />
<text  x="1108.62" y="63.5" >ip..</text>
</g>
<g >
<title>keg_fetch_free_slab (3 samples, 0.02%)</title><rect x="458.9" y="133" width="0.2" height="15.0" fill="rgb(231,94,3)" rx="2" ry="2" />
<text  x="461.94" y="143.5" ></text>
</g>
<g >
<title>ipf_derefrule (15 samples, 0.08%)</title><rect x="665.0" y="69" width="0.8" height="15.0" fill="rgb(230,63,14)" rx="2" ry="2" />
<text  x="667.96" y="79.5" ></text>
</g>
<g >
<title>ether_input (7,587 samples, 38.02%)</title><rect x="10.0" y="197" width="448.6" height="15.0" fill="rgb(224,200,8)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >ether_input</text>
</g>
<g >
<title>ether_demux (732 samples, 3.67%)</title><rect x="1135.4" y="213" width="43.3" height="15.0" fill="rgb(236,58,12)" rx="2" ry="2" />
<text  x="1138.42" y="223.5" >ethe..</text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="1053.4" y="37" width="0.2" height="15.0" fill="rgb(254,115,45)" rx="2" ry="2" />
<text  x="1056.40" y="47.5" ></text>
</g>
<g >
<title>lock_delay (600 samples, 3.01%)</title><rect x="395.3" y="37" width="35.5" height="15.0" fill="rgb(220,45,34)" rx="2" ry="2" />
<text  x="398.31" y="47.5" >loc..</text>
</g>
<g >
<title>ip_input (3,795 samples, 19.02%)</title><rect x="911.0" y="133" width="224.4" height="15.0" fill="rgb(218,176,12)" rx="2" ry="2" />
<text  x="914.01" y="143.5" >ip_input</text>
</g>
<g >
<title>ether_output (732 samples, 3.67%)</title><rect x="1135.4" y="149" width="43.3" height="15.0" fill="rgb(217,167,25)" rx="2" ry="2" />
<text  x="1138.42" y="159.5" >ethe..</text>
</g>
<g >
<title>ipf_scanlist (676 samples, 3.39%)</title><rect x="991.3" y="53" width="40.0" height="15.0" fill="rgb(218,181,43)" rx="2" ry="2" />
<text  x="994.31" y="63.5" >ipf..</text>
</g>
<g >
<title>memset_erms (37 samples, 0.19%)</title><rect x="1031.6" y="37" width="2.2" height="15.0" fill="rgb(248,144,53)" rx="2" ry="2" />
<text  x="1034.64" y="47.5" ></text>
</g>
<g >
<title>lock_delay (935 samples, 4.69%)</title><rect x="936.0" y="37" width="55.3" height="15.0" fill="rgb(236,184,27)" rx="2" ry="2" />
<text  x="939.02" y="47.5" >lock_..</text>
</g>
<g >
<title>netisr_dispatch_src (3,795 samples, 19.02%)</title><rect x="911.0" y="197" width="224.4" height="15.0" fill="rgb(236,24,27)" rx="2" ry="2" />
<text  x="914.01" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pfil_mbuf_fwd (2,408 samples, 12.07%)</title><rect x="911.0" y="101" width="142.4" height="15.0" fill="rgb(245,175,3)" rx="2" ry="2" />
<text  x="914.01" y="111.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>zone_import (8 samples, 0.04%)</title><rect x="458.6" y="149" width="0.5" height="15.0" fill="rgb(236,165,39)" rx="2" ry="2" />
<text  x="461.64" y="159.5" ></text>
</g>
<g >
<title>ipf_state_lookup (334 samples, 1.67%)</title><rect x="1115.7" y="37" width="19.7" height="15.0" fill="rgb(239,21,45)" rx="2" ry="2" />
<text  x="1118.67" y="47.5" ></text>
</g>
<g >
<title>ip_input (732 samples, 3.67%)</title><rect x="1135.4" y="181" width="43.3" height="15.0" fill="rgb(239,164,33)" rx="2" ry="2" />
<text  x="1138.42" y="191.5" >ip_i..</text>
</g>
<g >
<title>lock_delay (3 samples, 0.02%)</title><rect x="458.9" y="117" width="0.2" height="15.0" fill="rgb(219,159,22)" rx="2" ry="2" />
<text  x="461.94" y="127.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (4,393 samples, 22.01%)</title><rect x="198.9" y="85" width="259.7" height="15.0" fill="rgb(230,7,35)" rx="2" ry="2" />
<text  x="201.87" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>gtaskqueue_run_locked (7,642 samples, 38.30%)</title><rect x="459.1" y="277" width="451.9" height="15.0" fill="rgb(224,46,10)" rx="2" ry="2" />
<text  x="462.12" y="287.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ip_tryforward (7,587 samples, 38.02%)</title><rect x="10.0" y="101" width="448.6" height="15.0" fill="rgb(254,116,37)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>lock_delay (13 samples, 0.07%)</title><rect x="459.1" y="37" width="0.8" height="15.0" fill="rgb(241,32,0)" rx="2" ry="2" />
<text  x="462.12" y="47.5" ></text>
</g>
<g >
<title>ipf_check (3,867 samples, 19.38%)</title><rect x="230.0" y="53" width="228.6" height="15.0" fill="rgb(209,3,49)" rx="2" ry="2" />
<text  x="232.97" y="63.5" >ipf_check</text>
</g>
<g >
<title>gtaskqueue_thread_loop (7,595 samples, 38.06%)</title><rect x="10.0" y="261" width="449.1" height="15.0" fill="rgb(237,56,49)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ixl_isc_txd_encap (732 samples, 3.67%)</title><rect x="1135.4" y="37" width="43.3" height="15.0" fill="rgb(248,92,1)" rx="2" ry="2" />
<text  x="1138.42" y="47.5" >ixl_..</text>
</g>
<g >
<title>lock_delay (14 samples, 0.07%)</title><rect x="911.0" y="37" width="0.8" height="15.0" fill="rgb(206,145,25)" rx="2" ry="2" />
<text  x="914.01" y="47.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (224 samples, 1.12%)</title><rect x="476.0" y="37" width="13.3" height="15.0" fill="rgb(249,86,5)" rx="2" ry="2" />
<text  x="479.03" y="47.5" ></text>
</g>
<g >
<title>ipf_state_lookup (3,455 samples, 17.31%)</title><rect x="460.7" y="53" width="204.3" height="15.0" fill="rgb(227,17,2)" rx="2" ry="2" />
<text  x="463.65" y="63.5" >ipf_state_lookup</text>
</g>
<g >
<title>pfil_mbuf_fwd (191 samples, 0.96%)</title><rect x="1178.7" y="277" width="11.3" height="15.0" fill="rgb(247,64,8)" rx="2" ry="2" />
<text  x="1181.71" y="287.5" ></text>
</g>
<g >
<title>all (19,955 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(215,155,45)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ipf_derefrule (1,344 samples, 6.74%)</title><rect x="911.8" y="53" width="79.5" height="15.0" fill="rgb(241,186,35)" rx="2" ry="2" />
<text  x="914.84" y="63.5" >ipf_deref..</text>
</g>
<g >
<title>_rw_runlock_cookie_int (143 samples, 0.72%)</title><rect x="1033.8" y="37" width="8.5" height="15.0" fill="rgb(254,206,1)" rx="2" ry="2" />
<text  x="1036.83" y="47.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="460.5" y="37" width="0.2" height="15.0" fill="rgb(214,199,32)" rx="2" ry="2" />
<text  x="463.53" y="47.5" ></text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.04%)</title><rect x="458.6" y="181" width="0.5" height="15.0" fill="rgb(229,65,26)" rx="2" ry="2" />
<text  x="461.64" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3,795 samples, 19.02%)</title><rect x="911.0" y="149" width="224.4" height="15.0" fill="rgb(247,95,25)" rx="2" ry="2" />
<text  x="914.01" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_demux (7,587 samples, 38.02%)</title><rect x="10.0" y="149" width="448.6" height="15.0" fill="rgb(252,108,2)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >ether_demux</text>
</g>
<g >
<title>iflib_if_transmit (732 samples, 3.67%)</title><rect x="1135.4" y="117" width="43.3" height="15.0" fill="rgb(224,27,27)" rx="2" ry="2" />
<text  x="1138.42" y="127.5" >ifli..</text>
</g>
<g >
<title>__mtx_lock_sleep (9 samples, 0.05%)</title><rect x="459.9" y="53" width="0.5" height="15.0" fill="rgb(228,49,18)" rx="2" ry="2" />
<text  x="462.88" y="63.5" ></text>
</g>
<g >
<title>ipf_derefrule (262 samples, 1.31%)</title><rect x="362.7" y="37" width="15.5" height="15.0" fill="rgb(217,51,38)" rx="2" ry="2" />
<text  x="365.73" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (732 samples, 3.67%)</title><rect x="1135.4" y="101" width="43.3" height="15.0" fill="rgb(252,79,52)" rx="2" ry="2" />
<text  x="1138.42" y="111.5" >ifmp..</text>
</g>
<g >
<title>__mtx_lock_sleep (13 samples, 0.07%)</title><rect x="459.1" y="53" width="0.8" height="15.0" fill="rgb(245,151,52)" rx="2" ry="2" />
<text  x="462.12" y="63.5" ></text>
</g>
<g >
<title>iflib_rxeof (7,595 samples, 38.06%)</title><rect x="10.0" y="213" width="449.1" height="15.0" fill="rgb(252,209,6)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ip_tryforward (3,795 samples, 19.02%)</title><rect x="911.0" y="117" width="224.4" height="15.0" fill="rgb(216,212,21)" rx="2" ry="2" />
<text  x="914.01" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>ipf_matchsrcdst (2,971 samples, 14.89%)</title><rect x="489.3" y="37" width="175.7" height="15.0" fill="rgb(248,156,6)" rx="2" ry="2" />
<text  x="492.27" y="47.5" >ipf_matchsrcdst</text>
</g>
<g >
<title>__mtx_lock_sleep (409 samples, 2.05%)</title><rect x="911.8" y="37" width="24.2" height="15.0" fill="rgb(230,81,43)" rx="2" ry="2" />
<text  x="914.84" y="47.5" >_..</text>
</g>
<g >
<title>pfil_mbuf_fwd (3,481 samples, 17.44%)</title><rect x="459.1" y="117" width="205.9" height="15.0" fill="rgb(253,27,30)" rx="2" ry="2" />
<text  x="462.12" y="127.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>ipf_state_lookup (188 samples, 0.94%)</title><rect x="1042.3" y="37" width="11.1" height="15.0" fill="rgb(222,63,10)" rx="2" ry="2" />
<text  x="1045.29" y="47.5" ></text>
</g>
<g >
<title>ipf_state_check (289 samples, 1.45%)</title><rect x="378.2" y="37" width="17.1" height="15.0" fill="rgb(206,117,44)" rx="2" ry="2" />
<text  x="381.22" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (732 samples, 3.67%)</title><rect x="1135.4" y="245" width="43.3" height="15.0" fill="rgb(236,84,30)" rx="2" ry="2" />
<text  x="1138.42" y="255.5" >neti..</text>
</g>
<g >
<title>ether_input (7,642 samples, 38.30%)</title><rect x="459.1" y="229" width="451.9" height="15.0" fill="rgb(221,66,47)" rx="2" ry="2" />
<text  x="462.12" y="239.5" >ether_input</text>
</g>
<g >
<title>ether_demux (3,795 samples, 19.02%)</title><rect x="911.0" y="165" width="224.4" height="15.0" fill="rgb(216,214,19)" rx="2" ry="2" />
<text  x="914.01" y="175.5" >ether_demux</text>
</g>
<g >
<title>__mtx_lock_sleep (255 samples, 1.28%)</title><rect x="303.4" y="37" width="15.1" height="15.0" fill="rgb(210,173,35)" rx="2" ry="2" />
<text  x="306.42" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (233 samples, 1.17%)</title><rect x="1053.6" y="37" width="13.8" height="15.0" fill="rgb(209,87,7)" rx="2" ry="2" />
<text  x="1056.64" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (7,595 samples, 38.06%)</title><rect x="10.0" y="229" width="449.1" height="15.0" fill="rgb(247,184,31)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>lock_delay (903 samples, 4.53%)</title><rect x="143.8" y="37" width="53.4" height="15.0" fill="rgb(220,178,34)" rx="2" ry="2" />
<text  x="146.76" y="47.5" >lock_..</text>
</g>
<g >
<title>ipf_state_add (43 samples, 0.22%)</title><rect x="1031.3" y="53" width="2.5" height="15.0" fill="rgb(218,66,31)" rx="2" ry="2" />
<text  x="1034.29" y="63.5" ></text>
</g>
<g >
<title>ether_input (3,795 samples, 19.02%)</title><rect x="911.0" y="213" width="224.4" height="15.0" fill="rgb(226,163,29)" rx="2" ry="2" />
<text  x="914.01" y="223.5" >ether_input</text>
</g>
<g >
<title>_rw_runlock_cookie_int (227 samples, 1.14%)</title><rect x="686.7" y="37" width="13.4" height="15.0" fill="rgb(227,164,49)" rx="2" ry="2" />
<text  x="689.66" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (3,795 samples, 19.02%)</title><rect x="911.0" y="261" width="224.4" height="15.0" fill="rgb(237,135,46)" rx="2" ry="2" />
<text  x="914.01" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ether_nh_input (3,795 samples, 19.02%)</title><rect x="911.0" y="181" width="224.4" height="15.0" fill="rgb(243,55,0)" rx="2" ry="2" />
<text  x="914.01" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>__rw_rlock_int (260 samples, 1.30%)</title><rect x="460.7" y="37" width="15.3" height="15.0" fill="rgb(217,52,30)" rx="2" ry="2" />
<text  x="463.65" y="47.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (4,161 samples, 20.85%)</title><rect x="665.0" y="117" width="246.0" height="15.0" fill="rgb(227,180,6)" rx="2" ry="2" />
<text  x="667.96" y="127.5" >pfil_mbuf_in</text>
</g>
<g >
<title>__rw_rlock_int (352 samples, 1.76%)</title><rect x="665.8" y="37" width="20.9" height="15.0" fill="rgb(234,21,3)" rx="2" ry="2" />
<text  x="668.84" y="47.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (271 samples, 1.36%)</title><rect x="102.7" y="37" width="16.0" height="15.0" fill="rgb(234,124,34)" rx="2" ry="2" />
<text  x="105.72" y="47.5" ></text>
</g>
<g >
<title>ipf_check (1,387 samples, 6.95%)</title><rect x="1053.4" y="69" width="82.0" height="15.0" fill="rgb(237,191,16)" rx="2" ry="2" />
<text  x="1056.40" y="79.5" >ipf_check</text>
</g>
<g >
<title>ipf_check_wrapper (3,194 samples, 16.01%)</title><rect x="10.0" y="69" width="188.9" height="15.0" fill="rgb(239,136,25)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_check_wrapper (4,161 samples, 20.85%)</title><rect x="665.0" y="101" width="246.0" height="15.0" fill="rgb(241,96,50)" rx="2" ry="2" />
<text  x="667.96" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_check (2,408 samples, 12.07%)</title><rect x="911.0" y="69" width="142.4" height="15.0" fill="rgb(205,4,50)" rx="2" ry="2" />
<text  x="914.01" y="79.5" >ipf_check</text>
</g>
<g >
<title>ipf_derefrule (13 samples, 0.07%)</title><rect x="459.1" y="69" width="0.8" height="15.0" fill="rgb(225,128,51)" rx="2" ry="2" />
<text  x="462.12" y="79.5" ></text>
</g>
<g >
<title>lock_delay (646 samples, 3.24%)</title><rect x="1067.4" y="37" width="38.2" height="15.0" fill="rgb(221,199,3)" rx="2" ry="2" />
<text  x="1070.42" y="47.5" >loc..</text>
</g>
<g >
<title>ipf_derefrule (423 samples, 2.12%)</title><rect x="118.7" y="37" width="25.1" height="15.0" fill="rgb(253,7,51)" rx="2" ry="2" />
<text  x="121.75" y="47.5" >i..</text>
</g>
<g >
<title>ether_nh_input (732 samples, 3.67%)</title><rect x="1135.4" y="229" width="43.3" height="15.0" fill="rgb(224,124,32)" rx="2" ry="2" />
<text  x="1138.42" y="239.5" >ethe..</text>
</g>
<g >
<title>ip_tryforward (7,642 samples, 38.30%)</title><rect x="459.1" y="133" width="451.9" height="15.0" fill="rgb(215,106,53)" rx="2" ry="2" />
<text  x="462.12" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>__mtx_lock_sleep (15 samples, 0.08%)</title><rect x="665.0" y="53" width="0.8" height="15.0" fill="rgb(242,82,51)" rx="2" ry="2" />
<text  x="667.96" y="63.5" ></text>
</g>
<g >
<title>keg_alloc_slab (5 samples, 0.03%)</title><rect x="458.6" y="133" width="0.3" height="15.0" fill="rgb(227,97,34)" rx="2" ry="2" />
<text  x="461.64" y="143.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (3,481 samples, 17.44%)</title><rect x="459.1" y="101" width="205.9" height="15.0" fill="rgb(211,173,14)" rx="2" ry="2" />
<text  x="462.12" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>iflib_encap (732 samples, 3.67%)</title><rect x="1135.4" y="53" width="43.3" height="15.0" fill="rgb(236,82,51)" rx="2" ry="2" />
<text  x="1138.42" y="63.5" >ifli..</text>
</g>
<g >
<title>ipf_state_check (191 samples, 0.96%)</title><rect x="1178.7" y="229" width="11.3" height="15.0" fill="rgb(209,4,28)" rx="2" ry="2" />
<text  x="1181.71" y="239.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (170 samples, 0.85%)</title><rect x="1105.6" y="37" width="10.1" height="15.0" fill="rgb(251,86,30)" rx="2" ry="2" />
<text  x="1108.62" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (14 samples, 0.07%)</title><rect x="911.0" y="53" width="0.8" height="15.0" fill="rgb(218,220,22)" rx="2" ry="2" />
<text  x="914.01" y="63.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,795 samples, 19.02%)</title><rect x="911.0" y="277" width="224.4" height="15.0" fill="rgb(245,199,45)" rx="2" ry="2" />
<text  x="914.01" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>iflib_rxeof (7,642 samples, 38.30%)</title><rect x="459.1" y="245" width="451.9" height="15.0" fill="rgb(247,94,2)" rx="2" ry="2" />
<text  x="462.12" y="255.5" >iflib_rxeof</text>
</g>
<g >
<title>_task_fn_rx (3,795 samples, 19.02%)</title><rect x="911.0" y="245" width="224.4" height="15.0" fill="rgb(237,62,48)" rx="2" ry="2" />
<text  x="914.01" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>iflib_rxeof (732 samples, 3.67%)</title><rect x="1135.4" y="277" width="43.3" height="15.0" fill="rgb(247,16,40)" rx="2" ry="2" />
<text  x="1138.42" y="287.5" >ifli..</text>
</g>
<g >
<title>ipf_state_check (4,146 samples, 20.78%)</title><rect x="665.8" y="69" width="245.2" height="15.0" fill="rgb(234,158,6)" rx="2" ry="2" />
<text  x="668.84" y="79.5" >ipf_state_check</text>
</g>
<g >
<title>ipf_state_add (4 samples, 0.02%)</title><rect x="460.4" y="69" width="0.3" height="15.0" fill="rgb(240,114,1)" rx="2" ry="2" />
<text  x="463.42" y="79.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.04%)</title><rect x="458.6" y="165" width="0.5" height="15.0" fill="rgb(251,219,36)" rx="2" ry="2" />
<text  x="461.64" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (7,595 samples, 38.06%)</title><rect x="10.0" y="245" width="449.1" height="15.0" fill="rgb(212,66,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ipf_check (191 samples, 0.96%)</title><rect x="1178.7" y="245" width="11.3" height="15.0" fill="rgb(241,159,31)" rx="2" ry="2" />
<text  x="1181.71" y="255.5" ></text>
</g>
<g >
<title>ipf_state_lookup (4,146 samples, 20.78%)</title><rect x="665.8" y="53" width="245.2" height="15.0" fill="rgb(207,187,31)" rx="2" ry="2" />
<text  x="668.84" y="63.5" >ipf_state_lookup</text>
</g>
<g >
<title>_rw_runlock_cookie_int (298 samples, 1.49%)</title><rect x="345.1" y="37" width="17.6" height="15.0" fill="rgb(206,84,13)" rx="2" ry="2" />
<text  x="348.11" y="47.5" ></text>
</g>
<g >
<title>ether_demux (7,642 samples, 38.30%)</title><rect x="459.1" y="181" width="451.9" height="15.0" fill="rgb(208,139,6)" rx="2" ry="2" />
<text  x="462.12" y="191.5" >ether_demux</text>
</g>
<g >
<title>ether_nh_input (7,587 samples, 38.02%)</title><rect x="10.0" y="165" width="448.6" height="15.0" fill="rgb(216,11,42)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ip_tryforward (732 samples, 3.67%)</title><rect x="1135.4" y="165" width="43.3" height="15.0" fill="rgb(207,105,0)" rx="2" ry="2" />
<text  x="1138.42" y="175.5" >ip_t..</text>
</g>
<g >
<title>memset_erms (29 samples, 0.15%)</title><rect x="197.2" y="37" width="1.7" height="15.0" fill="rgb(241,27,39)" rx="2" ry="2" />
<text  x="200.16" y="47.5" ></text>
</g>
<g >
<title>ether_input (732 samples, 3.67%)</title><rect x="1135.4" y="261" width="43.3" height="15.0" fill="rgb(250,81,31)" rx="2" ry="2" />
<text  x="1138.42" y="271.5" >ethe..</text>
</g>
<g >
<title>__mtx_lock_sleep (208 samples, 1.04%)</title><rect x="991.3" y="37" width="12.3" height="15.0" fill="rgb(230,22,2)" rx="2" ry="2" />
<text  x="994.31" y="47.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (4,393 samples, 22.01%)</title><rect x="198.9" y="69" width="259.7" height="15.0" fill="rgb(209,104,16)" rx="2" ry="2" />
<text  x="201.87" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_matchsrcdst (3,567 samples, 17.88%)</title><rect x="700.1" y="37" width="210.9" height="15.0" fill="rgb(206,217,8)" rx="2" ry="2" />
<text  x="703.08" y="47.5" >ipf_matchsrcdst</text>
</g>
<g >
<title>netisr_dispatch_src (732 samples, 3.67%)</title><rect x="1135.4" y="197" width="43.3" height="15.0" fill="rgb(249,2,13)" rx="2" ry="2" />
<text  x="1138.42" y="207.5" >neti..</text>
</g>
<g >
<title>netisr_dispatch_src (7,642 samples, 38.30%)</title><rect x="459.1" y="165" width="451.9" height="15.0" fill="rgb(252,15,40)" rx="2" ry="2" />
<text  x="462.12" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_state_check (331 samples, 1.66%)</title><rect x="1033.8" y="53" width="19.6" height="15.0" fill="rgb(240,78,39)" rx="2" ry="2" />
<text  x="1036.83" y="63.5" ></text>
</g>
<g >
<title>iflib_txq_drain (732 samples, 3.67%)</title><rect x="1135.4" y="69" width="43.3" height="15.0" fill="rgb(233,124,42)" rx="2" ry="2" />
<text  x="1138.42" y="79.5" >ifli..</text>
</g>
<g >
<title>__rw_rlock_int (450 samples, 2.26%)</title><rect x="318.5" y="37" width="26.6" height="15.0" fill="rgb(238,190,12)" rx="2" ry="2" />
<text  x="321.50" y="47.5" >_..</text>
</g>
<g >
<title>ipf_check_wrapper (2,408 samples, 12.07%)</title><rect x="911.0" y="85" width="142.4" height="15.0" fill="rgb(234,36,42)" rx="2" ry="2" />
<text  x="914.01" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>lock_delay (468 samples, 2.35%)</title><rect x="1003.6" y="37" width="27.7" height="15.0" fill="rgb(231,78,7)" rx="2" ry="2" />
<text  x="1006.61" y="47.5" >l..</text>
</g>
<g >
<title>ipf_scanlist (9 samples, 0.05%)</title><rect x="459.9" y="69" width="0.5" height="15.0" fill="rgb(240,136,41)" rx="2" ry="2" />
<text  x="462.88" y="79.5" ></text>
</g>
<g >
<title>lock_delay (15 samples, 0.08%)</title><rect x="665.0" y="37" width="0.8" height="15.0" fill="rgb(240,129,5)" rx="2" ry="2" />
<text  x="667.96" y="47.5" ></text>
</g>
<g >
<title>__rw_rlock_int (6 samples, 0.03%)</title><rect x="1031.3" y="37" width="0.3" height="15.0" fill="rgb(241,161,41)" rx="2" ry="2" />
<text  x="1034.29" y="47.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (191 samples, 0.96%)</title><rect x="1178.7" y="261" width="11.3" height="15.0" fill="rgb(244,0,35)" rx="2" ry="2" />
<text  x="1181.71" y="271.5" ></text>
</g>
<g >
<title>ether_output_frame (732 samples, 3.67%)</title><rect x="1135.4" y="133" width="43.3" height="15.0" fill="rgb(222,218,9)" rx="2" ry="2" />
<text  x="1138.42" y="143.5" >ethe..</text>
</g>
<g >
<title>netisr_dispatch_src (7,642 samples, 38.30%)</title><rect x="459.1" y="213" width="451.9" height="15.0" fill="rgb(251,199,21)" rx="2" ry="2" />
<text  x="462.12" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>drain_ring_lockless (732 samples, 3.67%)</title><rect x="1135.4" y="85" width="43.3" height="15.0" fill="rgb(223,189,43)" rx="2" ry="2" />
<text  x="1138.42" y="95.5" >drai..</text>
</g>
<g >
<title>ipf_derefrule (879 samples, 4.40%)</title><rect x="1053.6" y="53" width="52.0" height="15.0" fill="rgb(253,139,52)" rx="2" ry="2" />
<text  x="1056.64" y="63.5" >ipf_d..</text>
</g>
<g >
<title>memset_erms (471 samples, 2.36%)</title><rect x="430.8" y="37" width="27.8" height="15.0" fill="rgb(217,162,50)" rx="2" ry="2" />
<text  x="433.79" y="47.5" >m..</text>
</g>
<g >
<title>__mtx_lock_sleep (4 samples, 0.02%)</title><rect x="1053.4" y="53" width="0.2" height="15.0" fill="rgb(227,95,8)" rx="2" ry="2" />
<text  x="1056.40" y="63.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,795 samples, 19.02%)</title><rect x="911.0" y="229" width="224.4" height="15.0" fill="rgb(243,114,22)" rx="2" ry="2" />
<text  x="914.01" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>netisr_dispatch_src (7,587 samples, 38.02%)</title><rect x="10.0" y="181" width="448.6" height="15.0" fill="rgb(212,77,52)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>_task_fn_rx (7,642 samples, 38.30%)</title><rect x="459.1" y="261" width="451.9" height="15.0" fill="rgb(217,18,46)" rx="2" ry="2" />
<text  x="462.12" y="271.5" >_task_fn_rx</text>
</g>
<g >
<title>iflib_fl_refill (8 samples, 0.04%)</title><rect x="458.6" y="197" width="0.5" height="15.0" fill="rgb(229,153,54)" rx="2" ry="2" />
<text  x="461.64" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (7,642 samples, 38.30%)</title><rect x="459.1" y="197" width="451.9" height="15.0" fill="rgb(210,131,14)" rx="2" ry="2" />
<text  x="462.12" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>netisr_dispatch_src (7,587 samples, 38.02%)</title><rect x="10.0" y="133" width="448.6" height="15.0" fill="rgb(229,165,48)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pfil_mbuf_fwd (3,194 samples, 16.01%)</title><rect x="10.0" y="85" width="188.9" height="15.0" fill="rgb(249,56,46)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>ipf_check (3,481 samples, 17.44%)</title><rect x="459.1" y="85" width="205.9" height="15.0" fill="rgb(239,105,17)" rx="2" ry="2" />
<text  x="462.12" y="95.5" >ipf_check</text>
</g>
<g >
<title>ip_input (7,587 samples, 38.02%)</title><rect x="10.0" y="117" width="448.6" height="15.0" fill="rgb(234,8,38)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >ip_input</text>
</g>
<g >
<title>__mtx_lock_sleep (2 samples, 0.01%)</title><rect x="460.4" y="37" width="0.1" height="15.0" fill="rgb(242,220,45)" rx="2" ry="2" />
<text  x="463.42" y="47.5" ></text>
</g>
<g >
<title>ipf_check (4,161 samples, 20.85%)</title><rect x="665.0" y="85" width="246.0" height="15.0" fill="rgb(210,136,13)" rx="2" ry="2" />
<text  x="667.96" y="95.5" >ipf_check</text>
</g>
<g >
<title>ipf_state_insert (4 samples, 0.02%)</title><rect x="460.4" y="53" width="0.3" height="15.0" fill="rgb(221,78,31)" rx="2" ry="2" />
<text  x="463.42" y="63.5" ></text>
</g>
<g >
<title>lock_delay (5 samples, 0.03%)</title><rect x="458.6" y="117" width="0.3" height="15.0" fill="rgb(205,90,37)" rx="2" ry="2" />
<text  x="461.64" y="127.5" ></text>
</g>
</g>
</svg>
