<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>lock_delay (7 samples, 0.03%)</title><rect x="696.2" y="37" width="0.5" height="15.0" fill="rgb(235,174,42)" rx="2" ry="2" />
<text  x="699.25" y="47.5" ></text>
</g>
<g >
<title>ip_input (7,821 samples, 38.28%)</title><rect x="27.3" y="117" width="451.7" height="15.0" fill="rgb(233,227,46)" rx="2" ry="2" />
<text  x="30.27" y="127.5" >ip_input</text>
</g>
<g >
<title>ip_tryforward (3,587 samples, 17.56%)</title><rect x="939.4" y="117" width="207.2" height="15.0" fill="rgb(243,6,26)" rx="2" ry="2" />
<text  x="942.40" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>ip_tryforward (7,946 samples, 38.89%)</title><rect x="480.5" y="133" width="458.9" height="15.0" fill="rgb(235,136,6)" rx="2" ry="2" />
<text  x="483.48" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>ether_output_frame (752 samples, 3.68%)</title><rect x="1146.6" y="133" width="43.4" height="15.0" fill="rgb(226,206,47)" rx="2" ry="2" />
<text  x="1149.57" y="143.5" >ethe..</text>
</g>
<g >
<title>ipf_derefrule (201 samples, 0.98%)</title><rect x="345.9" y="37" width="11.6" height="15.0" fill="rgb(208,198,35)" rx="2" ry="2" />
<text  x="348.91" y="47.5" ></text>
</g>
<g >
<title>ether_input (299 samples, 1.46%)</title><rect x="10.0" y="245" width="17.3" height="15.0" fill="rgb(229,54,51)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (170 samples, 0.83%)</title><rect x="1118.7" y="37" width="9.8" height="15.0" fill="rgb(246,175,38)" rx="2" ry="2" />
<text  x="1121.73" y="47.5" ></text>
</g>
<g >
<title>__rw_rlock_int (396 samples, 1.94%)</title><rect x="128.1" y="37" width="22.8" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="131.05" y="47.5" >_..</text>
</g>
<g >
<title>pfil_mbuf_fwd (2,370 samples, 11.60%)</title><rect x="939.4" y="101" width="136.9" height="15.0" fill="rgb(243,74,49)" rx="2" ry="2" />
<text  x="942.40" y="111.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>memset_erms (34 samples, 0.17%)</title><rect x="1054.9" y="37" width="2.0" height="15.0" fill="rgb(213,194,52)" rx="2" ry="2" />
<text  x="1057.91" y="47.5" ></text>
</g>
<g >
<title>cache_alloc_retry (26 samples, 0.13%)</title><rect x="479.0" y="181" width="1.5" height="15.0" fill="rgb(242,181,4)" rx="2" ry="2" />
<text  x="481.97" y="191.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (3,987 samples, 19.51%)</title><rect x="248.7" y="69" width="230.3" height="15.0" fill="rgb(226,187,35)" rx="2" ry="2" />
<text  x="251.70" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>_rw_runlock_cookie_int (230 samples, 1.13%)</title><rect x="715.3" y="37" width="13.3" height="15.0" fill="rgb(249,188,4)" rx="2" ry="2" />
<text  x="718.31" y="47.5" ></text>
</g>
<g >
<title>drain_ring_lockless (752 samples, 3.68%)</title><rect x="1146.6" y="85" width="43.4" height="15.0" fill="rgb(228,136,8)" rx="2" ry="2" />
<text  x="1149.57" y="95.5" >drai..</text>
</g>
<g >
<title>ipf_check_wrapper (2,370 samples, 11.60%)</title><rect x="939.4" y="85" width="136.9" height="15.0" fill="rgb(205,182,34)" rx="2" ry="2" />
<text  x="942.40" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_check_wrapper (4,210 samples, 20.61%)</title><rect x="696.2" y="101" width="243.2" height="15.0" fill="rgb(219,83,49)" rx="2" ry="2" />
<text  x="699.25" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="480.3" y="69" width="0.1" height="15.0" fill="rgb(213,180,39)" rx="2" ry="2" />
<text  x="483.30" y="79.5" ></text>
</g>
<g >
<title>iflib_fl_refill (26 samples, 0.13%)</title><rect x="479.0" y="197" width="1.5" height="15.0" fill="rgb(210,21,49)" rx="2" ry="2" />
<text  x="481.97" y="207.5" ></text>
</g>
<g >
<title>ether_demux (299 samples, 1.46%)</title><rect x="10.0" y="197" width="17.3" height="15.0" fill="rgb(212,5,32)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>lock_delay (846 samples, 4.14%)</title><rect x="964.1" y="37" width="48.8" height="15.0" fill="rgb(208,28,30)" rx="2" ry="2" />
<text  x="967.06" y="47.5" >lock..</text>
</g>
<g >
<title>pfil_mbuf_fwd (3,310 samples, 16.20%)</title><rect x="57.5" y="85" width="191.2" height="15.0" fill="rgb(221,173,17)" rx="2" ry="2" />
<text  x="60.53" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>ipf_derefrule (447 samples, 2.19%)</title><rect x="168.2" y="37" width="25.8" height="15.0" fill="rgb(242,91,41)" rx="2" ry="2" />
<text  x="171.19" y="47.5" >i..</text>
</g>
<g >
<title>_rw_runlock_cookie_int (265 samples, 1.30%)</title><rect x="499.0" y="37" width="15.3" height="15.0" fill="rgb(221,222,15)" rx="2" ry="2" />
<text  x="502.01" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,587 samples, 17.56%)</title><rect x="939.4" y="229" width="207.2" height="15.0" fill="rgb(239,111,28)" rx="2" ry="2" />
<text  x="942.40" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>ipf_derefrule (727 samples, 3.56%)</title><rect x="1076.7" y="53" width="42.0" height="15.0" fill="rgb(228,28,27)" rx="2" ry="2" />
<text  x="1079.74" y="63.5" >ipf..</text>
</g>
<g >
<title>ether_nh_input (299 samples, 1.46%)</title><rect x="10.0" y="213" width="17.3" height="15.0" fill="rgb(248,158,38)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (299 samples, 1.46%)</title><rect x="10.0" y="117" width="17.3" height="15.0" fill="rgb(252,190,9)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (13 samples, 0.06%)</title><rect x="480.7" y="53" width="0.8" height="15.0" fill="rgb(244,182,3)" rx="2" ry="2" />
<text  x="483.71" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (212 samples, 1.04%)</title><rect x="286.6" y="37" width="12.2" height="15.0" fill="rgb(207,228,31)" rx="2" ry="2" />
<text  x="289.59" y="47.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (4,210 samples, 20.61%)</title><rect x="696.2" y="117" width="243.2" height="15.0" fill="rgb(207,98,13)" rx="2" ry="2" />
<text  x="699.25" y="127.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ipf_derefrule (1,255 samples, 6.14%)</title><rect x="940.4" y="53" width="72.5" height="15.0" fill="rgb(234,9,8)" rx="2" ry="2" />
<text  x="943.44" y="63.5" >ipf_dere..</text>
</g>
<g >
<title>ipf_state_add (44 samples, 0.22%)</title><rect x="1054.3" y="53" width="2.6" height="15.0" fill="rgb(211,51,33)" rx="2" ry="2" />
<text  x="1057.33" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (752 samples, 3.68%)</title><rect x="1146.6" y="245" width="43.4" height="15.0" fill="rgb(246,112,21)" rx="2" ry="2" />
<text  x="1149.57" y="255.5" >neti..</text>
</g>
<g >
<title>lock_delay (920 samples, 4.50%)</title><rect x="194.0" y="37" width="53.1" height="15.0" fill="rgb(249,148,34)" rx="2" ry="2" />
<text  x="197.01" y="47.5" >lock_..</text>
</g>
<g >
<title>memset_erms (27 samples, 0.13%)</title><rect x="247.1" y="37" width="1.6" height="15.0" fill="rgb(245,155,45)" rx="2" ry="2" />
<text  x="250.14" y="47.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (320 samples, 1.57%)</title><rect x="327.4" y="37" width="18.5" height="15.0" fill="rgb(209,109,1)" rx="2" ry="2" />
<text  x="330.42" y="47.5" ></text>
</g>
<g >
<title>ipf_state_check (336 samples, 1.64%)</title><rect x="1056.9" y="53" width="19.4" height="15.0" fill="rgb(215,58,42)" rx="2" ry="2" />
<text  x="1059.87" y="63.5" ></text>
</g>
<g >
<title>zone_import (26 samples, 0.13%)</title><rect x="479.0" y="149" width="1.5" height="15.0" fill="rgb(237,116,11)" rx="2" ry="2" />
<text  x="481.97" y="159.5" ></text>
</g>
<g >
<title>ipf_derefrule (4 samples, 0.02%)</title><rect x="480.5" y="69" width="0.2" height="15.0" fill="rgb(218,162,19)" rx="2" ry="2" />
<text  x="483.48" y="79.5" ></text>
</g>
<g >
<title>ipf_check (3,736 samples, 18.29%)</title><rect x="480.5" y="85" width="215.7" height="15.0" fill="rgb(217,102,33)" rx="2" ry="2" />
<text  x="483.48" y="95.5" >ipf_check</text>
</g>
<g >
<title>_task_fn_rx (7,847 samples, 38.41%)</title><rect x="27.3" y="229" width="453.2" height="15.0" fill="rgb(232,163,49)" rx="2" ry="2" />
<text  x="30.27" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ipf_check (1,217 samples, 5.96%)</title><rect x="1076.3" y="69" width="70.3" height="15.0" fill="rgb(226,54,10)" rx="2" ry="2" />
<text  x="1079.28" y="79.5" >ipf_check</text>
</g>
<g >
<title>netisr_dispatch_src (7,946 samples, 38.89%)</title><rect x="480.5" y="165" width="458.9" height="15.0" fill="rgb(221,173,15)" rx="2" ry="2" />
<text  x="483.48" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>__rw_rlock_int (10 samples, 0.05%)</title><rect x="1054.3" y="37" width="0.6" height="15.0" fill="rgb(221,3,49)" rx="2" ry="2" />
<text  x="1057.33" y="47.5" ></text>
</g>
<g >
<title>ipf_state_add (4 samples, 0.02%)</title><rect x="481.5" y="69" width="0.2" height="15.0" fill="rgb(223,23,43)" rx="2" ry="2" />
<text  x="484.46" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (214 samples, 1.05%)</title><rect x="1012.9" y="37" width="12.4" height="15.0" fill="rgb(225,70,25)" rx="2" ry="2" />
<text  x="1015.92" y="47.5" ></text>
</g>
<g >
<title>ipf_state_insert (4 samples, 0.02%)</title><rect x="481.5" y="53" width="0.2" height="15.0" fill="rgb(245,38,29)" rx="2" ry="2" />
<text  x="484.46" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3,587 samples, 17.56%)</title><rect x="939.4" y="149" width="207.2" height="15.0" fill="rgb(212,52,14)" rx="2" ry="2" />
<text  x="942.40" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_check_wrapper (3,736 samples, 18.29%)</title><rect x="480.5" y="101" width="215.7" height="15.0" fill="rgb(208,37,21)" rx="2" ry="2" />
<text  x="483.48" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ether_demux (7,946 samples, 38.89%)</title><rect x="480.5" y="181" width="458.9" height="15.0" fill="rgb(209,220,0)" rx="2" ry="2" />
<text  x="483.48" y="191.5" >ether_demux</text>
</g>
<g >
<title>iflib_txq_drain (752 samples, 3.68%)</title><rect x="1146.6" y="69" width="43.4" height="15.0" fill="rgb(217,189,29)" rx="2" ry="2" />
<text  x="1149.57" y="79.5" >ifli..</text>
</g>
<g >
<title>__mtx_lock_sleep (420 samples, 2.06%)</title><rect x="103.8" y="37" width="24.3" height="15.0" fill="rgb(212,52,2)" rx="2" ry="2" />
<text  x="106.79" y="47.5" >_..</text>
</g>
<g >
<title>ipf_check_wrapper (1,217 samples, 5.96%)</title><rect x="1076.3" y="85" width="70.3" height="15.0" fill="rgb(210,3,0)" rx="2" ry="2" />
<text  x="1079.28" y="95.5" >ipf_che..</text>
</g>
<g >
<title>fork_exit (7,847 samples, 38.41%)</title><rect x="27.3" y="277" width="453.2" height="15.0" fill="rgb(224,182,30)" rx="2" ry="2" />
<text  x="30.27" y="287.5" >fork_exit</text>
</g>
<g >
<title>ip_tryforward (299 samples, 1.46%)</title><rect x="10.0" y="149" width="17.3" height="15.0" fill="rgb(236,137,27)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>ether_input (7,821 samples, 38.28%)</title><rect x="27.3" y="197" width="451.7" height="15.0" fill="rgb(234,183,28)" rx="2" ry="2" />
<text  x="30.27" y="207.5" >ether_input</text>
</g>
<g >
<title>__mtx_lock_sleep (4 samples, 0.02%)</title><rect x="480.5" y="53" width="0.2" height="15.0" fill="rgb(215,197,37)" rx="2" ry="2" />
<text  x="483.48" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (7,946 samples, 38.89%)</title><rect x="480.5" y="197" width="458.9" height="15.0" fill="rgb(229,92,46)" rx="2" ry="2" />
<text  x="483.48" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>ether_input (3,587 samples, 17.56%)</title><rect x="939.4" y="213" width="207.2" height="15.0" fill="rgb(240,132,45)" rx="2" ry="2" />
<text  x="942.40" y="223.5" >ether_input</text>
</g>
<g >
<title>zone_import (2 samples, 0.01%)</title><rect x="480.3" y="101" width="0.1" height="15.0" fill="rgb(253,128,5)" rx="2" ry="2" />
<text  x="483.30" y="111.5" ></text>
</g>
<g >
<title>ether_input (752 samples, 3.68%)</title><rect x="1146.6" y="261" width="43.4" height="15.0" fill="rgb(213,143,40)" rx="2" ry="2" />
<text  x="1149.57" y="271.5" >ethe..</text>
</g>
<g >
<title>pfil_mbuf_in (299 samples, 1.46%)</title><rect x="10.0" y="133" width="17.3" height="15.0" fill="rgb(245,7,15)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>ether_nh_input (7,821 samples, 38.28%)</title><rect x="27.3" y="165" width="451.7" height="15.0" fill="rgb(212,99,10)" rx="2" ry="2" />
<text  x="30.27" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ipf_derefrule (7 samples, 0.03%)</title><rect x="696.2" y="69" width="0.5" height="15.0" fill="rgb(254,41,7)" rx="2" ry="2" />
<text  x="699.25" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (8 samples, 0.04%)</title><rect x="1076.3" y="53" width="0.4" height="15.0" fill="rgb(218,144,2)" rx="2" ry="2" />
<text  x="1079.28" y="63.5" ></text>
</g>
<g >
<title>ipf_state_lookup (312 samples, 1.53%)</title><rect x="1128.5" y="37" width="18.1" height="15.0" fill="rgb(233,174,15)" rx="2" ry="2" />
<text  x="1131.55" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (752 samples, 3.68%)</title><rect x="1146.6" y="197" width="43.4" height="15.0" fill="rgb(215,52,4)" rx="2" ry="2" />
<text  x="1149.57" y="207.5" >neti..</text>
</g>
<g >
<title>all (20,431 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(226,93,51)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ipf_state_check (299 samples, 1.46%)</title><rect x="10.0" y="85" width="17.3" height="15.0" fill="rgb(245,128,25)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>__rw_rlock_int (323 samples, 1.58%)</title><rect x="696.7" y="37" width="18.6" height="15.0" fill="rgb(249,212,15)" rx="2" ry="2" />
<text  x="699.65" y="47.5" ></text>
</g>
<g >
<title>ipf_state_lookup (197 samples, 0.96%)</title><rect x="1064.9" y="37" width="11.4" height="15.0" fill="rgb(206,13,17)" rx="2" ry="2" />
<text  x="1067.90" y="47.5" ></text>
</g>
<g >
<title>ip_input (752 samples, 3.68%)</title><rect x="1146.6" y="181" width="43.4" height="15.0" fill="rgb(254,17,52)" rx="2" ry="2" />
<text  x="1149.57" y="191.5" >ip_i..</text>
</g>
<g >
<title>cache_alloc (26 samples, 0.13%)</title><rect x="479.0" y="165" width="1.5" height="15.0" fill="rgb(219,207,20)" rx="2" ry="2" />
<text  x="481.97" y="175.5" ></text>
</g>
<g >
<title>lock_delay (503 samples, 2.46%)</title><rect x="1025.3" y="37" width="29.0" height="15.0" fill="rgb(224,87,19)" rx="2" ry="2" />
<text  x="1028.28" y="47.5" >lo..</text>
</g>
<g >
<title>netisr_dispatch_src (299 samples, 1.46%)</title><rect x="10.0" y="229" width="17.3" height="15.0" fill="rgb(222,206,12)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>zone_alloc_item (2 samples, 0.01%)</title><rect x="480.3" y="117" width="0.1" height="15.0" fill="rgb(228,15,51)" rx="2" ry="2" />
<text  x="483.30" y="127.5" ></text>
</g>
<g >
<title>ip_tryforward (752 samples, 3.68%)</title><rect x="1146.6" y="165" width="43.4" height="15.0" fill="rgb(227,56,34)" rx="2" ry="2" />
<text  x="1149.57" y="175.5" >ip_t..</text>
</g>
<g >
<title>ether_demux (752 samples, 3.68%)</title><rect x="1146.6" y="213" width="43.4" height="15.0" fill="rgb(216,151,3)" rx="2" ry="2" />
<text  x="1149.57" y="223.5" >ethe..</text>
</g>
<g >
<title>ipf_state_check (482 samples, 2.36%)</title><rect x="1118.7" y="53" width="27.9" height="15.0" fill="rgb(242,29,9)" rx="2" ry="2" />
<text  x="1121.73" y="63.5" >i..</text>
</g>
<g >
<title>keg_fetch_free_slab (2 samples, 0.01%)</title><rect x="480.3" y="85" width="0.1" height="15.0" fill="rgb(240,153,50)" rx="2" ry="2" />
<text  x="483.30" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (299 samples, 1.46%)</title><rect x="10.0" y="181" width="17.3" height="15.0" fill="rgb(240,225,44)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (299 samples, 1.46%)</title><rect x="10.0" y="261" width="17.3" height="15.0" fill="rgb(248,47,21)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (7,946 samples, 38.89%)</title><rect x="480.5" y="277" width="458.9" height="15.0" fill="rgb(242,92,44)" rx="2" ry="2" />
<text  x="483.48" y="287.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ipf_check (4,210 samples, 20.61%)</title><rect x="696.2" y="85" width="243.2" height="15.0" fill="rgb(238,186,19)" rx="2" ry="2" />
<text  x="699.25" y="95.5" >ipf_check</text>
</g>
<g >
<title>netisr_dispatch_src (7,821 samples, 38.28%)</title><rect x="27.3" y="181" width="451.7" height="15.0" fill="rgb(221,207,51)" rx="2" ry="2" />
<text  x="30.27" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_check (3,987 samples, 19.51%)</title><rect x="248.7" y="53" width="230.3" height="15.0" fill="rgb(250,73,6)" rx="2" ry="2" />
<text  x="251.70" y="63.5" >ipf_check</text>
</g>
<g >
<title>_task_fn_rx (299 samples, 1.46%)</title><rect x="10.0" y="277" width="17.3" height="15.0" fill="rgb(236,3,34)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ether_input (7,946 samples, 38.89%)</title><rect x="480.5" y="229" width="458.9" height="15.0" fill="rgb(247,106,37)" rx="2" ry="2" />
<text  x="483.48" y="239.5" >ether_input</text>
</g>
<g >
<title>keg_alloc_slab (25 samples, 0.12%)</title><rect x="479.0" y="133" width="1.4" height="15.0" fill="rgb(215,109,33)" rx="2" ry="2" />
<text  x="481.97" y="143.5" ></text>
</g>
<g >
<title>ipf_scanlist (717 samples, 3.51%)</title><rect x="1012.9" y="53" width="41.4" height="15.0" fill="rgb(222,150,36)" rx="2" ry="2" />
<text  x="1015.92" y="63.5" >ipf..</text>
</g>
<g >
<title>ether_nh_input (752 samples, 3.68%)</title><rect x="1146.6" y="229" width="43.4" height="15.0" fill="rgb(216,144,35)" rx="2" ry="2" />
<text  x="1149.57" y="239.5" >ethe..</text>
</g>
<g >
<title>__rw_rlock_int (495 samples, 2.42%)</title><rect x="298.8" y="37" width="28.6" height="15.0" fill="rgb(247,37,35)" rx="2" ry="2" />
<text  x="301.83" y="47.5" >__..</text>
</g>
<g >
<title>__mtx_lock_sleep (219 samples, 1.07%)</title><rect x="1076.7" y="37" width="12.7" height="15.0" fill="rgb(207,19,17)" rx="2" ry="2" />
<text  x="1079.74" y="47.5" ></text>
</g>
<g >
<title>ether_demux (3,587 samples, 17.56%)</title><rect x="939.4" y="165" width="207.2" height="15.0" fill="rgb(223,51,43)" rx="2" ry="2" />
<text  x="942.40" y="175.5" >ether_demux</text>
</g>
<g >
<title>iflib_rxeof (7,847 samples, 38.41%)</title><rect x="27.3" y="213" width="453.2" height="15.0" fill="rgb(236,67,41)" rx="2" ry="2" />
<text  x="30.27" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="480.5" y="37" width="0.2" height="15.0" fill="rgb(226,13,47)" rx="2" ry="2" />
<text  x="483.48" y="47.5" ></text>
</g>
<g >
<title>lock_delay (583 samples, 2.85%)</title><rect x="357.5" y="37" width="33.7" height="15.0" fill="rgb(218,57,45)" rx="2" ry="2" />
<text  x="360.51" y="47.5" >lo..</text>
</g>
<g >
<title>_rw_runlock_cookie_int (299 samples, 1.46%)</title><rect x="150.9" y="37" width="17.3" height="15.0" fill="rgb(242,193,37)" rx="2" ry="2" />
<text  x="153.92" y="47.5" ></text>
</g>
<g >
<title>ether_output (752 samples, 3.68%)</title><rect x="1146.6" y="149" width="43.4" height="15.0" fill="rgb(221,57,44)" rx="2" ry="2" />
<text  x="1149.57" y="159.5" >ethe..</text>
</g>
<g >
<title>ipf_state_lookup (4,203 samples, 20.57%)</title><rect x="696.7" y="53" width="242.7" height="15.0" fill="rgb(246,127,18)" rx="2" ry="2" />
<text  x="699.65" y="63.5" >ipf_state_lookup</text>
</g>
<g >
<title>gtaskqueue_thread_loop (7,847 samples, 38.41%)</title><rect x="27.3" y="261" width="453.2" height="15.0" fill="rgb(226,81,5)" rx="2" ry="2" />
<text  x="30.27" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>lock_delay (3 samples, 0.01%)</title><rect x="481.5" y="37" width="0.2" height="15.0" fill="rgb(206,67,33)" rx="2" ry="2" />
<text  x="484.51" y="47.5" ></text>
</g>
<g >
<title>ipf_check (3,310 samples, 16.20%)</title><rect x="57.5" y="53" width="191.2" height="15.0" fill="rgb(214,36,21)" rx="2" ry="2" />
<text  x="60.53" y="63.5" >ipf_check</text>
</g>
<g >
<title>ether_nh_input (3,587 samples, 17.56%)</title><rect x="939.4" y="181" width="207.2" height="15.0" fill="rgb(240,125,50)" rx="2" ry="2" />
<text  x="942.40" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>lock_delay (22 samples, 0.11%)</title><rect x="479.0" y="117" width="1.3" height="15.0" fill="rgb(223,13,18)" rx="2" ry="2" />
<text  x="482.03" y="127.5" ></text>
</g>
<g >
<title>ipf_check (299 samples, 1.46%)</title><rect x="10.0" y="101" width="17.3" height="15.0" fill="rgb(240,158,34)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>lock_delay (508 samples, 2.49%)</title><rect x="1089.4" y="37" width="29.3" height="15.0" fill="rgb(216,2,31)" rx="2" ry="2" />
<text  x="1092.39" y="47.5" >lo..</text>
</g>
<g >
<title>memset_erms (1,520 samples, 7.44%)</title><rect x="391.2" y="37" width="87.8" height="15.0" fill="rgb(251,102,51)" rx="2" ry="2" />
<text  x="394.19" y="47.5" >memset_erms</text>
</g>
<g >
<title>__rw_rlock_int (300 samples, 1.47%)</title><rect x="481.7" y="37" width="17.3" height="15.0" fill="rgb(226,171,41)" rx="2" ry="2" />
<text  x="484.69" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (7,946 samples, 38.89%)</title><rect x="480.5" y="245" width="458.9" height="15.0" fill="rgb(243,152,47)" rx="2" ry="2" />
<text  x="483.48" y="255.5" >iflib_rxeof</text>
</g>
<g >
<title>ip_tryforward (7,821 samples, 38.28%)</title><rect x="27.3" y="101" width="451.7" height="15.0" fill="rgb(254,145,9)" rx="2" ry="2" />
<text  x="30.27" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ipf_state_lookup (3,715 samples, 18.18%)</title><rect x="481.7" y="53" width="214.5" height="15.0" fill="rgb(213,80,42)" rx="2" ry="2" />
<text  x="484.69" y="63.5" >ipf_state_lookup</text>
</g>
<g >
<title>ether_demux (7,821 samples, 38.28%)</title><rect x="27.3" y="149" width="451.7" height="15.0" fill="rgb(234,4,34)" rx="2" ry="2" />
<text  x="30.27" y="159.5" >ether_demux</text>
</g>
<g >
<title>ip_input (3,587 samples, 17.56%)</title><rect x="939.4" y="133" width="207.2" height="15.0" fill="rgb(241,168,8)" rx="2" ry="2" />
<text  x="942.40" y="143.5" >ip_input</text>
</g>
<g >
<title>ipf_check (2,370 samples, 11.60%)</title><rect x="939.4" y="69" width="136.9" height="15.0" fill="rgb(214,210,29)" rx="2" ry="2" />
<text  x="942.40" y="79.5" >ipf_check</text>
</g>
<g >
<title>ipf_check_wrapper (3,310 samples, 16.20%)</title><rect x="57.5" y="69" width="191.2" height="15.0" fill="rgb(213,124,18)" rx="2" ry="2" />
<text  x="60.53" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ip_input (299 samples, 1.46%)</title><rect x="10.0" y="165" width="17.3" height="15.0" fill="rgb(219,63,29)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>lock_delay (13 samples, 0.06%)</title><rect x="480.7" y="37" width="0.8" height="15.0" fill="rgb(245,122,6)" rx="2" ry="2" />
<text  x="483.71" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (752 samples, 3.68%)</title><rect x="1146.6" y="117" width="43.4" height="15.0" fill="rgb(237,47,38)" rx="2" ry="2" />
<text  x="1149.57" y="127.5" >ifli..</text>
</g>
<g >
<title>_rw_runlock_cookie_int (139 samples, 0.68%)</title><rect x="1056.9" y="37" width="8.0" height="15.0" fill="rgb(253,173,10)" rx="2" ry="2" />
<text  x="1059.87" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,587 samples, 17.56%)</title><rect x="939.4" y="277" width="207.2" height="15.0" fill="rgb(205,27,16)" rx="2" ry="2" />
<text  x="942.40" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>netisr_dispatch_src (3,587 samples, 17.56%)</title><rect x="939.4" y="197" width="207.2" height="15.0" fill="rgb(234,20,31)" rx="2" ry="2" />
<text  x="942.40" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>lock_delay (18 samples, 0.09%)</title><rect x="939.4" y="37" width="1.0" height="15.0" fill="rgb(209,195,17)" rx="2" ry="2" />
<text  x="942.40" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (7,821 samples, 38.28%)</title><rect x="27.3" y="133" width="451.7" height="15.0" fill="rgb(246,34,6)" rx="2" ry="2" />
<text  x="30.27" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixl_isc_txd_encap (752 samples, 3.68%)</title><rect x="1146.6" y="37" width="43.4" height="15.0" fill="rgb(205,0,17)" rx="2" ry="2" />
<text  x="1149.57" y="47.5" >ixl_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (7,847 samples, 38.41%)</title><rect x="27.3" y="245" width="453.2" height="15.0" fill="rgb(231,11,2)" rx="2" ry="2" />
<text  x="30.27" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>__mtx_lock_sleep (18 samples, 0.09%)</title><rect x="939.4" y="53" width="1.0" height="15.0" fill="rgb(251,59,39)" rx="2" ry="2" />
<text  x="942.40" y="63.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (3,736 samples, 18.29%)</title><rect x="480.5" y="117" width="215.7" height="15.0" fill="rgb(230,182,53)" rx="2" ry="2" />
<text  x="483.48" y="127.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>__mtx_lock_sleep (409 samples, 2.00%)</title><rect x="940.4" y="37" width="23.7" height="15.0" fill="rgb(233,207,33)" rx="2" ry="2" />
<text  x="943.44" y="47.5" >_..</text>
</g>
<g >
<title>pfil_mbuf_in (3,987 samples, 19.51%)</title><rect x="248.7" y="85" width="230.3" height="15.0" fill="rgb(244,41,52)" rx="2" ry="2" />
<text  x="251.70" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>_task_fn_rx (3,587 samples, 17.56%)</title><rect x="939.4" y="245" width="207.2" height="15.0" fill="rgb(252,4,23)" rx="2" ry="2" />
<text  x="942.40" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>pfil_mbuf_in (1,217 samples, 5.96%)</title><rect x="1076.3" y="101" width="70.3" height="15.0" fill="rgb(234,151,54)" rx="2" ry="2" />
<text  x="1079.28" y="111.5" >pfil_mb..</text>
</g>
<g >
<title>ifmp_ring_enqueue (752 samples, 3.68%)</title><rect x="1146.6" y="101" width="43.4" height="15.0" fill="rgb(230,178,27)" rx="2" ry="2" />
<text  x="1149.57" y="111.5" >ifmp..</text>
</g>
<g >
<title>ip_input (7,946 samples, 38.89%)</title><rect x="480.5" y="149" width="458.9" height="15.0" fill="rgb(253,164,52)" rx="2" ry="2" />
<text  x="483.48" y="159.5" >ip_input</text>
</g>
<g >
<title>__mtx_lock_sleep (7 samples, 0.03%)</title><rect x="696.2" y="53" width="0.5" height="15.0" fill="rgb(237,194,37)" rx="2" ry="2" />
<text  x="699.25" y="63.5" ></text>
</g>
<g >
<title>ipf_matchsrcdst (3,150 samples, 15.42%)</title><rect x="514.3" y="37" width="181.9" height="15.0" fill="rgb(232,1,32)" rx="2" ry="2" />
<text  x="517.32" y="47.5" >ipf_matchsrcdst</text>
</g>
<g >
<title>gtaskqueue_run_locked (3,587 samples, 17.56%)</title><rect x="939.4" y="261" width="207.2" height="15.0" fill="rgb(231,1,26)" rx="2" ry="2" />
<text  x="942.40" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_rxeof (752 samples, 3.68%)</title><rect x="1146.6" y="277" width="43.4" height="15.0" fill="rgb(223,84,45)" rx="2" ry="2" />
<text  x="1149.57" y="287.5" >ifli..</text>
</g>
<g >
<title>ipf_matchsrcdst (3,650 samples, 17.87%)</title><rect x="728.6" y="37" width="210.8" height="15.0" fill="rgb(251,80,7)" rx="2" ry="2" />
<text  x="731.59" y="47.5" >ipf_matchsrcdst</text>
</g>
<g >
<title>netisr_dispatch_src (7,946 samples, 38.89%)</title><rect x="480.5" y="213" width="458.9" height="15.0" fill="rgb(215,205,39)" rx="2" ry="2" />
<text  x="483.48" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_scanlist (13 samples, 0.06%)</title><rect x="480.7" y="69" width="0.8" height="15.0" fill="rgb(254,91,17)" rx="2" ry="2" />
<text  x="483.71" y="79.5" ></text>
</g>
<g >
<title>ipf_state_check (3,715 samples, 18.18%)</title><rect x="481.7" y="69" width="214.5" height="15.0" fill="rgb(221,138,43)" rx="2" ry="2" />
<text  x="484.69" y="79.5" >ipf_state_check</text>
</g>
<g >
<title>lock_delay (8 samples, 0.04%)</title><rect x="1076.3" y="37" width="0.4" height="15.0" fill="rgb(207,26,33)" rx="2" ry="2" />
<text  x="1079.28" y="47.5" ></text>
</g>
<g >
<title>iflib_encap (752 samples, 3.68%)</title><rect x="1146.6" y="53" width="43.4" height="15.0" fill="rgb(226,125,48)" rx="2" ry="2" />
<text  x="1149.57" y="63.5" >ifli..</text>
</g>
<g >
<title>ipf_state_check (4,203 samples, 20.57%)</title><rect x="696.7" y="69" width="242.7" height="15.0" fill="rgb(233,33,33)" rx="2" ry="2" />
<text  x="699.65" y="79.5" >ipf_state_check</text>
</g>
<g >
<title>_task_fn_rx (7,946 samples, 38.89%)</title><rect x="480.5" y="261" width="458.9" height="15.0" fill="rgb(242,196,44)" rx="2" ry="2" />
<text  x="483.48" y="271.5" >_task_fn_rx</text>
</g>
</g>
</svg>
