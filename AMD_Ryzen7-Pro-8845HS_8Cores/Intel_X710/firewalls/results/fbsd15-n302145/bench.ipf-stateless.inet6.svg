<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ip6_tryforward (4,799 samples, 21.69%)</title><rect x="825.7" y="117" width="256.0" height="15.0" fill="rgb(254,86,46)" rx="2" ry="2" />
<text  x="828.73" y="127.5" >ip6_tryforward</text>
</g>
<g >
<title>lock_delay (1,035 samples, 4.68%)</title><rect x="960.2" y="37" width="55.2" height="15.0" fill="rgb(208,23,16)" rx="2" ry="2" />
<text  x="963.24" y="47.5" >lock_..</text>
</g>
<g >
<title>pfil_mbuf_in (2,902 samples, 13.12%)</title><rect x="860.7" y="101" width="154.7" height="15.0" fill="rgb(242,210,44)" rx="2" ry="2" />
<text  x="863.67" y="111.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ether_input (871 samples, 3.94%)</title><rect x="779.3" y="229" width="46.4" height="15.0" fill="rgb(238,31,6)" rx="2" ry="2" />
<text  x="782.28" y="239.5" >ethe..</text>
</g>
<g >
<title>ipf_makefrip (465 samples, 2.10%)</title><rect x="707.8" y="37" width="24.8" height="15.0" fill="rgb(206,21,51)" rx="2" ry="2" />
<text  x="710.76" y="47.5" >i..</text>
</g>
<g >
<title>pfil_mbuf_out (3,501 samples, 15.82%)</title><rect x="592.1" y="85" width="186.8" height="15.0" fill="rgb(254,53,9)" rx="2" ry="2" />
<text  x="595.13" y="95.5" >pfil_mbuf_out</text>
</g>
<g >
<title>gtaskqueue_thread_loop (13,632 samples, 61.61%)</title><rect x="52.2" y="261" width="727.1" height="15.0" fill="rgb(222,54,15)" rx="2" ry="2" />
<text  x="55.24" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>gtaskqueue_run_locked (4,799 samples, 21.69%)</title><rect x="825.7" y="261" width="256.0" height="15.0" fill="rgb(212,52,46)" rx="2" ry="2" />
<text  x="828.73" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>lock_delay (862 samples, 3.90%)</title><rect x="885.1" y="37" width="46.0" height="15.0" fill="rgb(235,114,4)" rx="2" ry="2" />
<text  x="888.09" y="47.5" >lock..</text>
</g>
<g >
<title>ether_input (568 samples, 2.57%)</title><rect x="10.0" y="245" width="30.3" height="15.0" fill="rgb(238,23,1)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >et..</text>
</g>
<g >
<title>iflib_txq_drain (2,031 samples, 9.18%)</title><rect x="1081.7" y="69" width="108.3" height="15.0" fill="rgb(207,66,1)" rx="2" ry="2" />
<text  x="1084.68" y="79.5" >iflib_txq_drain</text>
</g>
<g >
<title>iflib_encap (1,428 samples, 6.45%)</title><rect x="1081.7" y="53" width="76.1" height="15.0" fill="rgb(220,179,33)" rx="2" ry="2" />
<text  x="1084.68" y="63.5" >iflib_en..</text>
</g>
<g >
<title>iflib_if_transmit (655 samples, 2.96%)</title><rect x="825.7" y="69" width="35.0" height="15.0" fill="rgb(252,95,21)" rx="2" ry="2" />
<text  x="828.73" y="79.5" >if..</text>
</g>
<g >
<title>ether_output_frame (655 samples, 2.96%)</title><rect x="825.7" y="85" width="35.0" height="15.0" fill="rgb(227,74,49)" rx="2" ry="2" />
<text  x="828.73" y="95.5" >et..</text>
</g>
<g >
<title>lock_delay (285 samples, 1.29%)</title><rect x="763.2" y="37" width="15.2" height="15.0" fill="rgb(209,217,6)" rx="2" ry="2" />
<text  x="766.23" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4,799 samples, 21.69%)</title><rect x="825.7" y="149" width="256.0" height="15.0" fill="rgb(211,212,15)" rx="2" ry="2" />
<text  x="828.73" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>__mtx_lock_sleep (443 samples, 2.00%)</title><rect x="370.0" y="37" width="23.6" height="15.0" fill="rgb(250,73,54)" rx="2" ry="2" />
<text  x="373.00" y="47.5" >_..</text>
</g>
<g >
<title>ipf_scanlist (6 samples, 0.03%)</title><rect x="825.4" y="69" width="0.3" height="15.0" fill="rgb(222,100,17)" rx="2" ry="2" />
<text  x="828.41" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (568 samples, 2.57%)</title><rect x="10.0" y="229" width="30.3" height="15.0" fill="rgb(242,45,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >ne..</text>
</g>
<g >
<title>ipf_checkl4sum (5 samples, 0.02%)</title><rect x="825.1" y="37" width="0.3" height="15.0" fill="rgb(239,174,17)" rx="2" ry="2" />
<text  x="828.15" y="47.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (238 samples, 1.08%)</title><rect x="10.0" y="37" width="12.7" height="15.0" fill="rgb(227,37,10)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>ether_output (655 samples, 2.96%)</title><rect x="825.7" y="101" width="35.0" height="15.0" fill="rgb(230,47,15)" rx="2" ry="2" />
<text  x="828.73" y="111.5" >et..</text>
</g>
<g >
<title>ipf_check (2,902 samples, 13.12%)</title><rect x="860.7" y="69" width="154.7" height="15.0" fill="rgb(225,146,44)" rx="2" ry="2" />
<text  x="863.67" y="79.5" >ipf_check</text>
</g>
<g >
<title>netisr_dispatch_src (568 samples, 2.57%)</title><rect x="10.0" y="181" width="30.3" height="15.0" fill="rgb(217,14,13)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >ne..</text>
</g>
<g >
<title>__rw_rlock_int (594 samples, 2.68%)</title><rect x="393.6" y="37" width="31.7" height="15.0" fill="rgb(206,76,1)" rx="2" ry="2" />
<text  x="396.63" y="47.5" >__..</text>
</g>
<g >
<title>netisr_dispatch_src (871 samples, 3.94%)</title><rect x="779.3" y="213" width="46.4" height="15.0" fill="rgb(209,3,52)" rx="2" ry="2" />
<text  x="782.28" y="223.5" >neti..</text>
</g>
<g >
<title>pfil_mbuf_out (1,242 samples, 5.61%)</title><rect x="1015.4" y="101" width="66.3" height="15.0" fill="rgb(230,57,21)" rx="2" ry="2" />
<text  x="1018.44" y="111.5" >pfil_mb..</text>
</g>
<g >
<title>netisr_dispatch_src (871 samples, 3.94%)</title><rect x="779.3" y="165" width="46.4" height="15.0" fill="rgb(218,148,4)" rx="2" ry="2" />
<text  x="782.28" y="175.5" >neti..</text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.04%)</title><rect x="778.9" y="181" width="0.4" height="15.0" fill="rgb(233,162,51)" rx="2" ry="2" />
<text  x="781.85" y="191.5" ></text>
</g>
<g >
<title>ip6_tryforward (568 samples, 2.57%)</title><rect x="10.0" y="149" width="30.3" height="15.0" fill="rgb(252,178,44)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >ip..</text>
</g>
<g >
<title>_task_fn_rx (871 samples, 3.94%)</title><rect x="779.3" y="261" width="46.4" height="15.0" fill="rgb(206,73,18)" rx="2" ry="2" />
<text  x="782.28" y="271.5" >_tas..</text>
</g>
<g >
<title>ether_nh_input (568 samples, 2.57%)</title><rect x="10.0" y="213" width="30.3" height="15.0" fill="rgb(216,3,33)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >et..</text>
</g>
<g >
<title>ipf_derefrule (19 samples, 0.09%)</title><rect x="800.2" y="69" width="1.0" height="15.0" fill="rgb(230,211,22)" rx="2" ry="2" />
<text  x="803.19" y="79.5" ></text>
</g>
<g >
<title>ether_output (568 samples, 2.57%)</title><rect x="10.0" y="133" width="30.3" height="15.0" fill="rgb(217,16,42)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >et..</text>
</g>
<g >
<title>gtaskqueue_run_locked (871 samples, 3.94%)</title><rect x="779.3" y="277" width="46.4" height="15.0" fill="rgb(216,207,39)" rx="2" ry="2" />
<text  x="782.28" y="287.5" >gtas..</text>
</g>
<g >
<title>netisr_dispatch_src (2,031 samples, 9.18%)</title><rect x="1081.7" y="197" width="108.3" height="15.0" fill="rgb(228,96,46)" rx="2" ry="2" />
<text  x="1084.68" y="207.5" >netisr_dispat..</text>
</g>
<g >
<title>ipf_check_wrapper6 (458 samples, 2.07%)</title><rect x="800.2" y="101" width="24.4" height="15.0" fill="rgb(213,202,54)" rx="2" ry="2" />
<text  x="803.19" y="111.5" >i..</text>
</g>
<g >
<title>drain_ring_lockless (392 samples, 1.77%)</title><rect x="779.3" y="53" width="20.9" height="15.0" fill="rgb(240,32,6)" rx="2" ry="2" />
<text  x="782.28" y="63.5" ></text>
</g>
<g >
<title>lock_delay (8 samples, 0.04%)</title><rect x="1015.4" y="37" width="0.5" height="15.0" fill="rgb(208,132,12)" rx="2" ry="2" />
<text  x="1018.44" y="47.5" ></text>
</g>
<g >
<title>ipf_check_wrapper6 (2,902 samples, 13.12%)</title><rect x="860.7" y="85" width="154.7" height="15.0" fill="rgb(209,82,0)" rx="2" ry="2" />
<text  x="863.67" y="95.5" >ipf_check_wrapper6</text>
</g>
<g >
<title>ipf_makefrip (415 samples, 1.88%)</title><rect x="801.2" y="69" width="22.1" height="15.0" fill="rgb(207,82,53)" rx="2" ry="2" />
<text  x="804.20" y="79.5" >i..</text>
</g>
<g >
<title>ip6_input (2,031 samples, 9.18%)</title><rect x="1081.7" y="181" width="108.3" height="15.0" fill="rgb(211,140,26)" rx="2" ry="2" />
<text  x="1084.68" y="191.5" >ip6_input</text>
</g>
<g >
<title>netisr_dispatch_src (4,799 samples, 21.69%)</title><rect x="825.7" y="197" width="256.0" height="15.0" fill="rgb(216,18,19)" rx="2" ry="2" />
<text  x="828.73" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_rxeof (4,799 samples, 21.69%)</title><rect x="825.7" y="229" width="256.0" height="15.0" fill="rgb(243,54,47)" rx="2" ry="2" />
<text  x="828.73" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>ip6_tryforward (871 samples, 3.94%)</title><rect x="779.3" y="133" width="46.4" height="15.0" fill="rgb(237,73,49)" rx="2" ry="2" />
<text  x="782.28" y="143.5" >ip6_..</text>
</g>
<g >
<title>ipf_makefrip (171 samples, 0.77%)</title><rect x="478.6" y="37" width="9.2" height="15.0" fill="rgb(218,224,15)" rx="2" ry="2" />
<text  x="481.64" y="47.5" ></text>
</g>
<g >
<title>ether_input (13,624 samples, 61.58%)</title><rect x="52.2" y="197" width="726.7" height="15.0" fill="rgb(227,133,50)" rx="2" ry="2" />
<text  x="55.24" y="207.5" >ether_input</text>
</g>
<g >
<title>ipf_scanlist (575 samples, 2.60%)</title><rect x="732.6" y="37" width="30.6" height="15.0" fill="rgb(243,54,22)" rx="2" ry="2" />
<text  x="735.56" y="47.5" >ip..</text>
</g>
<g >
<title>memset_erms (8 samples, 0.04%)</title><rect x="778.4" y="37" width="0.5" height="15.0" fill="rgb(223,225,10)" rx="2" ry="2" />
<text  x="781.43" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (13,632 samples, 61.61%)</title><rect x="52.2" y="245" width="727.1" height="15.0" fill="rgb(205,206,1)" rx="2" ry="2" />
<text  x="55.24" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ether_nh_input (871 samples, 3.94%)</title><rect x="779.3" y="197" width="46.4" height="15.0" fill="rgb(249,13,37)" rx="2" ry="2" />
<text  x="782.28" y="207.5" >ethe..</text>
</g>
<g >
<title>keg_fetch_free_slab (5 samples, 0.02%)</title><rect x="779.0" y="133" width="0.3" height="15.0" fill="rgb(208,188,21)" rx="2" ry="2" />
<text  x="782.01" y="143.5" ></text>
</g>
<g >
<title>drain_ring_lockless (655 samples, 2.96%)</title><rect x="825.7" y="37" width="35.0" height="15.0" fill="rgb(244,130,29)" rx="2" ry="2" />
<text  x="828.73" y="47.5" >dr..</text>
</g>
<g >
<title>pfil_mbuf_in (458 samples, 2.07%)</title><rect x="800.2" y="117" width="24.4" height="15.0" fill="rgb(219,221,49)" rx="2" ry="2" />
<text  x="803.19" y="127.5" >p..</text>
</g>
<g >
<title>iflib_if_transmit (392 samples, 1.77%)</title><rect x="779.3" y="85" width="20.9" height="15.0" fill="rgb(220,59,49)" rx="2" ry="2" />
<text  x="782.28" y="95.5" ></text>
</g>
<g >
<title>all (22,125 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,12,24)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ipf_scanlist (595 samples, 2.69%)</title><rect x="1049.9" y="53" width="31.8" height="15.0" fill="rgb(229,39,33)" rx="2" ry="2" />
<text  x="1052.95" y="63.5" >ip..</text>
</g>
<g >
<title>ipf_derefrule (509 samples, 2.30%)</title><rect x="451.5" y="37" width="27.1" height="15.0" fill="rgb(222,156,23)" rx="2" ry="2" />
<text  x="454.49" y="47.5" >i..</text>
</g>
<g >
<title>ether_demux (13,624 samples, 61.58%)</title><rect x="52.2" y="149" width="726.7" height="15.0" fill="rgb(249,192,19)" rx="2" ry="2" />
<text  x="55.24" y="159.5" >ether_demux</text>
</g>
<g >
<title>drain_ring_lockless (568 samples, 2.57%)</title><rect x="10.0" y="69" width="30.3" height="15.0" fill="rgb(234,188,13)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >dr..</text>
</g>
<g >
<title>lock_delay (10 samples, 0.05%)</title><rect x="824.6" y="37" width="0.5" height="15.0" fill="rgb(220,126,36)" rx="2" ry="2" />
<text  x="827.61" y="47.5" ></text>
</g>
<g >
<title>ipf_checkv6sum (5 samples, 0.02%)</title><rect x="825.1" y="53" width="0.3" height="15.0" fill="rgb(216,211,36)" rx="2" ry="2" />
<text  x="828.15" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (547 samples, 2.47%)</title><rect x="931.1" y="37" width="29.1" height="15.0" fill="rgb(225,58,21)" rx="2" ry="2" />
<text  x="934.07" y="47.5" >__..</text>
</g>
<g >
<title>iflib_txq_drain (224 samples, 1.01%)</title><rect x="40.3" y="213" width="11.9" height="15.0" fill="rgb(224,129,0)" rx="2" ry="2" />
<text  x="43.29" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (13,624 samples, 61.58%)</title><rect x="52.2" y="181" width="726.7" height="15.0" fill="rgb(226,140,20)" rx="2" ry="2" />
<text  x="55.24" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_derefrule (639 samples, 2.89%)</title><rect x="1015.9" y="53" width="34.0" height="15.0" fill="rgb(208,7,33)" rx="2" ry="2" />
<text  x="1018.87" y="63.5" >ip..</text>
</g>
<g >
<title>ipf_check (1,242 samples, 5.61%)</title><rect x="1015.4" y="69" width="66.3" height="15.0" fill="rgb(231,129,54)" rx="2" ry="2" />
<text  x="1018.44" y="79.5" >ipf_check</text>
</g>
<g >
<title>ipf_check (3,501 samples, 15.82%)</title><rect x="592.1" y="53" width="186.8" height="15.0" fill="rgb(249,212,34)" rx="2" ry="2" />
<text  x="595.13" y="63.5" >ipf_check</text>
</g>
<g >
<title>ixl_isc_txd_flush (603 samples, 2.73%)</title><rect x="1157.8" y="37" width="32.2" height="15.0" fill="rgb(234,60,40)" rx="2" ry="2" />
<text  x="1160.84" y="47.5" >ix..</text>
</g>
<g >
<title>ether_input (4,799 samples, 21.69%)</title><rect x="825.7" y="213" width="256.0" height="15.0" fill="rgb(243,12,8)" rx="2" ry="2" />
<text  x="828.73" y="223.5" >ether_input</text>
</g>
<g >
<title>iflib_if_transmit (224 samples, 1.01%)</title><rect x="40.3" y="261" width="11.9" height="15.0" fill="rgb(236,94,26)" rx="2" ry="2" />
<text  x="43.29" y="271.5" ></text>
</g>
<g >
<title>ether_demux (568 samples, 2.57%)</title><rect x="10.0" y="197" width="30.3" height="15.0" fill="rgb(207,181,42)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >et..</text>
</g>
<g >
<title>ether_output (2,031 samples, 9.18%)</title><rect x="1081.7" y="149" width="108.3" height="15.0" fill="rgb(205,52,7)" rx="2" ry="2" />
<text  x="1084.68" y="159.5" >ether_output</text>
</g>
<g >
<title>pfil_mbuf_in (6,791 samples, 30.69%)</title><rect x="229.9" y="85" width="362.2" height="15.0" fill="rgb(234,60,54)" rx="2" ry="2" />
<text  x="232.95" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>drain_ring_lockless (2,031 samples, 9.18%)</title><rect x="1081.7" y="85" width="108.3" height="15.0" fill="rgb(213,125,5)" rx="2" ry="2" />
<text  x="1084.68" y="95.5" >drain_ring_lo..</text>
</g>
<g >
<title>lock_delay (6 samples, 0.03%)</title><rect x="825.4" y="37" width="0.3" height="15.0" fill="rgb(223,60,0)" rx="2" ry="2" />
<text  x="828.41" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,799 samples, 21.69%)</title><rect x="825.7" y="277" width="256.0" height="15.0" fill="rgb(250,116,20)" rx="2" ry="2" />
<text  x="828.73" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>lock_delay (736 samples, 3.33%)</title><rect x="528.3" y="37" width="39.2" height="15.0" fill="rgb(254,144,34)" rx="2" ry="2" />
<text  x="531.29" y="47.5" >loc..</text>
</g>
<g >
<title>ip6_tryforward (2,031 samples, 9.18%)</title><rect x="1081.7" y="165" width="108.3" height="15.0" fill="rgb(243,92,20)" rx="2" ry="2" />
<text  x="1084.68" y="175.5" >ip6_tryforward</text>
</g>
<g >
<title>iflib_rxeof (2,031 samples, 9.18%)</title><rect x="1081.7" y="277" width="108.3" height="15.0" fill="rgb(205,33,26)" rx="2" ry="2" />
<text  x="1084.68" y="287.5" >iflib_rxeof</text>
</g>
<g >
<title>ipf_scanlist (760 samples, 3.44%)</title><rect x="487.8" y="37" width="40.5" height="15.0" fill="rgb(249,130,51)" rx="2" ry="2" />
<text  x="490.76" y="47.5" >ipf..</text>
</g>
<g >
<title>__mtx_lock_sleep (10 samples, 0.05%)</title><rect x="824.6" y="53" width="0.5" height="15.0" fill="rgb(241,189,44)" rx="2" ry="2" />
<text  x="827.61" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (568 samples, 2.57%)</title><rect x="10.0" y="101" width="30.3" height="15.0" fill="rgb(210,153,49)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >if..</text>
</g>
<g >
<title>lock_delay (355 samples, 1.60%)</title><rect x="1062.7" y="37" width="19.0" height="15.0" fill="rgb(221,163,1)" rx="2" ry="2" />
<text  x="1065.75" y="47.5" ></text>
</g>
<g >
<title>ether_output (392 samples, 1.77%)</title><rect x="779.3" y="117" width="20.9" height="15.0" fill="rgb(209,69,27)" rx="2" ry="2" />
<text  x="782.28" y="127.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (24 samples, 0.11%)</title><rect x="823.3" y="53" width="1.3" height="15.0" fill="rgb(253,85,5)" rx="2" ry="2" />
<text  x="826.33" y="63.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (491 samples, 2.22%)</title><rect x="425.3" y="37" width="26.2" height="15.0" fill="rgb(231,12,11)" rx="2" ry="2" />
<text  x="428.31" y="47.5" >_..</text>
</g>
<g >
<title>ipf_scanlist (1,582 samples, 7.15%)</title><rect x="931.1" y="53" width="84.3" height="15.0" fill="rgb(233,25,50)" rx="2" ry="2" />
<text  x="934.07" y="63.5" >ipf_scanl..</text>
</g>
<g >
<title>__mtx_lock_sleep (435 samples, 1.97%)</title><rect x="861.9" y="37" width="23.2" height="15.0" fill="rgb(242,169,28)" rx="2" ry="2" />
<text  x="864.89" y="47.5" >_..</text>
</g>
<g >
<title>ether_demux (2,031 samples, 9.18%)</title><rect x="1081.7" y="213" width="108.3" height="15.0" fill="rgb(222,209,26)" rx="2" ry="2" />
<text  x="1084.68" y="223.5" >ether_demux</text>
</g>
<g >
<title>iflib_fl_refill (8 samples, 0.04%)</title><rect x="778.9" y="197" width="0.4" height="15.0" fill="rgb(233,160,10)" rx="2" ry="2" />
<text  x="781.85" y="207.5" ></text>
</g>
<g >
<title>ipf_derefrule (438 samples, 1.98%)</title><rect x="684.4" y="37" width="23.4" height="15.0" fill="rgb(234,64,43)" rx="2" ry="2" />
<text  x="687.40" y="47.5" >i..</text>
</g>
<g >
<title>ifmp_ring_enqueue (655 samples, 2.96%)</title><rect x="825.7" y="53" width="35.0" height="15.0" fill="rgb(208,2,54)" rx="2" ry="2" />
<text  x="828.73" y="63.5" >if..</text>
</g>
<g >
<title>iflib_rxeof (13,632 samples, 61.61%)</title><rect x="52.2" y="213" width="727.1" height="15.0" fill="rgb(250,207,6)" rx="2" ry="2" />
<text  x="55.24" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>__mtx_lock_sleep (8 samples, 0.04%)</title><rect x="1015.4" y="53" width="0.5" height="15.0" fill="rgb(235,201,48)" rx="2" ry="2" />
<text  x="1018.44" y="63.5" ></text>
</g>
<g >
<title>ether_output_frame (224 samples, 1.01%)</title><rect x="40.3" y="277" width="11.9" height="15.0" fill="rgb(227,120,48)" rx="2" ry="2" />
<text  x="43.29" y="287.5" ></text>
</g>
<g >
<title>zone_import (8 samples, 0.04%)</title><rect x="778.9" y="149" width="0.4" height="15.0" fill="rgb(243,169,22)" rx="2" ry="2" />
<text  x="781.85" y="159.5" ></text>
</g>
<g >
<title>__rw_rlock_int (304 samples, 1.37%)</title><rect x="641.2" y="37" width="16.2" height="15.0" fill="rgb(214,4,50)" rx="2" ry="2" />
<text  x="644.20" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (19 samples, 0.09%)</title><rect x="800.2" y="53" width="1.0" height="15.0" fill="rgb(207,107,45)" rx="2" ry="2" />
<text  x="803.19" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (568 samples, 2.57%)</title><rect x="10.0" y="277" width="30.3" height="15.0" fill="rgb(225,77,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >_t..</text>
</g>
<g >
<title>__mtx_lock_sleep (23 samples, 0.10%)</title><rect x="860.7" y="53" width="1.2" height="15.0" fill="rgb(213,70,13)" rx="2" ry="2" />
<text  x="863.67" y="63.5" ></text>
</g>
<g >
<title>ip6_input (4,799 samples, 21.69%)</title><rect x="825.7" y="133" width="256.0" height="15.0" fill="rgb(253,177,41)" rx="2" ry="2" />
<text  x="828.73" y="143.5" >ip6_input</text>
</g>
<g >
<title>ipf_derefrule (1,297 samples, 5.86%)</title><rect x="861.9" y="53" width="69.2" height="15.0" fill="rgb(213,35,11)" rx="2" ry="2" />
<text  x="864.89" y="63.5" >ipf_der..</text>
</g>
<g >
<title>drain_ring_lockless (224 samples, 1.01%)</title><rect x="40.3" y="229" width="11.9" height="15.0" fill="rgb(235,50,45)" rx="2" ry="2" />
<text  x="43.29" y="239.5" ></text>
</g>
<g >
<title>ipf_derefrule (10 samples, 0.05%)</title><rect x="824.6" y="69" width="0.5" height="15.0" fill="rgb(242,215,26)" rx="2" ry="2" />
<text  x="827.61" y="79.5" ></text>
</g>
<g >
<title>ether_nh_input (2,031 samples, 9.18%)</title><rect x="1081.7" y="229" width="108.3" height="15.0" fill="rgb(245,170,1)" rx="2" ry="2" />
<text  x="1084.68" y="239.5" >ether_nh_input</text>
</g>
<g >
<title>ether_nh_input (4,799 samples, 21.69%)</title><rect x="825.7" y="181" width="256.0" height="15.0" fill="rgb(205,101,12)" rx="2" ry="2" />
<text  x="828.73" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>iflib_rxeof (568 samples, 2.57%)</title><rect x="10.0" y="261" width="30.3" height="15.0" fill="rgb(249,211,4)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >if..</text>
</g>
<g >
<title>ipf_checkv6sum (415 samples, 1.88%)</title><rect x="801.2" y="53" width="22.1" height="15.0" fill="rgb(233,26,21)" rx="2" ry="2" />
<text  x="804.20" y="63.5" >i..</text>
</g>
<g >
<title>fork_exit (13,632 samples, 61.61%)</title><rect x="52.2" y="277" width="727.1" height="15.0" fill="rgb(238,196,15)" rx="2" ry="2" />
<text  x="55.24" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_output_frame (568 samples, 2.57%)</title><rect x="10.0" y="117" width="30.3" height="15.0" fill="rgb(243,169,27)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >et..</text>
</g>
<g >
<title>memset_erms (461 samples, 2.08%)</title><rect x="567.5" y="37" width="24.6" height="15.0" fill="rgb(223,11,16)" rx="2" ry="2" />
<text  x="570.55" y="47.5" >m..</text>
</g>
<g >
<title>lock_delay (19 samples, 0.09%)</title><rect x="800.2" y="37" width="1.0" height="15.0" fill="rgb(249,118,24)" rx="2" ry="2" />
<text  x="803.19" y="47.5" ></text>
</g>
<g >
<title>lock_delay (23 samples, 0.10%)</title><rect x="860.7" y="37" width="1.2" height="15.0" fill="rgb(227,201,16)" rx="2" ry="2" />
<text  x="863.67" y="47.5" ></text>
</g>
<g >
<title>ipf_check (458 samples, 2.07%)</title><rect x="800.2" y="85" width="24.4" height="15.0" fill="rgb(208,109,15)" rx="2" ry="2" />
<text  x="803.19" y="95.5" >i..</text>
</g>
<g >
<title>ether_demux (4,799 samples, 21.69%)</title><rect x="825.7" y="165" width="256.0" height="15.0" fill="rgb(236,103,28)" rx="2" ry="2" />
<text  x="828.73" y="175.5" >ether_demux</text>
</g>
<g >
<title>__mtx_lock_sleep (6 samples, 0.03%)</title><rect x="825.4" y="53" width="0.3" height="15.0" fill="rgb(245,41,25)" rx="2" ry="2" />
<text  x="828.41" y="63.5" ></text>
</g>
<g >
<title>ether_output_frame (2,031 samples, 9.18%)</title><rect x="1081.7" y="133" width="108.3" height="15.0" fill="rgb(216,51,22)" rx="2" ry="2" />
<text  x="1084.68" y="143.5" >ether_output_..</text>
</g>
<g >
<title>ip6_input (13,624 samples, 61.58%)</title><rect x="52.2" y="117" width="726.7" height="15.0" fill="rgb(248,140,44)" rx="2" ry="2" />
<text  x="55.24" y="127.5" >ip6_input</text>
</g>
<g >
<title>__mtx_lock_sleep (240 samples, 1.08%)</title><rect x="1049.9" y="37" width="12.8" height="15.0" fill="rgb(205,173,2)" rx="2" ry="2" />
<text  x="1052.95" y="47.5" ></text>
</g>
<g >
<title>ether_demux (871 samples, 3.94%)</title><rect x="779.3" y="181" width="46.4" height="15.0" fill="rgb(217,7,47)" rx="2" ry="2" />
<text  x="782.28" y="191.5" >ethe..</text>
</g>
<g >
<title>iflib_txd_db_check (603 samples, 2.73%)</title><rect x="1157.8" y="53" width="32.2" height="15.0" fill="rgb(213,15,31)" rx="2" ry="2" />
<text  x="1160.84" y="63.5" >if..</text>
</g>
<g >
<title>ifmp_ring_enqueue (2,031 samples, 9.18%)</title><rect x="1081.7" y="101" width="108.3" height="15.0" fill="rgb(210,57,45)" rx="2" ry="2" />
<text  x="1084.68" y="111.5" >ifmp_ring_enq..</text>
</g>
<g >
<title>ifmp_ring_enqueue (392 samples, 1.77%)</title><rect x="779.3" y="69" width="20.9" height="15.0" fill="rgb(248,79,13)" rx="2" ry="2" />
<text  x="782.28" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (261 samples, 1.18%)</title><rect x="1015.9" y="37" width="13.9" height="15.0" fill="rgb(227,55,51)" rx="2" ry="2" />
<text  x="1018.87" y="47.5" ></text>
</g>
<g >
<title>ipf_scanlist (24 samples, 0.11%)</title><rect x="823.3" y="69" width="1.3" height="15.0" fill="rgb(219,26,14)" rx="2" ry="2" />
<text  x="826.33" y="79.5" ></text>
</g>
<g >
<title>ip6_input (871 samples, 3.94%)</title><rect x="779.3" y="149" width="46.4" height="15.0" fill="rgb(214,225,48)" rx="2" ry="2" />
<text  x="782.28" y="159.5" >ip6_..</text>
</g>
<g >
<title>_task_fn_rx (4,799 samples, 21.69%)</title><rect x="825.7" y="245" width="256.0" height="15.0" fill="rgb(222,35,37)" rx="2" ry="2" />
<text  x="828.73" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_output_frame (392 samples, 1.77%)</title><rect x="779.3" y="101" width="20.9" height="15.0" fill="rgb(217,213,12)" rx="2" ry="2" />
<text  x="782.28" y="111.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.04%)</title><rect x="778.9" y="165" width="0.4" height="15.0" fill="rgb(206,33,26)" rx="2" ry="2" />
<text  x="781.85" y="175.5" ></text>
</g>
<g >
<title>iflib_txq_drain (392 samples, 1.77%)</title><rect x="779.3" y="37" width="20.9" height="15.0" fill="rgb(231,207,37)" rx="2" ry="2" />
<text  x="782.28" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (224 samples, 1.01%)</title><rect x="40.3" y="245" width="11.9" height="15.0" fill="rgb(211,225,13)" rx="2" ry="2" />
<text  x="43.29" y="255.5" ></text>
</g>
<g >
<title>lock_delay (24 samples, 0.11%)</title><rect x="823.3" y="37" width="1.3" height="15.0" fill="rgb(237,188,53)" rx="2" ry="2" />
<text  x="826.33" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (871 samples, 3.94%)</title><rect x="779.3" y="245" width="46.4" height="15.0" fill="rgb(218,10,46)" rx="2" ry="2" />
<text  x="782.28" y="255.5" >ifli..</text>
</g>
<g >
<title>pfil_mbuf_out (21 samples, 0.09%)</title><rect x="824.6" y="117" width="1.1" height="15.0" fill="rgb(249,85,17)" rx="2" ry="2" />
<text  x="827.61" y="127.5" ></text>
</g>
<g >
<title>ipf_check_wrapper6 (1,242 samples, 5.61%)</title><rect x="1015.4" y="85" width="66.3" height="15.0" fill="rgb(234,49,5)" rx="2" ry="2" />
<text  x="1018.44" y="95.5" >ipf_che..</text>
</g>
<g >
<title>_rw_runlock_cookie_int (506 samples, 2.29%)</title><rect x="657.4" y="37" width="27.0" height="15.0" fill="rgb(245,75,13)" rx="2" ry="2" />
<text  x="660.41" y="47.5" >_..</text>
</g>
<g >
<title>__mtx_lock_sleep (214 samples, 0.97%)</title><rect x="629.8" y="37" width="11.4" height="15.0" fill="rgb(222,181,40)" rx="2" ry="2" />
<text  x="632.79" y="47.5" ></text>
</g>
<g >
<title>ipf_check_wrapper6 (21 samples, 0.09%)</title><rect x="824.6" y="101" width="1.1" height="15.0" fill="rgb(207,39,39)" rx="2" ry="2" />
<text  x="827.61" y="111.5" ></text>
</g>
<g >
<title>ipf_check (6,791 samples, 30.69%)</title><rect x="229.9" y="53" width="362.2" height="15.0" fill="rgb(250,27,9)" rx="2" ry="2" />
<text  x="232.95" y="63.5" >ipf_check</text>
</g>
<g >
<title>ip6_tryforward (13,037 samples, 58.92%)</title><rect x="83.5" y="101" width="695.4" height="15.0" fill="rgb(240,100,32)" rx="2" ry="2" />
<text  x="86.55" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>netisr_dispatch_src (2,031 samples, 9.18%)</title><rect x="1081.7" y="245" width="108.3" height="15.0" fill="rgb(215,208,19)" rx="2" ry="2" />
<text  x="1084.68" y="255.5" >netisr_dispat..</text>
</g>
<g >
<title>ipf_checkl4sum (415 samples, 1.88%)</title><rect x="801.2" y="37" width="22.1" height="15.0" fill="rgb(225,14,36)" rx="2" ry="2" />
<text  x="804.20" y="47.5" >i..</text>
</g>
<g >
<title>lock_delay (378 samples, 1.71%)</title><rect x="1029.8" y="37" width="20.1" height="15.0" fill="rgb(209,50,52)" rx="2" ry="2" />
<text  x="1032.79" y="47.5" ></text>
</g>
<g >
<title>keg_alloc_slab (3 samples, 0.01%)</title><rect x="778.9" y="133" width="0.1" height="15.0" fill="rgb(220,174,28)" rx="2" ry="2" />
<text  x="781.85" y="143.5" ></text>
</g>
<g >
<title>ether_nh_input (13,624 samples, 61.58%)</title><rect x="52.2" y="165" width="726.7" height="15.0" fill="rgb(250,38,7)" rx="2" ry="2" />
<text  x="55.24" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>iflib_encap (330 samples, 1.49%)</title><rect x="22.7" y="37" width="17.6" height="15.0" fill="rgb(215,51,21)" rx="2" ry="2" />
<text  x="25.69" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (2,031 samples, 9.18%)</title><rect x="1081.7" y="117" width="108.3" height="15.0" fill="rgb(252,140,33)" rx="2" ry="2" />
<text  x="1084.68" y="127.5" >iflib_if_tran..</text>
</g>
<g >
<title>iflib_txd_db_check (224 samples, 1.01%)</title><rect x="40.3" y="197" width="11.9" height="15.0" fill="rgb(226,113,4)" rx="2" ry="2" />
<text  x="43.29" y="207.5" ></text>
</g>
<g >
<title>ipf_check_wrapper6 (6,791 samples, 30.69%)</title><rect x="229.9" y="69" width="362.2" height="15.0" fill="rgb(232,97,34)" rx="2" ry="2" />
<text  x="232.95" y="79.5" >ipf_check_wrapper6</text>
</g>
<g >
<title>ipf_makefrip (5 samples, 0.02%)</title><rect x="825.1" y="69" width="0.3" height="15.0" fill="rgb(225,161,23)" rx="2" ry="2" />
<text  x="828.15" y="79.5" ></text>
</g>
<g >
<title>_task_fn_rx (13,632 samples, 61.61%)</title><rect x="52.2" y="229" width="727.1" height="15.0" fill="rgb(241,20,41)" rx="2" ry="2" />
<text  x="55.24" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ixl_isc_txd_encap (1,428 samples, 6.45%)</title><rect x="1081.7" y="37" width="76.1" height="15.0" fill="rgb(248,93,53)" rx="2" ry="2" />
<text  x="1084.68" y="47.5" >ixl_isc_..</text>
</g>
<g >
<title>ifmp_ring_enqueue (568 samples, 2.57%)</title><rect x="10.0" y="85" width="30.3" height="15.0" fill="rgb(235,196,8)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >if..</text>
</g>
<g >
<title>in6_localip (273 samples, 1.23%)</title><rect x="215.4" y="85" width="14.5" height="15.0" fill="rgb(217,5,25)" rx="2" ry="2" />
<text  x="218.39" y="95.5" ></text>
</g>
<g >
<title>iflib_txq_drain (568 samples, 2.57%)</title><rect x="10.0" y="53" width="30.3" height="15.0" fill="rgb(231,135,11)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >if..</text>
</g>
<g >
<title>ether_input (2,031 samples, 9.18%)</title><rect x="1081.7" y="261" width="108.3" height="15.0" fill="rgb(221,56,36)" rx="2" ry="2" />
<text  x="1084.68" y="271.5" >ether_input</text>
</g>
<g >
<title>netisr_dispatch_src (13,624 samples, 61.58%)</title><rect x="52.2" y="133" width="726.7" height="15.0" fill="rgb(208,88,40)" rx="2" ry="2" />
<text  x="55.24" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_check_wrapper6 (3,501 samples, 15.82%)</title><rect x="592.1" y="69" width="186.8" height="15.0" fill="rgb(234,171,29)" rx="2" ry="2" />
<text  x="595.13" y="79.5" >ipf_check_wrapper6</text>
</g>
<g >
<title>lock_delay (3 samples, 0.01%)</title><rect x="778.9" y="117" width="0.1" height="15.0" fill="rgb(219,51,44)" rx="2" ry="2" />
<text  x="781.85" y="127.5" ></text>
</g>
<g >
<title>lock_delay (5 samples, 0.02%)</title><rect x="779.0" y="117" width="0.3" height="15.0" fill="rgb(218,8,53)" rx="2" ry="2" />
<text  x="782.01" y="127.5" ></text>
</g>
<g >
<title>ipf_check (21 samples, 0.09%)</title><rect x="824.6" y="85" width="1.1" height="15.0" fill="rgb(248,141,31)" rx="2" ry="2" />
<text  x="827.61" y="95.5" ></text>
</g>
<g >
<title>ip6_input (568 samples, 2.57%)</title><rect x="10.0" y="165" width="30.3" height="15.0" fill="rgb(254,23,0)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >ip..</text>
</g>
</g>
</svg>
