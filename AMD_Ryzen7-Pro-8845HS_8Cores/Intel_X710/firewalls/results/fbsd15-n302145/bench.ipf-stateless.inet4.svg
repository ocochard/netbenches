<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>__mtx_lock_sleep (316 samples, 1.32%)</title><rect x="866.2" y="37" width="15.7" height="15.0" fill="rgb(213,101,51)" rx="2" ry="2" />
<text  x="869.23" y="47.5" ></text>
</g>
<g >
<title>ether_output (1,207 samples, 5.06%)</title><rect x="10.0" y="133" width="59.7" height="15.0" fill="rgb(208,166,52)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >ether_..</text>
</g>
<g >
<title>netisr_dispatch_src (301 samples, 1.26%)</title><rect x="779.5" y="165" width="14.9" height="15.0" fill="rgb(245,77,42)" rx="2" ry="2" />
<text  x="782.47" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (5,836 samples, 24.46%)</title><rect x="794.4" y="181" width="288.6" height="15.0" fill="rgb(250,48,30)" rx="2" ry="2" />
<text  x="797.36" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>ipf_makefrip (187 samples, 0.78%)</title><rect x="251.0" y="37" width="9.2" height="15.0" fill="rgb(252,108,0)" rx="2" ry="2" />
<text  x="253.98" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (1,207 samples, 5.06%)</title><rect x="10.0" y="117" width="59.7" height="15.0" fill="rgb(208,26,51)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >ether_..</text>
</g>
<g >
<title>ifmp_ring_enqueue (682 samples, 2.86%)</title><rect x="794.4" y="53" width="33.7" height="15.0" fill="rgb(222,81,29)" rx="2" ry="2" />
<text  x="797.36" y="63.5" >if..</text>
</g>
<g >
<title>ipf_derefrule (458 samples, 1.92%)</title><rect x="228.3" y="37" width="22.7" height="15.0" fill="rgb(242,83,24)" rx="2" ry="2" />
<text  x="231.32" y="47.5" >i..</text>
</g>
<g >
<title>lock_delay (47 samples, 0.20%)</title><rect x="908.3" y="37" width="2.3" height="15.0" fill="rgb(242,197,27)" rx="2" ry="2" />
<text  x="911.27" y="47.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (3,571 samples, 14.97%)</title><rect x="132.3" y="69" width="176.6" height="15.0" fill="rgb(215,138,37)" rx="2" ry="2" />
<text  x="135.32" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ether_nh_input (1,972 samples, 8.27%)</title><rect x="1083.0" y="229" width="97.6" height="15.0" fill="rgb(220,117,5)" rx="2" ry="2" />
<text  x="1086.02" y="239.5" >ether_nh_in..</text>
</g>
<g >
<title>ip_input (1,207 samples, 5.06%)</title><rect x="10.0" y="165" width="59.7" height="15.0" fill="rgb(235,74,33)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >ip_input</text>
</g>
<g >
<title>ipf_check_wrapper (34 samples, 0.14%)</title><rect x="792.7" y="101" width="1.7" height="15.0" fill="rgb(238,84,44)" rx="2" ry="2" />
<text  x="795.68" y="111.5" ></text>
</g>
<g >
<title>lock_delay (1,230 samples, 5.16%)</title><rect x="1022.2" y="37" width="60.8" height="15.0" fill="rgb(232,96,18)" rx="2" ry="2" />
<text  x="1025.18" y="47.5" >lock_d..</text>
</g>
<g >
<title>ether_input (301 samples, 1.26%)</title><rect x="779.5" y="229" width="14.9" height="15.0" fill="rgb(212,26,29)" rx="2" ry="2" />
<text  x="782.47" y="239.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (252 samples, 1.06%)</title><rect x="779.5" y="69" width="12.4" height="15.0" fill="rgb(236,16,26)" rx="2" ry="2" />
<text  x="782.47" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (230 samples, 0.96%)</title><rect x="69.7" y="213" width="11.4" height="15.0" fill="rgb(246,110,16)" rx="2" ry="2" />
<text  x="72.70" y="223.5" ></text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="768.2" y="117" width="0.2" height="15.0" fill="rgb(205,144,17)" rx="2" ry="2" />
<text  x="771.19" y="127.5" ></text>
</g>
<g >
<title>intr_execute_handlers (8 samples, 0.03%)</title><rect x="1189.6" y="277" width="0.4" height="15.0" fill="rgb(237,143,18)" rx="2" ry="2" />
<text  x="1192.60" y="287.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,972 samples, 8.27%)</title><rect x="1083.0" y="277" width="97.6" height="15.0" fill="rgb(241,100,29)" rx="2" ry="2" />
<text  x="1086.02" y="287.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_if_transmit (252 samples, 1.06%)</title><rect x="779.5" y="85" width="12.4" height="15.0" fill="rgb(244,51,26)" rx="2" ry="2" />
<text  x="782.47" y="95.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,207 samples, 5.06%)</title><rect x="10.0" y="69" width="59.7" height="15.0" fill="rgb(219,12,43)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >drain_..</text>
</g>
<g >
<title>iflib_if_transmit (1,972 samples, 8.27%)</title><rect x="1083.0" y="117" width="97.6" height="15.0" fill="rgb(214,155,51)" rx="2" ry="2" />
<text  x="1086.02" y="127.5" >iflib_if_tr..</text>
</g>
<g >
<title>ipf_scanlist (11 samples, 0.05%)</title><rect x="793.8" y="69" width="0.6" height="15.0" fill="rgb(240,196,7)" rx="2" ry="2" />
<text  x="796.81" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (4 samples, 0.02%)</title><rect x="792.5" y="53" width="0.2" height="15.0" fill="rgb(246,188,26)" rx="2" ry="2" />
<text  x="795.48" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (5,836 samples, 24.46%)</title><rect x="794.4" y="245" width="288.6" height="15.0" fill="rgb(237,67,43)" rx="2" ry="2" />
<text  x="797.36" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>intr_event_handle (8 samples, 0.03%)</title><rect x="1189.6" y="261" width="0.4" height="15.0" fill="rgb(224,106,5)" rx="2" ry="2" />
<text  x="1192.60" y="271.5" ></text>
</g>
<g >
<title>lock_delay (23 samples, 0.10%)</title><rect x="792.7" y="37" width="1.1" height="15.0" fill="rgb(232,189,4)" rx="2" ry="2" />
<text  x="795.68" y="47.5" ></text>
</g>
<g >
<title>ether_input (13,888 samples, 58.21%)</title><rect x="81.1" y="197" width="686.9" height="15.0" fill="rgb(229,22,8)" rx="2" ry="2" />
<text  x="84.08" y="207.5" >ether_input</text>
</g>
<g >
<title>iflib_txd_db_check (448 samples, 1.88%)</title><rect x="1158.4" y="53" width="22.2" height="15.0" fill="rgb(236,208,45)" rx="2" ry="2" />
<text  x="1161.39" y="63.5" >i..</text>
</g>
<g >
<title>pfil_mbuf_fwd (1,621 samples, 6.79%)</title><rect x="828.1" y="101" width="80.2" height="15.0" fill="rgb(239,166,28)" rx="2" ry="2" />
<text  x="831.09" y="111.5" >pfil_mbuf..</text>
</g>
<g >
<title>lock_delay (899 samples, 3.77%)</title><rect x="598.3" y="37" width="44.5" height="15.0" fill="rgb(211,44,18)" rx="2" ry="2" />
<text  x="601.29" y="47.5" >lock..</text>
</g>
<g >
<title>lock_delay (11 samples, 0.05%)</title><rect x="793.8" y="37" width="0.6" height="15.0" fill="rgb(232,158,14)" rx="2" ry="2" />
<text  x="796.81" y="47.5" ></text>
</g>
<g >
<title>wakeup (9 samples, 0.04%)</title><rect x="779.0" y="229" width="0.5" height="15.0" fill="rgb(213,41,20)" rx="2" ry="2" />
<text  x="782.03" y="239.5" ></text>
</g>
<g >
<title>ipf_check (3,533 samples, 14.81%)</title><rect x="908.3" y="69" width="174.7" height="15.0" fill="rgb(211,53,21)" rx="2" ry="2" />
<text  x="911.27" y="79.5" >ipf_check</text>
</g>
<g >
<title>ether_demux (301 samples, 1.26%)</title><rect x="779.5" y="181" width="14.9" height="15.0" fill="rgb(235,62,39)" rx="2" ry="2" />
<text  x="782.47" y="191.5" ></text>
</g>
<g >
<title>ipf_derefrule (755 samples, 3.16%)</title><rect x="828.9" y="53" width="37.3" height="15.0" fill="rgb(234,224,2)" rx="2" ry="2" />
<text  x="831.88" y="63.5" >ipf..</text>
</g>
<g >
<title>iflib_rxeof (301 samples, 1.26%)</title><rect x="779.5" y="245" width="14.9" height="15.0" fill="rgb(215,179,48)" rx="2" ry="2" />
<text  x="782.47" y="255.5" ></text>
</g>
<g >
<title>_task_fn_rx (301 samples, 1.26%)</title><rect x="779.5" y="261" width="14.9" height="15.0" fill="rgb(213,207,44)" rx="2" ry="2" />
<text  x="782.47" y="271.5" ></text>
</g>
<g >
<title>ip_input (5,836 samples, 24.46%)</title><rect x="794.4" y="133" width="288.6" height="15.0" fill="rgb(253,56,6)" rx="2" ry="2" />
<text  x="797.36" y="143.5" >ip_input</text>
</g>
<g >
<title>_rw_runlock_cookie_int (507 samples, 2.13%)</title><rect x="498.4" y="37" width="25.1" height="15.0" fill="rgb(231,135,48)" rx="2" ry="2" />
<text  x="501.43" y="47.5" >_..</text>
</g>
<g >
<title>iflib_txq_drain (1,207 samples, 5.06%)</title><rect x="10.0" y="53" width="59.7" height="15.0" fill="rgb(221,199,41)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >iflib_..</text>
</g>
<g >
<title>lock_delay (1,047 samples, 4.39%)</title><rect x="934.8" y="37" width="51.8" height="15.0" fill="rgb(207,142,13)" rx="2" ry="2" />
<text  x="937.78" y="47.5" >lock_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (14,350 samples, 60.15%)</title><rect x="69.7" y="245" width="709.8" height="15.0" fill="rgb(213,145,54)" rx="2" ry="2" />
<text  x="72.70" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_rxeof (1,207 samples, 5.06%)</title><rect x="10.0" y="261" width="59.7" height="15.0" fill="rgb(223,13,5)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >iflib_..</text>
</g>
<g >
<title>ipf_derefrule (530 samples, 2.22%)</title><rect x="523.5" y="37" width="26.2" height="15.0" fill="rgb(246,83,21)" rx="2" ry="2" />
<text  x="526.51" y="47.5" >i..</text>
</g>
<g >
<title>ether_output_frame (682 samples, 2.86%)</title><rect x="794.4" y="85" width="33.7" height="15.0" fill="rgb(232,207,18)" rx="2" ry="2" />
<text  x="797.36" y="95.5" >et..</text>
</g>
<g >
<title>sleepq_lock (230 samples, 0.96%)</title><rect x="69.7" y="181" width="11.4" height="15.0" fill="rgb(217,21,52)" rx="2" ry="2" />
<text  x="72.70" y="191.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (11 samples, 0.05%)</title><rect x="793.8" y="53" width="0.6" height="15.0" fill="rgb(229,108,47)" rx="2" ry="2" />
<text  x="796.81" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5,836 samples, 24.46%)</title><rect x="794.4" y="197" width="288.6" height="15.0" fill="rgb(223,32,46)" rx="2" ry="2" />
<text  x="797.36" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>drain_ring_lockless (1,972 samples, 8.27%)</title><rect x="1083.0" y="85" width="97.6" height="15.0" fill="rgb(245,83,30)" rx="2" ry="2" />
<text  x="1086.02" y="95.5" >drain_ring_..</text>
</g>
<g >
<title>iflib_txq_drain (252 samples, 1.06%)</title><rect x="779.5" y="37" width="12.4" height="15.0" fill="rgb(242,50,48)" rx="2" ry="2" />
<text  x="782.47" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (230 samples, 0.96%)</title><rect x="69.7" y="197" width="11.4" height="15.0" fill="rgb(252,34,21)" rx="2" ry="2" />
<text  x="72.70" y="207.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (248 samples, 1.04%)</title><rect x="165.2" y="37" width="12.2" height="15.0" fill="rgb(247,109,5)" rx="2" ry="2" />
<text  x="168.16" y="47.5" ></text>
</g>
<g >
<title>lock_delay (534 samples, 2.24%)</title><rect x="881.9" y="37" width="26.4" height="15.0" fill="rgb(234,205,1)" rx="2" ry="2" />
<text  x="884.86" y="47.5" >l..</text>
</g>
<g >
<title>pfil_mbuf_fwd (15 samples, 0.06%)</title><rect x="791.9" y="117" width="0.8" height="15.0" fill="rgb(231,137,25)" rx="2" ry="2" />
<text  x="794.93" y="127.5" ></text>
</g>
<g >
<title>ether_input (1,207 samples, 5.06%)</title><rect x="10.0" y="245" width="59.7" height="15.0" fill="rgb(248,140,52)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >ether_..</text>
</g>
<g >
<title>ether_output (682 samples, 2.86%)</title><rect x="794.4" y="101" width="33.7" height="15.0" fill="rgb(213,39,20)" rx="2" ry="2" />
<text  x="797.36" y="111.5" >et..</text>
</g>
<g >
<title>ether_demux (5,836 samples, 24.46%)</title><rect x="794.4" y="165" width="288.6" height="15.0" fill="rgb(226,120,46)" rx="2" ry="2" />
<text  x="797.36" y="175.5" >ether_demux</text>
</g>
<g >
<title>gtaskqueue_thread_loop (5,836 samples, 24.46%)</title><rect x="794.4" y="277" width="288.6" height="15.0" fill="rgb(207,110,7)" rx="2" ry="2" />
<text  x="797.36" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ipf_scanlist (801 samples, 3.36%)</title><rect x="558.7" y="37" width="39.6" height="15.0" fill="rgb(228,139,27)" rx="2" ry="2" />
<text  x="561.68" y="47.5" >ipf..</text>
</g>
<g >
<title>iflib_if_transmit (682 samples, 2.86%)</title><rect x="794.4" y="69" width="33.7" height="15.0" fill="rgb(254,73,50)" rx="2" ry="2" />
<text  x="797.36" y="79.5" >if..</text>
</g>
<g >
<title>ether_nh_input (301 samples, 1.26%)</title><rect x="779.5" y="197" width="14.9" height="15.0" fill="rgb(228,17,16)" rx="2" ry="2" />
<text  x="782.47" y="207.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (9,158 samples, 38.39%)</title><rect x="308.9" y="69" width="453.0" height="15.0" fill="rgb(254,201,16)" rx="2" ry="2" />
<text  x="311.94" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>iflib_txq_drain (1,972 samples, 8.27%)</title><rect x="1083.0" y="69" width="97.6" height="15.0" fill="rgb(240,221,27)" rx="2" ry="2" />
<text  x="1086.02" y="79.5" >iflib_txq_d..</text>
</g>
<g >
<title>ipf_derefrule (23 samples, 0.10%)</title><rect x="792.7" y="69" width="1.1" height="15.0" fill="rgb(231,129,43)" rx="2" ry="2" />
<text  x="795.68" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (301 samples, 1.26%)</title><rect x="779.5" y="277" width="14.9" height="15.0" fill="rgb(227,26,20)" rx="2" ry="2" />
<text  x="782.47" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (14,350 samples, 60.15%)</title><rect x="69.7" y="261" width="709.8" height="15.0" fill="rgb(243,134,8)" rx="2" ry="2" />
<text  x="72.70" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>netisr_dispatch_src (13,067 samples, 54.77%)</title><rect x="115.6" y="133" width="646.3" height="15.0" fill="rgb(245,174,1)" rx="2" ry="2" />
<text  x="118.60" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_demux (1,972 samples, 8.27%)</title><rect x="1083.0" y="213" width="97.6" height="15.0" fill="rgb(243,5,18)" rx="2" ry="2" />
<text  x="1086.02" y="223.5" >ether_demux</text>
</g>
<g >
<title>keg_alloc_slab (4 samples, 0.02%)</title><rect x="768.0" y="133" width="0.2" height="15.0" fill="rgb(244,222,0)" rx="2" ry="2" />
<text  x="771.00" y="143.5" ></text>
</g>
<g >
<title>ether_input (5,836 samples, 24.46%)</title><rect x="794.4" y="213" width="288.6" height="15.0" fill="rgb(245,204,23)" rx="2" ry="2" />
<text  x="797.36" y="223.5" >ether_input</text>
</g>
<g >
<title>memset_erms (34 samples, 0.14%)</title><rect x="307.3" y="37" width="1.6" height="15.0" fill="rgb(213,110,14)" rx="2" ry="2" />
<text  x="310.26" y="47.5" ></text>
</g>
<g >
<title>ixl_isc_txd_flush (448 samples, 1.88%)</title><rect x="1158.4" y="37" width="22.2" height="15.0" fill="rgb(244,170,52)" rx="2" ry="2" />
<text  x="1161.39" y="47.5" >i..</text>
</g>
<g >
<title>ether_output_frame (252 samples, 1.06%)</title><rect x="779.5" y="101" width="12.4" height="15.0" fill="rgb(233,127,3)" rx="2" ry="2" />
<text  x="782.47" y="111.5" ></text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="792.5" y="37" width="0.2" height="15.0" fill="rgb(220,145,6)" rx="2" ry="2" />
<text  x="795.48" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (8 samples, 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(247,150,22)" rx="2" ry="2" />
<text  x="1192.60" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (301 samples, 1.26%)</title><rect x="779.5" y="133" width="14.9" height="15.0" fill="rgb(225,219,7)" rx="2" ry="2" />
<text  x="782.47" y="143.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (3,533 samples, 14.81%)</title><rect x="908.3" y="101" width="174.7" height="15.0" fill="rgb(214,13,28)" rx="2" ry="2" />
<text  x="911.27" y="111.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ipf_check (34 samples, 0.14%)</title><rect x="792.7" y="85" width="1.7" height="15.0" fill="rgb(221,98,16)" rx="2" ry="2" />
<text  x="795.68" y="95.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (458 samples, 1.92%)</title><rect x="205.7" y="37" width="22.6" height="15.0" fill="rgb(212,25,36)" rx="2" ry="2" />
<text  x="208.67" y="47.5" >_..</text>
</g>
<g >
<title>iflib_rxeof (5,836 samples, 24.46%)</title><rect x="794.4" y="229" width="288.6" height="15.0" fill="rgb(216,125,3)" rx="2" ry="2" />
<text  x="797.36" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_if_transmit (1,207 samples, 5.06%)</title><rect x="10.0" y="101" width="59.7" height="15.0" fill="rgb(245,165,15)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >iflib_..</text>
</g>
<g >
<title>__mtx_lock_sleep (450 samples, 1.89%)</title><rect x="440.8" y="37" width="22.3" height="15.0" fill="rgb(219,223,28)" rx="2" ry="2" />
<text  x="443.81" y="47.5" >_..</text>
</g>
<g >
<title>ipf_scanlist (850 samples, 3.56%)</title><rect x="866.2" y="53" width="42.1" height="15.0" fill="rgb(241,164,15)" rx="2" ry="2" />
<text  x="869.23" y="63.5" >ipf..</text>
</g>
<g >
<title>netisr_dispatch_src (1,207 samples, 5.06%)</title><rect x="10.0" y="229" width="59.7" height="15.0" fill="rgb(211,206,28)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >netisr..</text>
</g>
<g >
<title>__mtx_lock_sleep (47 samples, 0.20%)</title><rect x="908.3" y="53" width="2.3" height="15.0" fill="rgb(218,106,47)" rx="2" ry="2" />
<text  x="911.27" y="63.5" ></text>
</g>
<g >
<title>m_adj (123 samples, 0.52%)</title><rect x="761.9" y="149" width="6.1" height="15.0" fill="rgb(239,223,1)" rx="2" ry="2" />
<text  x="764.91" y="159.5" ></text>
</g>
<g >
<title>__rw_rlock_int (715 samples, 3.00%)</title><rect x="463.1" y="37" width="35.3" height="15.0" fill="rgb(237,137,34)" rx="2" ry="2" />
<text  x="466.07" y="47.5" >__..</text>
</g>
<g >
<title>ipf_check (15 samples, 0.06%)</title><rect x="791.9" y="85" width="0.8" height="15.0" fill="rgb(236,188,40)" rx="2" ry="2" />
<text  x="794.93" y="95.5" ></text>
</g>
<g >
<title>ip_tryforward (1,207 samples, 5.06%)</title><rect x="10.0" y="149" width="59.7" height="15.0" fill="rgb(210,50,9)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >ip_try..</text>
</g>
<g >
<title>lock_delay (11 samples, 0.05%)</title><rect x="791.9" y="37" width="0.6" height="15.0" fill="rgb(206,194,13)" rx="2" ry="2" />
<text  x="794.93" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (1,972 samples, 8.27%)</title><rect x="1083.0" y="165" width="97.6" height="15.0" fill="rgb(254,74,50)" rx="2" ry="2" />
<text  x="1086.02" y="175.5" >ip_tryforward</text>
</g>
<g >
<title>netisr_dispatch_src (13,888 samples, 58.21%)</title><rect x="81.1" y="181" width="686.9" height="15.0" fill="rgb(221,141,19)" rx="2" ry="2" />
<text  x="84.08" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_derefrule (1,536 samples, 6.44%)</title><rect x="910.6" y="53" width="76.0" height="15.0" fill="rgb(250,2,51)" rx="2" ry="2" />
<text  x="913.59" y="63.5" >ipf_dere..</text>
</g>
<g >
<title>wakeup_any (8 samples, 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(240,83,40)" rx="2" ry="2" />
<text  x="1192.60" y="223.5" ></text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.03%)</title><rect x="768.0" y="181" width="0.4" height="15.0" fill="rgb(234,216,19)" rx="2" ry="2" />
<text  x="771.00" y="191.5" ></text>
</g>
<g >
<title>ipf_derefrule (11 samples, 0.05%)</title><rect x="791.9" y="69" width="0.6" height="15.0" fill="rgb(222,34,13)" rx="2" ry="2" />
<text  x="794.93" y="79.5" ></text>
</g>
<g >
<title>ipf_check (3,571 samples, 14.97%)</title><rect x="132.3" y="53" width="176.6" height="15.0" fill="rgb(234,172,30)" rx="2" ry="2" />
<text  x="135.32" y="63.5" >ipf_check</text>
</g>
<g >
<title>__mtx_lock_sleep (16 samples, 0.07%)</title><rect x="828.1" y="53" width="0.8" height="15.0" fill="rgb(217,41,44)" rx="2" ry="2" />
<text  x="831.09" y="63.5" ></text>
</g>
<g >
<title>all (23,857 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(245,133,32)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ip_input (301 samples, 1.26%)</title><rect x="779.5" y="149" width="14.9" height="15.0" fill="rgb(237,47,35)" rx="2" ry="2" />
<text  x="782.47" y="159.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (8 samples, 0.03%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(218,26,20)" rx="2" ry="2" />
<text  x="1192.60" y="255.5" ></text>
</g>
<g >
<title>ip_tryforward (5,836 samples, 24.46%)</title><rect x="794.4" y="117" width="288.6" height="15.0" fill="rgb(248,21,54)" rx="2" ry="2" />
<text  x="797.36" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>netisr_dispatch_src (1,972 samples, 8.27%)</title><rect x="1083.0" y="197" width="97.6" height="15.0" fill="rgb(228,49,53)" rx="2" ry="2" />
<text  x="1086.02" y="207.5" >netisr_disp..</text>
</g>
<g >
<title>m_adj (396 samples, 1.66%)</title><rect x="96.0" y="133" width="19.6" height="15.0" fill="rgb(232,34,22)" rx="2" ry="2" />
<text  x="99.01" y="143.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.03%)</title><rect x="768.0" y="165" width="0.4" height="15.0" fill="rgb(224,16,23)" rx="2" ry="2" />
<text  x="771.00" y="175.5" ></text>
</g>
<g >
<title>ixl_isc_txd_encap (1,524 samples, 6.39%)</title><rect x="1083.0" y="37" width="75.4" height="15.0" fill="rgb(241,145,23)" rx="2" ry="2" />
<text  x="1086.02" y="47.5" >ixl_isc_..</text>
</g>
<g >
<title>pfil_mbuf_fwd (3,571 samples, 14.97%)</title><rect x="132.3" y="85" width="176.6" height="15.0" fill="rgb(234,45,1)" rx="2" ry="2" />
<text  x="135.32" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>ipf_scanlist (1,950 samples, 8.17%)</title><rect x="986.6" y="53" width="96.4" height="15.0" fill="rgb(250,19,9)" rx="2" ry="2" />
<text  x="989.57" y="63.5" >ipf_scanlist</text>
</g>
<g >
<title>ipf_scanlist (556 samples, 2.33%)</title><rect x="260.2" y="37" width="27.5" height="15.0" fill="rgb(225,149,11)" rx="2" ry="2" />
<text  x="263.23" y="47.5" >i..</text>
</g>
<g >
<title>drain_ring_lockless (252 samples, 1.06%)</title><rect x="779.5" y="53" width="12.4" height="15.0" fill="rgb(236,50,3)" rx="2" ry="2" />
<text  x="782.47" y="63.5" ></text>
</g>
<g >
<title>ipf_check (1,621 samples, 6.79%)</title><rect x="828.1" y="69" width="80.2" height="15.0" fill="rgb(244,148,16)" rx="2" ry="2" />
<text  x="831.09" y="79.5" >ipf_check</text>
</g>
<g >
<title>iflib_rxeof (14,111 samples, 59.15%)</title><rect x="81.1" y="213" width="697.9" height="15.0" fill="rgb(245,61,26)" rx="2" ry="2" />
<text  x="84.08" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_encap (1,524 samples, 6.39%)</title><rect x="1083.0" y="53" width="75.4" height="15.0" fill="rgb(212,111,49)" rx="2" ry="2" />
<text  x="1086.02" y="63.5" >iflib_en..</text>
</g>
<g >
<title>ether_demux (13,765 samples, 57.70%)</title><rect x="81.1" y="149" width="680.8" height="15.0" fill="rgb(228,75,37)" rx="2" ry="2" />
<text  x="84.08" y="159.5" >ether_demux</text>
</g>
<g >
<title>ip_input (1,972 samples, 8.27%)</title><rect x="1083.0" y="181" width="97.6" height="15.0" fill="rgb(207,74,46)" rx="2" ry="2" />
<text  x="1086.02" y="191.5" >ip_input</text>
</g>
<g >
<title>lock_delay (16 samples, 0.07%)</title><rect x="828.1" y="37" width="0.8" height="15.0" fill="rgb(216,158,45)" rx="2" ry="2" />
<text  x="831.09" y="47.5" ></text>
</g>
<g >
<title>ether_input (1,972 samples, 8.27%)</title><rect x="1083.0" y="261" width="97.6" height="15.0" fill="rgb(247,184,7)" rx="2" ry="2" />
<text  x="1086.02" y="271.5" >ether_input</text>
</g>
<g >
<title>ip_tryforward (13,067 samples, 54.77%)</title><rect x="115.6" y="101" width="646.3" height="15.0" fill="rgb(241,89,14)" rx="2" ry="2" />
<text  x="118.60" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>__mtx_lock_sleep (489 samples, 2.05%)</title><rect x="910.6" y="37" width="24.2" height="15.0" fill="rgb(245,14,18)" rx="2" ry="2" />
<text  x="913.59" y="47.5" >_..</text>
</g>
<g >
<title>iflib_txd_db_check (421 samples, 1.76%)</title><rect x="48.9" y="37" width="20.8" height="15.0" fill="rgb(209,86,46)" rx="2" ry="2" />
<text  x="51.88" y="47.5" ></text>
</g>
<g >
<title>ether_output (252 samples, 1.06%)</title><rect x="779.5" y="117" width="12.4" height="15.0" fill="rgb(241,31,51)" rx="2" ry="2" />
<text  x="782.47" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,207 samples, 5.06%)</title><rect x="10.0" y="181" width="59.7" height="15.0" fill="rgb(232,176,50)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >netisr..</text>
</g>
<g >
<title>__mtx_lock_sleep (720 samples, 3.02%)</title><rect x="986.6" y="37" width="35.6" height="15.0" fill="rgb(224,49,50)" rx="2" ry="2" />
<text  x="989.57" y="47.5" >__m..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (284 samples, 1.19%)</title><rect x="10.0" y="37" width="14.0" height="15.0" fill="rgb(246,124,52)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>ether_output (1,972 samples, 8.27%)</title><rect x="1083.0" y="149" width="97.6" height="15.0" fill="rgb(212,163,4)" rx="2" ry="2" />
<text  x="1086.02" y="159.5" >ether_output</text>
</g>
<g >
<title>grouptaskqueue_enqueue (8 samples, 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(231,101,54)" rx="2" ry="2" />
<text  x="1192.60" y="239.5" ></text>
</g>
<g >
<title>drain_ring_lockless (682 samples, 2.86%)</title><rect x="794.4" y="37" width="33.7" height="15.0" fill="rgb(214,110,9)" rx="2" ry="2" />
<text  x="797.36" y="47.5" >dr..</text>
</g>
<g >
<title>gtaskqueue_run_locked (5,836 samples, 24.46%)</title><rect x="794.4" y="261" width="288.6" height="15.0" fill="rgb(208,79,16)" rx="2" ry="2" />
<text  x="797.36" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>keg_fetch_free_slab (4 samples, 0.02%)</title><rect x="768.2" y="133" width="0.2" height="15.0" fill="rgb(229,208,4)" rx="2" ry="2" />
<text  x="771.19" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5,836 samples, 24.46%)</title><rect x="794.4" y="149" width="288.6" height="15.0" fill="rgb(237,70,17)" rx="2" ry="2" />
<text  x="797.36" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_nh_input (13,888 samples, 58.21%)</title><rect x="81.1" y="165" width="686.9" height="15.0" fill="rgb(250,173,17)" rx="2" ry="2" />
<text  x="84.08" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>netisr_dispatch_src (1,972 samples, 8.27%)</title><rect x="1083.0" y="245" width="97.6" height="15.0" fill="rgb(233,158,21)" rx="2" ry="2" />
<text  x="1086.02" y="255.5" >netisr_disp..</text>
</g>
<g >
<title>ipf_makefrip (181 samples, 0.76%)</title><rect x="549.7" y="37" width="9.0" height="15.0" fill="rgb(232,91,54)" rx="2" ry="2" />
<text  x="552.72" y="47.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (1,621 samples, 6.79%)</title><rect x="828.1" y="85" width="80.2" height="15.0" fill="rgb(254,22,51)" rx="2" ry="2" />
<text  x="831.09" y="95.5" >ipf_check..</text>
</g>
<g >
<title>ether_demux (1,207 samples, 5.06%)</title><rect x="10.0" y="197" width="59.7" height="15.0" fill="rgb(244,69,15)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >ether_..</text>
</g>
<g >
<title>pfil_mbuf_in (9,158 samples, 38.39%)</title><rect x="308.9" y="85" width="453.0" height="15.0" fill="rgb(246,35,39)" rx="2" ry="2" />
<text  x="311.94" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>sleepq_lock (9 samples, 0.04%)</title><rect x="779.0" y="213" width="0.5" height="15.0" fill="rgb(250,210,17)" rx="2" ry="2" />
<text  x="782.03" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (23 samples, 0.10%)</title><rect x="792.7" y="53" width="1.1" height="15.0" fill="rgb(206,79,38)" rx="2" ry="2" />
<text  x="795.68" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (14,341 samples, 60.11%)</title><rect x="69.7" y="229" width="709.3" height="15.0" fill="rgb(236,155,46)" rx="2" ry="2" />
<text  x="72.70" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ifmp_ring_enqueue (183 samples, 0.77%)</title><rect x="1180.6" y="277" width="9.0" height="15.0" fill="rgb(220,89,41)" rx="2" ry="2" />
<text  x="1183.55" y="287.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (273 samples, 1.14%)</title><rect x="828.9" y="37" width="13.5" height="15.0" fill="rgb(234,49,50)" rx="2" ry="2" />
<text  x="831.88" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (1,207 samples, 5.06%)</title><rect x="10.0" y="85" width="59.7" height="15.0" fill="rgb(241,10,20)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >ifmp_r..</text>
</g>
<g >
<title>memset_erms (2,409 samples, 10.10%)</title><rect x="642.8" y="37" width="119.1" height="15.0" fill="rgb(220,145,23)" rx="2" ry="2" />
<text  x="645.76" y="47.5" >memset_erms</text>
</g>
<g >
<title>lock_delay (395 samples, 1.66%)</title><rect x="287.7" y="37" width="19.6" height="15.0" fill="rgb(240,56,22)" rx="2" ry="2" />
<text  x="290.73" y="47.5" ></text>
</g>
<g >
<title>ipf_check (9,158 samples, 38.39%)</title><rect x="308.9" y="53" width="453.0" height="15.0" fill="rgb(247,12,38)" rx="2" ry="2" />
<text  x="311.94" y="63.5" >ipf_check</text>
</g>
<g >
<title>ipf_check_wrapper (3,533 samples, 14.81%)</title><rect x="908.3" y="85" width="174.7" height="15.0" fill="rgb(218,15,21)" rx="2" ry="2" />
<text  x="911.27" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="768.0" y="117" width="0.2" height="15.0" fill="rgb(213,156,35)" rx="2" ry="2" />
<text  x="771.00" y="127.5" ></text>
</g>
<g >
<title>ip_input (13,067 samples, 54.77%)</title><rect x="115.6" y="117" width="646.3" height="15.0" fill="rgb(236,95,48)" rx="2" ry="2" />
<text  x="118.60" y="127.5" >ip_input</text>
</g>
<g >
<title>ether_output_frame (1,972 samples, 8.27%)</title><rect x="1083.0" y="133" width="97.6" height="15.0" fill="rgb(207,185,14)" rx="2" ry="2" />
<text  x="1086.02" y="143.5" >ether_outpu..</text>
</g>
<g >
<title>_task_fn_rx (1,207 samples, 5.06%)</title><rect x="10.0" y="277" width="59.7" height="15.0" fill="rgb(205,93,25)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >_task_..</text>
</g>
<g >
<title>__mtx_lock_sleep (11 samples, 0.05%)</title><rect x="791.9" y="53" width="0.6" height="15.0" fill="rgb(240,94,37)" rx="2" ry="2" />
<text  x="794.93" y="63.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (1,972 samples, 8.27%)</title><rect x="1083.0" y="101" width="97.6" height="15.0" fill="rgb(246,91,31)" rx="2" ry="2" />
<text  x="1086.02" y="111.5" >ifmp_ring_e..</text>
</g>
<g >
<title>fork_exit (14,350 samples, 60.15%)</title><rect x="69.7" y="277" width="709.8" height="15.0" fill="rgb(236,68,19)" rx="2" ry="2" />
<text  x="72.70" y="287.5" >fork_exit</text>
</g>
<g >
<title>zone_import (8 samples, 0.03%)</title><rect x="768.0" y="149" width="0.4" height="15.0" fill="rgb(214,206,7)" rx="2" ry="2" />
<text  x="771.00" y="159.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (34 samples, 0.14%)</title><rect x="792.7" y="117" width="1.7" height="15.0" fill="rgb(239,203,37)" rx="2" ry="2" />
<text  x="795.68" y="127.5" ></text>
</g>
<g >
<title>iflib_encap (502 samples, 2.10%)</title><rect x="24.0" y="37" width="24.9" height="15.0" fill="rgb(232,78,48)" rx="2" ry="2" />
<text  x="27.05" y="47.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (301 samples, 1.26%)</title><rect x="779.5" y="213" width="14.9" height="15.0" fill="rgb(251,16,32)" rx="2" ry="2" />
<text  x="782.47" y="223.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (215 samples, 0.90%)</title><rect x="768.4" y="197" width="10.6" height="15.0" fill="rgb(254,223,37)" rx="2" ry="2" />
<text  x="771.39" y="207.5" ></text>
</g>
<g >
<title>iflib_fl_refill (8 samples, 0.03%)</title><rect x="768.0" y="197" width="0.4" height="15.0" fill="rgb(229,104,15)" rx="2" ry="2" />
<text  x="771.00" y="207.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (15 samples, 0.06%)</title><rect x="791.9" y="101" width="0.8" height="15.0" fill="rgb(236,165,45)" rx="2" ry="2" />
<text  x="794.93" y="111.5" ></text>
</g>
<g >
<title>ether_nh_input (1,207 samples, 5.06%)</title><rect x="10.0" y="213" width="59.7" height="15.0" fill="rgb(211,149,8)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >ether_..</text>
</g>
<g >
<title>__rw_rlock_int (571 samples, 2.39%)</title><rect x="177.4" y="37" width="28.3" height="15.0" fill="rgb(237,61,15)" rx="2" ry="2" />
<text  x="180.43" y="47.5" >_..</text>
</g>
<g >
<title>lock_delay (482 samples, 2.02%)</title><rect x="842.4" y="37" width="23.8" height="15.0" fill="rgb(228,6,40)" rx="2" ry="2" />
<text  x="845.39" y="47.5" >l..</text>
</g>
<g >
<title>ipf_scanlist (4 samples, 0.02%)</title><rect x="792.5" y="69" width="0.2" height="15.0" fill="rgb(241,5,53)" rx="2" ry="2" />
<text  x="795.48" y="79.5" ></text>
</g>
</g>
</svg>
