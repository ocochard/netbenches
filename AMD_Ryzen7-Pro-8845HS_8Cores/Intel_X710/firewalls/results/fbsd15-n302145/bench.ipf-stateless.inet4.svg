<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ipf_makefrip (158 samples, 0.68%)</title><rect x="466.1" y="37" width="8.0" height="15.0" fill="rgb(212,53,28)" rx="2" ry="2" />
<text  x="469.07" y="47.5" ></text>
</g>
<g >
<title>ether_input (5,699 samples, 24.62%)</title><rect x="796.0" y="213" width="290.5" height="15.0" fill="rgb(212,187,11)" rx="2" ry="2" />
<text  x="798.97" y="223.5" >ether_input</text>
</g>
<g >
<title>ipf_derefrule (529 samples, 2.29%)</title><rect x="439.1" y="37" width="27.0" height="15.0" fill="rgb(223,151,39)" rx="2" ry="2" />
<text  x="442.10" y="47.5" >i..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (230 samples, 0.99%)</title><rect x="67.6" y="213" width="11.7" height="15.0" fill="rgb(229,187,42)" rx="2" ry="2" />
<text  x="70.61" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (263 samples, 1.14%)</title><rect x="778.4" y="37" width="13.4" height="15.0" fill="rgb(246,160,31)" rx="2" ry="2" />
<text  x="781.43" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,130 samples, 4.88%)</title><rect x="10.0" y="181" width="57.6" height="15.0" fill="rgb(219,84,14)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >netisr..</text>
</g>
<g >
<title>pfil_mbuf_in (57 samples, 0.25%)</title><rect x="793.1" y="117" width="2.9" height="15.0" fill="rgb(222,52,26)" rx="2" ry="2" />
<text  x="796.06" y="127.5" ></text>
</g>
<g >
<title>ether_output (731 samples, 3.16%)</title><rect x="796.0" y="101" width="37.2" height="15.0" fill="rgb(225,94,3)" rx="2" ry="2" />
<text  x="798.97" y="111.5" >eth..</text>
</g>
<g >
<title>netisr_dispatch_src (344 samples, 1.49%)</title><rect x="778.4" y="165" width="17.6" height="15.0" fill="rgb(234,95,43)" rx="2" ry="2" />
<text  x="781.43" y="175.5" ></text>
</g>
<g >
<title>ipf_check (9,521 samples, 41.13%)</title><rect x="291.8" y="53" width="485.4" height="15.0" fill="rgb(212,40,21)" rx="2" ry="2" />
<text  x="294.82" y="63.5" >ipf_check</text>
</g>
<g >
<title>ether_demux (2,017 samples, 8.71%)</title><rect x="1086.9" y="213" width="102.8" height="15.0" fill="rgb(212,28,19)" rx="2" ry="2" />
<text  x="1089.87" y="223.5" >ether_demux</text>
</g>
<g >
<title>lock_delay (28 samples, 0.12%)</title><rect x="794.5" y="37" width="1.5" height="15.0" fill="rgb(249,198,34)" rx="2" ry="2" />
<text  x="797.54" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (5,706 samples, 24.65%)</title><rect x="796.0" y="277" width="290.9" height="15.0" fill="rgb(213,203,11)" rx="2" ry="2" />
<text  x="798.97" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>zone_import (3 samples, 0.01%)</title><rect x="777.9" y="101" width="0.2" height="15.0" fill="rgb(211,58,3)" rx="2" ry="2" />
<text  x="780.92" y="111.5" ></text>
</g>
<g >
<title>drain_ring_lockless (263 samples, 1.14%)</title><rect x="778.4" y="53" width="13.4" height="15.0" fill="rgb(245,86,14)" rx="2" ry="2" />
<text  x="781.43" y="63.5" ></text>
</g>
<g >
<title>ip_tryforward (13,689 samples, 59.14%)</title><rect x="79.3" y="101" width="697.9" height="15.0" fill="rgb(240,49,14)" rx="2" ry="2" />
<text  x="82.33" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>all (23,146 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(232,193,10)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>iflib_rxeof (13,712 samples, 59.24%)</title><rect x="79.3" y="213" width="699.1" height="15.0" fill="rgb(224,13,47)" rx="2" ry="2" />
<text  x="82.33" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>_task_fn_rx (1,130 samples, 4.88%)</title><rect x="10.0" y="277" width="57.6" height="15.0" fill="rgb(222,29,41)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >_task_..</text>
</g>
<g >
<title>ether_input (344 samples, 1.49%)</title><rect x="778.4" y="229" width="17.6" height="15.0" fill="rgb(221,182,43)" rx="2" ry="2" />
<text  x="781.43" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (5,699 samples, 24.62%)</title><rect x="796.0" y="229" width="290.5" height="15.0" fill="rgb(250,149,36)" rx="2" ry="2" />
<text  x="798.97" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_fast_intr_rxtx (6 samples, 0.03%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(252,197,27)" rx="2" ry="2" />
<text  x="1192.69" y="255.5" ></text>
</g>
<g >
<title>ether_nh_input (1,130 samples, 4.88%)</title><rect x="10.0" y="213" width="57.6" height="15.0" fill="rgb(254,228,30)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >ether_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (13,942 samples, 60.24%)</title><rect x="67.6" y="245" width="710.8" height="15.0" fill="rgb(245,135,49)" rx="2" ry="2" />
<text  x="70.61" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>__mtx_lock_sleep (11 samples, 0.05%)</title><rect x="791.8" y="53" width="0.6" height="15.0" fill="rgb(239,227,49)" rx="2" ry="2" />
<text  x="794.84" y="63.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (3,375 samples, 14.58%)</title><rect x="119.8" y="85" width="172.0" height="15.0" fill="rgb(208,180,27)" rx="2" ry="2" />
<text  x="122.76" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>ipf_scanlist (683 samples, 2.95%)</title><rect x="869.5" y="53" width="34.8" height="15.0" fill="rgb(235,201,18)" rx="2" ry="2" />
<text  x="872.48" y="63.5" >ip..</text>
</g>
<g >
<title>ipf_derefrule (460 samples, 1.99%)</title><rect x="209.7" y="37" width="23.5" height="15.0" fill="rgb(218,189,49)" rx="2" ry="2" />
<text  x="212.74" y="47.5" >i..</text>
</g>
<g >
<title>ipf_scanlist (762 samples, 3.29%)</title><rect x="474.1" y="37" width="38.9" height="15.0" fill="rgb(222,168,30)" rx="2" ry="2" />
<text  x="477.13" y="47.5" >ipf..</text>
</g>
<g >
<title>lock_delay (29 samples, 0.13%)</title><rect x="793.1" y="37" width="1.4" height="15.0" fill="rgb(246,17,32)" rx="2" ry="2" />
<text  x="796.06" y="47.5" ></text>
</g>
<g >
<title>ixl_isc_txd_encap (1,571 samples, 6.79%)</title><rect x="1086.9" y="37" width="80.1" height="15.0" fill="rgb(252,6,41)" rx="2" ry="2" />
<text  x="1089.87" y="47.5" >ixl_isc_t..</text>
</g>
<g >
<title>ether_output_frame (1,130 samples, 4.88%)</title><rect x="10.0" y="117" width="57.6" height="15.0" fill="rgb(239,111,32)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >ether_..</text>
</g>
<g >
<title>netisr_dispatch_src (344 samples, 1.49%)</title><rect x="778.4" y="213" width="17.6" height="15.0" fill="rgb(220,41,46)" rx="2" ry="2" />
<text  x="781.43" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,130 samples, 4.88%)</title><rect x="10.0" y="261" width="57.6" height="15.0" fill="rgb(227,23,14)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >iflib_..</text>
</g>
<g >
<title>netisr_dispatch_src (5,699 samples, 24.62%)</title><rect x="796.0" y="149" width="290.5" height="15.0" fill="rgb(248,183,32)" rx="2" ry="2" />
<text  x="798.97" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>zone_alloc_item (3 samples, 0.01%)</title><rect x="777.9" y="117" width="0.2" height="15.0" fill="rgb(230,199,16)" rx="2" ry="2" />
<text  x="780.92" y="127.5" ></text>
</g>
<g >
<title>ip_tryforward (344 samples, 1.49%)</title><rect x="778.4" y="133" width="17.6" height="15.0" fill="rgb(221,151,8)" rx="2" ry="2" />
<text  x="781.43" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (263 samples, 1.14%)</title><rect x="778.4" y="101" width="13.4" height="15.0" fill="rgb(236,222,54)" rx="2" ry="2" />
<text  x="781.43" y="111.5" ></text>
</g>
<g >
<title>ipf_scanlist (13 samples, 0.06%)</title><rect x="792.4" y="69" width="0.7" height="15.0" fill="rgb(243,174,21)" rx="2" ry="2" />
<text  x="795.40" y="79.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,130 samples, 4.88%)</title><rect x="10.0" y="69" width="57.6" height="15.0" fill="rgb(245,46,36)" rx="2" ry="2" />
<text  x="13.00" y="79.5" >drain_..</text>
</g>
<g >
<title>ixl_isc_txd_flush (446 samples, 1.93%)</title><rect x="1167.0" y="37" width="22.7" height="15.0" fill="rgb(250,72,25)" rx="2" ry="2" />
<text  x="1169.96" y="47.5" >i..</text>
</g>
<g >
<title>lock_delay (13 samples, 0.06%)</title><rect x="792.4" y="37" width="0.7" height="15.0" fill="rgb(208,85,49)" rx="2" ry="2" />
<text  x="795.40" y="47.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,130 samples, 4.88%)</title><rect x="10.0" y="53" width="57.6" height="15.0" fill="rgb(228,210,37)" rx="2" ry="2" />
<text  x="13.00" y="63.5" >iflib_..</text>
</g>
<g >
<title>ipf_derefrule (11 samples, 0.05%)</title><rect x="791.8" y="69" width="0.6" height="15.0" fill="rgb(207,12,47)" rx="2" ry="2" />
<text  x="794.84" y="79.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (1,394 samples, 6.02%)</title><rect x="833.2" y="101" width="71.1" height="15.0" fill="rgb(230,185,36)" rx="2" ry="2" />
<text  x="836.24" y="111.5" >pfil_mbu..</text>
</g>
<g >
<title>iflib_if_transmit (263 samples, 1.14%)</title><rect x="778.4" y="85" width="13.4" height="15.0" fill="rgb(249,210,49)" rx="2" ry="2" />
<text  x="781.43" y="95.5" ></text>
</g>
<g >
<title>ip_tryforward (2,017 samples, 8.71%)</title><rect x="1086.9" y="165" width="102.8" height="15.0" fill="rgb(238,130,11)" rx="2" ry="2" />
<text  x="1089.87" y="175.5" >ip_tryforward</text>
</g>
<g >
<title>ether_nh_input (2,017 samples, 8.71%)</title><rect x="1086.9" y="229" width="102.8" height="15.0" fill="rgb(233,124,18)" rx="2" ry="2" />
<text  x="1089.87" y="239.5" >ether_nh_input</text>
</g>
<g >
<title>pfil_mbuf_fwd (24 samples, 0.10%)</title><rect x="791.8" y="117" width="1.3" height="15.0" fill="rgb(242,183,15)" rx="2" ry="2" />
<text  x="794.84" y="127.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="778.0" y="69" width="0.1" height="15.0" fill="rgb(241,188,47)" rx="2" ry="2" />
<text  x="780.97" y="79.5" ></text>
</g>
<g >
<title>lock_delay (432 samples, 1.87%)</title><rect x="882.3" y="37" width="22.0" height="15.0" fill="rgb(231,116,48)" rx="2" ry="2" />
<text  x="885.28" y="47.5" >l..</text>
</g>
<g >
<title>iflib_if_transmit (731 samples, 3.16%)</title><rect x="796.0" y="69" width="37.2" height="15.0" fill="rgb(207,198,24)" rx="2" ry="2" />
<text  x="798.97" y="79.5" >ifl..</text>
</g>
<g >
<title>ipf_scanlist (536 samples, 2.32%)</title><rect x="244.9" y="37" width="27.3" height="15.0" fill="rgb(214,70,48)" rx="2" ry="2" />
<text  x="247.92" y="47.5" >i..</text>
</g>
<g >
<title>ipf_makefrip (230 samples, 0.99%)</title><rect x="233.2" y="37" width="11.7" height="15.0" fill="rgb(231,175,3)" rx="2" ry="2" />
<text  x="236.19" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (2,017 samples, 8.71%)</title><rect x="1086.9" y="133" width="102.8" height="15.0" fill="rgb(211,192,10)" rx="2" ry="2" />
<text  x="1089.87" y="143.5" >ether_output..</text>
</g>
<g >
<title>iflib_txd_db_check (406 samples, 1.75%)</title><rect x="46.9" y="37" width="20.7" height="15.0" fill="rgb(205,49,48)" rx="2" ry="2" />
<text  x="49.91" y="47.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (9,521 samples, 41.13%)</title><rect x="291.8" y="85" width="485.4" height="15.0" fill="rgb(248,65,10)" rx="2" ry="2" />
<text  x="294.82" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ether_output_frame (731 samples, 3.16%)</title><rect x="796.0" y="85" width="37.2" height="15.0" fill="rgb(214,118,2)" rx="2" ry="2" />
<text  x="798.97" y="95.5" >eth..</text>
</g>
<g >
<title>__mtx_lock_sleep (643 samples, 2.78%)</title><rect x="981.1" y="37" width="32.8" height="15.0" fill="rgb(248,41,43)" rx="2" ry="2" />
<text  x="984.08" y="47.5" >__..</text>
</g>
<g >
<title>iflib_rxeof (344 samples, 1.49%)</title><rect x="778.4" y="245" width="17.6" height="15.0" fill="rgb(240,57,14)" rx="2" ry="2" />
<text  x="781.43" y="255.5" ></text>
</g>
<g >
<title>keg_alloc_slab (17 samples, 0.07%)</title><rect x="777.2" y="133" width="0.9" height="15.0" fill="rgb(222,54,45)" rx="2" ry="2" />
<text  x="780.21" y="143.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,017 samples, 8.71%)</title><rect x="1086.9" y="277" width="102.8" height="15.0" fill="rgb(253,166,54)" rx="2" ry="2" />
<text  x="1089.87" y="287.5" >iflib_rxeof</text>
</g>
<g >
<title>ether_nh_input (344 samples, 1.49%)</title><rect x="778.4" y="197" width="17.6" height="15.0" fill="rgb(209,156,45)" rx="2" ry="2" />
<text  x="781.43" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (2,017 samples, 8.71%)</title><rect x="1086.9" y="101" width="102.8" height="15.0" fill="rgb(249,160,1)" rx="2" ry="2" />
<text  x="1089.87" y="111.5" >ifmp_ring_en..</text>
</g>
<g >
<title>ifmp_ring_enqueue (1,130 samples, 4.88%)</title><rect x="10.0" y="85" width="57.6" height="15.0" fill="rgb(235,154,43)" rx="2" ry="2" />
<text  x="13.00" y="95.5" >ifmp_r..</text>
</g>
<g >
<title>__mtx_lock_sleep (29 samples, 0.13%)</title><rect x="793.1" y="53" width="1.4" height="15.0" fill="rgb(226,216,20)" rx="2" ry="2" />
<text  x="796.06" y="63.5" ></text>
</g>
<g >
<title>memset_erms (4,175 samples, 18.04%)</title><rect x="564.4" y="37" width="212.8" height="15.0" fill="rgb(213,21,35)" rx="2" ry="2" />
<text  x="567.36" y="47.5" >memset_erms</text>
</g>
<g >
<title>ether_output (1,130 samples, 4.88%)</title><rect x="10.0" y="133" width="57.6" height="15.0" fill="rgb(249,112,22)" rx="2" ry="2" />
<text  x="13.00" y="143.5" >ether_..</text>
</g>
<g >
<title>iflib_encap (1,571 samples, 6.79%)</title><rect x="1086.9" y="53" width="80.1" height="15.0" fill="rgb(224,10,53)" rx="2" ry="2" />
<text  x="1089.87" y="63.5" >iflib_encap</text>
</g>
<g >
<title>lock_delay (338 samples, 1.46%)</title><rect x="272.2" y="37" width="17.3" height="15.0" fill="rgb(225,87,27)" rx="2" ry="2" />
<text  x="275.24" y="47.5" ></text>
</g>
<g >
<title>__rw_rlock_int (564 samples, 2.44%)</title><rect x="159.6" y="37" width="28.8" height="15.0" fill="rgb(212,39,5)" rx="2" ry="2" />
<text  x="162.63" y="47.5" >__..</text>
</g>
<g >
<title>iflib_txd_db_check (446 samples, 1.93%)</title><rect x="1167.0" y="53" width="22.7" height="15.0" fill="rgb(237,210,5)" rx="2" ry="2" />
<text  x="1169.96" y="63.5" >i..</text>
</g>
<g >
<title>lock_delay (950 samples, 4.10%)</title><rect x="932.6" y="37" width="48.5" height="15.0" fill="rgb(211,180,50)" rx="2" ry="2" />
<text  x="935.65" y="47.5" >lock..</text>
</g>
<g >
<title>ether_output (2,017 samples, 8.71%)</title><rect x="1086.9" y="149" width="102.8" height="15.0" fill="rgb(221,154,53)" rx="2" ry="2" />
<text  x="1089.87" y="159.5" >ether_output</text>
</g>
<g >
<title>netisr_dispatch_src (5,699 samples, 24.62%)</title><rect x="796.0" y="197" width="290.5" height="15.0" fill="rgb(209,160,3)" rx="2" ry="2" />
<text  x="798.97" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_check_wrapper (9,521 samples, 41.13%)</title><rect x="291.8" y="69" width="485.4" height="15.0" fill="rgb(222,78,27)" rx="2" ry="2" />
<text  x="294.82" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>gtaskqueue_run_locked (5,706 samples, 24.65%)</title><rect x="796.0" y="261" width="290.9" height="15.0" fill="rgb(251,18,39)" rx="2" ry="2" />
<text  x="798.97" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>cache_alloc (23 samples, 0.10%)</title><rect x="777.2" y="165" width="1.2" height="15.0" fill="rgb(241,22,19)" rx="2" ry="2" />
<text  x="780.21" y="175.5" ></text>
</g>
<g >
<title>_task_fn_rx (344 samples, 1.49%)</title><rect x="778.4" y="261" width="17.6" height="15.0" fill="rgb(215,165,27)" rx="2" ry="2" />
<text  x="781.43" y="271.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (251 samples, 1.08%)</title><rect x="869.5" y="37" width="12.8" height="15.0" fill="rgb(207,16,9)" rx="2" ry="2" />
<text  x="872.48" y="47.5" ></text>
</g>
<g >
<title>ipf_check (1,394 samples, 6.02%)</title><rect x="833.2" y="69" width="71.1" height="15.0" fill="rgb(212,123,18)" rx="2" ry="2" />
<text  x="836.24" y="79.5" >ipf_check</text>
</g>
<g >
<title>gtaskqueue_run_locked (344 samples, 1.49%)</title><rect x="778.4" y="277" width="17.6" height="15.0" fill="rgb(220,8,24)" rx="2" ry="2" />
<text  x="781.43" y="287.5" ></text>
</g>
<g >
<title>lock_delay (397 samples, 1.72%)</title><rect x="849.2" y="37" width="20.3" height="15.0" fill="rgb(252,204,32)" rx="2" ry="2" />
<text  x="852.24" y="47.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (284 samples, 1.23%)</title><rect x="10.0" y="37" width="14.5" height="15.0" fill="rgb(234,23,17)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>ipf_check (3,574 samples, 15.44%)</title><rect x="904.3" y="69" width="182.2" height="15.0" fill="rgb(216,165,8)" rx="2" ry="2" />
<text  x="907.30" y="79.5" >ipf_check</text>
</g>
<g >
<title>drain_ring_lockless (2,017 samples, 8.71%)</title><rect x="1086.9" y="85" width="102.8" height="15.0" fill="rgb(248,40,48)" rx="2" ry="2" />
<text  x="1089.87" y="95.5" >drain_ring_l..</text>
</g>
<g >
<title>_task_fn_rx (13,942 samples, 60.24%)</title><rect x="67.6" y="229" width="710.8" height="15.0" fill="rgb(207,31,27)" rx="2" ry="2" />
<text  x="70.61" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>grouptaskqueue_enqueue (6 samples, 0.03%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(251,29,37)" rx="2" ry="2" />
<text  x="1192.69" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (28 samples, 0.12%)</title><rect x="794.5" y="53" width="1.5" height="15.0" fill="rgb(249,132,45)" rx="2" ry="2" />
<text  x="797.54" y="63.5" ></text>
</g>
<g >
<title>ip_input (2,017 samples, 8.71%)</title><rect x="1086.9" y="181" width="102.8" height="15.0" fill="rgb(241,102,46)" rx="2" ry="2" />
<text  x="1089.87" y="191.5" >ip_input</text>
</g>
<g >
<title>ip_tryforward (5,699 samples, 24.62%)</title><rect x="796.0" y="117" width="290.5" height="15.0" fill="rgb(225,21,18)" rx="2" ry="2" />
<text  x="798.97" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>ip_input (5,699 samples, 24.62%)</title><rect x="796.0" y="133" width="290.5" height="15.0" fill="rgb(220,168,50)" rx="2" ry="2" />
<text  x="798.97" y="143.5" >ip_input</text>
</g>
<g >
<title>__mtx_lock_sleep (509 samples, 2.20%)</title><rect x="906.7" y="37" width="25.9" height="15.0" fill="rgb(237,58,24)" rx="2" ry="2" />
<text  x="909.70" y="47.5" >_..</text>
</g>
<g >
<title>iflib_if_transmit (1,130 samples, 4.88%)</title><rect x="10.0" y="101" width="57.6" height="15.0" fill="rgb(237,8,45)" rx="2" ry="2" />
<text  x="13.00" y="111.5" >iflib_..</text>
</g>
<g >
<title>iflib_txq_drain (2,017 samples, 8.71%)</title><rect x="1086.9" y="69" width="102.8" height="15.0" fill="rgb(223,216,10)" rx="2" ry="2" />
<text  x="1089.87" y="79.5" >iflib_txq_dr..</text>
</g>
<g >
<title>ether_demux (5,699 samples, 24.62%)</title><rect x="796.0" y="165" width="290.5" height="15.0" fill="rgb(206,184,15)" rx="2" ry="2" />
<text  x="798.97" y="175.5" >ether_demux</text>
</g>
<g >
<title>drain_ring_lockless (731 samples, 3.16%)</title><rect x="796.0" y="37" width="37.2" height="15.0" fill="rgb(224,93,54)" rx="2" ry="2" />
<text  x="798.97" y="47.5" >dra..</text>
</g>
<g >
<title>zone_import (23 samples, 0.10%)</title><rect x="777.2" y="149" width="1.2" height="15.0" fill="rgb(232,164,43)" rx="2" ry="2" />
<text  x="780.21" y="159.5" ></text>
</g>
<g >
<title>ipf_check (57 samples, 0.25%)</title><rect x="793.1" y="85" width="2.9" height="15.0" fill="rgb(234,39,10)" rx="2" ry="2" />
<text  x="796.06" y="95.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (731 samples, 3.16%)</title><rect x="796.0" y="53" width="37.2" height="15.0" fill="rgb(252,195,26)" rx="2" ry="2" />
<text  x="798.97" y="63.5" >ifm..</text>
</g>
<g >
<title>pfil_mbuf_in (3,574 samples, 15.44%)</title><rect x="904.3" y="101" width="182.2" height="15.0" fill="rgb(229,138,16)" rx="2" ry="2" />
<text  x="907.30" y="111.5" >pfil_mbuf_in</text>
</g>
<g >
<title>lock_delay (1,425 samples, 6.16%)</title><rect x="1013.9" y="37" width="72.6" height="15.0" fill="rgb(226,3,40)" rx="2" ry="2" />
<text  x="1016.86" y="47.5" >lock_delay</text>
</g>
<g >
<title>ether_nh_input (5,699 samples, 24.62%)</title><rect x="796.0" y="181" width="290.5" height="15.0" fill="rgb(246,39,10)" rx="2" ry="2" />
<text  x="798.97" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>ifmp_ring_enqueue (263 samples, 1.14%)</title><rect x="778.4" y="69" width="13.4" height="15.0" fill="rgb(236,223,7)" rx="2" ry="2" />
<text  x="781.43" y="79.5" ></text>
</g>
<g >
<title>lock_delay (1,008 samples, 4.35%)</title><rect x="513.0" y="37" width="51.4" height="15.0" fill="rgb(221,133,30)" rx="2" ry="2" />
<text  x="515.98" y="47.5" >lock_..</text>
</g>
<g >
<title>ipf_check (24 samples, 0.10%)</title><rect x="791.8" y="85" width="1.3" height="15.0" fill="rgb(251,142,43)" rx="2" ry="2" />
<text  x="794.84" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,130 samples, 4.88%)</title><rect x="10.0" y="229" width="57.6" height="15.0" fill="rgb(233,176,5)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >netisr..</text>
</g>
<g >
<title>netisr_dispatch_src (13,689 samples, 59.14%)</title><rect x="79.3" y="133" width="697.9" height="15.0" fill="rgb(251,179,47)" rx="2" ry="2" />
<text  x="82.33" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_derefrule (699 samples, 3.02%)</title><rect x="833.8" y="53" width="35.7" height="15.0" fill="rgb(218,3,39)" rx="2" ry="2" />
<text  x="836.85" y="63.5" >ipf..</text>
</g>
<g >
<title>__mtx_lock_sleep (12 samples, 0.05%)</title><rect x="833.2" y="53" width="0.6" height="15.0" fill="rgb(215,110,35)" rx="2" ry="2" />
<text  x="836.24" y="63.5" ></text>
</g>
<g >
<title>ipf_scanlist (2,068 samples, 8.93%)</title><rect x="981.1" y="53" width="105.4" height="15.0" fill="rgb(245,217,0)" rx="2" ry="2" />
<text  x="984.08" y="63.5" >ipf_scanlist</text>
</g>
<g >
<title>lock_delay (14 samples, 0.06%)</title><rect x="777.2" y="117" width="0.7" height="15.0" fill="rgb(217,103,6)" rx="2" ry="2" />
<text  x="780.21" y="127.5" ></text>
</g>
<g >
<title>ether_input (1,130 samples, 4.88%)</title><rect x="10.0" y="245" width="57.6" height="15.0" fill="rgb(228,210,34)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >ether_..</text>
</g>
<g >
<title>ether_demux (344 samples, 1.49%)</title><rect x="778.4" y="181" width="17.6" height="15.0" fill="rgb(246,166,22)" rx="2" ry="2" />
<text  x="781.43" y="191.5" ></text>
</g>
<g >
<title>ether_output (263 samples, 1.14%)</title><rect x="778.4" y="117" width="13.4" height="15.0" fill="rgb(218,179,37)" rx="2" ry="2" />
<text  x="781.43" y="127.5" ></text>
</g>
<g >
<title>sleepq_lock (7 samples, 0.03%)</title><rect x="1086.5" y="229" width="0.4" height="15.0" fill="rgb(251,3,27)" rx="2" ry="2" />
<text  x="1089.51" y="239.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (3,375 samples, 14.58%)</title><rect x="119.8" y="69" width="172.0" height="15.0" fill="rgb(209,86,1)" rx="2" ry="2" />
<text  x="122.76" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>lock_delay (12 samples, 0.05%)</title><rect x="833.2" y="37" width="0.6" height="15.0" fill="rgb(236,115,51)" rx="2" ry="2" />
<text  x="836.24" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (2,017 samples, 8.71%)</title><rect x="1086.9" y="117" width="102.8" height="15.0" fill="rgb(241,179,50)" rx="2" ry="2" />
<text  x="1089.87" y="127.5" >iflib_if_tra..</text>
</g>
<g >
<title>memset_erms (46 samples, 0.20%)</title><rect x="289.5" y="37" width="2.3" height="15.0" fill="rgb(214,137,39)" rx="2" ry="2" />
<text  x="292.48" y="47.5" ></text>
</g>
<g >
<title>ipf_derefrule (1,459 samples, 6.30%)</title><rect x="906.7" y="53" width="74.4" height="15.0" fill="rgb(254,184,21)" rx="2" ry="2" />
<text  x="909.70" y="63.5" >ipf_dere..</text>
</g>
<g >
<title>intr_execute_handlers (6 samples, 0.03%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(206,183,51)" rx="2" ry="2" />
<text  x="1192.69" y="287.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (3 samples, 0.01%)</title><rect x="777.9" y="85" width="0.2" height="15.0" fill="rgb(216,132,27)" rx="2" ry="2" />
<text  x="780.92" y="95.5" ></text>
</g>
<g >
<title>ipf_check (3,375 samples, 14.58%)</title><rect x="119.8" y="53" width="172.0" height="15.0" fill="rgb(253,133,38)" rx="2" ry="2" />
<text  x="122.76" y="63.5" >ipf_check</text>
</g>
<g >
<title>ipf_check_wrapper (3,574 samples, 15.44%)</title><rect x="904.3" y="85" width="182.2" height="15.0" fill="rgb(249,28,12)" rx="2" ry="2" />
<text  x="907.30" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>netisr_dispatch_src (2,017 samples, 8.71%)</title><rect x="1086.9" y="197" width="102.8" height="15.0" fill="rgb(240,118,6)" rx="2" ry="2" />
<text  x="1089.87" y="207.5" >netisr_dispa..</text>
</g>
<g >
<title>wakeup (7 samples, 0.03%)</title><rect x="1086.5" y="245" width="0.4" height="15.0" fill="rgb(205,91,43)" rx="2" ry="2" />
<text  x="1089.51" y="255.5" ></text>
</g>
<g >
<title>__rw_rlock_int (670 samples, 2.89%)</title><rect x="380.9" y="37" width="34.2" height="15.0" fill="rgb(239,65,19)" rx="2" ry="2" />
<text  x="383.94" y="47.5" >__..</text>
</g>
<g >
<title>netisr_dispatch_src (13,689 samples, 59.14%)</title><rect x="79.3" y="181" width="697.9" height="15.0" fill="rgb(238,103,8)" rx="2" ry="2" />
<text  x="82.33" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_encap (440 samples, 1.90%)</title><rect x="24.5" y="37" width="22.4" height="15.0" fill="rgb(251,209,27)" rx="2" ry="2" />
<text  x="27.48" y="47.5" >i..</text>
</g>
<g >
<title>ipf_check_wrapper (24 samples, 0.10%)</title><rect x="791.8" y="101" width="1.3" height="15.0" fill="rgb(247,83,44)" rx="2" ry="2" />
<text  x="794.84" y="111.5" ></text>
</g>
<g >
<title>lock_delay (47 samples, 0.20%)</title><rect x="904.3" y="37" width="2.4" height="15.0" fill="rgb(239,175,19)" rx="2" ry="2" />
<text  x="907.30" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (6 samples, 0.03%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(248,187,46)" rx="2" ry="2" />
<text  x="1192.69" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (13,942 samples, 60.24%)</title><rect x="67.6" y="261" width="710.8" height="15.0" fill="rgb(238,51,0)" rx="2" ry="2" />
<text  x="70.61" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ip_input (1,130 samples, 4.88%)</title><rect x="10.0" y="165" width="57.6" height="15.0" fill="rgb(210,144,51)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >ip_input</text>
</g>
<g >
<title>ipf_check_wrapper (1,394 samples, 6.02%)</title><rect x="833.2" y="85" width="71.1" height="15.0" fill="rgb(237,154,39)" rx="2" ry="2" />
<text  x="836.24" y="95.5" >ipf_chec..</text>
</g>
<g >
<title>ether_nh_input (13,689 samples, 59.14%)</title><rect x="79.3" y="165" width="697.9" height="15.0" fill="rgb(246,107,4)" rx="2" ry="2" />
<text  x="82.33" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>lock_delay (11 samples, 0.05%)</title><rect x="791.8" y="37" width="0.6" height="15.0" fill="rgb(234,186,8)" rx="2" ry="2" />
<text  x="794.84" y="47.5" ></text>
</g>
<g >
<title>intr_event_handle (6 samples, 0.03%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(237,18,21)" rx="2" ry="2" />
<text  x="1192.69" y="271.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (6 samples, 0.03%)</title><rect x="778.1" y="133" width="0.3" height="15.0" fill="rgb(242,60,20)" rx="2" ry="2" />
<text  x="781.08" y="143.5" ></text>
</g>
<g >
<title>cache_alloc_retry (23 samples, 0.10%)</title><rect x="777.2" y="181" width="1.2" height="15.0" fill="rgb(240,17,0)" rx="2" ry="2" />
<text  x="780.21" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.03%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(237,99,45)" rx="2" ry="2" />
<text  x="1192.69" y="207.5" ></text>
</g>
<g >
<title>ether_demux (13,689 samples, 59.14%)</title><rect x="79.3" y="149" width="697.9" height="15.0" fill="rgb(211,123,52)" rx="2" ry="2" />
<text  x="82.33" y="159.5" >ether_demux</text>
</g>
<g >
<title>__mtx_lock_sleep (492 samples, 2.13%)</title><rect x="355.9" y="37" width="25.0" height="15.0" fill="rgb(208,37,45)" rx="2" ry="2" />
<text  x="358.85" y="47.5" >_..</text>
</g>
<g >
<title>ipf_scanlist (28 samples, 0.12%)</title><rect x="794.5" y="69" width="1.5" height="15.0" fill="rgb(253,66,46)" rx="2" ry="2" />
<text  x="797.54" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (215 samples, 0.93%)</title><rect x="148.7" y="37" width="10.9" height="15.0" fill="rgb(241,81,31)" rx="2" ry="2" />
<text  x="151.67" y="47.5" ></text>
</g>
<g >
<title>fork_exit (13,943 samples, 60.24%)</title><rect x="67.6" y="277" width="710.8" height="15.0" fill="rgb(244,222,47)" rx="2" ry="2" />
<text  x="70.61" y="287.5" >fork_exit</text>
</g>
<g >
<title>__mtx_lock_sleep (302 samples, 1.30%)</title><rect x="833.8" y="37" width="15.4" height="15.0" fill="rgb(251,151,29)" rx="2" ry="2" />
<text  x="836.85" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (1,130 samples, 4.88%)</title><rect x="10.0" y="149" width="57.6" height="15.0" fill="rgb(243,52,23)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >ip_try..</text>
</g>
<g >
<title>_task_fn_rx (5,699 samples, 24.62%)</title><rect x="796.0" y="245" width="290.5" height="15.0" fill="rgb(219,58,21)" rx="2" ry="2" />
<text  x="798.97" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>__mtx_lock_sleep (13 samples, 0.06%)</title><rect x="792.4" y="53" width="0.7" height="15.0" fill="rgb(225,190,30)" rx="2" ry="2" />
<text  x="795.40" y="63.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (419 samples, 1.81%)</title><rect x="188.4" y="37" width="21.3" height="15.0" fill="rgb(215,105,49)" rx="2" ry="2" />
<text  x="191.38" y="47.5" >_..</text>
</g>
<g >
<title>ip_input (344 samples, 1.49%)</title><rect x="778.4" y="149" width="17.6" height="15.0" fill="rgb(246,49,39)" rx="2" ry="2" />
<text  x="781.43" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,017 samples, 8.71%)</title><rect x="1086.9" y="245" width="102.8" height="15.0" fill="rgb(209,33,26)" rx="2" ry="2" />
<text  x="1089.87" y="255.5" >netisr_dispa..</text>
</g>
<g >
<title>iflib_fl_refill (23 samples, 0.10%)</title><rect x="777.2" y="197" width="1.2" height="15.0" fill="rgb(229,163,5)" rx="2" ry="2" />
<text  x="780.21" y="207.5" ></text>
</g>
<g >
<title>lock_delay (6 samples, 0.03%)</title><rect x="778.1" y="117" width="0.3" height="15.0" fill="rgb(214,81,26)" rx="2" ry="2" />
<text  x="781.08" y="127.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (47 samples, 0.20%)</title><rect x="904.3" y="53" width="2.4" height="15.0" fill="rgb(254,2,0)" rx="2" ry="2" />
<text  x="907.30" y="63.5" ></text>
</g>
<g >
<title>wakeup_any (230 samples, 0.99%)</title><rect x="67.6" y="197" width="11.7" height="15.0" fill="rgb(220,21,22)" rx="2" ry="2" />
<text  x="70.61" y="207.5" ></text>
</g>
<g >
<title>ether_input (2,017 samples, 8.71%)</title><rect x="1086.9" y="261" width="102.8" height="15.0" fill="rgb(211,6,34)" rx="2" ry="2" />
<text  x="1089.87" y="271.5" >ether_input</text>
</g>
<g >
<title>sleepq_lock (230 samples, 0.99%)</title><rect x="67.6" y="181" width="11.7" height="15.0" fill="rgb(239,35,10)" rx="2" ry="2" />
<text  x="70.61" y="191.5" ></text>
</g>
<g >
<title>ip_input (13,689 samples, 59.14%)</title><rect x="79.3" y="117" width="697.9" height="15.0" fill="rgb(211,16,22)" rx="2" ry="2" />
<text  x="82.33" y="127.5" >ip_input</text>
</g>
<g >
<title>_rw_runlock_cookie_int (471 samples, 2.03%)</title><rect x="415.1" y="37" width="24.0" height="15.0" fill="rgb(233,19,50)" rx="2" ry="2" />
<text  x="418.09" y="47.5" >_..</text>
</g>
<g >
<title>ether_demux (1,130 samples, 4.88%)</title><rect x="10.0" y="197" width="57.6" height="15.0" fill="rgb(245,217,1)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >ether_..</text>
</g>
<g >
<title>ipf_derefrule (29 samples, 0.13%)</title><rect x="793.1" y="69" width="1.4" height="15.0" fill="rgb(209,127,27)" rx="2" ry="2" />
<text  x="796.06" y="79.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (57 samples, 0.25%)</title><rect x="793.1" y="101" width="2.9" height="15.0" fill="rgb(230,181,39)" rx="2" ry="2" />
<text  x="796.06" y="111.5" ></text>
</g>
<g >
<title>ether_input (13,689 samples, 59.14%)</title><rect x="79.3" y="197" width="697.9" height="15.0" fill="rgb(207,112,33)" rx="2" ry="2" />
<text  x="82.33" y="207.5" >ether_input</text>
</g>
</g>
</svg>
