<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>m_pkthdr_init (48 samples, 0.02%)</title><rect x="263.1" y="197" width="0.2" height="15.0" fill="rgb(209,37,10)" rx="2" ry="2" />
<text  x="266.09" y="207.5" ></text>
</g>
<g >
<title>ipf_makefrip (1,164 samples, 0.44%)</title><rect x="206.6" y="37" width="5.2" height="15.0" fill="rgb(209,44,42)" rx="2" ry="2" />
<text  x="209.60" y="47.5" ></text>
</g>
<g >
<title>ipf_scanlist (9,467 samples, 3.56%)</title><rect x="429.7" y="69" width="42.0" height="15.0" fill="rgb(212,202,19)" rx="2" ry="2" />
<text  x="432.73" y="79.5" >ipf..</text>
</g>
<g >
<title>lock_delay (34,305 samples, 12.89%)</title><rect x="920.4" y="37" width="152.1" height="15.0" fill="rgb(226,226,31)" rx="2" ry="2" />
<text  x="923.41" y="47.5" >lock_delay</text>
</g>
<g >
<title>netisr_dispatch_src (50,600 samples, 19.01%)</title><rect x="31.3" y="133" width="224.3" height="15.0" fill="rgb(219,60,14)" rx="2" ry="2" />
<text  x="34.27" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch_src (144,022 samples, 54.12%)</title><rect x="280.6" y="213" width="638.6" height="15.0" fill="rgb(216,108,37)" rx="2" ry="2" />
<text  x="283.60" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_output_frame (1,164 samples, 0.44%)</title><rect x="40.2" y="69" width="5.1" height="15.0" fill="rgb(215,153,9)" rx="2" ry="2" />
<text  x="43.15" y="79.5" ></text>
</g>
<g >
<title>pfil_run_hooks (57,962 samples, 21.78%)</title><rect x="920.4" y="101" width="257.0" height="15.0" fill="rgb(226,145,9)" rx="2" ry="2" />
<text  x="923.41" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>netisr_dispatch_src (58,242 samples, 21.88%)</title><rect x="919.2" y="149" width="258.2" height="15.0" fill="rgb(249,30,4)" rx="2" ry="2" />
<text  x="922.17" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_write_reg (50 samples, 0.02%)</title><rect x="279.7" y="165" width="0.2" height="15.0" fill="rgb(249,85,46)" rx="2" ry="2" />
<text  x="282.68" y="175.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (38 samples, 0.01%)</title><rect x="19.9" y="117" width="0.1" height="15.0" fill="rgb(208,5,50)" rx="2" ry="2" />
<text  x="22.85" y="127.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (54 samples, 0.02%)</title><rect x="259.3" y="165" width="0.2" height="15.0" fill="rgb(211,69,23)" rx="2" ry="2" />
<text  x="262.26" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (113 samples, 0.04%)</title><rect x="1187.0" y="213" width="0.5" height="15.0" fill="rgb(249,220,48)" rx="2" ry="2" />
<text  x="1189.99" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (7,523 samples, 2.83%)</title><rect x="1072.5" y="37" width="33.4" height="15.0" fill="rgb(244,159,22)" rx="2" ry="2" />
<text  x="1075.51" y="47.5" >__..</text>
</g>
<g >
<title>all (266,138 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(234,97,49)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (57,962 samples, 21.78%)</title><rect x="920.4" y="85" width="257.0" height="15.0" fill="rgb(237,3,19)" rx="2" ry="2" />
<text  x="923.41" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>iflib_rxeof (39 samples, 0.01%)</title><rect x="19.8" y="261" width="0.2" height="15.0" fill="rgb(236,75,36)" rx="2" ry="2" />
<text  x="22.85" y="271.5" ></text>
</g>
<g >
<title>ether_input (144,022 samples, 54.12%)</title><rect x="280.6" y="229" width="638.6" height="15.0" fill="rgb(205,86,18)" rx="2" ry="2" />
<text  x="283.60" y="239.5" >ether_input</text>
</g>
<g >
<title>spinlock_exit (146 samples, 0.05%)</title><rect x="919.8" y="37" width="0.6" height="15.0" fill="rgb(237,29,46)" rx="2" ry="2" />
<text  x="922.76" y="47.5" ></text>
</g>
<g >
<title>lock_delay (33,633 samples, 12.64%)</title><rect x="280.6" y="37" width="149.1" height="15.0" fill="rgb(251,208,48)" rx="2" ry="2" />
<text  x="283.61" y="47.5" >lock_delay</text>
</g>
<g >
<title>netisr_dispatch_src (51,836 samples, 19.48%)</title><rect x="26.0" y="181" width="229.8" height="15.0" fill="rgb(235,117,34)" rx="2" ry="2" />
<text  x="28.96" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ifmp_ring_enqueue (460 samples, 0.17%)</title><rect x="43.3" y="37" width="2.0" height="15.0" fill="rgb(222,215,10)" rx="2" ry="2" />
<text  x="46.28" y="47.5" ></text>
</g>
<g >
<title>ipf_state_check (12,032 samples, 4.52%)</title><rect x="1123.9" y="53" width="53.4" height="15.0" fill="rgb(238,37,22)" rx="2" ry="2" />
<text  x="1126.91" y="63.5" >ipf_s..</text>
</g>
<g >
<title>__mtx_lock_sleep (9,467 samples, 3.56%)</title><rect x="429.7" y="53" width="42.0" height="15.0" fill="rgb(244,130,53)" rx="2" ry="2" />
<text  x="432.73" y="63.5" >__m..</text>
</g>
<g >
<title>spinlock_exit (31 samples, 0.01%)</title><rect x="280.1" y="229" width="0.2" height="15.0" fill="rgb(239,82,30)" rx="2" ry="2" />
<text  x="283.14" y="239.5" ></text>
</g>
<g >
<title>ipf_state_add (2,175 samples, 0.82%)</title><rect x="227.2" y="37" width="9.6" height="15.0" fill="rgb(212,229,28)" rx="2" ry="2" />
<text  x="230.19" y="47.5" ></text>
</g>
<g >
<title>if_inc_counter (41 samples, 0.02%)</title><rect x="255.9" y="197" width="0.1" height="15.0" fill="rgb(229,225,54)" rx="2" ry="2" />
<text  x="258.85" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (144,022 samples, 54.12%)</title><rect x="280.6" y="133" width="638.6" height="15.0" fill="rgb(205,174,53)" rx="2" ry="2" />
<text  x="283.60" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>in_lltable_lookup (83 samples, 0.03%)</title><rect x="38.3" y="53" width="0.3" height="15.0" fill="rgb(246,172,4)" rx="2" ry="2" />
<text  x="41.25" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (28 samples, 0.01%)</title><rect x="257.8" y="117" width="0.1" height="15.0" fill="rgb(229,23,23)" rx="2" ry="2" />
<text  x="260.80" y="127.5" ></text>
</g>
<g >
<title>iflib_if_transmit (280 samples, 0.11%)</title><rect x="919.2" y="69" width="1.2" height="15.0" fill="rgb(241,5,23)" rx="2" ry="2" />
<text  x="922.17" y="79.5" ></text>
</g>
<g >
<title>pmc_process_samples (164 samples, 0.06%)</title><rect x="1189.0" y="197" width="0.8" height="15.0" fill="rgb(213,91,17)" rx="2" ry="2" />
<text  x="1192.04" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (231 samples, 0.09%)</title><rect x="276.9" y="149" width="1.0" height="15.0" fill="rgb(224,154,5)" rx="2" ry="2" />
<text  x="279.90" y="159.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (265 samples, 0.10%)</title><rect x="278.7" y="181" width="1.2" height="15.0" fill="rgb(234,32,46)" rx="2" ry="2" />
<text  x="281.72" y="191.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (252 samples, 0.09%)</title><rect x="258.4" y="181" width="1.1" height="15.0" fill="rgb(226,33,6)" rx="2" ry="2" />
<text  x="261.39" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (144,022 samples, 54.12%)</title><rect x="280.6" y="165" width="638.6" height="15.0" fill="rgb(254,14,32)" rx="2" ry="2" />
<text  x="283.60" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>if_inc_counter (33 samples, 0.01%)</title><rect x="267.8" y="181" width="0.1" height="15.0" fill="rgb(236,197,35)" rx="2" ry="2" />
<text  x="270.78" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (325 samples, 0.12%)</title><rect x="1188.5" y="277" width="1.5" height="15.0" fill="rgb(252,169,13)" rx="2" ry="2" />
<text  x="1191.55" y="287.5" ></text>
</g>
<g >
<title>ipf_makefrip (404 samples, 0.15%)</title><rect x="1105.9" y="53" width="1.8" height="15.0" fill="rgb(225,206,37)" rx="2" ry="2" />
<text  x="1108.87" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (39 samples, 0.01%)</title><rect x="19.8" y="213" width="0.2" height="15.0" fill="rgb(253,54,22)" rx="2" ry="2" />
<text  x="22.85" y="223.5" ></text>
</g>
<g >
<title>Xtimerint_pti (59 samples, 0.02%)</title><rect x="19.6" y="277" width="0.2" height="15.0" fill="rgb(214,180,39)" rx="2" ry="2" />
<text  x="22.59" y="287.5" ></text>
</g>
<g >
<title>wakeup (60 samples, 0.02%)</title><rect x="280.3" y="229" width="0.2" height="15.0" fill="rgb(222,32,50)" rx="2" ry="2" />
<text  x="283.27" y="239.5" ></text>
</g>
<g >
<title>m_free (32 samples, 0.01%)</title><rect x="1177.3" y="37" width="0.1" height="15.0" fill="rgb(251,211,1)" rx="2" ry="2" />
<text  x="1180.26" y="47.5" ></text>
</g>
<g >
<title>ipf_check (57,962 samples, 21.78%)</title><rect x="920.4" y="69" width="257.0" height="15.0" fill="rgb(243,54,43)" rx="2" ry="2" />
<text  x="923.41" y="79.5" >ipf_check</text>
</g>
<g >
<title>__mtx_lock_sleep (33,633 samples, 12.64%)</title><rect x="280.6" y="53" width="149.1" height="15.0" fill="rgb(222,137,37)" rx="2" ry="2" />
<text  x="283.61" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>ixgbe_msix_que (49 samples, 0.02%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(246,83,22)" rx="2" ry="2" />
<text  x="1191.03" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (740 samples, 0.28%)</title><rect x="259.8" y="197" width="3.3" height="15.0" fill="rgb(240,91,33)" rx="2" ry="2" />
<text  x="262.80" y="207.5" ></text>
</g>
<g >
<title>ip_input (144,022 samples, 54.12%)</title><rect x="280.6" y="149" width="638.6" height="15.0" fill="rgb(230,11,9)" rx="2" ry="2" />
<text  x="283.60" y="159.5" >ip_input</text>
</g>
<g >
<title>intr_lookup_source (23 samples, 0.01%)</title><rect x="1188.4" y="261" width="0.1" height="15.0" fill="rgb(206,216,22)" rx="2" ry="2" />
<text  x="1191.44" y="271.5" ></text>
</g>
<g >
<title>ether_input (58,242 samples, 21.88%)</title><rect x="919.2" y="213" width="258.2" height="15.0" fill="rgb(230,67,6)" rx="2" ry="2" />
<text  x="922.17" y="223.5" >ether_input</text>
</g>
<g >
<title>memcpy_erms (118 samples, 0.04%)</title><rect x="263.3" y="197" width="0.5" height="15.0" fill="rgb(240,171,41)" rx="2" ry="2" />
<text  x="266.30" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (49 samples, 0.02%)</title><rect x="21.3" y="213" width="0.2" height="15.0" fill="rgb(226,151,53)" rx="2" ry="2" />
<text  x="24.30" y="223.5" ></text>
</g>
<g >
<title>keg_alloc_slab (42 samples, 0.02%)</title><rect x="257.8" y="133" width="0.2" height="15.0" fill="rgb(205,120,13)" rx="2" ry="2" />
<text  x="260.80" y="143.5" ></text>
</g>
<g >
<title>_rw_wowned (806 samples, 0.30%)</title><rect x="508.8" y="37" width="3.6" height="15.0" fill="rgb(232,26,28)" rx="2" ry="2" />
<text  x="511.79" y="47.5" ></text>
</g>
<g >
<title>uma_zfree_arg (28 samples, 0.01%)</title><rect x="19.9" y="53" width="0.1" height="15.0" fill="rgb(217,39,4)" rx="2" ry="2" />
<text  x="22.90" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (58 samples, 0.02%)</title><rect x="1186.7" y="213" width="0.2" height="15.0" fill="rgb(214,65,3)" rx="2" ry="2" />
<text  x="1189.66" y="223.5" ></text>
</g>
<g >
<title>cache_alloc (47 samples, 0.02%)</title><rect x="257.8" y="165" width="0.2" height="15.0" fill="rgb(242,196,13)" rx="2" ry="2" />
<text  x="260.79" y="175.5" ></text>
</g>
<g >
<title>m_free (237 samples, 0.09%)</title><rect x="269.2" y="149" width="1.0" height="15.0" fill="rgb(226,107,5)" rx="2" ry="2" />
<text  x="272.19" y="159.5" ></text>
</g>
<g >
<title>ip_tryforward (50,086 samples, 18.82%)</title><rect x="33.5" y="101" width="222.1" height="15.0" fill="rgb(240,88,34)" rx="2" ry="2" />
<text  x="36.55" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>_rw_runlock_cookie_int (2,945 samples, 1.11%)</title><rect x="1123.9" y="37" width="13.1" height="15.0" fill="rgb(228,164,3)" rx="2" ry="2" />
<text  x="1126.91" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (39 samples, 0.01%)</title><rect x="19.8" y="181" width="0.2" height="15.0" fill="rgb(211,189,44)" rx="2" ry="2" />
<text  x="22.85" y="191.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (4,812 samples, 1.81%)</title><rect x="487.5" y="37" width="21.3" height="15.0" fill="rgb(242,78,39)" rx="2" ry="2" />
<text  x="490.45" y="47.5" >_..</text>
</g>
<g >
<title>m_adj (89 samples, 0.03%)</title><rect x="30.8" y="133" width="0.3" height="15.0" fill="rgb(248,71,45)" rx="2" ry="2" />
<text  x="33.75" y="143.5" ></text>
</g>
<g >
<title>uma_zfree_arg (182 samples, 0.07%)</title><rect x="269.4" y="133" width="0.8" height="15.0" fill="rgb(208,160,46)" rx="2" ry="2" />
<text  x="272.43" y="143.5" ></text>
</g>
<g >
<title>cache_alloc_retry (49 samples, 0.02%)</title><rect x="257.8" y="181" width="0.2" height="15.0" fill="rgb(249,213,50)" rx="2" ry="2" />
<text  x="260.78" y="191.5" ></text>
</g>
<g >
<title>drain_ring_lockless (3,169 samples, 1.19%)</title><rect x="265.8" y="213" width="14.1" height="15.0" fill="rgb(240,111,32)" rx="2" ry="2" />
<text  x="268.85" y="223.5" ></text>
</g>
<g >
<title>handleevents (268 samples, 0.10%)</title><rect x="1188.8" y="245" width="1.2" height="15.0" fill="rgb(207,98,46)" rx="2" ry="2" />
<text  x="1191.80" y="255.5" ></text>
</g>
<g >
<title>ipf_check (38 samples, 0.01%)</title><rect x="19.9" y="101" width="0.1" height="15.0" fill="rgb(208,176,20)" rx="2" ry="2" />
<text  x="22.85" y="111.5" ></text>
</g>
<g >
<title>m_freem (32 samples, 0.01%)</title><rect x="1177.3" y="53" width="0.1" height="15.0" fill="rgb(233,144,13)" rx="2" ry="2" />
<text  x="1180.26" y="63.5" ></text>
</g>
<g >
<title>sleepq_lock (65 samples, 0.02%)</title><rect x="1187.0" y="197" width="0.3" height="15.0" fill="rgb(222,129,54)" rx="2" ry="2" />
<text  x="1190.02" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (144,022 samples, 54.12%)</title><rect x="280.6" y="261" width="638.6" height="15.0" fill="rgb(221,123,44)" rx="2" ry="2" />
<text  x="283.60" y="271.5" >_task_fn_rx</text>
</g>
<g >
<title>pfil_run_hooks (144,021 samples, 54.12%)</title><rect x="280.6" y="117" width="638.6" height="15.0" fill="rgb(232,79,32)" rx="2" ry="2" />
<text  x="283.61" y="127.5" >pfil_run_hooks</text>
</g>
<g >
<title>netisr_dispatch_src (58,242 samples, 21.88%)</title><rect x="919.2" y="197" width="258.2" height="15.0" fill="rgb(252,108,7)" rx="2" ry="2" />
<text  x="922.17" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>Xapic_isr1 (338 samples, 0.13%)</title><rect x="10.0" y="277" width="1.5" height="15.0" fill="rgb(253,207,49)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>pmc_hook_handler (166 samples, 0.06%)</title><rect x="1189.0" y="213" width="0.8" height="15.0" fill="rgb(227,135,39)" rx="2" ry="2" />
<text  x="1192.03" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (51,344 samples, 19.29%)</title><rect x="28.1" y="165" width="227.7" height="15.0" fill="rgb(212,172,29)" rx="2" ry="2" />
<text  x="31.14" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ether_input (39 samples, 0.01%)</title><rect x="19.8" y="245" width="0.2" height="15.0" fill="rgb(229,138,48)" rx="2" ry="2" />
<text  x="22.85" y="255.5" ></text>
</g>
<g >
<title>ip_input (50,352 samples, 18.92%)</title><rect x="32.4" y="117" width="223.2" height="15.0" fill="rgb(239,27,44)" rx="2" ry="2" />
<text  x="35.37" y="127.5" >ip_input</text>
</g>
<g >
<title>iflib_rxeof (144,022 samples, 54.12%)</title><rect x="280.6" y="245" width="638.6" height="15.0" fill="rgb(253,164,38)" rx="2" ry="2" />
<text  x="283.60" y="255.5" >iflib_rxeof</text>
</g>
<g >
<title>grouptaskqueue_enqueue (280 samples, 0.11%)</title><rect x="919.2" y="53" width="1.2" height="15.0" fill="rgb(248,212,54)" rx="2" ry="2" />
<text  x="922.17" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (7,309 samples, 2.75%)</title><rect x="98.2" y="37" width="32.4" height="15.0" fill="rgb(206,127,6)" rx="2" ry="2" />
<text  x="101.20" y="47.5" >__..</text>
</g>
<g >
<title>ipf_state_check (100,842 samples, 37.89%)</title><rect x="471.7" y="69" width="447.1" height="15.0" fill="rgb(242,225,45)" rx="2" ry="2" />
<text  x="474.71" y="79.5" >ipf_state_check</text>
</g>
<g >
<title>sleepq_signal (41 samples, 0.02%)</title><rect x="1187.3" y="197" width="0.2" height="15.0" fill="rgb(225,152,49)" rx="2" ry="2" />
<text  x="1190.31" y="207.5" ></text>
</g>
<g >
<title>memset_erms (284 samples, 0.11%)</title><rect x="1122.7" y="37" width="1.2" height="15.0" fill="rgb(219,191,50)" rx="2" ry="2" />
<text  x="1125.65" y="47.5" ></text>
</g>
<g >
<title>ip_input (58,242 samples, 21.88%)</title><rect x="919.2" y="133" width="258.2" height="15.0" fill="rgb(233,114,19)" rx="2" ry="2" />
<text  x="922.17" y="143.5" >ip_input</text>
</g>
<g >
<title>ipf_check_wrapper (46,458 samples, 17.46%)</title><rect x="49.6" y="69" width="206.0" height="15.0" fill="rgb(216,171,0)" rx="2" ry="2" />
<text  x="52.63" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>iflib_encap (1,914 samples, 0.72%)</title><rect x="270.2" y="181" width="8.5" height="15.0" fill="rgb(222,89,18)" rx="2" ry="2" />
<text  x="273.24" y="191.5" ></text>
</g>
<g >
<title>ether_demux (58,242 samples, 21.88%)</title><rect x="919.2" y="165" width="258.2" height="15.0" fill="rgb(215,2,7)" rx="2" ry="2" />
<text  x="922.17" y="175.5" >ether_demux</text>
</g>
<g >
<title>ether_output (280 samples, 0.11%)</title><rect x="919.2" y="101" width="1.2" height="15.0" fill="rgb(205,155,43)" rx="2" ry="2" />
<text  x="922.17" y="111.5" ></text>
</g>
<g >
<title>memcpy_erms (49 samples, 0.02%)</title><rect x="45.3" y="69" width="0.2" height="15.0" fill="rgb(227,146,24)" rx="2" ry="2" />
<text  x="48.32" y="79.5" ></text>
</g>
<g >
<title>iflib_if_transmit (731 samples, 0.27%)</title><rect x="42.1" y="53" width="3.2" height="15.0" fill="rgb(234,152,53)" rx="2" ry="2" />
<text  x="45.07" y="63.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (520 samples, 0.20%)</title><rect x="267.9" y="181" width="2.3" height="15.0" fill="rgb(229,107,29)" rx="2" ry="2" />
<text  x="270.93" y="191.5" ></text>
</g>
<g >
<title>fork_exit (58,754 samples, 22.08%)</title><rect x="20.1" y="277" width="260.5" height="15.0" fill="rgb(205,143,20)" rx="2" ry="2" />
<text  x="23.10" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_output_frame (280 samples, 0.11%)</title><rect x="919.2" y="85" width="1.2" height="15.0" fill="rgb(209,116,3)" rx="2" ry="2" />
<text  x="922.17" y="95.5" ></text>
</g>
<g >
<title>__rw_rlock_int (3,541 samples, 1.33%)</title><rect x="471.8" y="37" width="15.7" height="15.0" fill="rgb(231,169,18)" rx="2" ry="2" />
<text  x="474.75" y="47.5" ></text>
</g>
<g >
<title>fib4_lookup (372 samples, 0.14%)</title><rect x="46.7" y="69" width="1.6" height="15.0" fill="rgb(249,22,53)" rx="2" ry="2" />
<text  x="49.67" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (58,740 samples, 22.07%)</title><rect x="20.1" y="261" width="260.4" height="15.0" fill="rgb(214,26,1)" rx="2" ry="2" />
<text  x="23.10" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>m_freem (28 samples, 0.01%)</title><rect x="19.9" y="85" width="0.1" height="15.0" fill="rgb(238,132,22)" rx="2" ry="2" />
<text  x="22.90" y="95.5" ></text>
</g>
<g >
<title>ipf_derefrule (7,524 samples, 2.83%)</title><rect x="1072.5" y="53" width="33.4" height="15.0" fill="rgb(205,11,46)" rx="2" ry="2" />
<text  x="1075.51" y="63.5" >ip..</text>
</g>
<g >
<title>uma_zfree_arg (77 samples, 0.03%)</title><rect x="918.8" y="37" width="0.4" height="15.0" fill="rgb(222,124,16)" rx="2" ry="2" />
<text  x="921.82" y="47.5" ></text>
</g>
<g >
<title>memcmp (35 samples, 0.01%)</title><rect x="255.6" y="149" width="0.2" height="15.0" fill="rgb(235,100,25)" rx="2" ry="2" />
<text  x="258.62" y="159.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (180 samples, 0.07%)</title><rect x="277.9" y="165" width="0.8" height="15.0" fill="rgb(233,119,15)" rx="2" ry="2" />
<text  x="280.93" y="175.5" ></text>
</g>
<g >
<title>strncpy (284 samples, 0.11%)</title><rect x="1176.0" y="37" width="1.3" height="15.0" fill="rgb(251,75,20)" rx="2" ry="2" />
<text  x="1179.00" y="47.5" ></text>
</g>
<g >
<title>ipf_state_lookup (8,010 samples, 3.01%)</title><rect x="1140.5" y="37" width="35.5" height="15.0" fill="rgb(240,67,23)" rx="2" ry="2" />
<text  x="1143.48" y="47.5" >ipf..</text>
</g>
<g >
<title>ip_input (39 samples, 0.01%)</title><rect x="19.8" y="165" width="0.2" height="15.0" fill="rgb(250,145,34)" rx="2" ry="2" />
<text  x="22.85" y="175.5" ></text>
</g>
<g >
<title>ether_demux (51,059 samples, 19.19%)</title><rect x="29.2" y="149" width="226.4" height="15.0" fill="rgb(250,214,30)" rx="2" ry="2" />
<text  x="32.23" y="159.5" >ether_demux</text>
</g>
<g >
<title>ether_output (2,075 samples, 0.78%)</title><rect x="36.3" y="85" width="9.2" height="15.0" fill="rgb(237,138,31)" rx="2" ry="2" />
<text  x="39.33" y="95.5" ></text>
</g>
<g >
<title>lock_delay (27 samples, 0.01%)</title><rect x="257.8" y="101" width="0.1" height="15.0" fill="rgb(208,183,43)" rx="2" ry="2" />
<text  x="260.80" y="111.5" ></text>
</g>
<g >
<title>iflib_txq_drain (2,975 samples, 1.12%)</title><rect x="266.7" y="197" width="13.2" height="15.0" fill="rgb(221,83,43)" rx="2" ry="2" />
<text  x="269.71" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (68 samples, 0.03%)</title><rect x="259.5" y="197" width="0.3" height="15.0" fill="rgb(224,72,24)" rx="2" ry="2" />
<text  x="262.50" y="207.5" ></text>
</g>
<g >
<title>ipf_nat_checkout (71 samples, 0.03%)</title><rect x="212.3" y="37" width="0.3" height="15.0" fill="rgb(248,198,6)" rx="2" ry="2" />
<text  x="215.27" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (39 samples, 0.01%)</title><rect x="19.8" y="149" width="0.2" height="15.0" fill="rgb(241,130,36)" rx="2" ry="2" />
<text  x="22.85" y="159.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (33 samples, 0.01%)</title><rect x="21.0" y="229" width="0.1" height="15.0" fill="rgb(246,92,27)" rx="2" ry="2" />
<text  x="23.97" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (52 samples, 0.02%)</title><rect x="1187.6" y="229" width="0.2" height="15.0" fill="rgb(230,104,44)" rx="2" ry="2" />
<text  x="1190.61" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (58,740 samples, 22.07%)</title><rect x="20.1" y="245" width="260.4" height="15.0" fill="rgb(254,167,33)" rx="2" ry="2" />
<text  x="23.10" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>gtaskqueue_run_locked (144,022 samples, 54.12%)</title><rect x="280.6" y="277" width="638.6" height="15.0" fill="rgb(253,220,49)" rx="2" ry="2" />
<text  x="283.60" y="287.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>__mtx_lock_sleep (34,306 samples, 12.89%)</title><rect x="920.4" y="53" width="152.1" height="15.0" fill="rgb(207,105,52)" rx="2" ry="2" />
<text  x="923.41" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>ipf_movequeue (85 samples, 0.03%)</title><rect x="1140.1" y="37" width="0.4" height="15.0" fill="rgb(212,213,52)" rx="2" ry="2" />
<text  x="1143.10" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (26 samples, 0.01%)</title><rect x="1187.4" y="181" width="0.1" height="15.0" fill="rgb(252,209,54)" rx="2" ry="2" />
<text  x="1190.38" y="191.5" ></text>
</g>
<g >
<title>ipf_matchsrcdst (91,673 samples, 34.45%)</title><rect x="512.4" y="37" width="406.4" height="15.0" fill="rgb(246,43,10)" rx="2" ry="2" />
<text  x="515.36" y="47.5" >ipf_matchsrcdst</text>
</g>
<g >
<title>ip_tryforward (58,242 samples, 21.88%)</title><rect x="919.2" y="117" width="258.2" height="15.0" fill="rgb(230,78,21)" rx="2" ry="2" />
<text  x="922.17" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>ipf_pr_pullup (142 samples, 0.05%)</title><rect x="1107.0" y="37" width="0.7" height="15.0" fill="rgb(206,112,33)" rx="2" ry="2" />
<text  x="1110.03" y="47.5" ></text>
</g>
<g >
<title>lapic_et_start (24 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(226,160,5)" rx="2" ry="2" />
<text  x="1192.80" y="239.5" ></text>
</g>
<g >
<title>ipf_check (144,021 samples, 54.12%)</title><rect x="280.6" y="85" width="638.6" height="15.0" fill="rgb(240,0,6)" rx="2" ry="2" />
<text  x="283.61" y="95.5" >ipf_check</text>
</g>
<g >
<title>hardclock (204 samples, 0.08%)</title><rect x="1188.9" y="229" width="0.9" height="15.0" fill="rgb(248,222,44)" rx="2" ry="2" />
<text  x="1191.90" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (134 samples, 0.05%)</title><rect x="919.2" y="37" width="0.6" height="15.0" fill="rgb(233,72,1)" rx="2" ry="2" />
<text  x="922.17" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (39 samples, 0.01%)</title><rect x="19.8" y="229" width="0.2" height="15.0" fill="rgb(227,96,0)" rx="2" ry="2" />
<text  x="22.85" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (58,242 samples, 21.88%)</title><rect x="919.2" y="261" width="258.2" height="15.0" fill="rgb(231,151,50)" rx="2" ry="2" />
<text  x="922.17" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>arpresolve (587 samples, 0.22%)</title><rect x="37.6" y="69" width="2.6" height="15.0" fill="rgb(253,132,20)" rx="2" ry="2" />
<text  x="40.55" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch (28 samples, 0.01%)</title><rect x="31.1" y="133" width="0.2" height="15.0" fill="rgb(252,210,11)" rx="2" ry="2" />
<text  x="34.14" y="143.5" ></text>
</g>
<g >
<title>iflib_rxeof (55,086 samples, 20.70%)</title><rect x="21.6" y="213" width="244.2" height="15.0" fill="rgb(229,79,40)" rx="2" ry="2" />
<text  x="24.55" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>zone_import (47 samples, 0.02%)</title><rect x="257.8" y="149" width="0.2" height="15.0" fill="rgb(217,1,23)" rx="2" ry="2" />
<text  x="260.79" y="159.5" ></text>
</g>
<g >
<title>ipf_auth_check (200 samples, 0.08%)</title><rect x="178.7" y="37" width="0.9" height="15.0" fill="rgb(225,167,37)" rx="2" ry="2" />
<text  x="181.74" y="47.5" ></text>
</g>
<g >
<title>m_free (28 samples, 0.01%)</title><rect x="19.9" y="69" width="0.1" height="15.0" fill="rgb(227,42,37)" rx="2" ry="2" />
<text  x="22.90" y="79.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (37 samples, 0.01%)</title><rect x="1189.4" y="181" width="0.2" height="15.0" fill="rgb(253,115,2)" rx="2" ry="2" />
<text  x="1192.43" y="191.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (1,427 samples, 0.54%)</title><rect x="1181.9" y="245" width="6.3" height="15.0" fill="rgb(218,191,5)" rx="2" ry="2" />
<text  x="1184.92" y="255.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (25 samples, 0.01%)</title><rect x="279.9" y="213" width="0.1" height="15.0" fill="rgb(222,118,18)" rx="2" ry="2" />
<text  x="282.93" y="223.5" ></text>
</g>
<g >
<title>_rw_wowned (1,684 samples, 0.63%)</title><rect x="171.3" y="37" width="7.4" height="15.0" fill="rgb(239,142,4)" rx="2" ry="2" />
<text  x="174.27" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (1,817 samples, 0.68%)</title><rect x="11.5" y="277" width="8.1" height="15.0" fill="rgb(227,116,13)" rx="2" ry="2" />
<text  x="14.50" y="287.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1,108 samples, 0.42%)</title><rect x="1182.6" y="229" width="4.9" height="15.0" fill="rgb(214,168,53)" rx="2" ry="2" />
<text  x="1185.58" y="239.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (29 samples, 0.01%)</title><rect x="21.1" y="229" width="0.1" height="15.0" fill="rgb(226,58,17)" rx="2" ry="2" />
<text  x="24.12" y="239.5" ></text>
</g>
<g >
<title>m_freem (77 samples, 0.03%)</title><rect x="918.8" y="69" width="0.4" height="15.0" fill="rgb(219,12,46)" rx="2" ry="2" />
<text  x="921.82" y="79.5" ></text>
</g>
<g >
<title>memcmp (1,507 samples, 0.57%)</title><rect x="1116.0" y="37" width="6.7" height="15.0" fill="rgb(250,187,11)" rx="2" ry="2" />
<text  x="1118.97" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (43 samples, 0.02%)</title><rect x="1187.8" y="229" width="0.2" height="15.0" fill="rgb(247,75,33)" rx="2" ry="2" />
<text  x="1190.84" y="239.5" ></text>
</g>
<g >
<title>memset_erms (490 samples, 0.18%)</title><rect x="253.4" y="37" width="2.2" height="15.0" fill="rgb(229,8,19)" rx="2" ry="2" />
<text  x="256.44" y="47.5" ></text>
</g>
<g >
<title>ipf_state_lookup (100,842 samples, 37.89%)</title><rect x="471.7" y="53" width="447.1" height="15.0" fill="rgb(248,54,13)" rx="2" ry="2" />
<text  x="474.71" y="63.5" >ipf_state_lookup</text>
</g>
<g >
<title>ipf_state_check (3,726 samples, 1.40%)</title><rect x="236.8" y="37" width="16.6" height="15.0" fill="rgb(215,91,8)" rx="2" ry="2" />
<text  x="239.84" y="47.5" ></text>
</g>
<g >
<title>lapic_handle_intr (49 samples, 0.02%)</title><rect x="1188.3" y="277" width="0.2" height="15.0" fill="rgb(243,165,48)" rx="2" ry="2" />
<text  x="1191.33" y="287.5" ></text>
</g>
<g >
<title>intr_execute_handlers (2,463 samples, 0.93%)</title><rect x="1177.4" y="277" width="10.9" height="15.0" fill="rgb(229,166,48)" rx="2" ry="2" />
<text  x="1180.41" y="287.5" ></text>
</g>
<g >
<title>_rw_wowned (707 samples, 0.27%)</title><rect x="1137.0" y="37" width="3.1" height="15.0" fill="rgb(224,213,37)" rx="2" ry="2" />
<text  x="1139.97" y="47.5" ></text>
</g>
<g >
<title>ipf_checkv4sum (262 samples, 0.10%)</title><rect x="1105.9" y="37" width="1.1" height="15.0" fill="rgb(211,72,26)" rx="2" ry="2" />
<text  x="1108.87" y="47.5" ></text>
</g>
<g >
<title>timercb (290 samples, 0.11%)</title><rect x="1188.7" y="261" width="1.3" height="15.0" fill="rgb(249,90,1)" rx="2" ry="2" />
<text  x="1191.70" y="271.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (4,219 samples, 1.59%)</title><rect x="152.6" y="37" width="18.7" height="15.0" fill="rgb(208,115,5)" rx="2" ry="2" />
<text  x="155.56" y="47.5" ></text>
</g>
<g >
<title>__rw_rlock_int (4,952 samples, 1.86%)</title><rect x="130.6" y="37" width="22.0" height="15.0" fill="rgb(216,95,33)" rx="2" ry="2" />
<text  x="133.61" y="47.5" >_..</text>
</g>
<g >
<title>ipf_scanlist (3,296 samples, 1.24%)</title><rect x="212.6" y="37" width="14.6" height="15.0" fill="rgb(230,186,22)" rx="2" ry="2" />
<text  x="215.58" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (346 samples, 0.13%)</title><rect x="38.6" y="53" width="1.6" height="15.0" fill="rgb(220,30,52)" rx="2" ry="2" />
<text  x="41.62" y="63.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (25 samples, 0.01%)</title><rect x="1187.5" y="229" width="0.1" height="15.0" fill="rgb(242,78,44)" rx="2" ry="2" />
<text  x="1190.49" y="239.5" ></text>
</g>
<g >
<title>ipf_derefrule (6,085 samples, 2.29%)</title><rect x="179.6" y="37" width="27.0" height="15.0" fill="rgb(212,221,28)" rx="2" ry="2" />
<text  x="182.62" y="47.5" >i..</text>
</g>
<g >
<title>ipf_derefrule (33,633 samples, 12.64%)</title><rect x="280.6" y="69" width="149.1" height="15.0" fill="rgb(206,40,54)" rx="2" ry="2" />
<text  x="283.61" y="79.5" >ipf_derefrule</text>
</g>
<g >
<title>grouptaskqueue_enqueue (139 samples, 0.05%)</title><rect x="42.6" y="37" width="0.6" height="15.0" fill="rgb(218,118,2)" rx="2" ry="2" />
<text  x="45.61" y="47.5" ></text>
</g>
<g >
<title>lock_delay (9,467 samples, 3.56%)</title><rect x="429.7" y="37" width="42.0" height="15.0" fill="rgb(249,154,53)" rx="2" ry="2" />
<text  x="432.73" y="47.5" >loc..</text>
</g>
<g >
<title>ipf_scanlist (1,870 samples, 0.70%)</title><rect x="1107.7" y="53" width="8.3" height="15.0" fill="rgb(230,35,13)" rx="2" ry="2" />
<text  x="1110.66" y="63.5" ></text>
</g>
<g >
<title>ipf_state_add (1,794 samples, 0.67%)</title><rect x="1116.0" y="53" width="7.9" height="15.0" fill="rgb(243,210,10)" rx="2" ry="2" />
<text  x="1118.96" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (75 samples, 0.03%)</title><rect x="268.7" y="165" width="0.3" height="15.0" fill="rgb(221,205,42)" rx="2" ry="2" />
<text  x="271.69" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (58,242 samples, 21.88%)</title><rect x="919.2" y="229" width="258.2" height="15.0" fill="rgb(235,83,10)" rx="2" ry="2" />
<text  x="922.17" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>rxd_frag_to_sd (426 samples, 0.16%)</title><rect x="263.9" y="197" width="1.9" height="15.0" fill="rgb(221,72,31)" rx="2" ry="2" />
<text  x="266.87" y="207.5" ></text>
</g>
<g >
<title>ether_input (51,903 samples, 19.50%)</title><rect x="25.7" y="197" width="230.1" height="15.0" fill="rgb(212,195,53)" rx="2" ry="2" />
<text  x="28.66" y="207.5" >ether_input</text>
</g>
<g >
<title>_task_fn_tx (3,217 samples, 1.21%)</title><rect x="265.8" y="229" width="14.3" height="15.0" fill="rgb(230,172,46)" rx="2" ry="2" />
<text  x="268.82" y="239.5" ></text>
</g>
<g >
<title>ipf_check (46,319 samples, 17.40%)</title><rect x="50.2" y="53" width="205.4" height="15.0" fill="rgb(228,75,10)" rx="2" ry="2" />
<text  x="53.25" y="63.5" >ipf_check</text>
</g>
<g >
<title>iflib_fl_refill (782 samples, 0.29%)</title><rect x="256.0" y="197" width="3.5" height="15.0" fill="rgb(215,157,39)" rx="2" ry="2" />
<text  x="259.04" y="207.5" ></text>
</g>
<g >
<title>m_free (77 samples, 0.03%)</title><rect x="918.8" y="53" width="0.4" height="15.0" fill="rgb(209,6,22)" rx="2" ry="2" />
<text  x="921.82" y="63.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (1,181 samples, 0.44%)</title><rect x="272.7" y="165" width="5.2" height="15.0" fill="rgb(249,175,52)" rx="2" ry="2" />
<text  x="275.69" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (24 samples, 0.01%)</title><rect x="1186.6" y="213" width="0.1" height="15.0" fill="rgb(243,199,19)" rx="2" ry="2" />
<text  x="1189.55" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (58,242 samples, 21.88%)</title><rect x="919.2" y="245" width="258.2" height="15.0" fill="rgb(226,84,24)" rx="2" ry="2" />
<text  x="922.17" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_demux (39 samples, 0.01%)</title><rect x="19.8" y="197" width="0.2" height="15.0" fill="rgb(248,58,19)" rx="2" ry="2" />
<text  x="22.85" y="207.5" ></text>
</g>
<g >
<title>m_freem (274 samples, 0.10%)</title><rect x="269.0" y="165" width="1.2" height="15.0" fill="rgb(245,131,14)" rx="2" ry="2" />
<text  x="272.02" y="175.5" ></text>
</g>
<g >
<title>intr_event_handle (2,129 samples, 0.80%)</title><rect x="1178.8" y="261" width="9.5" height="15.0" fill="rgb(249,50,6)" rx="2" ry="2" />
<text  x="1181.85" y="271.5" ></text>
</g>
<g >
<title>pmap_kextract (31 samples, 0.01%)</title><rect x="270.1" y="117" width="0.1" height="15.0" fill="rgb(247,144,20)" rx="2" ry="2" />
<text  x="273.10" y="127.5" ></text>
</g>
<g >
<title>ether_nh_input (58,242 samples, 21.88%)</title><rect x="919.2" y="181" width="258.2" height="15.0" fill="rgb(232,135,11)" rx="2" ry="2" />
<text  x="922.17" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>in_localip (206 samples, 0.08%)</title><rect x="45.5" y="85" width="0.9" height="15.0" fill="rgb(206,8,32)" rx="2" ry="2" />
<text  x="48.53" y="95.5" ></text>
</g>
<g >
<title>_task_fn_rx (55,161 samples, 20.73%)</title><rect x="21.2" y="229" width="244.6" height="15.0" fill="rgb(236,124,19)" rx="2" ry="2" />
<text  x="24.25" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>gtaskqueue_thread_loop (58,242 samples, 21.88%)</title><rect x="919.2" y="277" width="258.2" height="15.0" fill="rgb(230,166,52)" rx="2" ry="2" />
<text  x="922.17" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ether_nh_input (144,022 samples, 54.12%)</title><rect x="280.6" y="197" width="638.6" height="15.0" fill="rgb(217,73,9)" rx="2" ry="2" />
<text  x="283.60" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>ipf_check_wrapper (144,021 samples, 54.12%)</title><rect x="280.6" y="101" width="638.6" height="15.0" fill="rgb(214,117,9)" rx="2" ry="2" />
<text  x="283.61" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>__mtx_lock_sleep (1,847 samples, 0.69%)</title><rect x="1107.7" y="37" width="8.2" height="15.0" fill="rgb(250,16,0)" rx="2" ry="2" />
<text  x="1110.66" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (38 samples, 0.01%)</title><rect x="19.9" y="133" width="0.1" height="15.0" fill="rgb(210,83,13)" rx="2" ry="2" />
<text  x="22.85" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (69 samples, 0.03%)</title><rect x="258.0" y="181" width="0.3" height="15.0" fill="rgb(248,1,2)" rx="2" ry="2" />
<text  x="261.04" y="191.5" ></text>
</g>
<g >
<title>ip_findroute (423 samples, 0.16%)</title><rect x="46.4" y="85" width="1.9" height="15.0" fill="rgb(224,81,45)" rx="2" ry="2" />
<text  x="49.45" y="95.5" ></text>
</g>
<g >
<title>ipf_nat_checkin (113 samples, 0.04%)</title><rect x="211.8" y="37" width="0.5" height="15.0" fill="rgb(254,198,49)" rx="2" ry="2" />
<text  x="214.76" y="47.5" ></text>
</g>
<g >
<title>ether_demux (144,022 samples, 54.12%)</title><rect x="280.6" y="181" width="638.6" height="15.0" fill="rgb(235,90,39)" rx="2" ry="2" />
<text  x="283.60" y="191.5" >ether_demux</text>
</g>
<g >
<title>bsearch4_lookup (219 samples, 0.08%)</title><rect x="47.4" y="53" width="0.9" height="15.0" fill="rgb(228,184,5)" rx="2" ry="2" />
<text  x="50.35" y="63.5" ></text>
</g>
<g >
<title>pfil_run_hooks (46,754 samples, 17.57%)</title><rect x="48.3" y="85" width="207.3" height="15.0" fill="rgb(222,57,54)" rx="2" ry="2" />
<text  x="51.32" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>sleepq_lock (33 samples, 0.01%)</title><rect x="280.3" y="213" width="0.2" height="15.0" fill="rgb(222,141,49)" rx="2" ry="2" />
<text  x="283.35" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (39 samples, 0.01%)</title><rect x="19.8" y="277" width="0.2" height="15.0" fill="rgb(213,227,40)" rx="2" ry="2" />
<text  x="22.85" y="287.5" ></text>
</g>
</g>
</svg>
