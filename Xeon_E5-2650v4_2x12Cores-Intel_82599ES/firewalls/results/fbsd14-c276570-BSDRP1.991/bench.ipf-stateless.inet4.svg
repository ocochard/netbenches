<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>doreti (24 samples, 0.01%)</title><rect x="19.0" y="277" width="0.1" height="15.0" fill="rgb(228,108,53)" rx="2" ry="2" />
<text  x="21.96" y="287.5" ></text>
</g>
<g >
<title>ipf_derefrule (8,516 samples, 3.31%)</title><rect x="1098.9" y="53" width="39.1" height="15.0" fill="rgb(233,181,6)" rx="2" ry="2" />
<text  x="1101.93" y="63.5" >ipf..</text>
</g>
<g >
<title>__mtx_lock_sleep (24 samples, 0.01%)</title><rect x="351.5" y="117" width="0.2" height="15.0" fill="rgb(222,87,15)" rx="2" ry="2" />
<text  x="354.55" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (428 samples, 0.17%)</title><rect x="389.2" y="165" width="2.0" height="15.0" fill="rgb(225,10,41)" rx="2" ry="2" />
<text  x="392.20" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (74 samples, 0.03%)</title><rect x="351.8" y="181" width="0.3" height="15.0" fill="rgb(246,24,28)" rx="2" ry="2" />
<text  x="354.79" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (107,677 samples, 41.87%)</title><rect x="394.6" y="277" width="494.1" height="15.0" fill="rgb(230,65,8)" rx="2" ry="2" />
<text  x="397.62" y="287.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>mb_ctor_mbuf (77 samples, 0.03%)</title><rect x="353.4" y="165" width="0.4" height="15.0" fill="rgb(245,125,35)" rx="2" ry="2" />
<text  x="356.43" y="175.5" ></text>
</g>
<g >
<title>memcpy_erms (163 samples, 0.06%)</title><rect x="358.6" y="197" width="0.7" height="15.0" fill="rgb(207,1,0)" rx="2" ry="2" />
<text  x="361.55" y="207.5" ></text>
</g>
<g >
<title>ipf_scanlist (14,531 samples, 5.65%)</title><rect x="277.5" y="37" width="66.6" height="15.0" fill="rgb(208,88,22)" rx="2" ry="2" />
<text  x="280.45" y="47.5" >ipf_sca..</text>
</g>
<g >
<title>sleepq_lock (57 samples, 0.02%)</title><rect x="1187.1" y="197" width="0.3" height="15.0" fill="rgb(218,108,34)" rx="2" ry="2" />
<text  x="1190.14" y="207.5" ></text>
</g>
<g >
<title>cache_alloc_retry (48 samples, 0.02%)</title><rect x="351.5" y="181" width="0.3" height="15.0" fill="rgb(205,118,23)" rx="2" ry="2" />
<text  x="354.53" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (107,677 samples, 41.87%)</title><rect x="394.6" y="245" width="494.1" height="15.0" fill="rgb(208,172,25)" rx="2" ry="2" />
<text  x="397.62" y="255.5" >iflib_rxeof</text>
</g>
<g >
<title>spinlock_enter (299 samples, 0.12%)</title><rect x="888.7" y="37" width="1.4" height="15.0" fill="rgb(242,101,27)" rx="2" ry="2" />
<text  x="891.73" y="47.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (29 samples, 0.01%)</title><rect x="20.2" y="229" width="0.2" height="15.0" fill="rgb(233,38,23)" rx="2" ry="2" />
<text  x="23.23" y="239.5" ></text>
</g>
<g >
<title>bsearch4_lookup (258 samples, 0.10%)</title><rect x="60.4" y="53" width="1.2" height="15.0" fill="rgb(209,98,1)" rx="2" ry="2" />
<text  x="63.41" y="63.5" ></text>
</g>
<g >
<title>drain_ring_lockless (6,824 samples, 2.65%)</title><rect x="362.3" y="213" width="31.3" height="15.0" fill="rgb(205,195,8)" rx="2" ry="2" />
<text  x="365.29" y="223.5" >dr..</text>
</g>
<g >
<title>spinlock_exit (28 samples, 0.01%)</title><rect x="1187.4" y="181" width="0.2" height="15.0" fill="rgb(210,37,27)" rx="2" ry="2" />
<text  x="1190.43" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (70,359 samples, 27.36%)</title><rect x="26.0" y="181" width="322.9" height="15.0" fill="rgb(243,83,28)" rx="2" ry="2" />
<text  x="29.04" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>Xapic_isr1_pti (1,546 samples, 0.60%)</title><rect x="11.5" y="277" width="7.1" height="15.0" fill="rgb(209,229,41)" rx="2" ry="2" />
<text  x="14.50" y="287.5" ></text>
</g>
<g >
<title>m_pkthdr_init (84 samples, 0.03%)</title><rect x="358.2" y="197" width="0.4" height="15.0" fill="rgb(252,28,2)" rx="2" ry="2" />
<text  x="361.17" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (68,619 samples, 26.68%)</title><rect x="33.7" y="101" width="314.9" height="15.0" fill="rgb(228,179,18)" rx="2" ry="2" />
<text  x="36.74" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (39 samples, 0.02%)</title><rect x="1187.6" y="229" width="0.1" height="15.0" fill="rgb(222,192,32)" rx="2" ry="2" />
<text  x="1190.56" y="239.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (1,642 samples, 0.64%)</title><rect x="1180.9" y="245" width="7.5" height="15.0" fill="rgb(218,78,20)" rx="2" ry="2" />
<text  x="1183.91" y="255.5" ></text>
</g>
<g >
<title>ip_tryforward (62,527 samples, 24.32%)</title><rect x="888.7" y="117" width="286.9" height="15.0" fill="rgb(249,125,52)" rx="2" ry="2" />
<text  x="891.73" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>gtaskqueue_run_locked (81,833 samples, 31.82%)</title><rect x="19.1" y="245" width="375.5" height="15.0" fill="rgb(218,224,54)" rx="2" ry="2" />
<text  x="22.08" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (883 samples, 0.34%)</title><rect x="354.1" y="197" width="4.1" height="15.0" fill="rgb(243,215,30)" rx="2" ry="2" />
<text  x="357.11" y="207.5" ></text>
</g>
<g >
<title>ether_demux (62,527 samples, 24.32%)</title><rect x="888.7" y="165" width="286.9" height="15.0" fill="rgb(234,21,25)" rx="2" ry="2" />
<text  x="891.73" y="175.5" >ether_demux</text>
</g>
<g >
<title>mb_dtor_mbuf (32 samples, 0.01%)</title><rect x="370.3" y="117" width="0.2" height="15.0" fill="rgb(227,57,26)" rx="2" ry="2" />
<text  x="373.34" y="127.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (7,708 samples, 3.00%)</title><rect x="1140.3" y="37" width="35.3" height="15.0" fill="rgb(209,223,51)" rx="2" ry="2" />
<text  x="1143.27" y="47.5" >__..</text>
</g>
<g >
<title>__mtx_lock_sleep (45,138 samples, 17.55%)</title><rect x="891.8" y="53" width="207.1" height="15.0" fill="rgb(245,41,11)" rx="2" ry="2" />
<text  x="894.80" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>ether_output_frame (670 samples, 0.26%)</title><rect x="888.7" y="85" width="3.1" height="15.0" fill="rgb(212,147,45)" rx="2" ry="2" />
<text  x="891.73" y="95.5" ></text>
</g>
<g >
<title>__rw_rlock_int (7,544 samples, 2.93%)</title><rect x="161.1" y="37" width="34.6" height="15.0" fill="rgb(224,32,4)" rx="2" ry="2" />
<text  x="164.11" y="47.5" >__..</text>
</g>
<g >
<title>ether_input (107,677 samples, 41.87%)</title><rect x="394.6" y="229" width="494.1" height="15.0" fill="rgb(239,27,0)" rx="2" ry="2" />
<text  x="397.62" y="239.5" >ether_input</text>
</g>
<g >
<title>wakeup (98 samples, 0.04%)</title><rect x="394.1" y="229" width="0.5" height="15.0" fill="rgb(214,103,5)" rx="2" ry="2" />
<text  x="397.14" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (35 samples, 0.01%)</title><rect x="20.1" y="229" width="0.1" height="15.0" fill="rgb(245,186,35)" rx="2" ry="2" />
<text  x="23.07" y="239.5" ></text>
</g>
<g >
<title>ip_input (68,999 samples, 26.83%)</title><rect x="32.0" y="117" width="316.6" height="15.0" fill="rgb(214,171,34)" rx="2" ry="2" />
<text  x="35.00" y="127.5" >ip_input</text>
</g>
<g >
<title>ether_input (62,527 samples, 24.32%)</title><rect x="888.7" y="213" width="286.9" height="15.0" fill="rgb(235,112,21)" rx="2" ry="2" />
<text  x="891.73" y="223.5" >ether_input</text>
</g>
<g >
<title>m_free (560 samples, 0.22%)</title><rect x="368.1" y="149" width="2.6" height="15.0" fill="rgb(248,173,25)" rx="2" ry="2" />
<text  x="371.14" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (62,527 samples, 24.32%)</title><rect x="888.7" y="277" width="286.9" height="15.0" fill="rgb(250,143,22)" rx="2" ry="2" />
<text  x="891.73" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>cache_alloc (48 samples, 0.02%)</title><rect x="351.5" y="165" width="0.3" height="15.0" fill="rgb(206,38,26)" rx="2" ry="2" />
<text  x="354.53" y="175.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (353 samples, 0.14%)</title><rect x="352.2" y="181" width="1.6" height="15.0" fill="rgb(213,157,9)" rx="2" ry="2" />
<text  x="355.16" y="191.5" ></text>
</g>
<g >
<title>m_adj (133 samples, 0.05%)</title><rect x="30.2" y="133" width="0.6" height="15.0" fill="rgb(218,103,30)" rx="2" ry="2" />
<text  x="33.18" y="143.5" ></text>
</g>
<g >
<title>in_lltable_lookup (115 samples, 0.04%)</title><rect x="43.0" y="53" width="0.5" height="15.0" fill="rgb(215,180,31)" rx="2" ry="2" />
<text  x="45.99" y="63.5" ></text>
</g>
<g >
<title>fib4_lookup (389 samples, 0.15%)</title><rect x="59.8" y="69" width="1.8" height="15.0" fill="rgb(249,94,11)" rx="2" ry="2" />
<text  x="62.81" y="79.5" ></text>
</g>
<g >
<title>ip_input (62,527 samples, 24.32%)</title><rect x="888.7" y="133" width="286.9" height="15.0" fill="rgb(235,14,40)" rx="2" ry="2" />
<text  x="891.73" y="143.5" >ip_input</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (60 samples, 0.02%)</title><rect x="393.0" y="165" width="0.3" height="15.0" fill="rgb(225,68,29)" rx="2" ry="2" />
<text  x="396.01" y="175.5" ></text>
</g>
<g >
<title>m_freem (633 samples, 0.25%)</title><rect x="367.8" y="165" width="2.9" height="15.0" fill="rgb(237,95,40)" rx="2" ry="2" />
<text  x="370.81" y="175.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (532 samples, 0.21%)</title><rect x="391.2" y="181" width="2.4" height="15.0" fill="rgb(244,222,29)" rx="2" ry="2" />
<text  x="394.16" y="191.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (61,857 samples, 24.05%)</title><rect x="891.8" y="85" width="283.8" height="15.0" fill="rgb(225,151,42)" rx="2" ry="2" />
<text  x="894.80" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>_rw_runlock_cookie_int (5,361 samples, 2.08%)</title><rect x="195.7" y="37" width="24.6" height="15.0" fill="rgb(218,113,23)" rx="2" ry="2" />
<text  x="198.72" y="47.5" >_..</text>
</g>
<g >
<title>ipf_check (61,857 samples, 24.05%)</title><rect x="891.8" y="69" width="283.8" height="15.0" fill="rgb(234,146,1)" rx="2" ry="2" />
<text  x="894.80" y="79.5" >ipf_check</text>
</g>
<g >
<title>pmap_kextract (48 samples, 0.02%)</title><rect x="389.0" y="133" width="0.2" height="15.0" fill="rgb(236,150,4)" rx="2" ry="2" />
<text  x="391.98" y="143.5" ></text>
</g>
<g >
<title>pmc_process_samples (106 samples, 0.04%)</title><rect x="1189.3" y="197" width="0.5" height="15.0" fill="rgb(224,83,18)" rx="2" ry="2" />
<text  x="1192.27" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (107,677 samples, 41.87%)</title><rect x="394.6" y="213" width="494.1" height="15.0" fill="rgb(244,126,11)" rx="2" ry="2" />
<text  x="397.62" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipf_nat_checkout (179 samples, 0.07%)</title><rect x="276.6" y="37" width="0.9" height="15.0" fill="rgb(208,55,3)" rx="2" ry="2" />
<text  x="279.63" y="47.5" ></text>
</g>
<g >
<title>lock_delay (23 samples, 0.01%)</title><rect x="351.6" y="101" width="0.1" height="15.0" fill="rgb(214,141,35)" rx="2" ry="2" />
<text  x="354.55" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (62,527 samples, 24.32%)</title><rect x="888.7" y="149" width="286.9" height="15.0" fill="rgb(226,22,52)" rx="2" ry="2" />
<text  x="891.73" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>spinlock_enter (22 samples, 0.01%)</title><rect x="1187.3" y="181" width="0.1" height="15.0" fill="rgb(238,219,15)" rx="2" ry="2" />
<text  x="1190.30" y="191.5" ></text>
</g>
<g >
<title>ip_tryforward (107,677 samples, 41.87%)</title><rect x="394.6" y="133" width="494.1" height="15.0" fill="rgb(218,21,37)" rx="2" ry="2" />
<text  x="397.62" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>netisr_dispatch (26 samples, 0.01%)</title><rect x="30.8" y="133" width="0.1" height="15.0" fill="rgb(216,57,19)" rx="2" ry="2" />
<text  x="33.79" y="143.5" ></text>
</g>
<g >
<title>pfil_run_hooks (62,550 samples, 24.32%)</title><rect x="61.6" y="85" width="287.0" height="15.0" fill="rgb(252,62,23)" rx="2" ry="2" />
<text  x="64.59" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>ipf_makefrip (1,573 samples, 0.61%)</title><rect x="268.6" y="37" width="7.3" height="15.0" fill="rgb(231,12,4)" rx="2" ry="2" />
<text  x="271.65" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (82 samples, 0.03%)</title><rect x="1186.7" y="213" width="0.3" height="15.0" fill="rgb(222,176,51)" rx="2" ry="2" />
<text  x="1189.66" y="223.5" ></text>
</g>
<g >
<title>ether_input (70,399 samples, 27.38%)</title><rect x="25.9" y="197" width="323.0" height="15.0" fill="rgb(207,99,47)" rx="2" ry="2" />
<text  x="28.86" y="207.5" >ether_input</text>
</g>
<g >
<title>iflib_rxeof (74,421 samples, 28.94%)</title><rect x="20.7" y="213" width="341.5" height="15.0" fill="rgb(213,182,54)" rx="2" ry="2" />
<text  x="23.74" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (466 samples, 0.18%)</title><rect x="387.1" y="149" width="2.1" height="15.0" fill="rgb(239,130,50)" rx="2" ry="2" />
<text  x="390.06" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (69,963 samples, 27.21%)</title><rect x="27.9" y="165" width="321.0" height="15.0" fill="rgb(237,92,40)" rx="2" ry="2" />
<text  x="30.86" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>rxd_frag_to_sd (620 samples, 0.24%)</title><rect x="359.4" y="197" width="2.8" height="15.0" fill="rgb(236,225,1)" rx="2" ry="2" />
<text  x="362.35" y="207.5" ></text>
</g>
<g >
<title>all (257,151 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(231,139,36)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (107,677 samples, 41.87%)</title><rect x="394.6" y="165" width="494.1" height="15.0" fill="rgb(205,64,13)" rx="2" ry="2" />
<text  x="397.62" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>Xapic_isr1 (326 samples, 0.13%)</title><rect x="10.0" y="277" width="1.5" height="15.0" fill="rgb(233,47,32)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (62,527 samples, 24.32%)</title><rect x="888.7" y="261" width="286.9" height="15.0" fill="rgb(221,152,54)" rx="2" ry="2" />
<text  x="891.73" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (73 samples, 0.03%)</title><rect x="353.8" y="197" width="0.3" height="15.0" fill="rgb(245,212,15)" rx="2" ry="2" />
<text  x="356.78" y="207.5" ></text>
</g>
<g >
<title>pfil_run_hooks (61,857 samples, 24.05%)</title><rect x="891.8" y="101" width="283.8" height="15.0" fill="rgb(239,98,22)" rx="2" ry="2" />
<text  x="894.80" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>ipf_nat_checkin (166 samples, 0.06%)</title><rect x="275.9" y="37" width="0.7" height="15.0" fill="rgb(206,138,22)" rx="2" ry="2" />
<text  x="278.87" y="47.5" ></text>
</g>
<g >
<title>ipf_derefrule (56,621 samples, 22.02%)</title><rect x="394.6" y="69" width="259.9" height="15.0" fill="rgb(213,209,3)" rx="2" ry="2" />
<text  x="397.64" y="79.5" >ipf_derefrule</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (2,832 samples, 1.10%)</title><rect x="376.2" y="165" width="13.0" height="15.0" fill="rgb(243,42,50)" rx="2" ry="2" />
<text  x="379.20" y="175.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (36 samples, 0.01%)</title><rect x="393.7" y="213" width="0.1" height="15.0" fill="rgb(222,109,20)" rx="2" ry="2" />
<text  x="396.67" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (51 samples, 0.02%)</title><rect x="394.3" y="213" width="0.2" height="15.0" fill="rgb(231,183,42)" rx="2" ry="2" />
<text  x="397.27" y="223.5" ></text>
</g>
<g >
<title>ipf_checkv4sum (314 samples, 0.12%)</title><rect x="1138.0" y="37" width="1.4" height="15.0" fill="rgb(250,117,32)" rx="2" ry="2" />
<text  x="1141.00" y="47.5" ></text>
</g>
<g >
<title>memset_erms (748 samples, 0.29%)</title><rect x="345.2" y="37" width="3.4" height="15.0" fill="rgb(222,75,31)" rx="2" ry="2" />
<text  x="348.18" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (62,527 samples, 24.32%)</title><rect x="888.7" y="181" width="286.9" height="15.0" fill="rgb(248,30,15)" rx="2" ry="2" />
<text  x="891.73" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>wakeup_any (103 samples, 0.04%)</title><rect x="1187.1" y="213" width="0.5" height="15.0" fill="rgb(212,90,17)" rx="2" ry="2" />
<text  x="1190.09" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (36 samples, 0.01%)</title><rect x="348.9" y="197" width="0.2" height="15.0" fill="rgb(242,174,35)" rx="2" ry="2" />
<text  x="351.91" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (107,677 samples, 41.87%)</title><rect x="394.6" y="261" width="494.1" height="15.0" fill="rgb(235,180,46)" rx="2" ry="2" />
<text  x="397.62" y="271.5" >_task_fn_rx</text>
</g>
<g >
<title>in_localip (221 samples, 0.09%)</title><rect x="58.4" y="85" width="1.0" height="15.0" fill="rgb(240,99,2)" rx="2" ry="2" />
<text  x="61.43" y="95.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (66 samples, 0.03%)</title><rect x="1187.7" y="229" width="0.3" height="15.0" fill="rgb(253,62,13)" rx="2" ry="2" />
<text  x="1190.74" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (8,516 samples, 3.31%)</title><rect x="1098.9" y="37" width="39.1" height="15.0" fill="rgb(242,13,51)" rx="2" ry="2" />
<text  x="1101.93" y="47.5" >__m..</text>
</g>
<g >
<title>_rw_wowned (2,138 samples, 0.83%)</title><rect x="220.3" y="37" width="9.8" height="15.0" fill="rgb(236,150,50)" rx="2" ry="2" />
<text  x="223.33" y="47.5" ></text>
</g>
<g >
<title>if_getsoftc (25 samples, 0.01%)</title><rect x="53.2" y="37" width="0.1" height="15.0" fill="rgb(247,211,53)" rx="2" ry="2" />
<text  x="56.24" y="47.5" ></text>
</g>
<g >
<title>zone_import (48 samples, 0.02%)</title><rect x="351.5" y="149" width="0.3" height="15.0" fill="rgb(215,50,17)" rx="2" ry="2" />
<text  x="354.53" y="159.5" ></text>
</g>
<g >
<title>pmap_kextract (50 samples, 0.02%)</title><rect x="370.5" y="117" width="0.2" height="15.0" fill="rgb(241,143,2)" rx="2" ry="2" />
<text  x="373.48" y="127.5" ></text>
</g>
<g >
<title>sleepq_signal (35 samples, 0.01%)</title><rect x="1187.4" y="197" width="0.2" height="15.0" fill="rgb(225,13,11)" rx="2" ry="2" />
<text  x="1190.40" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (68 samples, 0.03%)</title><rect x="393.3" y="165" width="0.3" height="15.0" fill="rgb(235,136,24)" rx="2" ry="2" />
<text  x="396.29" y="175.5" ></text>
</g>
<g >
<title>Xtimerint_pti (64 samples, 0.02%)</title><rect x="18.6" y="277" width="0.3" height="15.0" fill="rgb(220,165,40)" rx="2" ry="2" />
<text  x="21.63" y="287.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (62,194 samples, 24.19%)</title><rect x="63.2" y="69" width="285.4" height="15.0" fill="rgb(224,1,15)" rx="2" ry="2" />
<text  x="66.22" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_state_check (230 samples, 0.09%)</title><rect x="344.1" y="37" width="1.1" height="15.0" fill="rgb(206,23,28)" rx="2" ry="2" />
<text  x="347.13" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (670 samples, 0.26%)</title><rect x="888.7" y="53" width="3.1" height="15.0" fill="rgb(239,223,21)" rx="2" ry="2" />
<text  x="891.73" y="63.5" ></text>
</g>
<g >
<title>arpresolve (1,298 samples, 0.50%)</title><rect x="41.6" y="69" width="6.0" height="15.0" fill="rgb(216,101,0)" rx="2" ry="2" />
<text  x="44.63" y="79.5" ></text>
</g>
<g >
<title>ipf_derefrule (8,098 samples, 3.15%)</title><rect x="231.5" y="37" width="37.1" height="15.0" fill="rgb(219,187,39)" rx="2" ry="2" />
<text  x="234.49" y="47.5" >ipf..</text>
</g>
<g >
<title>ipf_pr_pullup (180 samples, 0.07%)</title><rect x="1139.4" y="37" width="0.9" height="15.0" fill="rgb(251,134,28)" rx="2" ry="2" />
<text  x="1142.45" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (379 samples, 0.15%)</title><rect x="51.5" y="37" width="1.7" height="15.0" fill="rgb(207,225,2)" rx="2" ry="2" />
<text  x="54.50" y="47.5" ></text>
</g>
<g >
<title>intr_event_handle (2,463 samples, 0.96%)</title><rect x="1177.2" y="261" width="11.3" height="15.0" fill="rgb(249,71,15)" rx="2" ry="2" />
<text  x="1180.20" y="271.5" ></text>
</g>
<g >
<title>handleevents (212 samples, 0.08%)</title><rect x="1189.0" y="245" width="1.0" height="15.0" fill="rgb(226,6,51)" rx="2" ry="2" />
<text  x="1192.02" y="255.5" ></text>
</g>
<g >
<title>_task_fn_tx (6,898 samples, 2.68%)</title><rect x="362.3" y="229" width="31.6" height="15.0" fill="rgb(249,134,19)" rx="2" ry="2" />
<text  x="365.25" y="239.5" >_t..</text>
</g>
<g >
<title>uma_zfree_arg (428 samples, 0.17%)</title><rect x="368.7" y="133" width="2.0" height="15.0" fill="rgb(221,66,53)" rx="2" ry="2" />
<text  x="371.75" y="143.5" ></text>
</g>
<g >
<title>lock_delay (51,052 samples, 19.85%)</title><rect x="654.5" y="37" width="234.2" height="15.0" fill="rgb(221,29,44)" rx="2" ry="2" />
<text  x="657.46" y="47.5" >lock_delay</text>
</g>
<g >
<title>ether_nh_input (107,677 samples, 41.87%)</title><rect x="394.6" y="197" width="494.1" height="15.0" fill="rgb(239,223,11)" rx="2" ry="2" />
<text  x="397.62" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>__mtx_lock_sleep (7,068 samples, 2.75%)</title><rect x="128.7" y="37" width="32.4" height="15.0" fill="rgb(240,19,17)" rx="2" ry="2" />
<text  x="131.67" y="47.5" >__..</text>
</g>
<g >
<title>memcpy_erms (123 samples, 0.05%)</title><rect x="57.9" y="69" width="0.5" height="15.0" fill="rgb(231,166,33)" rx="2" ry="2" />
<text  x="60.87" y="79.5" ></text>
</g>
<g >
<title>ipf_makefrip (494 samples, 0.19%)</title><rect x="1138.0" y="53" width="2.3" height="15.0" fill="rgb(250,224,24)" rx="2" ry="2" />
<text  x="1141.00" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (670 samples, 0.26%)</title><rect x="888.7" y="69" width="3.1" height="15.0" fill="rgb(225,167,25)" rx="2" ry="2" />
<text  x="891.73" y="79.5" ></text>
</g>
<g >
<title>ipf_scanlist (7,709 samples, 3.00%)</title><rect x="1140.3" y="53" width="35.3" height="15.0" fill="rgb(248,22,8)" rx="2" ry="2" />
<text  x="1143.27" y="63.5" >ip..</text>
</g>
<g >
<title>ipf_check (107,673 samples, 41.87%)</title><rect x="394.6" y="85" width="494.1" height="15.0" fill="rgb(210,6,6)" rx="2" ry="2" />
<text  x="397.64" y="95.5" >ipf_check</text>
</g>
<g >
<title>timercb (231 samples, 0.09%)</title><rect x="1188.9" y="261" width="1.1" height="15.0" fill="rgb(233,74,19)" rx="2" ry="2" />
<text  x="1191.94" y="271.5" ></text>
</g>
<g >
<title>lapic_handle_intr (51 samples, 0.02%)</title><rect x="1188.5" y="277" width="0.3" height="15.0" fill="rgb(245,199,29)" rx="2" ry="2" />
<text  x="1191.55" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (74,505 samples, 28.97%)</title><rect x="20.4" y="229" width="341.9" height="15.0" fill="rgb(252,130,48)" rx="2" ry="2" />
<text  x="23.37" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>memcmp (62 samples, 0.02%)</title><rect x="348.6" y="149" width="0.3" height="15.0" fill="rgb(212,83,44)" rx="2" ry="2" />
<text  x="351.62" y="159.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (55 samples, 0.02%)</title><rect x="1188.2" y="229" width="0.2" height="15.0" fill="rgb(222,12,9)" rx="2" ry="2" />
<text  x="1191.20" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (69,236 samples, 26.92%)</title><rect x="30.9" y="133" width="317.7" height="15.0" fill="rgb(244,178,43)" rx="2" ry="2" />
<text  x="33.91" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_rxeof (62,527 samples, 24.32%)</title><rect x="888.7" y="229" width="286.9" height="15.0" fill="rgb(222,110,41)" rx="2" ry="2" />
<text  x="891.73" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>if_inc_counter (36 samples, 0.01%)</title><rect x="349.1" y="197" width="0.1" height="15.0" fill="rgb(252,153,54)" rx="2" ry="2" />
<text  x="352.07" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,786 samples, 0.69%)</title><rect x="49.7" y="53" width="8.2" height="15.0" fill="rgb(247,45,52)" rx="2" ry="2" />
<text  x="52.67" y="63.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (1,068 samples, 0.42%)</title><rect x="365.8" y="181" width="4.9" height="15.0" fill="rgb(244,87,31)" rx="2" ry="2" />
<text  x="368.81" y="191.5" ></text>
</g>
<g >
<title>keg_alloc_slab (37 samples, 0.01%)</title><rect x="351.5" y="133" width="0.2" height="15.0" fill="rgb(236,64,28)" rx="2" ry="2" />
<text  x="354.54" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (81,835 samples, 31.82%)</title><rect x="19.1" y="261" width="375.5" height="15.0" fill="rgb(229,97,49)" rx="2" ry="2" />
<text  x="22.07" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>spinlock_enter (36 samples, 0.01%)</title><rect x="1186.5" y="213" width="0.2" height="15.0" fill="rgb(241,177,48)" rx="2" ry="2" />
<text  x="1189.50" y="223.5" ></text>
</g>
<g >
<title>iflib_fl_refill (990 samples, 0.38%)</title><rect x="349.2" y="197" width="4.6" height="15.0" fill="rgb(239,114,4)" rx="2" ry="2" />
<text  x="352.24" y="207.5" ></text>
</g>
<g >
<title>ip_input (107,677 samples, 41.87%)</title><rect x="394.6" y="149" width="494.1" height="15.0" fill="rgb(205,75,17)" rx="2" ry="2" />
<text  x="397.62" y="159.5" >ip_input</text>
</g>
<g >
<title>hardclock (156 samples, 0.06%)</title><rect x="1189.1" y="229" width="0.7" height="15.0" fill="rgb(238,32,14)" rx="2" ry="2" />
<text  x="1192.10" y="239.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (23 samples, 0.01%)</title><rect x="1189.5" y="181" width="0.1" height="15.0" fill="rgb(231,166,41)" rx="2" ry="2" />
<text  x="1192.50" y="191.5" ></text>
</g>
<g >
<title>ether_demux (69,640 samples, 27.08%)</title><rect x="29.1" y="149" width="319.5" height="15.0" fill="rgb(254,5,37)" rx="2" ry="2" />
<text  x="32.06" y="159.5" >ether_demux</text>
</g>
<g >
<title>_task_fn_rx (62,527 samples, 24.32%)</title><rect x="888.7" y="245" width="286.9" height="15.0" fill="rgb(243,137,35)" rx="2" ry="2" />
<text  x="891.73" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>soft_get_config (22 samples, 0.01%)</title><rect x="1189.6" y="181" width="0.1" height="15.0" fill="rgb(222,107,5)" rx="2" ry="2" />
<text  x="1192.61" y="191.5" ></text>
</g>
<g >
<title>lock_delay (56,621 samples, 22.02%)</title><rect x="394.6" y="37" width="259.9" height="15.0" fill="rgb(217,218,48)" rx="2" ry="2" />
<text  x="397.64" y="47.5" >lock_delay</text>
</g>
<g >
<title>ether_output_frame (2,242 samples, 0.87%)</title><rect x="47.6" y="69" width="10.3" height="15.0" fill="rgb(231,162,39)" rx="2" ry="2" />
<text  x="50.58" y="79.5" ></text>
</g>
<g >
<title>ether_demux (107,677 samples, 41.87%)</title><rect x="394.6" y="181" width="494.1" height="15.0" fill="rgb(223,111,24)" rx="2" ry="2" />
<text  x="397.62" y="191.5" >ether_demux</text>
</g>
<g >
<title>iflib_txq_drain (6,534 samples, 2.54%)</title><rect x="363.6" y="197" width="30.0" height="15.0" fill="rgb(242,121,52)" rx="2" ry="2" />
<text  x="366.62" y="207.5" >if..</text>
</g>
<g >
<title>lock_delay (45,138 samples, 17.55%)</title><rect x="891.8" y="37" width="207.1" height="15.0" fill="rgb(232,229,12)" rx="2" ry="2" />
<text  x="894.80" y="47.5" >lock_delay</text>
</g>
<g >
<title>ifmp_ring_enqueue (984 samples, 0.38%)</title><rect x="53.3" y="37" width="4.6" height="15.0" fill="rgb(234,48,31)" rx="2" ry="2" />
<text  x="56.35" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (51,052 samples, 19.85%)</title><rect x="654.5" y="53" width="234.2" height="15.0" fill="rgb(253,114,15)" rx="2" ry="2" />
<text  x="657.46" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>intr_execute_handlers (2,809 samples, 1.09%)</title><rect x="1175.7" y="277" width="12.8" height="15.0" fill="rgb(254,71,3)" rx="2" ry="2" />
<text  x="1178.66" y="287.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1,313 samples, 0.51%)</title><rect x="1181.5" y="229" width="6.1" height="15.0" fill="rgb(233,71,54)" rx="2" ry="2" />
<text  x="1184.54" y="239.5" ></text>
</g>
<g >
<title>iflib_encap (4,456 samples, 1.73%)</title><rect x="370.7" y="181" width="20.5" height="15.0" fill="rgb(236,182,24)" rx="2" ry="2" />
<text  x="373.71" y="191.5" ></text>
</g>
<g >
<title>ipf_auth_check (295 samples, 0.11%)</title><rect x="230.1" y="37" width="1.4" height="15.0" fill="rgb(220,160,16)" rx="2" ry="2" />
<text  x="233.14" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (68 samples, 0.03%)</title><rect x="20.4" y="213" width="0.3" height="15.0" fill="rgb(216,213,11)" rx="2" ry="2" />
<text  x="23.42" y="223.5" ></text>
</g>
<g >
<title>lapic_et_start (28 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(238,137,17)" rx="2" ry="2" />
<text  x="1192.81" y="239.5" ></text>
</g>
<g >
<title>pfil_run_hooks (107,673 samples, 41.87%)</title><rect x="394.6" y="117" width="494.1" height="15.0" fill="rgb(242,8,48)" rx="2" ry="2" />
<text  x="397.64" y="127.5" >pfil_run_hooks</text>
</g>
<g >
<title>ether_output (670 samples, 0.26%)</title><rect x="888.7" y="101" width="3.1" height="15.0" fill="rgb(209,4,49)" rx="2" ry="2" />
<text  x="891.73" y="111.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (107,673 samples, 41.87%)</title><rect x="394.6" y="101" width="494.1" height="15.0" fill="rgb(253,207,44)" rx="2" ry="2" />
<text  x="397.64" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (107 samples, 0.04%)</title><rect x="367.3" y="165" width="0.5" height="15.0" fill="rgb(212,45,15)" rx="2" ry="2" />
<text  x="370.32" y="175.5" ></text>
</g>
<g >
<title>ipf_scanlist (51,052 samples, 19.85%)</title><rect x="654.5" y="69" width="234.2" height="15.0" fill="rgb(243,64,26)" rx="2" ry="2" />
<text  x="657.46" y="79.5" >ipf_scanlist</text>
</g>
<g >
<title>ether_output (4,304 samples, 1.67%)</title><rect x="38.7" y="85" width="19.7" height="15.0" fill="rgb(218,8,33)" rx="2" ry="2" />
<text  x="41.68" y="95.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (33 samples, 0.01%)</title><rect x="1188.0" y="229" width="0.2" height="15.0" fill="rgb(221,217,2)" rx="2" ry="2" />
<text  x="1191.05" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (369 samples, 0.14%)</title><rect x="890.1" y="37" width="1.7" height="15.0" fill="rgb(213,160,3)" rx="2" ry="2" />
<text  x="893.10" y="47.5" ></text>
</g>
<g >
<title>ipf_check (61,981 samples, 24.10%)</title><rect x="64.2" y="53" width="284.4" height="15.0" fill="rgb(222,192,45)" rx="2" ry="2" />
<text  x="67.20" y="63.5" >ipf_check</text>
</g>
<g >
<title>spinlock_exit (31 samples, 0.01%)</title><rect x="394.0" y="229" width="0.1" height="15.0" fill="rgb(248,9,42)" rx="2" ry="2" />
<text  x="397.00" y="239.5" ></text>
</g>
<g >
<title>pmc_hook_handler (111 samples, 0.04%)</title><rect x="1189.2" y="213" width="0.6" height="15.0" fill="rgb(207,38,52)" rx="2" ry="2" />
<text  x="1192.25" y="223.5" ></text>
</g>
<g >
<title>fork_exit (81,842 samples, 31.83%)</title><rect x="19.1" y="277" width="375.5" height="15.0" fill="rgb(230,92,33)" rx="2" ry="2" />
<text  x="22.07" y="287.5" >fork_exit</text>
</g>
<g >
<title>memmove_erms (885 samples, 0.34%)</title><rect x="43.5" y="53" width="4.1" height="15.0" fill="rgb(253,26,40)" rx="2" ry="2" />
<text  x="46.52" y="63.5" ></text>
</g>
<g >
<title>lapic_handle_timer (264 samples, 0.10%)</title><rect x="1188.8" y="277" width="1.2" height="15.0" fill="rgb(218,60,36)" rx="2" ry="2" />
<text  x="1191.78" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (62,527 samples, 24.32%)</title><rect x="888.7" y="197" width="286.9" height="15.0" fill="rgb(205,49,9)" rx="2" ry="2" />
<text  x="891.73" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ip_findroute (467 samples, 0.18%)</title><rect x="59.4" y="85" width="2.2" height="15.0" fill="rgb(211,187,43)" rx="2" ry="2" />
<text  x="62.45" y="95.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (56,621 samples, 22.02%)</title><rect x="394.6" y="53" width="259.9" height="15.0" fill="rgb(209,221,17)" rx="2" ry="2" />
<text  x="397.64" y="63.5" >__mtx_lock_sleep</text>
</g>
</g>
</svg>
