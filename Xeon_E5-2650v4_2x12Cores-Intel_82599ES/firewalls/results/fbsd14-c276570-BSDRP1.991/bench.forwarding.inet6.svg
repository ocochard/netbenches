<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ixgbe_isc_txd_credits_update (248 samples, 0.10%)</title><rect x="1186.5" y="229" width="1.1" height="15.0" fill="rgb(252,9,33)" rx="2" ry="2" />
<text  x="1189.47" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1 (860 samples, 0.33%)</title><rect x="10.0" y="277" width="3.9" height="15.0" fill="rgb(214,158,27)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (97 samples, 0.04%)</title><rect x="1046.2" y="197" width="0.4" height="15.0" fill="rgb(215,66,26)" rx="2" ry="2" />
<text  x="1049.20" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,555 samples, 0.99%)</title><rect x="243.0" y="37" width="11.6" height="15.0" fill="rgb(237,224,22)" rx="2" ry="2" />
<text  x="245.99" y="47.5" ></text>
</g>
<g >
<title>_rm_runlock (699 samples, 0.27%)</title><rect x="322.5" y="69" width="3.2" height="15.0" fill="rgb(222,200,19)" rx="2" ry="2" />
<text  x="325.49" y="79.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (6,828 samples, 2.64%)</title><rect x="531.9" y="181" width="31.1" height="15.0" fill="rgb(224,17,5)" rx="2" ry="2" />
<text  x="534.90" y="191.5" >if..</text>
</g>
<g >
<title>intr_lookup_source (67 samples, 0.03%)</title><rect x="1188.5" y="261" width="0.3" height="15.0" fill="rgb(224,14,2)" rx="2" ry="2" />
<text  x="1191.52" y="271.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (119 samples, 0.05%)</title><rect x="67.1" y="229" width="0.5" height="15.0" fill="rgb(252,89,42)" rx="2" ry="2" />
<text  x="70.09" y="239.5" ></text>
</g>
<g >
<title>ether_input (122 samples, 0.05%)</title><rect x="32.3" y="245" width="0.5" height="15.0" fill="rgb(220,131,50)" rx="2" ry="2" />
<text  x="35.26" y="255.5" ></text>
</g>
<g >
<title>m_freem (3,841 samples, 1.48%)</title><rect x="545.5" y="165" width="17.5" height="15.0" fill="rgb(244,159,13)" rx="2" ry="2" />
<text  x="548.52" y="175.5" ></text>
</g>
<g >
<title>drain_ring_lockless (123,685 samples, 47.78%)</title><rect x="476.4" y="213" width="563.8" height="15.0" fill="rgb(245,200,13)" rx="2" ry="2" />
<text  x="479.40" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>wakeup_any (97 samples, 0.04%)</title><rect x="1046.2" y="53" width="0.4" height="15.0" fill="rgb(216,72,53)" rx="2" ry="2" />
<text  x="1049.20" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (55 samples, 0.02%)</title><rect x="1184.2" y="181" width="0.2" height="15.0" fill="rgb(211,201,8)" rx="2" ry="2" />
<text  x="1187.18" y="191.5" ></text>
</g>
<g >
<title>all (258,845 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(245,13,54)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>wakeup_any (122 samples, 0.05%)</title><rect x="32.3" y="69" width="0.5" height="15.0" fill="rgb(207,149,7)" rx="2" ry="2" />
<text  x="35.26" y="79.5" ></text>
</g>
<g >
<title>lradix6_lookup (10,665 samples, 4.12%)</title><rect x="334.9" y="53" width="48.6" height="15.0" fill="rgb(216,189,8)" rx="2" ry="2" />
<text  x="337.88" y="63.5" >lrad..</text>
</g>
<g >
<title>ether_input (97 samples, 0.04%)</title><rect x="1046.2" y="229" width="0.4" height="15.0" fill="rgb(226,152,25)" rx="2" ry="2" />
<text  x="1049.20" y="239.5" ></text>
</g>
<g >
<title>zone_import (49 samples, 0.02%)</title><rect x="402.3" y="149" width="0.2" height="15.0" fill="rgb(208,95,45)" rx="2" ry="2" />
<text  x="405.31" y="159.5" ></text>
</g>
<g >
<title>_task_fn_tx (124,052 samples, 47.93%)</title><rect x="476.0" y="229" width="565.5" height="15.0" fill="rgb(247,73,9)" rx="2" ry="2" />
<text  x="479.01" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>ether_output_frame (14,125 samples, 5.46%)</title><rect x="221.2" y="69" width="64.4" height="15.0" fill="rgb(248,44,26)" rx="2" ry="2" />
<text  x="224.23" y="79.5" >ether_o..</text>
</g>
<g >
<title>ether_output (4,322 samples, 1.67%)</title><rect x="1046.6" y="101" width="19.7" height="15.0" fill="rgb(229,67,2)" rx="2" ry="2" />
<text  x="1049.64" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (122 samples, 0.05%)</title><rect x="32.3" y="229" width="0.5" height="15.0" fill="rgb(206,48,46)" rx="2" ry="2" />
<text  x="35.26" y="239.5" ></text>
</g>
<g >
<title>pmc_process_samples (141 samples, 0.05%)</title><rect x="1189.2" y="197" width="0.6" height="15.0" fill="rgb(235,18,36)" rx="2" ry="2" />
<text  x="1192.16" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (56,923 samples, 21.99%)</title><rect x="125.9" y="181" width="259.4" height="15.0" fill="rgb(251,9,3)" rx="2" ry="2" />
<text  x="128.85" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ip6_tryforward (97 samples, 0.04%)</title><rect x="1046.2" y="133" width="0.4" height="15.0" fill="rgb(248,96,16)" rx="2" ry="2" />
<text  x="1049.20" y="143.5" ></text>
</g>
<g >
<title>m_adj (738 samples, 0.29%)</title><rect x="148.5" y="133" width="3.4" height="15.0" fill="rgb(226,12,26)" rx="2" ry="2" />
<text  x="151.54" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,322 samples, 1.67%)</title><rect x="1046.6" y="277" width="19.7" height="15.0" fill="rgb(240,203,29)" rx="2" ry="2" />
<text  x="1049.64" y="287.5" ></text>
</g>
<g >
<title>iflib_if_transmit (97 samples, 0.04%)</title><rect x="1046.2" y="85" width="0.4" height="15.0" fill="rgb(252,226,48)" rx="2" ry="2" />
<text  x="1049.20" y="95.5" ></text>
</g>
<g >
<title>sleepq_signal (116 samples, 0.04%)</title><rect x="70.8" y="181" width="0.5" height="15.0" fill="rgb(214,135,45)" rx="2" ry="2" />
<text  x="73.78" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (79 samples, 0.03%)</title><rect x="32.5" y="37" width="0.3" height="15.0" fill="rgb(228,205,19)" rx="2" ry="2" />
<text  x="35.46" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (4,322 samples, 1.67%)</title><rect x="1046.6" y="181" width="19.7" height="15.0" fill="rgb(246,207,17)" rx="2" ry="2" />
<text  x="1049.64" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (166 samples, 0.06%)</title><rect x="1182.8" y="213" width="0.7" height="15.0" fill="rgb(247,58,40)" rx="2" ry="2" />
<text  x="1185.78" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (97 samples, 0.04%)</title><rect x="1046.2" y="165" width="0.4" height="15.0" fill="rgb(230,57,29)" rx="2" ry="2" />
<text  x="1049.20" y="175.5" ></text>
</g>
<g >
<title>hardclock (165 samples, 0.06%)</title><rect x="1189.1" y="229" width="0.7" height="15.0" fill="rgb(236,34,8)" rx="2" ry="2" />
<text  x="1192.07" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (3,945 samples, 1.52%)</title><rect x="13.9" y="277" width="18.0" height="15.0" fill="rgb(208,69,24)" rx="2" ry="2" />
<text  x="16.92" y="287.5" ></text>
</g>
<g >
<title>iflib_if_transmit (122 samples, 0.05%)</title><rect x="32.3" y="101" width="0.5" height="15.0" fill="rgb(224,214,28)" rx="2" ry="2" />
<text  x="35.26" y="111.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (50 samples, 0.02%)</title><rect x="405.1" y="181" width="0.2" height="15.0" fill="rgb(223,148,6)" rx="2" ry="2" />
<text  x="408.10" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (50,628 samples, 19.56%)</title><rect x="152.7" y="133" width="230.8" height="15.0" fill="rgb(236,182,29)" rx="2" ry="2" />
<text  x="155.70" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netmap_rx_irq (29 samples, 0.01%)</title><rect x="475.9" y="213" width="0.1" height="15.0" fill="rgb(225,226,34)" rx="2" ry="2" />
<text  x="478.86" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (513 samples, 0.20%)</title><rect x="402.8" y="181" width="2.3" height="15.0" fill="rgb(205,147,49)" rx="2" ry="2" />
<text  x="405.76" y="191.5" ></text>
</g>
<g >
<title>ip6_input (4,322 samples, 1.67%)</title><rect x="1046.6" y="133" width="19.7" height="15.0" fill="rgb(253,180,27)" rx="2" ry="2" />
<text  x="1049.64" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (822 samples, 0.32%)</title><rect x="541.8" y="165" width="3.7" height="15.0" fill="rgb(243,63,8)" rx="2" ry="2" />
<text  x="544.77" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (97 samples, 0.04%)</title><rect x="1046.2" y="101" width="0.4" height="15.0" fill="rgb(250,212,16)" rx="2" ry="2" />
<text  x="1049.20" y="111.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (453 samples, 0.18%)</title><rect x="413.7" y="165" width="2.1" height="15.0" fill="rgb(239,10,29)" rx="2" ry="2" />
<text  x="416.72" y="175.5" ></text>
</g>
<g >
<title>m_free (3,348 samples, 1.29%)</title><rect x="547.8" y="149" width="15.2" height="15.0" fill="rgb(229,156,26)" rx="2" ry="2" />
<text  x="550.76" y="159.5" ></text>
</g>
<g >
<title>iflib_rxeof (4,322 samples, 1.67%)</title><rect x="1046.6" y="229" width="19.7" height="15.0" fill="rgb(220,152,17)" rx="2" ry="2" />
<text  x="1049.64" y="239.5" ></text>
</g>
<g >
<title>sleepq_lock (158 samples, 0.06%)</title><rect x="1183.7" y="197" width="0.7" height="15.0" fill="rgb(244,145,0)" rx="2" ry="2" />
<text  x="1186.71" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (1,964 samples, 0.76%)</title><rect x="1046.6" y="37" width="9.0" height="15.0" fill="rgb(233,205,15)" rx="2" ry="2" />
<text  x="1049.64" y="47.5" ></text>
</g>
<g >
<title>sleepq_release (52 samples, 0.02%)</title><rect x="1045.7" y="213" width="0.3" height="15.0" fill="rgb(216,52,21)" rx="2" ry="2" />
<text  x="1048.72" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4,322 samples, 1.67%)</title><rect x="1046.6" y="149" width="19.7" height="15.0" fill="rgb(236,16,21)" rx="2" ry="2" />
<text  x="1049.64" y="159.5" ></text>
</g>
<g >
<title>ether_demux (53,689 samples, 20.74%)</title><rect x="138.7" y="149" width="244.8" height="15.0" fill="rgb(251,76,23)" rx="2" ry="2" />
<text  x="141.75" y="159.5" >ether_demux</text>
</g>
<g >
<title>tcp_lro_flush_all (48 samples, 0.02%)</title><rect x="475.6" y="197" width="0.3" height="15.0" fill="rgb(230,180,15)" rx="2" ry="2" />
<text  x="478.64" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (7,020 samples, 2.71%)</title><rect x="418.5" y="197" width="32.0" height="15.0" fill="rgb(241,31,3)" rx="2" ry="2" />
<text  x="421.47" y="207.5" >ix..</text>
</g>
<g >
<title>memcmp (83 samples, 0.03%)</title><rect x="325.7" y="69" width="0.4" height="15.0" fill="rgb(223,95,21)" rx="2" ry="2" />
<text  x="328.68" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (14,808 samples, 5.72%)</title><rect x="1117.6" y="229" width="67.5" height="15.0" fill="rgb(206,26,5)" rx="2" ry="2" />
<text  x="1120.58" y="239.5" >groupta..</text>
</g>
<g >
<title>ixgbe_msix_que (119 samples, 0.05%)</title><rect x="1187.6" y="229" width="0.5" height="15.0" fill="rgb(209,89,14)" rx="2" ry="2" />
<text  x="1190.60" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (4,322 samples, 1.67%)</title><rect x="1046.6" y="85" width="19.7" height="15.0" fill="rgb(210,181,27)" rx="2" ry="2" />
<text  x="1049.64" y="95.5" ></text>
</g>
<g >
<title>if_getsoftc (157 samples, 0.06%)</title><rect x="254.6" y="37" width="0.7" height="15.0" fill="rgb(243,52,35)" rx="2" ry="2" />
<text  x="257.63" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (97 samples, 0.04%)</title><rect x="1046.2" y="69" width="0.4" height="15.0" fill="rgb(210,161,36)" rx="2" ry="2" />
<text  x="1049.20" y="79.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (93 samples, 0.04%)</title><rect x="1041.1" y="213" width="0.4" height="15.0" fill="rgb(217,11,40)" rx="2" ry="2" />
<text  x="1044.11" y="223.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (3,902 samples, 1.51%)</title><rect x="457.9" y="197" width="17.7" height="15.0" fill="rgb(214,53,14)" rx="2" ry="2" />
<text  x="460.85" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (4,774 samples, 1.84%)</title><rect x="1003.8" y="165" width="21.8" height="15.0" fill="rgb(236,36,38)" rx="2" ry="2" />
<text  x="1006.83" y="175.5" >i..</text>
</g>
<g >
<title>iflib_txd_db_check (3,206 samples, 1.24%)</title><rect x="1025.6" y="181" width="14.6" height="15.0" fill="rgb(206,63,26)" rx="2" ry="2" />
<text  x="1028.60" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (727 samples, 0.28%)</title><rect x="68.0" y="213" width="3.3" height="15.0" fill="rgb(234,223,53)" rx="2" ry="2" />
<text  x="71.00" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (153 samples, 0.06%)</title><rect x="1041.6" y="229" width="0.7" height="15.0" fill="rgb(217,136,48)" rx="2" ry="2" />
<text  x="1044.56" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (12,188 samples, 4.71%)</title><rect x="230.1" y="53" width="55.5" height="15.0" fill="rgb(228,83,1)" rx="2" ry="2" />
<text  x="233.06" y="63.5" >iflib..</text>
</g>
<g >
<title>doreti (61 samples, 0.02%)</title><rect x="32.8" y="277" width="0.3" height="15.0" fill="rgb(225,110,17)" rx="2" ry="2" />
<text  x="35.82" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (348 samples, 0.13%)</title><rect x="1042.3" y="229" width="1.5" height="15.0" fill="rgb(241,21,22)" rx="2" ry="2" />
<text  x="1045.26" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,322 samples, 1.67%)</title><rect x="1046.6" y="261" width="19.7" height="15.0" fill="rgb(242,211,36)" rx="2" ry="2" />
<text  x="1049.64" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (172 samples, 0.07%)</title><rect x="1185.7" y="229" width="0.8" height="15.0" fill="rgb(249,134,20)" rx="2" ry="2" />
<text  x="1188.69" y="239.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,583 samples, 1.00%)</title><rect x="551.3" y="133" width="11.7" height="15.0" fill="rgb(207,197,30)" rx="2" ry="2" />
<text  x="554.25" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (467 samples, 0.18%)</title><rect x="1036.2" y="165" width="2.1" height="15.0" fill="rgb(236,198,24)" rx="2" ry="2" />
<text  x="1039.16" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (26 samples, 0.01%)</title><rect x="1188.0" y="213" width="0.1" height="15.0" fill="rgb(239,129,30)" rx="2" ry="2" />
<text  x="1191.03" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (143 samples, 0.06%)</title><rect x="69.1" y="197" width="0.7" height="15.0" fill="rgb(226,44,10)" rx="2" ry="2" />
<text  x="72.13" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (76 samples, 0.03%)</title><rect x="1046.2" y="37" width="0.3" height="15.0" fill="rgb(246,204,45)" rx="2" ry="2" />
<text  x="1049.20" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (589 samples, 0.23%)</title><rect x="415.8" y="197" width="2.7" height="15.0" fill="rgb(239,10,35)" rx="2" ry="2" />
<text  x="418.78" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (4,322 samples, 1.67%)</title><rect x="1046.6" y="245" width="19.7" height="15.0" fill="rgb(223,46,54)" rx="2" ry="2" />
<text  x="1049.64" y="255.5" ></text>
</g>
<g >
<title>if_getcapenable (22 samples, 0.01%)</title><rect x="1040.2" y="213" width="0.1" height="15.0" fill="rgb(206,11,3)" rx="2" ry="2" />
<text  x="1043.25" y="223.5" ></text>
</g>
<g >
<title>cache_alloc_retry (62 samples, 0.02%)</title><rect x="402.3" y="181" width="0.3" height="15.0" fill="rgb(253,58,25)" rx="2" ry="2" />
<text  x="405.27" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (97 samples, 0.04%)</title><rect x="1046.2" y="213" width="0.4" height="15.0" fill="rgb(221,221,2)" rx="2" ry="2" />
<text  x="1049.20" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (72 samples, 0.03%)</title><rect x="68.8" y="197" width="0.3" height="15.0" fill="rgb(234,228,54)" rx="2" ry="2" />
<text  x="71.80" y="207.5" ></text>
</g>
<g >
<title>intr_execute_handlers (26,763 samples, 10.34%)</title><rect x="1066.3" y="277" width="122.0" height="15.0" fill="rgb(236,224,44)" rx="2" ry="2" />
<text  x="1069.34" y="287.5" >intr_execute_ha..</text>
</g>
<g >
<title>ether_nh_input (122 samples, 0.05%)</title><rect x="32.3" y="213" width="0.5" height="15.0" fill="rgb(220,13,24)" rx="2" ry="2" />
<text  x="35.26" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (88,713 samples, 34.27%)</title><rect x="71.4" y="213" width="404.5" height="15.0" fill="rgb(214,116,3)" rx="2" ry="2" />
<text  x="74.44" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ip6_input (49,150 samples, 18.99%)</title><rect x="159.4" y="117" width="224.1" height="15.0" fill="rgb(223,84,54)" rx="2" ry="2" />
<text  x="162.44" y="127.5" >ip6_input</text>
</g>
<g >
<title>_task_fn_rx (97 samples, 0.04%)</title><rect x="1046.2" y="261" width="0.4" height="15.0" fill="rgb(232,142,25)" rx="2" ry="2" />
<text  x="1049.20" y="271.5" ></text>
</g>
<g >
<title>ip6_tryforward (4,322 samples, 1.67%)</title><rect x="1046.6" y="117" width="19.7" height="15.0" fill="rgb(237,47,49)" rx="2" ry="2" />
<text  x="1049.64" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (122 samples, 0.05%)</title><rect x="32.3" y="85" width="0.5" height="15.0" fill="rgb(245,0,29)" rx="2" ry="2" />
<text  x="35.26" y="95.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2,293 samples, 0.89%)</title><rect x="405.3" y="181" width="10.5" height="15.0" fill="rgb(236,204,11)" rx="2" ry="2" />
<text  x="408.33" y="191.5" ></text>
</g>
<g >
<title>ip6_input (122 samples, 0.05%)</title><rect x="32.3" y="165" width="0.5" height="15.0" fill="rgb(210,202,14)" rx="2" ry="2" />
<text  x="35.26" y="175.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (95 samples, 0.04%)</title><rect x="617.4" y="165" width="0.5" height="15.0" fill="rgb(249,81,17)" rx="2" ry="2" />
<text  x="620.43" y="175.5" ></text>
</g>
<g >
<title>ether_output (23,339 samples, 9.02%)</title><rect x="201.3" y="85" width="106.4" height="15.0" fill="rgb(244,126,44)" rx="2" ry="2" />
<text  x="204.31" y="95.5" >ether_output</text>
</g>
<g >
<title>timercb (235 samples, 0.09%)</title><rect x="1188.9" y="261" width="1.1" height="15.0" fill="rgb(237,27,53)" rx="2" ry="2" />
<text  x="1191.92" y="271.5" ></text>
</g>
<g >
<title>_task_fn_rx (89,582 samples, 34.61%)</title><rect x="67.6" y="229" width="408.4" height="15.0" fill="rgb(211,90,20)" rx="2" ry="2" />
<text  x="70.64" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_output (122 samples, 0.05%)</title><rect x="32.3" y="133" width="0.5" height="15.0" fill="rgb(248,218,14)" rx="2" ry="2" />
<text  x="35.26" y="143.5" ></text>
</g>
<g >
<title>memcmp (344 samples, 0.13%)</title><rect x="303.3" y="37" width="1.6" height="15.0" fill="rgb(250,126,36)" rx="2" ry="2" />
<text  x="306.34" y="47.5" ></text>
</g>
<g >
<title>lapic_handle_intr (105 samples, 0.04%)</title><rect x="1188.3" y="277" width="0.5" height="15.0" fill="rgb(245,0,3)" rx="2" ry="2" />
<text  x="1191.35" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (222,207 samples, 85.85%)</title><rect x="33.1" y="245" width="1013.0" height="15.0" fill="rgb(224,126,25)" rx="2" ry="2" />
<text  x="36.10" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>spinlock_exit (27 samples, 0.01%)</title><rect x="1046.0" y="213" width="0.1" height="15.0" fill="rgb(222,184,11)" rx="2" ry="2" />
<text  x="1048.96" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (59 samples, 0.02%)</title><rect x="70.5" y="165" width="0.3" height="15.0" fill="rgb(211,184,45)" rx="2" ry="2" />
<text  x="73.51" y="175.5" ></text>
</g>
<g >
<title>ip6_tryforward (45,726 samples, 17.67%)</title><rect x="175.0" y="101" width="208.5" height="15.0" fill="rgb(208,202,38)" rx="2" ry="2" />
<text  x="178.05" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>Xtimerint_pti (65 samples, 0.03%)</title><rect x="32.0" y="277" width="0.3" height="15.0" fill="rgb(206,162,25)" rx="2" ry="2" />
<text  x="34.96" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4,322 samples, 1.67%)</title><rect x="1046.6" y="197" width="19.7" height="15.0" fill="rgb(253,35,18)" rx="2" ry="2" />
<text  x="1049.64" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (64 samples, 0.02%)</title><rect x="531.6" y="181" width="0.3" height="15.0" fill="rgb(249,136,26)" rx="2" ry="2" />
<text  x="534.61" y="191.5" ></text>
</g>
<g >
<title>m_pkthdr_init (466 samples, 0.18%)</title><rect x="450.5" y="197" width="2.1" height="15.0" fill="rgb(220,51,0)" rx="2" ry="2" />
<text  x="453.47" y="207.5" ></text>
</g>
<g >
<title>ether_input (4,322 samples, 1.67%)</title><rect x="1046.6" y="213" width="19.7" height="15.0" fill="rgb(207,48,10)" rx="2" ry="2" />
<text  x="1049.64" y="223.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (28 samples, 0.01%)</title><rect x="69.8" y="197" width="0.1" height="15.0" fill="rgb(244,28,47)" rx="2" ry="2" />
<text  x="72.78" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (22 samples, 0.01%)</title><rect x="67.0" y="213" width="0.1" height="15.0" fill="rgb(226,184,50)" rx="2" ry="2" />
<text  x="69.99" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (170 samples, 0.07%)</title><rect x="70.0" y="181" width="0.8" height="15.0" fill="rgb(254,68,51)" rx="2" ry="2" />
<text  x="73.01" y="191.5" ></text>
</g>
<g >
<title>ether_output (97 samples, 0.04%)</title><rect x="1046.2" y="117" width="0.4" height="15.0" fill="rgb(222,205,38)" rx="2" ry="2" />
<text  x="1049.20" y="127.5" ></text>
</g>
<g >
<title>fib6_lookup (12,027 samples, 4.65%)</title><rect x="328.7" y="69" width="54.8" height="15.0" fill="rgb(248,199,36)" rx="2" ry="2" />
<text  x="331.67" y="79.5" >fib6_..</text>
</g>
<g >
<title>nd6_resolve (4,052 samples, 1.57%)</title><rect x="289.2" y="69" width="18.5" height="15.0" fill="rgb(238,182,44)" rx="2" ry="2" />
<text  x="292.23" y="79.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (142 samples, 0.05%)</title><rect x="1040.5" y="213" width="0.6" height="15.0" fill="rgb(251,47,14)" rx="2" ry="2" />
<text  x="1043.46" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (77 samples, 0.03%)</title><rect x="71.0" y="165" width="0.3" height="15.0" fill="rgb(232,61,37)" rx="2" ry="2" />
<text  x="73.96" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (28 samples, 0.01%)</title><rect x="1041.4" y="197" width="0.1" height="15.0" fill="rgb(236,60,34)" rx="2" ry="2" />
<text  x="1044.40" y="207.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (1,643 samples, 0.63%)</title><rect x="297.4" y="53" width="7.5" height="15.0" fill="rgb(222,12,35)" rx="2" ry="2" />
<text  x="300.42" y="63.5" ></text>
</g>
<g >
<title>sleepq_lock (43 samples, 0.02%)</title><rect x="32.3" y="53" width="0.2" height="15.0" fill="rgb(226,134,20)" rx="2" ry="2" />
<text  x="35.26" y="63.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (222,215 samples, 85.85%)</title><rect x="33.1" y="261" width="1013.0" height="15.0" fill="rgb(222,196,7)" rx="2" ry="2" />
<text  x="36.09" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>iflib_encap (101,471 samples, 39.20%)</title><rect x="563.0" y="181" width="462.6" height="15.0" fill="rgb(224,97,39)" rx="2" ry="2" />
<text  x="566.03" y="191.5" >iflib_encap</text>
</g>
<g >
<title>iflib_fl_refill (6,357 samples, 2.46%)</title><rect x="386.8" y="197" width="29.0" height="15.0" fill="rgb(251,182,28)" rx="2" ry="2" />
<text  x="389.80" y="207.5" >if..</text>
</g>
<g >
<title>pmc_hook_handler (141 samples, 0.05%)</title><rect x="1189.2" y="213" width="0.6" height="15.0" fill="rgb(246,86,32)" rx="2" ry="2" />
<text  x="1192.16" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (114,442 samples, 44.21%)</title><rect x="518.5" y="197" width="521.7" height="15.0" fill="rgb(235,167,41)" rx="2" ry="2" />
<text  x="521.54" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>sleepq_signal (79 samples, 0.03%)</title><rect x="32.5" y="53" width="0.3" height="15.0" fill="rgb(246,179,12)" rx="2" ry="2" />
<text  x="35.46" y="63.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (97 samples, 0.04%)</title><rect x="1046.2" y="277" width="0.4" height="15.0" fill="rgb(246,60,33)" rx="2" ry="2" />
<text  x="1049.20" y="287.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (6,640 samples, 2.57%)</title><rect x="255.3" y="37" width="30.3" height="15.0" fill="rgb(225,177,11)" rx="2" ry="2" />
<text  x="258.35" y="47.5" >if..</text>
</g>
<g >
<title>iflib_rxeof (97 samples, 0.04%)</title><rect x="1046.2" y="245" width="0.4" height="15.0" fill="rgb(238,200,44)" rx="2" ry="2" />
<text  x="1049.20" y="255.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3,398 samples, 1.31%)</title><rect x="988.3" y="149" width="15.5" height="15.0" fill="rgb(214,34,11)" rx="2" ry="2" />
<text  x="991.34" y="159.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (156 samples, 0.06%)</title><rect x="560.8" y="117" width="0.7" height="15.0" fill="rgb(214,32,42)" rx="2" ry="2" />
<text  x="563.81" y="127.5" ></text>
</g>
<g >
<title>handleevents (220 samples, 0.08%)</title><rect x="1189.0" y="245" width="1.0" height="15.0" fill="rgb(221,21,31)" rx="2" ry="2" />
<text  x="1191.99" y="255.5" ></text>
</g>
<g >
<title>wakeup (490 samples, 0.19%)</title><rect x="1043.8" y="229" width="2.3" height="15.0" fill="rgb(248,133,45)" rx="2" ry="2" />
<text  x="1046.85" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (228 samples, 0.09%)</title><rect x="66.1" y="229" width="1.0" height="15.0" fill="rgb(243,178,2)" rx="2" ry="2" />
<text  x="69.05" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (122 samples, 0.05%)</title><rect x="32.3" y="117" width="0.5" height="15.0" fill="rgb(218,21,36)" rx="2" ry="2" />
<text  x="35.26" y="127.5" ></text>
</g>
<g >
<title>if_inc_counter (136 samples, 0.05%)</title><rect x="386.2" y="197" width="0.6" height="15.0" fill="rgb(229,182,24)" rx="2" ry="2" />
<text  x="389.18" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (26 samples, 0.01%)</title><rect x="1185.6" y="213" width="0.1" height="15.0" fill="rgb(213,210,20)" rx="2" ry="2" />
<text  x="1188.57" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (84,664 samples, 32.71%)</title><rect x="617.9" y="165" width="385.9" height="15.0" fill="rgb(209,77,40)" rx="2" ry="2" />
<text  x="620.87" y="175.5" >bus_dmamap_load_mbuf_sg</text>
</g>
<g >
<title>memmove_erms (613 samples, 0.24%)</title><rect x="304.9" y="53" width="2.8" height="15.0" fill="rgb(237,71,7)" rx="2" ry="2" />
<text  x="307.91" y="63.5" ></text>
</g>
<g >
<title>ip6_tryforward (122 samples, 0.05%)</title><rect x="32.3" y="149" width="0.5" height="15.0" fill="rgb(241,92,6)" rx="2" ry="2" />
<text  x="35.26" y="159.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (15,832 samples, 6.12%)</title><rect x="1116.0" y="245" width="72.2" height="15.0" fill="rgb(240,164,52)" rx="2" ry="2" />
<text  x="1118.99" y="255.5" >iflib_fa..</text>
</g>
<g >
<title>ixgbe_write_reg (422 samples, 0.16%)</title><rect x="1038.3" y="165" width="1.9" height="15.0" fill="rgb(231,108,53)" rx="2" ry="2" />
<text  x="1041.29" y="175.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (25 samples, 0.01%)</title><rect x="1189.6" y="181" width="0.1" height="15.0" fill="rgb(225,160,43)" rx="2" ry="2" />
<text  x="1192.58" y="191.5" ></text>
</g>
<g >
<title>keg_alloc_slab (41 samples, 0.02%)</title><rect x="402.3" y="133" width="0.2" height="15.0" fill="rgb(234,62,38)" rx="2" ry="2" />
<text  x="405.32" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (52 samples, 0.02%)</title><rect x="1182.5" y="213" width="0.3" height="15.0" fill="rgb(233,21,50)" rx="2" ry="2" />
<text  x="1185.54" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (331 samples, 0.13%)</title><rect x="561.5" y="117" width="1.5" height="15.0" fill="rgb(220,182,41)" rx="2" ry="2" />
<text  x="564.52" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (46 samples, 0.02%)</title><rect x="402.6" y="181" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="405.55" y="191.5" ></text>
</g>
<g >
<title>intr_event_handle (25,813 samples, 9.97%)</title><rect x="1070.6" y="261" width="117.7" height="15.0" fill="rgb(206,213,43)" rx="2" ry="2" />
<text  x="1073.61" y="271.5" >intr_event_han..</text>
</g>
<g >
<title>iflib_rxeof (122 samples, 0.05%)</title><rect x="32.3" y="261" width="0.5" height="15.0" fill="rgb(240,20,46)" rx="2" ry="2" />
<text  x="35.26" y="271.5" ></text>
</g>
<g >
<title>memcpy_erms (792 samples, 0.31%)</title><rect x="285.6" y="69" width="3.6" height="15.0" fill="rgb(229,188,43)" rx="2" ry="2" />
<text  x="288.62" y="79.5" ></text>
</g>
<g >
<title>in6_localip (4,025 samples, 1.55%)</title><rect x="307.7" y="85" width="18.4" height="15.0" fill="rgb(245,174,2)" rx="2" ry="2" />
<text  x="310.71" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (26 samples, 0.01%)</title><rect x="1045.6" y="197" width="0.1" height="15.0" fill="rgb(244,40,9)" rx="2" ry="2" />
<text  x="1048.60" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (43 samples, 0.02%)</title><rect x="32.3" y="37" width="0.2" height="15.0" fill="rgb(226,186,1)" rx="2" ry="2" />
<text  x="35.26" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (1,151 samples, 0.44%)</title><rect x="452.6" y="197" width="5.2" height="15.0" fill="rgb(244,191,22)" rx="2" ry="2" />
<text  x="455.59" y="207.5" ></text>
</g>
<g >
<title>sleepq_broadcast (52 samples, 0.02%)</title><rect x="1044.1" y="213" width="0.3" height="15.0" fill="rgb(233,66,12)" rx="2" ry="2" />
<text  x="1047.14" y="223.5" ></text>
</g>
<g >
<title>rn_match (9,954 samples, 3.85%)</title><rect x="338.1" y="37" width="45.4" height="15.0" fill="rgb(224,123,1)" rx="2" ry="2" />
<text  x="341.12" y="47.5" >rn_m..</text>
</g>
<g >
<title>ip6_input (97 samples, 0.04%)</title><rect x="1046.2" y="149" width="0.4" height="15.0" fill="rgb(214,95,51)" rx="2" ry="2" />
<text  x="1049.20" y="159.5" ></text>
</g>
<g >
<title>memcmp (405 samples, 0.16%)</title><rect x="383.5" y="149" width="1.8" height="15.0" fill="rgb(217,194,54)" rx="2" ry="2" />
<text  x="386.50" y="159.5" ></text>
</g>
<g >
<title>lapic_handle_timer (256 samples, 0.10%)</title><rect x="1188.8" y="277" width="1.2" height="15.0" fill="rgb(238,61,24)" rx="2" ry="2" />
<text  x="1191.83" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (122 samples, 0.05%)</title><rect x="32.3" y="277" width="0.5" height="15.0" fill="rgb(225,199,21)" rx="2" ry="2" />
<text  x="35.26" y="287.5" ></text>
</g>
<g >
<title>ip6_findroute (12,601 samples, 4.87%)</title><rect x="326.1" y="85" width="57.4" height="15.0" fill="rgb(225,196,19)" rx="2" ry="2" />
<text  x="329.06" y="95.5" >ip6_fi..</text>
</g>
<g >
<title>fork_exit (222,235 samples, 85.86%)</title><rect x="33.1" y="277" width="1013.1" height="15.0" fill="rgb(249,70,24)" rx="2" ry="2" />
<text  x="36.09" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_demux (122 samples, 0.05%)</title><rect x="32.3" y="197" width="0.5" height="15.0" fill="rgb(236,107,53)" rx="2" ry="2" />
<text  x="35.26" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (327 samples, 0.13%)</title><rect x="1183.6" y="213" width="1.5" height="15.0" fill="rgb(228,227,22)" rx="2" ry="2" />
<text  x="1186.60" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4,322 samples, 1.67%)</title><rect x="1046.6" y="53" width="19.7" height="15.0" fill="rgb(218,226,17)" rx="2" ry="2" />
<text  x="1049.64" y="63.5" ></text>
</g>
<g >
<title>if_getdrvflags (171 samples, 0.07%)</title><rect x="385.4" y="197" width="0.8" height="15.0" fill="rgb(206,153,15)" rx="2" ry="2" />
<text  x="388.40" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (25 samples, 0.01%)</title><rect x="1040.3" y="213" width="0.2" height="15.0" fill="rgb(225,133,16)" rx="2" ry="2" />
<text  x="1043.35" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (174 samples, 0.07%)</title><rect x="151.9" y="133" width="0.8" height="15.0" fill="rgb(241,195,30)" rx="2" ry="2" />
<text  x="154.91" y="143.5" ></text>
</g>
<g >
<title>ether_nh_input (55,769 samples, 21.55%)</title><rect x="131.1" y="165" width="254.2" height="15.0" fill="rgb(227,150,54)" rx="2" ry="2" />
<text  x="134.11" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>netisr_dispatch (179 samples, 0.07%)</title><rect x="125.0" y="181" width="0.9" height="15.0" fill="rgb(247,212,29)" rx="2" ry="2" />
<text  x="128.03" y="191.5" ></text>
</g>
<g >
<title>ether_demux (97 samples, 0.04%)</title><rect x="1046.2" y="181" width="0.4" height="15.0" fill="rgb(244,1,2)" rx="2" ry="2" />
<text  x="1049.20" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (131 samples, 0.05%)</title><rect x="1185.1" y="229" width="0.6" height="15.0" fill="rgb(216,46,28)" rx="2" ry="2" />
<text  x="1188.09" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (144 samples, 0.06%)</title><rect x="1184.4" y="197" width="0.7" height="15.0" fill="rgb(226,213,43)" rx="2" ry="2" />
<text  x="1187.43" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (4,322 samples, 1.67%)</title><rect x="1046.6" y="69" width="19.7" height="15.0" fill="rgb(231,104,16)" rx="2" ry="2" />
<text  x="1049.64" y="79.5" ></text>
</g>
<g >
<title>ether_demux (4,322 samples, 1.67%)</title><rect x="1046.6" y="165" width="19.7" height="15.0" fill="rgb(224,106,31)" rx="2" ry="2" />
<text  x="1049.64" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (307 samples, 0.12%)</title><rect x="69.9" y="197" width="1.4" height="15.0" fill="rgb(219,41,7)" rx="2" ry="2" />
<text  x="72.91" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (332 samples, 0.13%)</title><rect x="1002.3" y="133" width="1.5" height="15.0" fill="rgb(210,229,42)" rx="2" ry="2" />
<text  x="1005.31" y="143.5" ></text>
</g>
<g >
<title>spinlock_exit (104 samples, 0.04%)</title><rect x="1184.6" y="181" width="0.5" height="15.0" fill="rgb(251,134,17)" rx="2" ry="2" />
<text  x="1187.62" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (29 samples, 0.01%)</title><rect x="71.3" y="213" width="0.1" height="15.0" fill="rgb(218,2,43)" rx="2" ry="2" />
<text  x="74.31" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (294 samples, 0.11%)</title><rect x="1044.4" y="213" width="1.3" height="15.0" fill="rgb(206,214,14)" rx="2" ry="2" />
<text  x="1047.38" y="223.5" ></text>
</g>
<g >
<title>ether_input (57,415 samples, 22.18%)</title><rect x="123.6" y="197" width="261.7" height="15.0" fill="rgb(246,197,41)" rx="2" ry="2" />
<text  x="126.61" y="207.5" >ether_input</text>
</g>
<g >
<title>spinlock_exit (2,324 samples, 0.90%)</title><rect x="1055.6" y="37" width="10.6" height="15.0" fill="rgb(245,129,35)" rx="2" ry="2" />
<text  x="1058.60" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (122 samples, 0.05%)</title><rect x="32.3" y="181" width="0.5" height="15.0" fill="rgb(248,160,34)" rx="2" ry="2" />
<text  x="35.26" y="191.5" ></text>
</g>
<g >
<title>_rm_rlock (1,572 samples, 0.61%)</title><rect x="315.3" y="69" width="7.2" height="15.0" fill="rgb(228,222,10)" rx="2" ry="2" />
<text  x="318.32" y="79.5" ></text>
</g>
<g >
<title>lapic_et_start (26 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(221,95,35)" rx="2" ry="2" />
<text  x="1192.82" y="239.5" ></text>
</g>
<g >
<title>cache_alloc (52 samples, 0.02%)</title><rect x="402.3" y="165" width="0.2" height="15.0" fill="rgb(211,27,8)" rx="2" ry="2" />
<text  x="405.30" y="175.5" ></text>
</g>
</g>
</svg>
