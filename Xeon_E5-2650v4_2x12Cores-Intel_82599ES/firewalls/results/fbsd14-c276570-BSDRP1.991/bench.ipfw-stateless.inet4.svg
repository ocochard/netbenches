<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>lapic_handle_intr (135 samples, 0.06%)</title><rect x="1188.2" y="277" width="0.7" height="15.0" fill="rgb(209,128,38)" rx="2" ry="2" />
<text  x="1191.20" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (213,428 samples, 87.84%)</title><rect x="32.9" y="245" width="1036.5" height="15.0" fill="rgb(247,63,9)" rx="2" ry="2" />
<text  x="35.87" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>zone_import (39 samples, 0.02%)</title><rect x="509.2" y="149" width="0.2" height="15.0" fill="rgb(241,20,8)" rx="2" ry="2" />
<text  x="512.17" y="159.5" ></text>
</g>
<g >
<title>intr_event_handle (19,346 samples, 7.96%)</title><rect x="1094.2" y="261" width="93.9" height="15.0" fill="rgb(251,152,51)" rx="2" ry="2" />
<text  x="1097.16" y="271.5" >intr_event_..</text>
</g>
<g >
<title>_task_fn_rx (104 samples, 0.04%)</title><rect x="1069.4" y="261" width="0.5" height="15.0" fill="rgb(214,161,37)" rx="2" ry="2" />
<text  x="1072.39" y="271.5" ></text>
</g>
<g >
<title>memcmp (324 samples, 0.13%)</title><rect x="489.9" y="149" width="1.6" height="15.0" fill="rgb(220,73,14)" rx="2" ry="2" />
<text  x="492.90" y="159.5" ></text>
</g>
<g >
<title>arpresolve (2,927 samples, 1.20%)</title><rect x="225.6" y="69" width="14.2" height="15.0" fill="rgb(241,111,34)" rx="2" ry="2" />
<text  x="228.59" y="79.5" ></text>
</g>
<g >
<title>fib4_lookup (4,687 samples, 1.93%)</title><rect x="318.1" y="69" width="22.8" height="15.0" fill="rgb(251,66,44)" rx="2" ry="2" />
<text  x="321.09" y="79.5" >f..</text>
</g>
<g >
<title>spinlock_enter (115 samples, 0.05%)</title><rect x="1064.9" y="229" width="0.5" height="15.0" fill="rgb(237,144,42)" rx="2" ry="2" />
<text  x="1067.88" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (73 samples, 0.03%)</title><rect x="32.3" y="53" width="0.4" height="15.0" fill="rgb(216,153,1)" rx="2" ry="2" />
<text  x="35.30" y="63.5" ></text>
</g>
<g >
<title>sleepq_lock (135 samples, 0.06%)</title><rect x="1183.9" y="197" width="0.7" height="15.0" fill="rgb(221,114,47)" rx="2" ry="2" />
<text  x="1186.91" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (308 samples, 0.13%)</title><rect x="1067.5" y="213" width="1.5" height="15.0" fill="rgb(230,13,49)" rx="2" ry="2" />
<text  x="1070.46" y="223.5" ></text>
</g>
<g >
<title>m_free (3,253 samples, 1.34%)</title><rect x="647.0" y="149" width="15.8" height="15.0" fill="rgb(238,31,20)" rx="2" ry="2" />
<text  x="650.05" y="159.5" ></text>
</g>
<g >
<title>if_inc_counter (158 samples, 0.07%)</title><rect x="492.4" y="197" width="0.7" height="15.0" fill="rgb(217,120,36)" rx="2" ry="2" />
<text  x="495.37" y="207.5" ></text>
</g>
<g >
<title>ether_demux (74,693 samples, 30.74%)</title><rect x="127.2" y="149" width="362.7" height="15.0" fill="rgb(215,225,23)" rx="2" ry="2" />
<text  x="130.16" y="159.5" >ether_demux</text>
</g>
<g >
<title>ipfw_check_packet (28,426 samples, 11.70%)</title><rect x="351.8" y="69" width="138.1" height="15.0" fill="rgb(241,143,16)" rx="2" ry="2" />
<text  x="354.85" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (73 samples, 0.03%)</title><rect x="1064.5" y="213" width="0.4" height="15.0" fill="rgb(246,38,16)" rx="2" ry="2" />
<text  x="1067.51" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (82 samples, 0.03%)</title><rect x="63.7" y="165" width="0.4" height="15.0" fill="rgb(246,208,19)" rx="2" ry="2" />
<text  x="66.73" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (80 samples, 0.03%)</title><rect x="564.4" y="197" width="0.3" height="15.0" fill="rgb(236,102,41)" rx="2" ry="2" />
<text  x="567.35" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (126 samples, 0.05%)</title><rect x="59.7" y="229" width="0.6" height="15.0" fill="rgb(230,103,26)" rx="2" ry="2" />
<text  x="62.70" y="239.5" ></text>
</g>
<g >
<title>pfil_run_hooks (30,690 samples, 12.63%)</title><rect x="340.9" y="85" width="149.0" height="15.0" fill="rgb(235,225,45)" rx="2" ry="2" />
<text  x="343.85" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>handleevents (208 samples, 0.09%)</title><rect x="1189.0" y="245" width="1.0" height="15.0" fill="rgb(247,177,3)" rx="2" ry="2" />
<text  x="1191.99" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (86 samples, 0.04%)</title><rect x="61.5" y="197" width="0.4" height="15.0" fill="rgb(220,89,8)" rx="2" ry="2" />
<text  x="64.45" y="207.5" ></text>
</g>
<g >
<title>cache_alloc_retry (55 samples, 0.02%)</title><rect x="509.1" y="181" width="0.3" height="15.0" fill="rgb(225,78,39)" rx="2" ry="2" />
<text  x="512.09" y="191.5" ></text>
</g>
<g >
<title>netmap_rx_irq (28 samples, 0.01%)</title><rect x="582.8" y="213" width="0.1" height="15.0" fill="rgb(252,195,14)" rx="2" ry="2" />
<text  x="585.77" y="223.5" ></text>
</g>
<g >
<title>ip_input (114 samples, 0.05%)</title><rect x="32.1" y="165" width="0.6" height="15.0" fill="rgb(213,105,24)" rx="2" ry="2" />
<text  x="35.10" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (192 samples, 0.08%)</title><rect x="1182.8" y="213" width="0.9" height="15.0" fill="rgb(237,152,12)" rx="2" ry="2" />
<text  x="1185.81" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (77,667 samples, 31.96%)</title><rect x="114.3" y="181" width="377.2" height="15.0" fill="rgb(252,150,44)" rx="2" ry="2" />
<text  x="117.29" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (501 samples, 0.21%)</title><rect x="509.6" y="181" width="2.4" height="15.0" fill="rgb(212,66,51)" rx="2" ry="2" />
<text  x="512.59" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (47 samples, 0.02%)</title><rect x="509.4" y="181" width="0.2" height="15.0" fill="rgb(230,214,34)" rx="2" ry="2" />
<text  x="512.36" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (13,256 samples, 5.46%)</title><rect x="239.8" y="69" width="64.4" height="15.0" fill="rgb(221,116,10)" rx="2" ry="2" />
<text  x="242.81" y="79.5" >ether_o..</text>
</g>
<g >
<title>m_adj (772 samples, 0.32%)</title><rect x="135.7" y="133" width="3.8" height="15.0" fill="rgb(246,94,31)" rx="2" ry="2" />
<text  x="138.74" y="143.5" ></text>
</g>
<g >
<title>fork_exit (213,436 samples, 87.84%)</title><rect x="32.9" y="277" width="1036.5" height="15.0" fill="rgb(244,52,9)" rx="2" ry="2" />
<text  x="35.86" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_input (78,032 samples, 32.11%)</title><rect x="112.5" y="197" width="379.0" height="15.0" fill="rgb(240,75,0)" rx="2" ry="2" />
<text  x="115.52" y="207.5" >ether_input</text>
</g>
<g >
<title>ether_nh_input (4,112 samples, 1.69%)</title><rect x="1069.9" y="181" width="20.0" height="15.0" fill="rgb(240,57,13)" rx="2" ry="2" />
<text  x="1072.89" y="191.5" ></text>
</g>
<g >
<title>ether_demux (114 samples, 0.05%)</title><rect x="32.1" y="197" width="0.6" height="15.0" fill="rgb(240,175,19)" rx="2" ry="2" />
<text  x="35.10" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (148 samples, 0.06%)</title><rect x="1185.7" y="229" width="0.7" height="15.0" fill="rgb(251,70,39)" rx="2" ry="2" />
<text  x="1188.73" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (90 samples, 0.04%)</title><rect x="713.6" y="165" width="0.4" height="15.0" fill="rgb(252,116,23)" rx="2" ry="2" />
<text  x="716.56" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (64 samples, 0.03%)</title><rect x="512.0" y="181" width="0.3" height="15.0" fill="rgb(217,33,14)" rx="2" ry="2" />
<text  x="515.02" y="191.5" ></text>
</g>
<g >
<title>ether_output (104 samples, 0.04%)</title><rect x="1069.4" y="117" width="0.5" height="15.0" fill="rgb(208,83,21)" rx="2" ry="2" />
<text  x="1072.39" y="127.5" ></text>
</g>
<g >
<title>pmc_process_samples (124 samples, 0.05%)</title><rect x="1189.2" y="197" width="0.6" height="15.0" fill="rgb(221,63,52)" rx="2" ry="2" />
<text  x="1192.22" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (285 samples, 0.12%)</title><rect x="1065.4" y="229" width="1.4" height="15.0" fill="rgb(229,63,48)" rx="2" ry="2" />
<text  x="1068.43" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (104 samples, 0.04%)</title><rect x="1069.4" y="53" width="0.5" height="15.0" fill="rgb(216,153,37)" rx="2" ry="2" />
<text  x="1072.39" y="63.5" ></text>
</g>
<g >
<title>ether_demux (4,112 samples, 1.69%)</title><rect x="1069.9" y="165" width="20.0" height="15.0" fill="rgb(213,164,35)" rx="2" ry="2" />
<text  x="1072.89" y="175.5" ></text>
</g>
<g >
<title>if_getdrvflags (23 samples, 0.01%)</title><rect x="64.1" y="213" width="0.1" height="15.0" fill="rgb(252,104,28)" rx="2" ry="2" />
<text  x="67.13" y="223.5" ></text>
</g>
<g >
<title>in_lltable_lookup (1,123 samples, 0.46%)</title><rect x="232.5" y="53" width="5.5" height="15.0" fill="rgb(215,91,41)" rx="2" ry="2" />
<text  x="235.51" y="63.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (106 samples, 0.04%)</title><rect x="1187.5" y="229" width="0.5" height="15.0" fill="rgb(239,136,3)" rx="2" ry="2" />
<text  x="1190.46" y="239.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (162 samples, 0.07%)</title><rect x="660.5" y="117" width="0.8" height="15.0" fill="rgb(217,17,50)" rx="2" ry="2" />
<text  x="663.51" y="127.5" ></text>
</g>
<g >
<title>sleepq_signal (32 samples, 0.01%)</title><rect x="1069.7" y="37" width="0.2" height="15.0" fill="rgb(241,69,18)" rx="2" ry="2" />
<text  x="1072.74" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (106,774 samples, 43.94%)</title><rect x="64.2" y="213" width="518.6" height="15.0" fill="rgb(218,63,29)" rx="2" ry="2" />
<text  x="67.24" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>timercb (219 samples, 0.09%)</title><rect x="1188.9" y="261" width="1.1" height="15.0" fill="rgb(237,40,53)" rx="2" ry="2" />
<text  x="1191.94" y="271.5" ></text>
</g>
<g >
<title>iflib_if_transmit (104 samples, 0.04%)</title><rect x="1069.4" y="85" width="0.5" height="15.0" fill="rgb(211,165,0)" rx="2" ry="2" />
<text  x="1072.39" y="95.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (104 samples, 0.04%)</title><rect x="1069.4" y="277" width="0.5" height="15.0" fill="rgb(245,77,47)" rx="2" ry="2" />
<text  x="1072.39" y="287.5" ></text>
</g>
<g >
<title>ip_input (70,556 samples, 29.04%)</title><rect x="147.3" y="117" width="342.6" height="15.0" fill="rgb(209,217,25)" rx="2" ry="2" />
<text  x="150.25" y="127.5" >ip_input</text>
</g>
<g >
<title>iflib_rxeof (4,112 samples, 1.69%)</title><rect x="1069.9" y="229" width="20.0" height="15.0" fill="rgb(248,106,50)" rx="2" ry="2" />
<text  x="1072.89" y="239.5" ></text>
</g>
<g >
<title>memmove_erms (379 samples, 0.16%)</title><rect x="238.0" y="53" width="1.8" height="15.0" fill="rgb(252,40,43)" rx="2" ry="2" />
<text  x="240.97" y="63.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (499 samples, 0.21%)</title><rect x="520.2" y="165" width="2.4" height="15.0" fill="rgb(210,227,39)" rx="2" ry="2" />
<text  x="523.18" y="175.5" ></text>
</g>
<g >
<title>intr_lookup_source (67 samples, 0.03%)</title><rect x="1188.5" y="261" width="0.4" height="15.0" fill="rgb(215,5,13)" rx="2" ry="2" />
<text  x="1191.53" y="271.5" ></text>
</g>
<g >
<title>if_getdrvflags (174 samples, 0.07%)</title><rect x="491.5" y="197" width="0.9" height="15.0" fill="rgb(231,15,37)" rx="2" ry="2" />
<text  x="494.53" y="207.5" ></text>
</g>
<g >
<title>if_getsoftc (172 samples, 0.07%)</title><rect x="272.7" y="37" width="0.8" height="15.0" fill="rgb(254,224,15)" rx="2" ry="2" />
<text  x="275.66" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (344 samples, 0.14%)</title><rect x="1027.6" y="133" width="1.7" height="15.0" fill="rgb(238,82,26)" rx="2" ry="2" />
<text  x="1030.60" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (4,112 samples, 1.69%)</title><rect x="1069.9" y="85" width="20.0" height="15.0" fill="rgb(246,210,6)" rx="2" ry="2" />
<text  x="1072.89" y="95.5" ></text>
</g>
<g >
<title>iflib_if_transmit (11,410 samples, 4.70%)</title><rect x="248.8" y="53" width="55.4" height="15.0" fill="rgb(251,155,4)" rx="2" ry="2" />
<text  x="251.77" y="63.5" >iflib..</text>
</g>
<g >
<title>spinlock_exit (32 samples, 0.01%)</title><rect x="1069.2" y="213" width="0.2" height="15.0" fill="rgb(205,4,16)" rx="2" ry="2" />
<text  x="1072.20" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (104 samples, 0.04%)</title><rect x="1069.4" y="213" width="0.5" height="15.0" fill="rgb(253,207,38)" rx="2" ry="2" />
<text  x="1072.39" y="223.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,492 samples, 1.03%)</title><rect x="650.7" y="133" width="12.1" height="15.0" fill="rgb(243,49,37)" rx="2" ry="2" />
<text  x="653.74" y="143.5" ></text>
</g>
<g >
<title>pmc_hook_handler (129 samples, 0.05%)</title><rect x="1189.2" y="213" width="0.6" height="15.0" fill="rgb(252,33,18)" rx="2" ry="2" />
<text  x="1192.20" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (91,900 samples, 37.82%)</title><rect x="617.4" y="197" width="446.3" height="15.0" fill="rgb(243,62,11)" rx="2" ry="2" />
<text  x="620.44" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>pmap_kextract (320 samples, 0.13%)</title><rect x="661.3" y="117" width="1.5" height="15.0" fill="rgb(209,186,16)" rx="2" ry="2" />
<text  x="664.29" y="127.5" ></text>
</g>
<g >
<title>bsearch4_lookup (3,134 samples, 1.29%)</title><rect x="325.6" y="53" width="15.3" height="15.0" fill="rgb(246,204,26)" rx="2" ry="2" />
<text  x="328.63" y="63.5" ></text>
</g>
<g >
<title>iflib_encap (79,398 samples, 32.68%)</title><rect x="662.8" y="181" width="385.6" height="15.0" fill="rgb(231,24,3)" rx="2" ry="2" />
<text  x="665.85" y="191.5" >iflib_encap</text>
</g>
<g >
<title>gtaskqueue_run_locked (4,112 samples, 1.69%)</title><rect x="1069.9" y="261" width="20.0" height="15.0" fill="rgb(241,191,27)" rx="2" ry="2" />
<text  x="1072.89" y="271.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (129 samples, 0.05%)</title><rect x="1063.9" y="213" width="0.6" height="15.0" fill="rgb(206,220,43)" rx="2" ry="2" />
<text  x="1066.88" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (45 samples, 0.02%)</title><rect x="1184.4" y="181" width="0.2" height="15.0" fill="rgb(242,55,18)" rx="2" ry="2" />
<text  x="1187.35" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (104 samples, 0.04%)</title><rect x="1069.4" y="165" width="0.5" height="15.0" fill="rgb(212,29,9)" rx="2" ry="2" />
<text  x="1072.39" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (41 samples, 0.02%)</title><rect x="32.1" y="53" width="0.2" height="15.0" fill="rgb(215,58,50)" rx="2" ry="2" />
<text  x="35.10" y="63.5" ></text>
</g>
<g >
<title>ip_input (104 samples, 0.04%)</title><rect x="1069.4" y="149" width="0.5" height="15.0" fill="rgb(207,57,40)" rx="2" ry="2" />
<text  x="1072.39" y="159.5" ></text>
</g>
<g >
<title>ether_output (114 samples, 0.05%)</title><rect x="32.1" y="133" width="0.6" height="15.0" fill="rgb(222,66,24)" rx="2" ry="2" />
<text  x="35.10" y="143.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (3,151 samples, 1.30%)</title><rect x="1048.4" y="181" width="15.3" height="15.0" fill="rgb(214,159,54)" rx="2" ry="2" />
<text  x="1051.43" y="191.5" ></text>
</g>
<g >
<title>all (242,980 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(244,51,25)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (717 samples, 0.30%)</title><rect x="60.6" y="213" width="3.5" height="15.0" fill="rgb(220,136,46)" rx="2" ry="2" />
<text  x="63.65" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (114 samples, 0.05%)</title><rect x="32.1" y="69" width="0.6" height="15.0" fill="rgb(221,14,54)" rx="2" ry="2" />
<text  x="35.10" y="79.5" ></text>
</g>
<g >
<title>ether_nh_input (104 samples, 0.04%)</title><rect x="1069.4" y="197" width="0.5" height="15.0" fill="rgb(251,131,41)" rx="2" ry="2" />
<text  x="1072.39" y="207.5" ></text>
</g>
<g >
<title>ether_output (4,112 samples, 1.69%)</title><rect x="1069.9" y="101" width="20.0" height="15.0" fill="rgb(229,168,45)" rx="2" ry="2" />
<text  x="1072.89" y="111.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (383 samples, 0.16%)</title><rect x="1059.4" y="165" width="1.8" height="15.0" fill="rgb(212,192,39)" rx="2" ry="2" />
<text  x="1062.38" y="175.5" ></text>
</g>
<g >
<title>_rm_rlock (3,829 samples, 1.58%)</title><rect x="462.3" y="37" width="18.6" height="15.0" fill="rgb(254,92,9)" rx="2" ry="2" />
<text  x="465.33" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (114 samples, 0.05%)</title><rect x="32.1" y="85" width="0.6" height="15.0" fill="rgb(242,106,46)" rx="2" ry="2" />
<text  x="35.10" y="95.5" ></text>
</g>
<g >
<title>_task_fn_rx (114 samples, 0.05%)</title><rect x="32.1" y="277" width="0.6" height="15.0" fill="rgb(239,129,7)" rx="2" ry="2" />
<text  x="35.10" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (107,614 samples, 44.29%)</title><rect x="60.3" y="229" width="522.6" height="15.0" fill="rgb(248,161,40)" rx="2" ry="2" />
<text  x="63.31" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ip_input (4,112 samples, 1.69%)</title><rect x="1069.9" y="133" width="20.0" height="15.0" fill="rgb(212,18,26)" rx="2" ry="2" />
<text  x="1072.89" y="143.5" ></text>
</g>
<g >
<title>_task_fn_tx (99,239 samples, 40.84%)</title><rect x="582.9" y="229" width="482.0" height="15.0" fill="rgb(227,21,51)" rx="2" ry="2" />
<text  x="585.92" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>rxd_frag_to_sd (3,682 samples, 1.52%)</title><rect x="564.7" y="197" width="17.9" height="15.0" fill="rgb(207,94,9)" rx="2" ry="2" />
<text  x="567.74" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (114 samples, 0.05%)</title><rect x="32.1" y="149" width="0.6" height="15.0" fill="rgb(238,130,27)" rx="2" ry="2" />
<text  x="35.10" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (114 samples, 0.05%)</title><rect x="32.1" y="213" width="0.6" height="15.0" fill="rgb(243,154,38)" rx="2" ry="2" />
<text  x="35.10" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (145 samples, 0.06%)</title><rect x="62.9" y="181" width="0.7" height="15.0" fill="rgb(230,11,13)" rx="2" ry="2" />
<text  x="65.90" y="191.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (6,315 samples, 2.60%)</title><rect x="273.5" y="37" width="30.7" height="15.0" fill="rgb(225,45,47)" rx="2" ry="2" />
<text  x="276.49" y="47.5" >if..</text>
</g>
<g >
<title>ixgbe_write_reg (28 samples, 0.01%)</title><rect x="1185.6" y="213" width="0.1" height="15.0" fill="rgb(205,58,20)" rx="2" ry="2" />
<text  x="1188.59" y="223.5" ></text>
</g>
<g >
<title>ipfw_chk (25,231 samples, 10.38%)</title><rect x="364.3" y="53" width="122.6" height="15.0" fill="rgb(245,32,36)" rx="2" ry="2" />
<text  x="367.34" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>iflib_rxeof (104 samples, 0.04%)</title><rect x="1069.4" y="245" width="0.5" height="15.0" fill="rgb(233,132,38)" rx="2" ry="2" />
<text  x="1072.39" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (3,942 samples, 1.62%)</title><rect x="1029.3" y="165" width="19.1" height="15.0" fill="rgb(227,150,34)" rx="2" ry="2" />
<text  x="1032.27" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (104 samples, 0.04%)</title><rect x="1069.4" y="101" width="0.5" height="15.0" fill="rgb(240,155,39)" rx="2" ry="2" />
<text  x="1072.39" y="111.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (31 samples, 0.01%)</title><rect x="582.6" y="197" width="0.2" height="15.0" fill="rgb(222,197,22)" rx="2" ry="2" />
<text  x="585.62" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (104 samples, 0.04%)</title><rect x="1069.4" y="69" width="0.5" height="15.0" fill="rgb(241,216,21)" rx="2" ry="2" />
<text  x="1072.39" y="79.5" ></text>
</g>
<g >
<title>memcpy_erms (788 samples, 0.32%)</title><rect x="304.2" y="69" width="3.8" height="15.0" fill="rgb(211,63,25)" rx="2" ry="2" />
<text  x="307.18" y="79.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (6,536 samples, 2.69%)</title><rect x="631.1" y="181" width="31.7" height="15.0" fill="rgb(224,67,11)" rx="2" ry="2" />
<text  x="634.11" y="191.5" >if..</text>
</g>
<g >
<title>if_getdrvflags (21 samples, 0.01%)</title><rect x="630.7" y="181" width="0.1" height="15.0" fill="rgb(242,29,47)" rx="2" ry="2" />
<text  x="633.71" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (72 samples, 0.03%)</title><rect x="1069.4" y="37" width="0.3" height="15.0" fill="rgb(246,26,20)" rx="2" ry="2" />
<text  x="1072.39" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4,112 samples, 1.69%)</title><rect x="1069.9" y="197" width="20.0" height="15.0" fill="rgb(231,138,43)" rx="2" ry="2" />
<text  x="1072.89" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (726 samples, 0.30%)</title><rect x="641.1" y="165" width="3.5" height="15.0" fill="rgb(239,46,11)" rx="2" ry="2" />
<text  x="644.08" y="175.5" ></text>
</g>
<g >
<title>ip_tryforward (104 samples, 0.04%)</title><rect x="1069.4" y="133" width="0.5" height="15.0" fill="rgb(254,186,50)" rx="2" ry="2" />
<text  x="1072.39" y="143.5" ></text>
</g>
<g >
<title>iflib_rxeof (114 samples, 0.05%)</title><rect x="32.1" y="261" width="0.6" height="15.0" fill="rgb(254,183,1)" rx="2" ry="2" />
<text  x="35.10" y="271.5" ></text>
</g>
<g >
<title>ether_nh_input (76,612 samples, 31.53%)</title><rect x="119.4" y="165" width="372.1" height="15.0" fill="rgb(224,38,29)" rx="2" ry="2" />
<text  x="122.41" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (64,919 samples, 26.72%)</title><rect x="714.0" y="165" width="315.3" height="15.0" fill="rgb(247,36,9)" rx="2" ry="2" />
<text  x="717.00" y="175.5" >bus_dmamap_load_mbuf_sg</text>
</g>
<g >
<title>iflib_fast_intr_rxtx (12,381 samples, 5.10%)</title><rect x="1127.8" y="245" width="60.2" height="15.0" fill="rgb(220,2,27)" rx="2" ry="2" />
<text  x="1130.85" y="255.5" >iflib_..</text>
</g>
<g >
<title>iflib_if_transmit (114 samples, 0.05%)</title><rect x="32.1" y="101" width="0.6" height="15.0" fill="rgb(214,78,14)" rx="2" ry="2" />
<text  x="35.10" y="111.5" ></text>
</g>
<g >
<title>sleepq_signal (108 samples, 0.04%)</title><rect x="63.6" y="181" width="0.5" height="15.0" fill="rgb(234,213,15)" rx="2" ry="2" />
<text  x="66.60" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (162 samples, 0.07%)</title><rect x="61.9" y="197" width="0.8" height="15.0" fill="rgb(220,108,7)" rx="2" ry="2" />
<text  x="64.87" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (1,067 samples, 0.44%)</title><rect x="559.2" y="197" width="5.2" height="15.0" fill="rgb(233,214,27)" rx="2" ry="2" />
<text  x="562.17" y="207.5" ></text>
</g>
<g >
<title>doreti (43 samples, 0.02%)</title><rect x="32.7" y="277" width="0.2" height="15.0" fill="rgb(228,157,5)" rx="2" ry="2" />
<text  x="35.65" y="287.5" ></text>
</g>
<g >
<title>ether_input (4,112 samples, 1.69%)</title><rect x="1069.9" y="213" width="20.0" height="15.0" fill="rgb(212,15,40)" rx="2" ry="2" />
<text  x="1072.89" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (213,429 samples, 87.84%)</title><rect x="32.9" y="261" width="1036.5" height="15.0" fill="rgb(232,15,3)" rx="2" ry="2" />
<text  x="35.86" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>netisr_dispatch_src (114 samples, 0.05%)</title><rect x="32.1" y="229" width="0.6" height="15.0" fill="rgb(217,177,20)" rx="2" ry="2" />
<text  x="35.10" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4,112 samples, 1.69%)</title><rect x="1069.9" y="149" width="20.0" height="15.0" fill="rgb(245,157,21)" rx="2" ry="2" />
<text  x="1072.89" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (11,459 samples, 4.72%)</title><rect x="1129.4" y="229" width="55.7" height="15.0" fill="rgb(241,181,27)" rx="2" ry="2" />
<text  x="1132.40" y="239.5" >group..</text>
</g>
<g >
<title>ip_findroute (5,193 samples, 2.14%)</title><rect x="315.6" y="85" width="25.3" height="15.0" fill="rgb(238,90,41)" rx="2" ry="2" />
<text  x="318.64" y="95.5" >i..</text>
</g>
<g >
<title>if_inc_counter (60 samples, 0.02%)</title><rect x="630.8" y="181" width="0.3" height="15.0" fill="rgb(231,8,34)" rx="2" ry="2" />
<text  x="633.81" y="191.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (249 samples, 0.10%)</title><rect x="58.5" y="229" width="1.2" height="15.0" fill="rgb(254,30,26)" rx="2" ry="2" />
<text  x="61.49" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (6,545 samples, 2.69%)</title><rect x="525.4" y="197" width="31.8" height="15.0" fill="rgb(249,15,33)" rx="2" ry="2" />
<text  x="528.40" y="207.5" >ix..</text>
</g>
<g >
<title>spinlock_enter (39 samples, 0.02%)</title><rect x="1068.8" y="197" width="0.2" height="15.0" fill="rgb(205,203,34)" rx="2" ry="2" />
<text  x="1071.77" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (208 samples, 0.09%)</title><rect x="1186.4" y="229" width="1.1" height="15.0" fill="rgb(241,48,35)" rx="2" ry="2" />
<text  x="1189.45" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3,390 samples, 1.40%)</title><rect x="1012.8" y="149" width="16.5" height="15.0" fill="rgb(232,26,41)" rx="2" ry="2" />
<text  x="1015.81" y="159.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (3,617 samples, 1.49%)</title><rect x="14.2" y="277" width="17.6" height="15.0" fill="rgb(235,70,8)" rx="2" ry="2" />
<text  x="17.20" y="287.5" ></text>
</g>
<g >
<title>Xapic_isr1 (865 samples, 0.36%)</title><rect x="10.0" y="277" width="4.2" height="15.0" fill="rgb(241,158,0)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_rm_runlock (1,224 samples, 0.50%)</title><rect x="480.9" y="37" width="6.0" height="15.0" fill="rgb(228,130,8)" rx="2" ry="2" />
<text  x="483.93" y="47.5" ></text>
</g>
<g >
<title>m_freem (3,757 samples, 1.55%)</title><rect x="644.6" y="165" width="18.2" height="15.0" fill="rgb(228,105,3)" rx="2" ry="2" />
<text  x="647.60" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (1,862 samples, 0.77%)</title><rect x="1069.9" y="37" width="9.0" height="15.0" fill="rgb(226,100,43)" rx="2" ry="2" />
<text  x="1072.89" y="47.5" ></text>
</g>
<g >
<title>ether_input (104 samples, 0.04%)</title><rect x="1069.4" y="229" width="0.5" height="15.0" fill="rgb(220,108,40)" rx="2" ry="2" />
<text  x="1072.39" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (114 samples, 0.05%)</title><rect x="32.1" y="117" width="0.6" height="15.0" fill="rgb(220,83,7)" rx="2" ry="2" />
<text  x="35.10" y="127.5" ></text>
</g>
<g >
<title>iflib_fl_refill (6,067 samples, 2.50%)</title><rect x="493.1" y="197" width="29.5" height="15.0" fill="rgb(239,139,7)" rx="2" ry="2" />
<text  x="496.14" y="207.5" >if..</text>
</g>
<g >
<title>wakeup_any (252 samples, 0.10%)</title><rect x="1183.8" y="213" width="1.3" height="15.0" fill="rgb(237,188,21)" rx="2" ry="2" />
<text  x="1186.83" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (50 samples, 0.02%)</title><rect x="63.4" y="165" width="0.2" height="15.0" fill="rgb(253,165,25)" rx="2" ry="2" />
<text  x="66.36" y="175.5" ></text>
</g>
<g >
<title>_task_fn_rx (4,112 samples, 1.69%)</title><rect x="1069.9" y="245" width="20.0" height="15.0" fill="rgb(229,15,41)" rx="2" ry="2" />
<text  x="1072.89" y="255.5" ></text>
</g>
<g >
<title>ip_tryforward (4,112 samples, 1.69%)</title><rect x="1069.9" y="117" width="20.0" height="15.0" fill="rgb(215,146,13)" rx="2" ry="2" />
<text  x="1072.89" y="127.5" ></text>
</g>
<g >
<title>spinlock_enter (41 samples, 0.02%)</title><rect x="32.1" y="37" width="0.2" height="15.0" fill="rgb(236,44,9)" rx="2" ry="2" />
<text  x="35.10" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (139 samples, 0.06%)</title><rect x="1185.1" y="229" width="0.6" height="15.0" fill="rgb(217,38,24)" rx="2" ry="2" />
<text  x="1188.05" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (2,211 samples, 0.91%)</title><rect x="1078.9" y="37" width="10.8" height="15.0" fill="rgb(230,28,21)" rx="2" ry="2" />
<text  x="1081.93" y="47.5" ></text>
</g>
<g >
<title>ether_input (114 samples, 0.05%)</title><rect x="32.1" y="245" width="0.6" height="15.0" fill="rgb(222,126,24)" rx="2" ry="2" />
<text  x="35.10" y="255.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2,115 samples, 0.87%)</title><rect x="512.3" y="181" width="10.3" height="15.0" fill="rgb(205,144,9)" rx="2" ry="2" />
<text  x="515.33" y="191.5" ></text>
</g>
<g >
<title>Xtimerint_pti (58 samples, 0.02%)</title><rect x="31.8" y="277" width="0.3" height="15.0" fill="rgb(206,64,29)" rx="2" ry="2" />
<text  x="34.82" y="287.5" ></text>
</g>
<g >
<title>wakeup_any (282 samples, 0.12%)</title><rect x="62.8" y="197" width="1.3" height="15.0" fill="rgb(248,58,29)" rx="2" ry="2" />
<text  x="65.76" y="207.5" ></text>
</g>
<g >
<title>m_tag_locate (623 samples, 0.26%)</title><rect x="486.9" y="53" width="3.0" height="15.0" fill="rgb(223,151,15)" rx="2" ry="2" />
<text  x="489.87" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (71 samples, 0.03%)</title><rect x="1184.7" y="181" width="0.4" height="15.0" fill="rgb(225,29,7)" rx="2" ry="2" />
<text  x="1187.71" y="191.5" ></text>
</g>
<g >
<title>cache_alloc (44 samples, 0.02%)</title><rect x="509.1" y="165" width="0.3" height="15.0" fill="rgb(253,11,54)" rx="2" ry="2" />
<text  x="512.14" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (39 samples, 0.02%)</title><rect x="1182.6" y="213" width="0.2" height="15.0" fill="rgb(242,93,39)" rx="2" ry="2" />
<text  x="1185.62" y="223.5" ></text>
</g>
<g >
<title>drain_ring_lockless (98,937 samples, 40.72%)</title><rect x="583.3" y="213" width="480.4" height="15.0" fill="rgb(245,221,29)" rx="2" ry="2" />
<text  x="586.27" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ip_tryforward (67,924 samples, 27.95%)</title><rect x="160.0" y="101" width="329.9" height="15.0" fill="rgb(205,117,29)" rx="2" ry="2" />
<text  x="163.03" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>sleepq_broadcast (63 samples, 0.03%)</title><rect x="1067.2" y="213" width="0.3" height="15.0" fill="rgb(232,168,26)" rx="2" ry="2" />
<text  x="1070.16" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,429 samples, 1.00%)</title><rect x="260.9" y="37" width="11.8" height="15.0" fill="rgb(254,23,12)" rx="2" ry="2" />
<text  x="263.86" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (92 samples, 0.04%)</title><rect x="113.8" y="181" width="0.5" height="15.0" fill="rgb(240,206,26)" rx="2" ry="2" />
<text  x="116.84" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (514 samples, 0.21%)</title><rect x="1061.2" y="165" width="2.5" height="15.0" fill="rgb(227,130,46)" rx="2" ry="2" />
<text  x="1064.24" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4,112 samples, 1.69%)</title><rect x="1069.9" y="53" width="20.0" height="15.0" fill="rgb(246,36,36)" rx="2" ry="2" />
<text  x="1072.89" y="63.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (28 samples, 0.01%)</title><rect x="1064.7" y="197" width="0.2" height="15.0" fill="rgb(234,99,21)" rx="2" ry="2" />
<text  x="1067.73" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (408 samples, 0.17%)</title><rect x="557.2" y="197" width="2.0" height="15.0" fill="rgb(239,81,35)" rx="2" ry="2" />
<text  x="560.19" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_timer (235 samples, 0.10%)</title><rect x="1188.9" y="277" width="1.1" height="15.0" fill="rgb(252,111,6)" rx="2" ry="2" />
<text  x="1191.86" y="287.5" ></text>
</g>
<g >
<title>ether_demux (104 samples, 0.04%)</title><rect x="1069.4" y="181" width="0.5" height="15.0" fill="rgb(248,185,51)" rx="2" ry="2" />
<text  x="1072.39" y="191.5" ></text>
</g>
<g >
<title>in_localip (1,570 samples, 0.65%)</title><rect x="308.0" y="85" width="7.6" height="15.0" fill="rgb(224,22,10)" rx="2" ry="2" />
<text  x="311.01" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (114 samples, 0.05%)</title><rect x="32.1" y="181" width="0.6" height="15.0" fill="rgb(211,178,14)" rx="2" ry="2" />
<text  x="35.10" y="191.5" ></text>
</g>
<g >
<title>sleepq_release (49 samples, 0.02%)</title><rect x="1069.0" y="213" width="0.2" height="15.0" fill="rgb(208,194,47)" rx="2" ry="2" />
<text  x="1071.96" y="223.5" ></text>
</g>
<g >
<title>wakeup (522 samples, 0.21%)</title><rect x="1066.8" y="229" width="2.6" height="15.0" fill="rgb(224,91,26)" rx="2" ry="2" />
<text  x="1069.82" y="239.5" ></text>
</g>
<g >
<title>keg_alloc_slab (28 samples, 0.01%)</title><rect x="509.2" y="133" width="0.1" height="15.0" fill="rgb(223,106,35)" rx="2" ry="2" />
<text  x="512.17" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (71,979 samples, 29.62%)</title><rect x="140.3" y="133" width="349.6" height="15.0" fill="rgb(216,116,4)" rx="2" ry="2" />
<text  x="143.34" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>intr_execute_handlers (20,250 samples, 8.33%)</title><rect x="1089.9" y="277" width="98.3" height="15.0" fill="rgb(231,133,2)" rx="2" ry="2" />
<text  x="1092.86" y="287.5" >intr_execut..</text>
</g>
<g >
<title>ether_output (21,512 samples, 8.85%)</title><rect x="203.5" y="85" width="104.5" height="15.0" fill="rgb(208,40,40)" rx="2" ry="2" />
<text  x="206.54" y="95.5" >ether_output</text>
</g>
<g >
<title>iflib_if_transmit (4,112 samples, 1.69%)</title><rect x="1069.9" y="69" width="20.0" height="15.0" fill="rgb(240,197,11)" rx="2" ry="2" />
<text  x="1072.89" y="79.5" ></text>
</g>
<g >
<title>sleepq_signal (99 samples, 0.04%)</title><rect x="1184.6" y="197" width="0.5" height="15.0" fill="rgb(205,98,23)" rx="2" ry="2" />
<text  x="1187.57" y="207.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (21 samples, 0.01%)</title><rect x="62.7" y="197" width="0.1" height="15.0" fill="rgb(239,79,3)" rx="2" ry="2" />
<text  x="65.66" y="207.5" ></text>
</g>
<g >
<title>hardclock (164 samples, 0.07%)</title><rect x="1189.1" y="229" width="0.8" height="15.0" fill="rgb(253,176,9)" rx="2" ry="2" />
<text  x="1192.06" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,112 samples, 1.69%)</title><rect x="1069.9" y="277" width="20.0" height="15.0" fill="rgb(251,211,44)" rx="2" ry="2" />
<text  x="1072.89" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch (175 samples, 0.07%)</title><rect x="139.5" y="133" width="0.8" height="15.0" fill="rgb(246,108,16)" rx="2" ry="2" />
<text  x="142.49" y="143.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (21 samples, 0.01%)</title><rect x="60.2" y="213" width="0.1" height="15.0" fill="rgb(212,37,51)" rx="2" ry="2" />
<text  x="63.21" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (73 samples, 0.03%)</title><rect x="32.3" y="37" width="0.4" height="15.0" fill="rgb(228,227,23)" rx="2" ry="2" />
<text  x="35.30" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (575 samples, 0.24%)</title><rect x="522.6" y="197" width="2.8" height="15.0" fill="rgb(211,124,30)" rx="2" ry="2" />
<text  x="525.60" y="207.5" ></text>
</g>
</g>
</svg>
