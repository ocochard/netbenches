<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>keg_alloc_slab (41 samples, 0.02%)</title><rect x="518.1" y="133" width="0.1" height="15.0" fill="rgb(229,201,20)" rx="2" ry="2" />
<text  x="521.05" y="143.5" ></text>
</g>
<g >
<title>ether_output (114 samples, 0.05%)</title><rect x="993.4" y="117" width="0.5" height="15.0" fill="rgb(251,219,3)" rx="2" ry="2" />
<text  x="996.40" y="127.5" ></text>
</g>
<g >
<title>ip_input (7,079 samples, 2.80%)</title><rect x="993.4" y="149" width="33.0" height="15.0" fill="rgb(213,104,12)" rx="2" ry="2" />
<text  x="996.40" y="159.5" >ip..</text>
</g>
<g >
<title>netisr_dispatch (156 samples, 0.06%)</title><rect x="130.2" y="133" width="0.7" height="15.0" fill="rgb(216,93,6)" rx="2" ry="2" />
<text  x="133.19" y="143.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (25 samples, 0.01%)</title><rect x="518.1" y="117" width="0.1" height="15.0" fill="rgb(230,172,53)" rx="2" ry="2" />
<text  x="521.07" y="127.5" ></text>
</g>
<g >
<title>sleepq_lock (110 samples, 0.04%)</title><rect x="1184.2" y="197" width="0.5" height="15.0" fill="rgb(237,39,46)" rx="2" ry="2" />
<text  x="1187.22" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (125 samples, 0.05%)</title><rect x="988.1" y="213" width="0.6" height="15.0" fill="rgb(224,160,21)" rx="2" ry="2" />
<text  x="991.12" y="223.5" ></text>
</g>
<g >
<title>handleevents (239 samples, 0.09%)</title><rect x="1188.9" y="245" width="1.1" height="15.0" fill="rgb(237,97,22)" rx="2" ry="2" />
<text  x="1191.88" y="255.5" ></text>
</g>
<g >
<title>in_localip (1,599 samples, 0.63%)</title><rect x="297.3" y="85" width="7.5" height="15.0" fill="rgb(230,101,12)" rx="2" ry="2" />
<text  x="300.29" y="95.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (220 samples, 0.09%)</title><rect x="1186.5" y="229" width="1.0" height="15.0" fill="rgb(244,181,5)" rx="2" ry="2" />
<text  x="1189.46" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (4,259 samples, 1.68%)</title><rect x="1026.4" y="69" width="19.9" height="15.0" fill="rgb(215,89,31)" rx="2" ry="2" />
<text  x="1029.44" y="79.5" ></text>
</g>
<g >
<title>hardclock (196 samples, 0.08%)</title><rect x="1188.9" y="229" width="1.0" height="15.0" fill="rgb(216,13,34)" rx="2" ry="2" />
<text  x="1191.95" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (51 samples, 0.02%)</title><rect x="56.8" y="165" width="0.2" height="15.0" fill="rgb(238,68,4)" rx="2" ry="2" />
<text  x="59.77" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (133 samples, 0.05%)</title><rect x="56.4" y="181" width="0.6" height="15.0" fill="rgb(251,131,44)" rx="2" ry="2" />
<text  x="59.39" y="191.5" ></text>
</g>
<g >
<title>ip_tryforward (74,580 samples, 29.50%)</title><rect x="150.7" y="101" width="348.1" height="15.0" fill="rgb(251,174,41)" rx="2" ry="2" />
<text  x="153.66" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ixgbe_msix_que (102 samples, 0.04%)</title><rect x="1187.5" y="229" width="0.5" height="15.0" fill="rgb(226,207,49)" rx="2" ry="2" />
<text  x="1190.49" y="239.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (192 samples, 0.08%)</title><rect x="660.2" y="117" width="0.9" height="15.0" fill="rgb(220,134,0)" rx="2" ry="2" />
<text  x="663.23" y="127.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (3,316 samples, 1.31%)</title><rect x="972.4" y="181" width="15.5" height="15.0" fill="rgb(232,215,14)" rx="2" ry="2" />
<text  x="975.44" y="191.5" ></text>
</g>
<g >
<title>in_lltable_lookup (1,749 samples, 0.69%)</title><rect x="218.8" y="53" width="8.2" height="15.0" fill="rgb(236,42,39)" rx="2" ry="2" />
<text  x="221.81" y="63.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (133 samples, 0.05%)</title><rect x="31.3" y="85" width="0.6" height="15.0" fill="rgb(248,21,25)" rx="2" ry="2" />
<text  x="34.30" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (133 samples, 0.05%)</title><rect x="31.3" y="181" width="0.6" height="15.0" fill="rgb(218,131,20)" rx="2" ry="2" />
<text  x="34.30" y="191.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (22 samples, 0.01%)</title><rect x="1046.1" y="37" width="0.1" height="15.0" fill="rgb(252,144,29)" rx="2" ry="2" />
<text  x="1049.09" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (114 samples, 0.05%)</title><rect x="993.4" y="69" width="0.5" height="15.0" fill="rgb(208,144,24)" rx="2" ry="2" />
<text  x="996.40" y="79.5" ></text>
</g>
<g >
<title>pmc_process_samples (163 samples, 0.06%)</title><rect x="1189.1" y="197" width="0.7" height="15.0" fill="rgb(214,19,4)" rx="2" ry="2" />
<text  x="1192.07" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (18,279 samples, 7.23%)</title><rect x="1026.4" y="197" width="85.4" height="15.0" fill="rgb(212,103,46)" rx="2" ry="2" />
<text  x="1029.44" y="207.5" >netisr_dis..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (6,819 samples, 2.70%)</title><rect x="630.9" y="181" width="31.8" height="15.0" fill="rgb(253,161,24)" rx="2" ry="2" />
<text  x="633.89" y="191.5" >if..</text>
</g>
<g >
<title>mb_ctor_mbuf (479 samples, 0.19%)</title><rect x="529.6" y="165" width="2.3" height="15.0" fill="rgb(205,218,12)" rx="2" ry="2" />
<text  x="532.64" y="175.5" ></text>
</g>
<g >
<title>pfil_run_hooks (6,965 samples, 2.76%)</title><rect x="993.9" y="117" width="32.5" height="15.0" fill="rgb(213,209,42)" rx="2" ry="2" />
<text  x="996.93" y="127.5" >pf..</text>
</g>
<g >
<title>spinlock_exit (275 samples, 0.11%)</title><rect x="989.6" y="229" width="1.3" height="15.0" fill="rgb(209,27,8)" rx="2" ry="2" />
<text  x="992.64" y="239.5" ></text>
</g>
<g >
<title>ether_output (133 samples, 0.05%)</title><rect x="31.3" y="133" width="0.6" height="15.0" fill="rgb(217,25,18)" rx="2" ry="2" />
<text  x="34.30" y="143.5" ></text>
</g>
<g >
<title>hash_packet (3,283 samples, 1.30%)</title><rect x="1096.4" y="37" width="15.4" height="15.0" fill="rgb(228,92,48)" rx="2" ry="2" />
<text  x="1099.43" y="47.5" ></text>
</g>
<g >
<title>wakeup (517 samples, 0.20%)</title><rect x="990.9" y="229" width="2.4" height="15.0" fill="rgb(241,17,10)" rx="2" ry="2" />
<text  x="993.93" y="239.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (14,020 samples, 5.55%)</title><rect x="1046.3" y="53" width="65.5" height="15.0" fill="rgb(235,177,54)" rx="2" ry="2" />
<text  x="1049.32" y="63.5" >ipfw_dy..</text>
</g>
<g >
<title>pmc_hook_handler (163 samples, 0.06%)</title><rect x="1189.1" y="213" width="0.7" height="15.0" fill="rgb(206,18,33)" rx="2" ry="2" />
<text  x="1192.07" y="223.5" ></text>
</g>
<g >
<title>ipfw_chk (14,020 samples, 5.55%)</title><rect x="1046.3" y="69" width="65.5" height="15.0" fill="rgb(222,50,27)" rx="2" ry="2" />
<text  x="1049.32" y="79.5" >ipfw_chk</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (65 samples, 0.03%)</title><rect x="518.3" y="181" width="0.3" height="15.0" fill="rgb(243,28,29)" rx="2" ry="2" />
<text  x="521.30" y="191.5" ></text>
</g>
<g >
<title>ether_demux (133 samples, 0.05%)</title><rect x="31.3" y="197" width="0.6" height="15.0" fill="rgb(238,83,43)" rx="2" ry="2" />
<text  x="34.30" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (133 samples, 0.05%)</title><rect x="31.3" y="261" width="0.6" height="15.0" fill="rgb(250,172,52)" rx="2" ry="2" />
<text  x="34.30" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (82 samples, 0.03%)</title><rect x="993.4" y="37" width="0.4" height="15.0" fill="rgb(213,74,9)" rx="2" ry="2" />
<text  x="996.40" y="47.5" ></text>
</g>
<g >
<title>sleepq_release (69 samples, 0.03%)</title><rect x="992.9" y="213" width="0.3" height="15.0" fill="rgb(231,67,42)" rx="2" ry="2" />
<text  x="995.88" y="223.5" ></text>
</g>
<g >
<title>ipfw_chk (30,891 samples, 12.22%)</title><rect x="351.6" y="53" width="144.2" height="15.0" fill="rgb(217,143,39)" rx="2" ry="2" />
<text  x="354.58" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>spinlock_exit (148 samples, 0.06%)</title><rect x="55.5" y="197" width="0.7" height="15.0" fill="rgb(239,127,25)" rx="2" ry="2" />
<text  x="58.53" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (133 samples, 0.05%)</title><rect x="31.3" y="101" width="0.6" height="15.0" fill="rgb(210,89,12)" rx="2" ry="2" />
<text  x="34.30" y="111.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (3,617 samples, 1.43%)</title><rect x="14.1" y="277" width="16.9" height="15.0" fill="rgb(205,1,14)" rx="2" ry="2" />
<text  x="17.08" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (79 samples, 0.03%)</title><rect x="31.6" y="37" width="0.3" height="15.0" fill="rgb(233,72,17)" rx="2" ry="2" />
<text  x="34.55" y="47.5" ></text>
</g>
<g >
<title>m_tag_locate (643 samples, 0.25%)</title><rect x="495.8" y="53" width="3.0" height="15.0" fill="rgb(225,18,3)" rx="2" ry="2" />
<text  x="498.77" y="63.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (8,975 samples, 3.55%)</title><rect x="1143.3" y="229" width="41.9" height="15.0" fill="rgb(208,55,3)" rx="2" ry="2" />
<text  x="1146.31" y="239.5" >gro..</text>
</g>
<g >
<title>intr_execute_handlers (16,377 samples, 6.48%)</title><rect x="1111.8" y="277" width="76.4" height="15.0" fill="rgb(229,137,27)" rx="2" ry="2" />
<text  x="1114.76" y="287.5" >intr_exe..</text>
</g>
<g >
<title>wakeup_any (26 samples, 0.01%)</title><rect x="1046.2" y="37" width="0.1" height="15.0" fill="rgb(235,131,20)" rx="2" ry="2" />
<text  x="1049.20" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (114 samples, 0.05%)</title><rect x="993.4" y="101" width="0.5" height="15.0" fill="rgb(237,40,25)" rx="2" ry="2" />
<text  x="996.40" y="111.5" ></text>
</g>
<g >
<title>ether_input (18,279 samples, 7.23%)</title><rect x="1026.4" y="213" width="85.4" height="15.0" fill="rgb(218,152,7)" rx="2" ry="2" />
<text  x="1029.44" y="223.5" >ether_input</text>
</g>
<g >
<title>ipfw_check_packet (14,020 samples, 5.55%)</title><rect x="1046.3" y="85" width="65.5" height="15.0" fill="rgb(235,170,34)" rx="2" ry="2" />
<text  x="1049.32" y="95.5" >ipfw_ch..</text>
</g>
<g >
<title>spinlock_exit (68 samples, 0.03%)</title><rect x="1184.9" y="181" width="0.3" height="15.0" fill="rgb(206,67,34)" rx="2" ry="2" />
<text  x="1187.88" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (196 samples, 0.08%)</title><rect x="1183.1" y="213" width="0.9" height="15.0" fill="rgb(252,134,50)" rx="2" ry="2" />
<text  x="1186.08" y="223.5" ></text>
</g>
<g >
<title>m_freem (3,997 samples, 1.58%)</title><rect x="644.1" y="165" width="18.6" height="15.0" fill="rgb(244,99,22)" rx="2" ry="2" />
<text  x="647.07" y="175.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,706 samples, 1.07%)</title><rect x="650.1" y="133" width="12.6" height="15.0" fill="rgb(229,7,6)" rx="2" ry="2" />
<text  x="653.09" y="143.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (52,295 samples, 20.69%)</title><rect x="710.8" y="165" width="244.1" height="15.0" fill="rgb(250,210,14)" rx="2" ry="2" />
<text  x="713.78" y="175.5" >bus_dmamap_load_mbuf_sg</text>
</g>
<g >
<title>netisr_dispatch_src (133 samples, 0.05%)</title><rect x="31.3" y="229" width="0.6" height="15.0" fill="rgb(209,143,49)" rx="2" ry="2" />
<text  x="34.30" y="239.5" ></text>
</g>
<g >
<title>ip_input (18,279 samples, 7.23%)</title><rect x="1026.4" y="133" width="85.4" height="15.0" fill="rgb(243,157,36)" rx="2" ry="2" />
<text  x="1029.44" y="143.5" >ip_input</text>
</g>
<g >
<title>sleepq_broadcast (50 samples, 0.02%)</title><rect x="991.3" y="213" width="0.2" height="15.0" fill="rgb(217,223,19)" rx="2" ry="2" />
<text  x="994.29" y="223.5" ></text>
</g>
<g >
<title>fork_exit (205,941 samples, 81.46%)</title><rect x="32.1" y="277" width="961.3" height="15.0" fill="rgb(233,63,42)" rx="2" ry="2" />
<text  x="35.14" y="287.5" >fork_exit</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (3,761 samples, 1.49%)</title><rect x="954.9" y="165" width="17.5" height="15.0" fill="rgb(250,179,31)" rx="2" ry="2" />
<text  x="957.87" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (18,279 samples, 7.23%)</title><rect x="1026.4" y="277" width="85.4" height="15.0" fill="rgb(233,119,0)" rx="2" ry="2" />
<text  x="1029.44" y="287.5" >gtaskqueue..</text>
</g>
<g >
<title>netisr_dispatch_src (7,079 samples, 2.80%)</title><rect x="993.4" y="213" width="33.0" height="15.0" fill="rgb(224,37,49)" rx="2" ry="2" />
<text  x="996.40" y="223.5" >ne..</text>
</g>
<g >
<title>sleepq_signal (100 samples, 0.04%)</title><rect x="1184.7" y="197" width="0.5" height="15.0" fill="rgb(231,94,46)" rx="2" ry="2" />
<text  x="1187.73" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (13,844 samples, 5.48%)</title><rect x="229.0" y="69" width="64.6" height="15.0" fill="rgb(212,29,5)" rx="2" ry="2" />
<text  x="231.96" y="79.5" >ether_o..</text>
</g>
<g >
<title>iflib_encap (66,355 samples, 26.25%)</title><rect x="662.7" y="181" width="309.7" height="15.0" fill="rgb(254,130,48)" rx="2" ry="2" />
<text  x="665.72" y="191.5" >iflib_encap</text>
</g>
<g >
<title>rxd_frag_to_sd (3,853 samples, 1.52%)</title><rect x="572.0" y="197" width="18.0" height="15.0" fill="rgb(223,65,17)" rx="2" ry="2" />
<text  x="574.99" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (3,072 samples, 1.22%)</title><rect x="313.0" y="53" width="14.4" height="15.0" fill="rgb(208,157,20)" rx="2" ry="2" />
<text  x="316.04" y="63.5" ></text>
</g>
<g >
<title>_rm_rlock (3,851 samples, 1.52%)</title><rect x="457.4" y="37" width="17.9" height="15.0" fill="rgb(225,159,41)" rx="2" ry="2" />
<text  x="460.37" y="47.5" ></text>
</g>
<g >
<title>iflib_txq_drain (79,358 samples, 31.39%)</title><rect x="617.5" y="197" width="370.4" height="15.0" fill="rgb(239,28,21)" rx="2" ry="2" />
<text  x="620.53" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>pfil_run_hooks (14,020 samples, 5.55%)</title><rect x="1046.3" y="101" width="65.5" height="15.0" fill="rgb(212,124,3)" rx="2" ry="2" />
<text  x="1049.32" y="111.5" >pfil_ru..</text>
</g>
<g >
<title>ether_demux (7,079 samples, 2.80%)</title><rect x="993.4" y="181" width="33.0" height="15.0" fill="rgb(238,227,28)" rx="2" ry="2" />
<text  x="996.40" y="191.5" >et..</text>
</g>
<g >
<title>dyn_update_proto_state (2,587 samples, 1.02%)</title><rect x="994.0" y="37" width="12.0" height="15.0" fill="rgb(215,163,29)" rx="2" ry="2" />
<text  x="996.97" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (18,279 samples, 7.23%)</title><rect x="1026.4" y="245" width="85.4" height="15.0" fill="rgb(240,160,18)" rx="2" ry="2" />
<text  x="1029.44" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>ip_tryforward (18,279 samples, 7.23%)</title><rect x="1026.4" y="117" width="85.4" height="15.0" fill="rgb(240,62,9)" rx="2" ry="2" />
<text  x="1029.44" y="127.5" >ip_tryforw..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (791 samples, 0.31%)</title><rect x="640.4" y="165" width="3.7" height="15.0" fill="rgb(228,115,14)" rx="2" ry="2" />
<text  x="643.37" y="175.5" ></text>
</g>
<g >
<title>ip_findroute (4,849 samples, 1.92%)</title><rect x="304.8" y="85" width="22.6" height="15.0" fill="rgb(251,225,47)" rx="2" ry="2" />
<text  x="307.75" y="95.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (18,279 samples, 7.23%)</title><rect x="1026.4" y="149" width="85.4" height="15.0" fill="rgb(226,211,53)" rx="2" ry="2" />
<text  x="1029.44" y="159.5" >netisr_dis..</text>
</g>
<g >
<title>memcpy_erms (1,127 samples, 0.45%)</title><rect x="566.4" y="197" width="5.2" height="15.0" fill="rgb(254,130,28)" rx="2" ry="2" />
<text  x="569.38" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (81 samples, 0.03%)</title><rect x="630.5" y="181" width="0.4" height="15.0" fill="rgb(232,21,33)" rx="2" ry="2" />
<text  x="633.52" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (4,259 samples, 1.68%)</title><rect x="1026.4" y="85" width="19.9" height="15.0" fill="rgb(217,159,7)" rx="2" ry="2" />
<text  x="1029.44" y="95.5" ></text>
</g>
<g >
<title>all (252,806 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(240,41,37)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>cache_alloc_retry (89 samples, 0.04%)</title><rect x="517.9" y="181" width="0.4" height="15.0" fill="rgb(243,167,8)" rx="2" ry="2" />
<text  x="520.89" y="191.5" ></text>
</g>
<g >
<title>iflib_if_transmit (114 samples, 0.05%)</title><rect x="993.4" y="85" width="0.5" height="15.0" fill="rgb(218,71,41)" rx="2" ry="2" />
<text  x="996.40" y="95.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (28 samples, 0.01%)</title><rect x="1184.0" y="213" width="0.1" height="15.0" fill="rgb(233,8,27)" rx="2" ry="2" />
<text  x="1187.00" y="223.5" ></text>
</g>
<g >
<title>hash_packet (4,368 samples, 1.73%)</title><rect x="1006.0" y="53" width="20.4" height="15.0" fill="rgb(222,146,45)" rx="2" ry="2" />
<text  x="1009.05" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (26 samples, 0.01%)</title><rect x="992.8" y="197" width="0.1" height="15.0" fill="rgb(247,52,15)" rx="2" ry="2" />
<text  x="995.76" y="207.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (32 samples, 0.01%)</title><rect x="1189.6" y="181" width="0.1" height="15.0" fill="rgb(205,204,7)" rx="2" ry="2" />
<text  x="1192.56" y="191.5" ></text>
</g>
<g >
<title>m_free (3,494 samples, 1.38%)</title><rect x="646.4" y="149" width="16.3" height="15.0" fill="rgb(218,28,37)" rx="2" ry="2" />
<text  x="649.41" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (7,079 samples, 2.80%)</title><rect x="993.4" y="277" width="33.0" height="15.0" fill="rgb(242,111,50)" rx="2" ry="2" />
<text  x="996.40" y="287.5" >gt..</text>
</g>
<g >
<title>ixgbe_write_reg (425 samples, 0.17%)</title><rect x="985.9" y="165" width="2.0" height="15.0" fill="rgb(207,41,35)" rx="2" ry="2" />
<text  x="988.94" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (55 samples, 0.02%)</title><rect x="1182.8" y="213" width="0.3" height="15.0" fill="rgb(212,60,49)" rx="2" ry="2" />
<text  x="1185.83" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (83,412 samples, 32.99%)</title><rect x="111.2" y="165" width="389.3" height="15.0" fill="rgb(254,95,4)" rx="2" ry="2" />
<text  x="114.17" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>pmap_kextract (366 samples, 0.14%)</title><rect x="953.2" y="133" width="1.7" height="15.0" fill="rgb(208,126,51)" rx="2" ry="2" />
<text  x="956.17" y="143.5" ></text>
</g>
<g >
<title>lapic_handle_timer (282 samples, 0.11%)</title><rect x="1188.7" y="277" width="1.3" height="15.0" fill="rgb(211,147,18)" rx="2" ry="2" />
<text  x="1191.68" y="287.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (114 samples, 0.05%)</title><rect x="1185.2" y="229" width="0.5" height="15.0" fill="rgb(242,13,30)" rx="2" ry="2" />
<text  x="1188.20" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (75 samples, 0.03%)</title><rect x="571.6" y="197" width="0.4" height="15.0" fill="rgb(218,96,28)" rx="2" ry="2" />
<text  x="574.64" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (7,079 samples, 2.80%)</title><rect x="993.4" y="245" width="33.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="996.40" y="255.5" >if..</text>
</g>
<g >
<title>intr_lookup_source (75 samples, 0.03%)</title><rect x="1188.3" y="261" width="0.4" height="15.0" fill="rgb(240,124,35)" rx="2" ry="2" />
<text  x="1191.33" y="271.5" ></text>
</g>
<g >
<title>ipfw_check_packet (34,352 samples, 13.59%)</title><rect x="338.4" y="69" width="160.4" height="15.0" fill="rgb(234,40,45)" rx="2" ry="2" />
<text  x="341.43" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>Xapic_isr1 (874 samples, 0.35%)</title><rect x="10.0" y="277" width="4.1" height="15.0" fill="rgb(228,8,38)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (205,929 samples, 81.46%)</title><rect x="32.1" y="261" width="961.2" height="15.0" fill="rgb(231,158,49)" rx="2" ry="2" />
<text  x="35.14" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>sleepq_signal (32 samples, 0.01%)</title><rect x="993.8" y="37" width="0.1" height="15.0" fill="rgb(233,49,16)" rx="2" ry="2" />
<text  x="996.78" y="47.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (9,930 samples, 3.93%)</title><rect x="1141.6" y="245" width="46.4" height="15.0" fill="rgb(222,11,6)" rx="2" ry="2" />
<text  x="1144.62" y="255.5" >ifli..</text>
</g>
<g >
<title>_task_fn_rx (133 samples, 0.05%)</title><rect x="31.3" y="277" width="0.6" height="15.0" fill="rgb(218,114,36)" rx="2" ry="2" />
<text  x="34.30" y="287.5" ></text>
</g>
<g >
<title>_task_fn_tx (85,416 samples, 33.79%)</title><rect x="590.3" y="229" width="398.7" height="15.0" fill="rgb(209,49,52)" rx="2" ry="2" />
<text  x="593.31" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>wakeup_any (229 samples, 0.09%)</title><rect x="1184.1" y="213" width="1.1" height="15.0" fill="rgb(209,8,17)" rx="2" ry="2" />
<text  x="1187.13" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (504 samples, 0.20%)</title><rect x="518.6" y="181" width="2.4" height="15.0" fill="rgb(243,195,53)" rx="2" ry="2" />
<text  x="521.61" y="191.5" ></text>
</g>
<g >
<title>ether_input (84,815 samples, 33.55%)</title><rect x="104.6" y="197" width="395.9" height="15.0" fill="rgb(241,18,9)" rx="2" ry="2" />
<text  x="107.62" y="207.5" >ether_input</text>
</g>
<g >
<title>arpresolve (3,601 samples, 1.42%)</title><rect x="212.1" y="69" width="16.9" height="15.0" fill="rgb(208,28,21)" rx="2" ry="2" />
<text  x="215.15" y="79.5" ></text>
</g>
<g >
<title>jenkins_hash32 (4,368 samples, 1.73%)</title><rect x="1006.0" y="37" width="20.4" height="15.0" fill="rgb(227,103,7)" rx="2" ry="2" />
<text  x="1009.05" y="47.5" ></text>
</g>
<g >
<title>if_getdrvflags (31 samples, 0.01%)</title><rect x="57.6" y="213" width="0.2" height="15.0" fill="rgb(213,111,37)" rx="2" ry="2" />
<text  x="60.61" y="223.5" ></text>
</g>
<g >
<title>ether_output (4,259 samples, 1.68%)</title><rect x="1026.4" y="101" width="19.9" height="15.0" fill="rgb(248,109,14)" rx="2" ry="2" />
<text  x="1029.44" y="111.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (227 samples, 0.09%)</title><rect x="52.2" y="229" width="1.1" height="15.0" fill="rgb(219,214,8)" rx="2" ry="2" />
<text  x="55.25" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (18,279 samples, 7.23%)</title><rect x="1026.4" y="181" width="85.4" height="15.0" fill="rgb(242,188,3)" rx="2" ry="2" />
<text  x="1029.44" y="191.5" >ether_nh_i..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (62 samples, 0.02%)</title><rect x="988.7" y="213" width="0.3" height="15.0" fill="rgb(207,54,25)" rx="2" ry="2" />
<text  x="991.70" y="223.5" ></text>
</g>
<g >
<title>drain_ring_lockless (85,105 samples, 33.66%)</title><rect x="590.7" y="213" width="397.2" height="15.0" fill="rgb(244,125,36)" rx="2" ry="2" />
<text  x="593.70" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>memcpy_erms (795 samples, 0.31%)</title><rect x="293.6" y="69" width="3.7" height="15.0" fill="rgb(223,41,23)" rx="2" ry="2" />
<text  x="296.58" y="79.5" ></text>
</g>
<g >
<title>spinlock_enter (40 samples, 0.02%)</title><rect x="1184.5" y="181" width="0.2" height="15.0" fill="rgb(242,190,47)" rx="2" ry="2" />
<text  x="1187.54" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (6,379 samples, 2.52%)</title><rect x="534.7" y="197" width="29.8" height="15.0" fill="rgb(220,226,51)" rx="2" ry="2" />
<text  x="537.72" y="207.5" >ix..</text>
</g>
<g >
<title>sleepq_lock (54 samples, 0.02%)</title><rect x="31.3" y="53" width="0.3" height="15.0" fill="rgb(209,35,28)" rx="2" ry="2" />
<text  x="34.30" y="63.5" ></text>
</g>
<g >
<title>intr_event_handle (15,423 samples, 6.10%)</title><rect x="1116.1" y="261" width="72.0" height="15.0" fill="rgb(222,135,30)" rx="2" ry="2" />
<text  x="1119.14" y="271.5" >intr_eve..</text>
</g>
<g >
<title>ip_input (133 samples, 0.05%)</title><rect x="31.3" y="165" width="0.6" height="15.0" fill="rgb(213,172,10)" rx="2" ry="2" />
<text  x="34.30" y="175.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (86 samples, 0.03%)</title><rect x="710.4" y="165" width="0.4" height="15.0" fill="rgb(233,112,15)" rx="2" ry="2" />
<text  x="713.38" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (54 samples, 0.02%)</title><rect x="31.3" y="37" width="0.3" height="15.0" fill="rgb(241,42,26)" rx="2" ry="2" />
<text  x="34.30" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (291 samples, 0.12%)</title><rect x="991.5" y="213" width="1.4" height="15.0" fill="rgb(219,103,38)" rx="2" ry="2" />
<text  x="994.52" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (25 samples, 0.01%)</title><rect x="54.0" y="213" width="0.1" height="15.0" fill="rgb(223,64,54)" rx="2" ry="2" />
<text  x="56.96" y="223.5" ></text>
</g>
<g >
<title>cache_alloc (58 samples, 0.02%)</title><rect x="518.0" y="165" width="0.3" height="15.0" fill="rgb(241,37,14)" rx="2" ry="2" />
<text  x="521.01" y="175.5" ></text>
</g>
<g >
<title>if_getdrvflags (186 samples, 0.07%)</title><rect x="500.6" y="197" width="0.9" height="15.0" fill="rgb(233,96,21)" rx="2" ry="2" />
<text  x="503.58" y="207.5" ></text>
</g>
<g >
<title>dyn_lookup_ipv4_state (2,587 samples, 1.02%)</title><rect x="994.0" y="53" width="12.0" height="15.0" fill="rgb(215,156,21)" rx="2" ry="2" />
<text  x="996.97" y="63.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (166 samples, 0.07%)</title><rect x="53.3" y="229" width="0.8" height="15.0" fill="rgb(213,172,22)" rx="2" ry="2" />
<text  x="56.31" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (2,237 samples, 0.88%)</title><rect x="1035.7" y="37" width="10.4" height="15.0" fill="rgb(212,198,11)" rx="2" ry="2" />
<text  x="1038.65" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (12,072 samples, 4.78%)</title><rect x="237.2" y="53" width="56.4" height="15.0" fill="rgb(213,191,24)" rx="2" ry="2" />
<text  x="240.23" y="63.5" >iflib..</text>
</g>
<g >
<title>spinlock_enter (1,973 samples, 0.78%)</title><rect x="1026.4" y="37" width="9.3" height="15.0" fill="rgb(206,20,16)" rx="2" ry="2" />
<text  x="1029.44" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (6,642 samples, 2.63%)</title><rect x="262.6" y="37" width="31.0" height="15.0" fill="rgb(205,182,54)" rx="2" ry="2" />
<text  x="265.56" y="47.5" >if..</text>
</g>
<g >
<title>sleepq_signal (79 samples, 0.03%)</title><rect x="31.6" y="53" width="0.3" height="15.0" fill="rgb(225,37,48)" rx="2" ry="2" />
<text  x="34.55" y="63.5" ></text>
</g>
<g >
<title>doreti (48 samples, 0.02%)</title><rect x="31.9" y="277" width="0.2" height="15.0" fill="rgb(208,62,35)" rx="2" ry="2" />
<text  x="34.92" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (18,279 samples, 7.23%)</title><rect x="1026.4" y="261" width="85.4" height="15.0" fill="rgb(218,192,12)" rx="2" ry="2" />
<text  x="1029.44" y="271.5" >gtaskqueue..</text>
</g>
<g >
<title>spinlock_enter (129 samples, 0.05%)</title><rect x="989.0" y="229" width="0.6" height="15.0" fill="rgb(245,199,1)" rx="2" ry="2" />
<text  x="992.04" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (94 samples, 0.04%)</title><rect x="57.2" y="165" width="0.4" height="15.0" fill="rgb(223,73,3)" rx="2" ry="2" />
<text  x="60.18" y="175.5" ></text>
</g>
<g >
<title>_task_fn_rx (114,883 samples, 45.44%)</title><rect x="54.1" y="229" width="536.2" height="15.0" fill="rgb(224,220,31)" rx="2" ry="2" />
<text  x="57.08" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_nh_input (7,079 samples, 2.80%)</title><rect x="993.4" y="197" width="33.0" height="15.0" fill="rgb(209,153,36)" rx="2" ry="2" />
<text  x="996.40" y="207.5" >et..</text>
</g>
<g >
<title>iflib_rxeof (18,279 samples, 7.23%)</title><rect x="1026.4" y="229" width="85.4" height="15.0" fill="rgb(207,71,8)" rx="2" ry="2" />
<text  x="1029.44" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>netmap_rx_irq (26 samples, 0.01%)</title><rect x="590.2" y="213" width="0.1" height="15.0" fill="rgb(224,87,34)" rx="2" ry="2" />
<text  x="593.18" y="223.5" ></text>
</g>
<g >
<title>ip_input (77,268 samples, 30.56%)</title><rect x="138.1" y="117" width="360.7" height="15.0" fill="rgb(220,5,33)" rx="2" ry="2" />
<text  x="141.12" y="127.5" >ip_input</text>
</g>
<g >
<title>ipfw_check_packet (6,965 samples, 2.76%)</title><rect x="993.9" y="101" width="32.5" height="15.0" fill="rgb(248,163,14)" rx="2" ry="2" />
<text  x="996.93" y="111.5" >ip..</text>
</g>
<g >
<title>ether_demux (18,279 samples, 7.23%)</title><rect x="1026.4" y="165" width="85.4" height="15.0" fill="rgb(247,206,7)" rx="2" ry="2" />
<text  x="1029.44" y="175.5" >ether_demux</text>
</g>
<g >
<title>netisr_dispatch (95 samples, 0.04%)</title><rect x="105.8" y="181" width="0.5" height="15.0" fill="rgb(245,226,17)" rx="2" ry="2" />
<text  x="108.81" y="191.5" ></text>
</g>
<g >
<title>memcmp (369 samples, 0.15%)</title><rect x="498.8" y="149" width="1.7" height="15.0" fill="rgb(251,194,47)" rx="2" ry="2" />
<text  x="501.77" y="159.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3,515 samples, 1.39%)</title><rect x="938.5" y="149" width="16.4" height="15.0" fill="rgb(228,109,36)" rx="2" ry="2" />
<text  x="941.47" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4,259 samples, 1.68%)</title><rect x="1026.4" y="53" width="19.9" height="15.0" fill="rgb(227,27,4)" rx="2" ry="2" />
<text  x="1029.44" y="63.5" ></text>
</g>
<g >
<title>lapic_handle_intr (103 samples, 0.04%)</title><rect x="1188.2" y="277" width="0.5" height="15.0" fill="rgb(229,218,48)" rx="2" ry="2" />
<text  x="1191.20" y="287.5" ></text>
</g>
<g >
<title>if_getsoftc (154 samples, 0.06%)</title><rect x="261.8" y="37" width="0.8" height="15.0" fill="rgb(219,16,51)" rx="2" ry="2" />
<text  x="264.84" y="47.5" ></text>
</g>
<g >
<title>m_adj (734 samples, 0.29%)</title><rect x="126.8" y="133" width="3.4" height="15.0" fill="rgb(254,151,22)" rx="2" ry="2" />
<text  x="129.76" y="143.5" ></text>
</g>
<g >
<title>lock_delay (24 samples, 0.01%)</title><rect x="518.1" y="101" width="0.1" height="15.0" fill="rgb(244,159,1)" rx="2" ry="2" />
<text  x="521.07" y="111.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (672 samples, 0.27%)</title><rect x="54.5" y="213" width="3.1" height="15.0" fill="rgb(216,8,21)" rx="2" ry="2" />
<text  x="57.48" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (114 samples, 0.05%)</title><rect x="993.4" y="53" width="0.5" height="15.0" fill="rgb(222,175,44)" rx="2" ry="2" />
<text  x="996.40" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (78,811 samples, 31.17%)</title><rect x="130.9" y="133" width="367.9" height="15.0" fill="rgb(215,204,22)" rx="2" ry="2" />
<text  x="133.91" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipfw_chk (6,965 samples, 2.76%)</title><rect x="993.9" y="85" width="32.5" height="15.0" fill="rgb(247,217,33)" rx="2" ry="2" />
<text  x="996.93" y="95.5" >ip..</text>
</g>
<g >
<title>ipfw_dyn_lookup_state (3,130 samples, 1.24%)</title><rect x="481.2" y="37" width="14.6" height="15.0" fill="rgb(206,39,12)" rx="2" ry="2" />
<text  x="484.15" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,610 samples, 1.03%)</title><rect x="249.7" y="37" width="12.1" height="15.0" fill="rgb(240,174,30)" rx="2" ry="2" />
<text  x="252.66" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (387 samples, 0.15%)</title><rect x="984.1" y="165" width="1.8" height="15.0" fill="rgb(226,17,40)" rx="2" ry="2" />
<text  x="987.13" y="175.5" ></text>
</g>
<g >
<title>ether_output (22,506 samples, 8.90%)</title><rect x="192.2" y="85" width="105.1" height="15.0" fill="rgb(218,193,28)" rx="2" ry="2" />
<text  x="195.24" y="95.5" >ether_output</text>
</g>
<g >
<title>zone_import (53 samples, 0.02%)</title><rect x="518.0" y="149" width="0.3" height="15.0" fill="rgb(244,49,31)" rx="2" ry="2" />
<text  x="521.04" y="159.5" ></text>
</g>
<g >
<title>wakeup_any (133 samples, 0.05%)</title><rect x="31.3" y="69" width="0.6" height="15.0" fill="rgb(208,69,25)" rx="2" ry="2" />
<text  x="34.30" y="79.5" ></text>
</g>
<g >
<title>spinlock_exit (29 samples, 0.01%)</title><rect x="993.2" y="213" width="0.1" height="15.0" fill="rgb(230,219,38)" rx="2" ry="2" />
<text  x="996.20" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (205,927 samples, 81.46%)</title><rect x="32.2" y="245" width="961.1" height="15.0" fill="rgb(219,178,42)" rx="2" ry="2" />
<text  x="35.15" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_fl_refill (6,350 samples, 2.51%)</title><rect x="502.2" y="197" width="29.7" height="15.0" fill="rgb(248,144,54)" rx="2" ry="2" />
<text  x="505.23" y="207.5" >if..</text>
</g>
<g >
<title>Xtimerint_pti (68 samples, 0.03%)</title><rect x="31.0" y="277" width="0.3" height="15.0" fill="rgb(217,166,18)" rx="2" ry="2" />
<text  x="33.98" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (133 samples, 0.05%)</title><rect x="31.3" y="213" width="0.6" height="15.0" fill="rgb(235,147,14)" rx="2" ry="2" />
<text  x="34.30" y="223.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (6,955 samples, 2.75%)</title><rect x="994.0" y="69" width="32.4" height="15.0" fill="rgb(213,44,51)" rx="2" ry="2" />
<text  x="996.97" y="79.5" >ip..</text>
</g>
<g >
<title>uma_zalloc_arg (2,265 samples, 0.90%)</title><rect x="521.3" y="181" width="10.6" height="15.0" fill="rgb(235,23,7)" rx="2" ry="2" />
<text  x="524.30" y="191.5" ></text>
</g>
<g >
<title>memmove_erms (426 samples, 0.17%)</title><rect x="227.0" y="53" width="2.0" height="15.0" fill="rgb(213,26,33)" rx="2" ry="2" />
<text  x="229.97" y="63.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (43 samples, 0.02%)</title><rect x="590.0" y="197" width="0.2" height="15.0" fill="rgb(250,20,5)" rx="2" ry="2" />
<text  x="592.98" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (280 samples, 0.11%)</title><rect x="56.3" y="197" width="1.3" height="15.0" fill="rgb(248,55,18)" rx="2" ry="2" />
<text  x="59.31" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (114,067 samples, 45.12%)</title><rect x="57.8" y="213" width="532.4" height="15.0" fill="rgb(251,149,4)" rx="2" ry="2" />
<text  x="60.76" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>fib4_lookup (4,335 samples, 1.71%)</title><rect x="307.1" y="69" width="20.3" height="15.0" fill="rgb(220,135,54)" rx="2" ry="2" />
<text  x="310.15" y="79.5" ></text>
</g>
<g >
<title>_task_fn_rx (7,079 samples, 2.80%)</title><rect x="993.4" y="261" width="33.0" height="15.0" fill="rgb(206,179,7)" rx="2" ry="2" />
<text  x="996.40" y="271.5" >_t..</text>
</g>
<g >
<title>ip_tryforward (133 samples, 0.05%)</title><rect x="31.3" y="149" width="0.6" height="15.0" fill="rgb(224,26,54)" rx="2" ry="2" />
<text  x="34.30" y="159.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (610 samples, 0.24%)</title><rect x="531.9" y="197" width="2.8" height="15.0" fill="rgb(235,92,13)" rx="2" ry="2" />
<text  x="534.87" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (405 samples, 0.16%)</title><rect x="564.5" y="197" width="1.9" height="15.0" fill="rgb(241,89,53)" rx="2" ry="2" />
<text  x="567.49" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (129 samples, 0.05%)</title><rect x="57.0" y="181" width="0.6" height="15.0" fill="rgb(237,21,45)" rx="2" ry="2" />
<text  x="60.01" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (7,079 samples, 2.80%)</title><rect x="993.4" y="165" width="33.0" height="15.0" fill="rgb(217,163,40)" rx="2" ry="2" />
<text  x="996.40" y="175.5" >ne..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (157 samples, 0.06%)</title><rect x="1185.7" y="229" width="0.8" height="15.0" fill="rgb(236,182,18)" rx="2" ry="2" />
<text  x="1188.73" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (7,079 samples, 2.80%)</title><rect x="993.4" y="133" width="33.0" height="15.0" fill="rgb(237,183,21)" rx="2" ry="2" />
<text  x="996.40" y="143.5" >ip..</text>
</g>
<g >
<title>_rm_runlock (1,244 samples, 0.49%)</title><rect x="475.3" y="37" width="5.8" height="15.0" fill="rgb(240,9,7)" rx="2" ry="2" />
<text  x="478.34" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (84,466 samples, 33.41%)</title><rect x="106.3" y="181" width="394.2" height="15.0" fill="rgb(253,171,41)" rx="2" ry="2" />
<text  x="109.25" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_write_reg (73 samples, 0.03%)</title><rect x="521.0" y="181" width="0.3" height="15.0" fill="rgb(244,142,22)" rx="2" ry="2" />
<text  x="523.96" y="191.5" ></text>
</g>
<g >
<title>ether_demux (81,312 samples, 32.16%)</title><rect x="119.2" y="149" width="379.6" height="15.0" fill="rgb(246,129,18)" rx="2" ry="2" />
<text  x="122.24" y="159.5" >ether_demux</text>
</g>
<g >
<title>ether_output_frame (133 samples, 0.05%)</title><rect x="31.3" y="117" width="0.6" height="15.0" fill="rgb(237,115,47)" rx="2" ry="2" />
<text  x="34.30" y="127.5" ></text>
</g>
<g >
<title>pfil_run_hooks (36,719 samples, 14.52%)</title><rect x="327.4" y="85" width="171.4" height="15.0" fill="rgb(217,212,9)" rx="2" ry="2" />
<text  x="330.38" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>ether_input (7,079 samples, 2.80%)</title><rect x="993.4" y="229" width="33.0" height="15.0" fill="rgb(248,90,40)" rx="2" ry="2" />
<text  x="996.40" y="239.5" >et..</text>
</g>
<g >
<title>if_inc_counter (167 samples, 0.07%)</title><rect x="501.5" y="197" width="0.7" height="15.0" fill="rgb(216,21,45)" rx="2" ry="2" />
<text  x="504.45" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (342 samples, 0.14%)</title><rect x="661.1" y="117" width="1.6" height="15.0" fill="rgb(241,209,1)" rx="2" ry="2" />
<text  x="664.13" y="127.5" ></text>
</g>
<g >
<title>timercb (257 samples, 0.10%)</title><rect x="1188.8" y="261" width="1.2" height="15.0" fill="rgb(249,134,28)" rx="2" ry="2" />
<text  x="1191.80" y="271.5" ></text>
</g>
<g >
<title>ether_input (133 samples, 0.05%)</title><rect x="31.3" y="245" width="0.6" height="15.0" fill="rgb(215,94,13)" rx="2" ry="2" />
<text  x="34.30" y="255.5" ></text>
</g>
<g >
<title>dyn_lookup_ipv4_state (10,737 samples, 4.25%)</title><rect x="1046.3" y="37" width="50.1" height="15.0" fill="rgb(253,28,52)" rx="2" ry="2" />
<text  x="1049.32" y="47.5" >dyn_l..</text>
</g>
<g >
<title>spinlock_enter (53 samples, 0.02%)</title><rect x="55.3" y="197" width="0.2" height="15.0" fill="rgb(219,132,32)" rx="2" ry="2" />
<text  x="58.28" y="207.5" ></text>
</g>
</g>
</svg>
