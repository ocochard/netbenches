<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>Xtimerint_pti (68 samples, 0.03%)</title><rect x="31.7" y="277" width="0.3" height="15.0" fill="rgb(233,17,0)" rx="2" ry="2" />
<text  x="34.67" y="287.5" ></text>
</g>
<g >
<title>sleepq_release (52 samples, 0.02%)</title><rect x="1079.2" y="213" width="0.2" height="15.0" fill="rgb(225,227,40)" rx="2" ry="2" />
<text  x="1082.19" y="223.5" ></text>
</g>
<g >
<title>if_getsoftc (181 samples, 0.07%)</title><rect x="247.7" y="37" width="0.8" height="15.0" fill="rgb(225,213,7)" rx="2" ry="2" />
<text  x="250.73" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (133 samples, 0.05%)</title><rect x="1079.6" y="245" width="0.6" height="15.0" fill="rgb(211,31,25)" rx="2" ry="2" />
<text  x="1082.63" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (1,956 samples, 0.74%)</title><rect x="1080.2" y="37" width="8.8" height="15.0" fill="rgb(210,157,15)" rx="2" ry="2" />
<text  x="1083.23" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,365 samples, 1.65%)</title><rect x="1080.2" y="261" width="19.5" height="15.0" fill="rgb(240,119,52)" rx="2" ry="2" />
<text  x="1083.23" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (330 samples, 0.12%)</title><rect x="1077.7" y="213" width="1.5" height="15.0" fill="rgb(218,156,30)" rx="2" ry="2" />
<text  x="1080.72" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (123 samples, 0.05%)</title><rect x="1185.4" y="229" width="0.6" height="15.0" fill="rgb(237,80,17)" rx="2" ry="2" />
<text  x="1188.41" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_timer (336 samples, 0.13%)</title><rect x="1188.5" y="277" width="1.5" height="15.0" fill="rgb(209,216,1)" rx="2" ry="2" />
<text  x="1191.49" y="287.5" ></text>
</g>
<g >
<title>ip6_input (134 samples, 0.05%)</title><rect x="32.0" y="165" width="0.6" height="15.0" fill="rgb(239,217,10)" rx="2" ry="2" />
<text  x="34.98" y="175.5" ></text>
</g>
<g >
<title>lapic_et_start (30 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(224,213,14)" rx="2" ry="2" />
<text  x="1192.81" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (2,352 samples, 0.89%)</title><rect x="1089.0" y="37" width="10.5" height="15.0" fill="rgb(224,120,53)" rx="2" ry="2" />
<text  x="1091.97" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (134 samples, 0.05%)</title><rect x="32.0" y="101" width="0.6" height="15.0" fill="rgb(252,101,46)" rx="2" ry="2" />
<text  x="34.98" y="111.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,575 samples, 0.98%)</title><rect x="236.2" y="37" width="11.5" height="15.0" fill="rgb(215,169,18)" rx="2" ry="2" />
<text  x="239.22" y="47.5" ></text>
</g>
<g >
<title>ether_input (133 samples, 0.05%)</title><rect x="1079.6" y="229" width="0.6" height="15.0" fill="rgb(243,190,18)" rx="2" ry="2" />
<text  x="1082.63" y="239.5" ></text>
</g>
<g >
<title>ether_output (24,674 samples, 9.35%)</title><rect x="194.9" y="85" width="110.3" height="15.0" fill="rgb(227,191,12)" rx="2" ry="2" />
<text  x="197.94" y="95.5" >ether_output</text>
</g>
<g >
<title>wakeup_any (279 samples, 0.11%)</title><rect x="59.9" y="197" width="1.3" height="15.0" fill="rgb(254,85,6)" rx="2" ry="2" />
<text  x="62.95" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (12,307 samples, 4.66%)</title><rect x="223.9" y="53" width="55.0" height="15.0" fill="rgb(210,183,21)" rx="2" ry="2" />
<text  x="226.88" y="63.5" >iflib..</text>
</g>
<g >
<title>ip6_tryforward (4,365 samples, 1.65%)</title><rect x="1080.2" y="117" width="19.5" height="15.0" fill="rgb(209,160,2)" rx="2" ry="2" />
<text  x="1083.23" y="127.5" ></text>
</g>
<g >
<title>_task_fn_tx (98,253 samples, 37.22%)</title><rect x="635.9" y="229" width="439.2" height="15.0" fill="rgb(234,1,31)" rx="2" ry="2" />
<text  x="638.90" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>spinlock_exit (81 samples, 0.03%)</title><rect x="32.2" y="37" width="0.4" height="15.0" fill="rgb(222,226,2)" rx="2" ry="2" />
<text  x="35.21" y="47.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2,261 samples, 0.86%)</title><rect x="568.5" y="181" width="10.1" height="15.0" fill="rgb(234,66,6)" rx="2" ry="2" />
<text  x="571.52" y="191.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (124 samples, 0.05%)</title><rect x="1187.0" y="229" width="0.5" height="15.0" fill="rgb(234,129,22)" rx="2" ry="2" />
<text  x="1189.97" y="239.5" ></text>
</g>
<g >
<title>in6_localip (3,870 samples, 1.47%)</title><rect x="305.2" y="85" width="17.3" height="15.0" fill="rgb(245,185,51)" rx="2" ry="2" />
<text  x="308.23" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (32 samples, 0.01%)</title><rect x="1079.1" y="197" width="0.1" height="15.0" fill="rgb(222,179,26)" rx="2" ry="2" />
<text  x="1082.05" y="207.5" ></text>
</g>
<g >
<title>memcmp (388 samples, 0.15%)</title><rect x="299.4" y="37" width="1.8" height="15.0" fill="rgb(250,114,21)" rx="2" ry="2" />
<text  x="302.44" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (70 samples, 0.03%)</title><rect x="1184.6" y="181" width="0.3" height="15.0" fill="rgb(254,218,7)" rx="2" ry="2" />
<text  x="1187.57" y="191.5" ></text>
</g>
<g >
<title>ether_demux (134 samples, 0.05%)</title><rect x="32.0" y="197" width="0.6" height="15.0" fill="rgb(240,122,42)" rx="2" ry="2" />
<text  x="34.98" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (177 samples, 0.07%)</title><rect x="1182.9" y="213" width="0.8" height="15.0" fill="rgb(225,202,0)" rx="2" ry="2" />
<text  x="1185.93" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (134 samples, 0.05%)</title><rect x="32.0" y="85" width="0.6" height="15.0" fill="rgb(218,226,3)" rx="2" ry="2" />
<text  x="34.98" y="95.5" ></text>
</g>
<g >
<title>pmap_kextract (362 samples, 0.14%)</title><rect x="1036.9" y="133" width="1.6" height="15.0" fill="rgb(225,200,50)" rx="2" ry="2" />
<text  x="1039.91" y="143.5" ></text>
</g>
<g >
<title>pfil_run_hooks (35,214 samples, 13.34%)</title><rect x="389.0" y="85" width="157.4" height="15.0" fill="rgb(218,150,2)" rx="2" ry="2" />
<text  x="392.04" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (7,212 samples, 2.73%)</title><rect x="680.1" y="181" width="32.2" height="15.0" fill="rgb(245,85,54)" rx="2" ry="2" />
<text  x="683.08" y="191.5" >if..</text>
</g>
<g >
<title>spinlock_enter (50 samples, 0.02%)</title><rect x="1182.7" y="213" width="0.2" height="15.0" fill="rgb(225,108,50)" rx="2" ry="2" />
<text  x="1185.71" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (4,365 samples, 1.65%)</title><rect x="1080.2" y="85" width="19.5" height="15.0" fill="rgb(233,107,35)" rx="2" ry="2" />
<text  x="1083.23" y="95.5" ></text>
</g>
<g >
<title>iflib_encap (77,332 samples, 29.29%)</title><rect x="712.3" y="181" width="345.7" height="15.0" fill="rgb(207,212,45)" rx="2" ry="2" />
<text  x="715.32" y="191.5" >iflib_encap</text>
</g>
<g >
<title>sleepq_signal (97 samples, 0.04%)</title><rect x="1184.4" y="197" width="0.5" height="15.0" fill="rgb(209,26,41)" rx="2" ry="2" />
<text  x="1187.45" y="207.5" ></text>
</g>
<g >
<title>ip6_findroute (14,413 samples, 5.46%)</title><rect x="322.5" y="85" width="64.4" height="15.0" fill="rgb(233,2,41)" rx="2" ry="2" />
<text  x="325.52" y="95.5" >ip6_fin..</text>
</g>
<g >
<title>spinlock_exit (90 samples, 0.03%)</title><rect x="60.8" y="165" width="0.4" height="15.0" fill="rgb(225,18,50)" rx="2" ry="2" />
<text  x="63.79" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4,365 samples, 1.65%)</title><rect x="1080.2" y="53" width="19.5" height="15.0" fill="rgb(242,71,31)" rx="2" ry="2" />
<text  x="1083.23" y="63.5" ></text>
</g>
<g >
<title>ether_output (133 samples, 0.05%)</title><rect x="1079.6" y="117" width="0.6" height="15.0" fill="rgb(249,107,1)" rx="2" ry="2" />
<text  x="1082.63" y="127.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (6,784 samples, 2.57%)</title><rect x="248.5" y="37" width="30.4" height="15.0" fill="rgb(213,5,30)" rx="2" ry="2" />
<text  x="251.54" y="47.5" >if..</text>
</g>
<g >
<title>handleevents (290 samples, 0.11%)</title><rect x="1188.7" y="245" width="1.3" height="15.0" fill="rgb(220,111,26)" rx="2" ry="2" />
<text  x="1191.70" y="255.5" ></text>
</g>
<g >
<title>_rm_rlock (4,023 samples, 1.52%)</title><rect x="520.0" y="37" width="18.0" height="15.0" fill="rgb(236,192,33)" rx="2" ry="2" />
<text  x="523.01" y="47.5" ></text>
</g>
<g >
<title>ether_input (4,365 samples, 1.65%)</title><rect x="1080.2" y="213" width="19.5" height="15.0" fill="rgb(205,32,28)" rx="2" ry="2" />
<text  x="1083.23" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (396 samples, 0.15%)</title><rect x="710.5" y="117" width="1.8" height="15.0" fill="rgb(229,30,40)" rx="2" ry="2" />
<text  x="713.55" y="127.5" ></text>
</g>
<g >
<title>ip6_input (133 samples, 0.05%)</title><rect x="1079.6" y="149" width="0.6" height="15.0" fill="rgb(236,228,9)" rx="2" ry="2" />
<text  x="1082.63" y="159.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (152 samples, 0.06%)</title><rect x="56.8" y="229" width="0.6" height="15.0" fill="rgb(214,147,41)" rx="2" ry="2" />
<text  x="59.77" y="239.5" ></text>
</g>
<g >
<title>iflib_fl_refill (6,458 samples, 2.45%)</title><rect x="549.8" y="197" width="28.8" height="15.0" fill="rgb(214,166,1)" rx="2" ry="2" />
<text  x="552.76" y="207.5" >if..</text>
</g>
<g >
<title>ipfw_chk (29,203 samples, 11.06%)</title><rect x="413.1" y="53" width="130.5" height="15.0" fill="rgb(219,132,18)" rx="2" ry="2" />
<text  x="416.06" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>_task_fn_rx (4,365 samples, 1.65%)</title><rect x="1080.2" y="245" width="19.5" height="15.0" fill="rgb(229,15,26)" rx="2" ry="2" />
<text  x="1083.23" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (91,333 samples, 34.60%)</title><rect x="138.2" y="133" width="408.2" height="15.0" fill="rgb(225,4,6)" rx="2" ry="2" />
<text  x="141.21" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch (171 samples, 0.06%)</title><rect x="137.4" y="133" width="0.8" height="15.0" fill="rgb(252,96,10)" rx="2" ry="2" />
<text  x="140.44" y="143.5" ></text>
</g>
<g >
<title>sleepq_signal (34 samples, 0.01%)</title><rect x="1080.1" y="37" width="0.1" height="15.0" fill="rgb(238,172,9)" rx="2" ry="2" />
<text  x="1083.07" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (749 samples, 0.28%)</title><rect x="57.8" y="213" width="3.4" height="15.0" fill="rgb(211,211,38)" rx="2" ry="2" />
<text  x="60.85" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (134 samples, 0.05%)</title><rect x="32.0" y="117" width="0.6" height="15.0" fill="rgb(228,217,21)" rx="2" ry="2" />
<text  x="34.98" y="127.5" ></text>
</g>
<g >
<title>ip6_input (4,365 samples, 1.65%)</title><rect x="1080.2" y="133" width="19.5" height="15.0" fill="rgb(247,221,25)" rx="2" ry="2" />
<text  x="1083.23" y="143.5" ></text>
</g>
<g >
<title>timercb (312 samples, 0.12%)</title><rect x="1188.6" y="261" width="1.4" height="15.0" fill="rgb(236,83,27)" rx="2" ry="2" />
<text  x="1191.60" y="271.5" ></text>
</g>
<g >
<title>if_getdrvflags (32 samples, 0.01%)</title><rect x="61.2" y="213" width="0.1" height="15.0" fill="rgb(236,172,49)" rx="2" ry="2" />
<text  x="64.19" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (97 samples, 0.04%)</title><rect x="760.1" y="165" width="0.4" height="15.0" fill="rgb(208,92,20)" rx="2" ry="2" />
<text  x="763.07" y="175.5" ></text>
</g>
<g >
<title>drain_ring_lockless (97,899 samples, 37.08%)</title><rect x="636.2" y="213" width="437.6" height="15.0" fill="rgb(251,22,28)" rx="2" ry="2" />
<text  x="639.25" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>m_tag_locate (636 samples, 0.24%)</title><rect x="543.6" y="53" width="2.8" height="15.0" fill="rgb(242,82,40)" rx="2" ry="2" />
<text  x="546.59" y="63.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (32 samples, 0.01%)</title><rect x="59.8" y="197" width="0.1" height="15.0" fill="rgb(242,70,10)" rx="2" ry="2" />
<text  x="62.80" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (190 samples, 0.07%)</title><rect x="548.3" y="197" width="0.8" height="15.0" fill="rgb(220,134,10)" rx="2" ry="2" />
<text  x="551.30" y="207.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (2,066 samples, 0.78%)</title><rect x="291.9" y="53" width="9.3" height="15.0" fill="rgb(210,223,27)" rx="2" ry="2" />
<text  x="294.94" y="63.5" ></text>
</g>
<g >
<title>hardclock (227 samples, 0.09%)</title><rect x="1188.8" y="229" width="1.0" height="15.0" fill="rgb(248,113,3)" rx="2" ry="2" />
<text  x="1191.79" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (434 samples, 0.16%)</title><rect x="1069.6" y="165" width="1.9" height="15.0" fill="rgb(233,219,46)" rx="2" ry="2" />
<text  x="1072.56" y="175.5" ></text>
</g>
<g >
<title>pmc_hook_handler (177 samples, 0.07%)</title><rect x="1189.0" y="213" width="0.8" height="15.0" fill="rgb(223,127,17)" rx="2" ry="2" />
<text  x="1191.96" y="223.5" ></text>
</g>
<g >
<title>if_inc_counter (137 samples, 0.05%)</title><rect x="549.1" y="197" width="0.7" height="15.0" fill="rgb(221,144,33)" rx="2" ry="2" />
<text  x="552.15" y="207.5" ></text>
</g>
<g >
<title>ipfw_check_packet (32,709 samples, 12.39%)</title><rect x="400.2" y="69" width="146.2" height="15.0" fill="rgb(232,212,22)" rx="2" ry="2" />
<text  x="403.23" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>ether_nh_input (134 samples, 0.05%)</title><rect x="32.0" y="213" width="0.6" height="15.0" fill="rgb(246,135,2)" rx="2" ry="2" />
<text  x="34.98" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (97,734 samples, 37.02%)</title><rect x="111.4" y="181" width="436.8" height="15.0" fill="rgb(245,43,48)" rx="2" ry="2" />
<text  x="114.42" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sleepq_lock (99 samples, 0.04%)</title><rect x="1079.6" y="37" width="0.5" height="15.0" fill="rgb(246,182,42)" rx="2" ry="2" />
<text  x="1082.63" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (46 samples, 0.02%)</title><rect x="60.4" y="165" width="0.2" height="15.0" fill="rgb(214,191,45)" rx="2" ry="2" />
<text  x="63.44" y="175.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (117 samples, 0.04%)</title><rect x="1184.9" y="229" width="0.5" height="15.0" fill="rgb(226,183,51)" rx="2" ry="2" />
<text  x="1187.88" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (41 samples, 0.02%)</title><rect x="1079.4" y="213" width="0.2" height="15.0" fill="rgb(251,69,33)" rx="2" ry="2" />
<text  x="1082.43" y="223.5" ></text>
</g>
<g >
<title>m_adj (806 samples, 0.31%)</title><rect x="133.8" y="133" width="3.6" height="15.0" fill="rgb(249,49,22)" rx="2" ry="2" />
<text  x="136.84" y="143.5" ></text>
</g>
<g >
<title>ether_demux (133 samples, 0.05%)</title><rect x="1079.6" y="181" width="0.6" height="15.0" fill="rgb(237,91,12)" rx="2" ry="2" />
<text  x="1082.63" y="191.5" ></text>
</g>
<g >
<title>fork_exit (234,199 samples, 88.71%)</title><rect x="32.9" y="277" width="1046.7" height="15.0" fill="rgb(254,214,3)" rx="2" ry="2" />
<text  x="35.85" y="287.5" >fork_exit</text>
</g>
<g >
<title>tcp_lro_flush_all (34 samples, 0.01%)</title><rect x="635.5" y="197" width="0.2" height="15.0" fill="rgb(228,183,34)" rx="2" ry="2" />
<text  x="638.54" y="207.5" ></text>
</g>
<g >
<title>memcmp (468 samples, 0.18%)</title><rect x="386.9" y="85" width="2.1" height="15.0" fill="rgb(242,36,53)" rx="2" ry="2" />
<text  x="389.94" y="95.5" ></text>
</g>
<g >
<title>ip6_tryforward (134 samples, 0.05%)</title><rect x="32.0" y="149" width="0.6" height="15.0" fill="rgb(221,152,49)" rx="2" ry="2" />
<text  x="34.98" y="159.5" ></text>
</g>
<g >
<title>_rm_runlock (1,251 samples, 0.47%)</title><rect x="538.0" y="37" width="5.6" height="15.0" fill="rgb(250,221,20)" rx="2" ry="2" />
<text  x="540.99" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (567 samples, 0.21%)</title><rect x="578.6" y="197" width="2.6" height="15.0" fill="rgb(219,213,12)" rx="2" ry="2" />
<text  x="581.62" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (792 samples, 0.30%)</title><rect x="690.3" y="165" width="3.5" height="15.0" fill="rgb(221,156,17)" rx="2" ry="2" />
<text  x="693.29" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (96,537 samples, 36.57%)</title><rect x="116.8" y="165" width="431.4" height="15.0" fill="rgb(212,160,40)" rx="2" ry="2" />
<text  x="119.77" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>netisr_dispatch_src (4,365 samples, 1.65%)</title><rect x="1080.2" y="197" width="19.5" height="15.0" fill="rgb(243,109,24)" rx="2" ry="2" />
<text  x="1083.23" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (234,194 samples, 88.71%)</title><rect x="32.9" y="261" width="1046.7" height="15.0" fill="rgb(254,81,3)" rx="2" ry="2" />
<text  x="35.85" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ether_nh_input (4,365 samples, 1.65%)</title><rect x="1080.2" y="181" width="19.5" height="15.0" fill="rgb(251,55,29)" rx="2" ry="2" />
<text  x="1083.23" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (53 samples, 0.02%)</title><rect x="32.0" y="53" width="0.2" height="15.0" fill="rgb(222,167,52)" rx="2" ry="2" />
<text  x="34.98" y="63.5" ></text>
</g>
<g >
<title>doreti (62 samples, 0.02%)</title><rect x="32.6" y="277" width="0.3" height="15.0" fill="rgb(220,69,53)" rx="2" ry="2" />
<text  x="35.58" y="287.5" ></text>
</g>
<g >
<title>ether_output (4,365 samples, 1.65%)</title><rect x="1080.2" y="101" width="19.5" height="15.0" fill="rgb(216,47,1)" rx="2" ry="2" />
<text  x="1083.23" y="111.5" ></text>
</g>
<g >
<title>_task_fn_rx (129,418 samples, 49.02%)</title><rect x="57.4" y="229" width="578.5" height="15.0" fill="rgb(220,171,3)" rx="2" ry="2" />
<text  x="60.45" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>netmap_rx_irq (43 samples, 0.02%)</title><rect x="635.7" y="213" width="0.2" height="15.0" fill="rgb(238,122,19)" rx="2" ry="2" />
<text  x="638.70" y="223.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (162 samples, 0.06%)</title><rect x="709.8" y="117" width="0.7" height="15.0" fill="rgb(216,107,31)" rx="2" ry="2" />
<text  x="712.83" y="127.5" ></text>
</g>
<g >
<title>sleepq_lock (136 samples, 0.05%)</title><rect x="60.0" y="181" width="0.6" height="15.0" fill="rgb(206,119,6)" rx="2" ry="2" />
<text  x="63.03" y="191.5" ></text>
</g>
<g >
<title>cache_alloc (57 samples, 0.02%)</title><rect x="565.4" y="165" width="0.2" height="15.0" fill="rgb(208,133,53)" rx="2" ry="2" />
<text  x="568.37" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (511 samples, 0.19%)</title><rect x="565.9" y="181" width="2.3" height="15.0" fill="rgb(215,7,19)" rx="2" ry="2" />
<text  x="568.92" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (133 samples, 0.05%)</title><rect x="1079.6" y="261" width="0.6" height="15.0" fill="rgb(235,3,22)" rx="2" ry="2" />
<text  x="1082.63" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (133 samples, 0.05%)</title><rect x="1079.6" y="213" width="0.6" height="15.0" fill="rgb(214,18,9)" rx="2" ry="2" />
<text  x="1082.63" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (77 samples, 0.03%)</title><rect x="1074.7" y="213" width="0.4" height="15.0" fill="rgb(205,224,25)" rx="2" ry="2" />
<text  x="1077.71" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (81 samples, 0.03%)</title><rect x="32.2" y="53" width="0.4" height="15.0" fill="rgb(250,118,7)" rx="2" ry="2" />
<text  x="35.21" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (53 samples, 0.02%)</title><rect x="32.0" y="37" width="0.2" height="15.0" fill="rgb(230,170,0)" rx="2" ry="2" />
<text  x="34.98" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (139 samples, 0.05%)</title><rect x="1075.1" y="229" width="0.6" height="15.0" fill="rgb(223,139,54)" rx="2" ry="2" />
<text  x="1078.10" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_intr (156 samples, 0.06%)</title><rect x="1187.8" y="277" width="0.7" height="15.0" fill="rgb(220,194,12)" rx="2" ry="2" />
<text  x="1190.80" y="287.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,795 samples, 1.06%)</title><rect x="699.8" y="133" width="12.5" height="15.0" fill="rgb(218,141,54)" rx="2" ry="2" />
<text  x="702.83" y="143.5" ></text>
</g>
<g >
<title>ether_input (98,197 samples, 37.20%)</title><rect x="109.3" y="197" width="438.9" height="15.0" fill="rgb(249,222,24)" rx="2" ry="2" />
<text  x="112.35" y="207.5" >ether_input</text>
</g>
<g >
<title>tsc_get_config (27 samples, 0.01%)</title><rect x="1189.6" y="181" width="0.2" height="15.0" fill="rgb(246,23,39)" rx="2" ry="2" />
<text  x="1192.63" y="191.5" ></text>
</g>
<g >
<title>m_freem (4,136 samples, 1.57%)</title><rect x="693.8" y="165" width="18.5" height="15.0" fill="rgb(232,97,12)" rx="2" ry="2" />
<text  x="696.83" y="175.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (4,021 samples, 1.52%)</title><rect x="617.6" y="197" width="17.9" height="15.0" fill="rgb(226,91,26)" rx="2" ry="2" />
<text  x="620.57" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (156 samples, 0.06%)</title><rect x="1074.0" y="213" width="0.7" height="15.0" fill="rgb(244,151,25)" rx="2" ry="2" />
<text  x="1077.01" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (133 samples, 0.05%)</title><rect x="1079.6" y="197" width="0.6" height="15.0" fill="rgb(209,142,53)" rx="2" ry="2" />
<text  x="1082.63" y="207.5" ></text>
</g>
<g >
<title>intr_execute_handlers (19,702 samples, 7.46%)</title><rect x="1099.7" y="277" width="88.1" height="15.0" fill="rgb(218,86,52)" rx="2" ry="2" />
<text  x="1102.74" y="287.5" >intr_execu..</text>
</g>
<g >
<title>keg_alloc_slab (39 samples, 0.01%)</title><rect x="565.4" y="133" width="0.2" height="15.0" fill="rgb(227,89,5)" rx="2" ry="2" />
<text  x="568.41" y="143.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (250 samples, 0.09%)</title><rect x="55.7" y="229" width="1.1" height="15.0" fill="rgb(241,223,7)" rx="2" ry="2" />
<text  x="58.65" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (133 samples, 0.05%)</title><rect x="1079.6" y="165" width="0.6" height="15.0" fill="rgb(242,17,20)" rx="2" ry="2" />
<text  x="1082.63" y="175.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (62,202 samples, 23.56%)</title><rect x="760.5" y="165" width="278.0" height="15.0" fill="rgb(223,142,45)" rx="2" ry="2" />
<text  x="763.51" y="175.5" >bus_dmamap_load_mbuf_sg</text>
</g>
<g >
<title>lradix6_lookup (11,596 samples, 4.39%)</title><rect x="335.1" y="53" width="51.8" height="15.0" fill="rgb(212,135,48)" rx="2" ry="2" />
<text  x="338.12" y="63.5" >lradi..</text>
</g>
<g >
<title>_rm_rlock (1,527 samples, 0.58%)</title><rect x="312.5" y="69" width="6.8" height="15.0" fill="rgb(230,125,15)" rx="2" ry="2" />
<text  x="315.46" y="79.5" ></text>
</g>
<g >
<title>msi_eoi_source (23 samples, 0.01%)</title><rect x="1187.6" y="245" width="0.1" height="15.0" fill="rgb(254,219,29)" rx="2" ry="2" />
<text  x="1190.61" y="255.5" ></text>
</g>
<g >
<title>memcpy_erms (845 samples, 0.32%)</title><rect x="278.9" y="69" width="3.8" height="15.0" fill="rgb(244,132,44)" rx="2" ry="2" />
<text  x="281.89" y="79.5" ></text>
</g>
<g >
<title>ether_output (134 samples, 0.05%)</title><rect x="32.0" y="133" width="0.6" height="15.0" fill="rgb(225,53,1)" rx="2" ry="2" />
<text  x="34.98" y="143.5" ></text>
</g>
<g >
<title>intr_lookup_source (72 samples, 0.03%)</title><rect x="1188.2" y="261" width="0.3" height="15.0" fill="rgb(223,105,19)" rx="2" ry="2" />
<text  x="1191.17" y="271.5" ></text>
</g>
<g >
<title>Xapic_isr1 (907 samples, 0.34%)</title><rect x="10.0" y="277" width="4.1" height="15.0" fill="rgb(220,77,27)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (134 samples, 0.05%)</title><rect x="32.0" y="181" width="0.6" height="15.0" fill="rgb(218,216,14)" rx="2" ry="2" />
<text  x="34.98" y="191.5" ></text>
</g>
<g >
<title>rn_match (10,887 samples, 4.12%)</title><rect x="338.3" y="37" width="48.6" height="15.0" fill="rgb(205,96,11)" rx="2" ry="2" />
<text  x="341.28" y="47.5" >rn_m..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (4,348 samples, 1.65%)</title><rect x="1038.5" y="165" width="19.5" height="15.0" fill="rgb(205,93,18)" rx="2" ry="2" />
<text  x="1041.52" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (14,213 samples, 5.38%)</title><rect x="215.4" y="69" width="63.5" height="15.0" fill="rgb(246,21,39)" rx="2" ry="2" />
<text  x="218.36" y="79.5" >ether_..</text>
</g>
<g >
<title>iflib_txq_drain (91,119 samples, 34.51%)</title><rect x="666.6" y="197" width="407.2" height="15.0" fill="rgb(215,217,46)" rx="2" ry="2" />
<text  x="669.55" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (227 samples, 0.09%)</title><rect x="1186.0" y="229" width="1.0" height="15.0" fill="rgb(231,136,14)" rx="2" ry="2" />
<text  x="1188.96" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3,716 samples, 1.41%)</title><rect x="1021.9" y="149" width="16.6" height="15.0" fill="rgb(253,34,38)" rx="2" ry="2" />
<text  x="1024.92" y="159.5" ></text>
</g>
<g >
<title>ether_output_frame (133 samples, 0.05%)</title><rect x="1079.6" y="101" width="0.6" height="15.0" fill="rgb(242,28,12)" rx="2" ry="2" />
<text  x="1082.63" y="111.5" ></text>
</g>
<g >
<title>zone_import (48 samples, 0.02%)</title><rect x="565.4" y="149" width="0.2" height="15.0" fill="rgb(221,82,17)" rx="2" ry="2" />
<text  x="568.41" y="159.5" ></text>
</g>
<g >
<title>pmc_process_samples (174 samples, 0.07%)</title><rect x="1189.0" y="197" width="0.8" height="15.0" fill="rgb(254,91,10)" rx="2" ry="2" />
<text  x="1191.98" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (181 samples, 0.07%)</title><rect x="110.6" y="181" width="0.8" height="15.0" fill="rgb(213,97,0)" rx="2" ry="2" />
<text  x="113.61" y="191.5" ></text>
</g>
<g >
<title>all (264,005 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(232,224,4)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (67 samples, 0.03%)</title><rect x="565.6" y="181" width="0.3" height="15.0" fill="rgb(215,56,31)" rx="2" ry="2" />
<text  x="568.62" y="191.5" ></text>
</g>
<g >
<title>_rm_runlock (651 samples, 0.25%)</title><rect x="319.3" y="69" width="2.9" height="15.0" fill="rgb(234,24,16)" rx="2" ry="2" />
<text  x="322.29" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (133 samples, 0.05%)</title><rect x="1079.6" y="277" width="0.6" height="15.0" fill="rgb(237,212,16)" rx="2" ry="2" />
<text  x="1082.63" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (134 samples, 0.05%)</title><rect x="32.0" y="229" width="0.6" height="15.0" fill="rgb(211,39,45)" rx="2" ry="2" />
<text  x="34.98" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (1,185 samples, 0.45%)</title><rect x="612.3" y="197" width="5.3" height="15.0" fill="rgb(223,83,33)" rx="2" ry="2" />
<text  x="615.27" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (302 samples, 0.11%)</title><rect x="1075.7" y="229" width="1.4" height="15.0" fill="rgb(221,30,38)" rx="2" ry="2" />
<text  x="1078.72" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (70 samples, 0.03%)</title><rect x="568.2" y="181" width="0.3" height="15.0" fill="rgb(253,116,36)" rx="2" ry="2" />
<text  x="571.21" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (134 samples, 0.05%)</title><rect x="1183.8" y="197" width="0.6" height="15.0" fill="rgb(254,48,26)" rx="2" ry="2" />
<text  x="1186.85" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (133 samples, 0.05%)</title><rect x="1079.6" y="85" width="0.6" height="15.0" fill="rgb(209,62,23)" rx="2" ry="2" />
<text  x="1082.63" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (48 samples, 0.02%)</title><rect x="1184.2" y="181" width="0.2" height="15.0" fill="rgb(230,221,36)" rx="2" ry="2" />
<text  x="1187.23" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (133 samples, 0.05%)</title><rect x="1079.6" y="69" width="0.6" height="15.0" fill="rgb(238,35,26)" rx="2" ry="2" />
<text  x="1082.63" y="79.5" ></text>
</g>
<g >
<title>ip6_tryforward (86,122 samples, 32.62%)</title><rect x="161.5" y="101" width="384.9" height="15.0" fill="rgb(234,72,38)" rx="2" ry="2" />
<text  x="164.50" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>spinlock_enter (86 samples, 0.03%)</title><rect x="58.7" y="197" width="0.4" height="15.0" fill="rgb(213,58,22)" rx="2" ry="2" />
<text  x="61.69" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (374 samples, 0.14%)</title><rect x="610.6" y="197" width="1.7" height="15.0" fill="rgb(229,97,33)" rx="2" ry="2" />
<text  x="613.60" y="207.5" ></text>
</g>
<g >
<title>ether_demux (4,365 samples, 1.65%)</title><rect x="1080.2" y="165" width="19.5" height="15.0" fill="rgb(216,185,53)" rx="2" ry="2" />
<text  x="1083.23" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (515 samples, 0.20%)</title><rect x="1071.5" y="165" width="2.3" height="15.0" fill="rgb(221,38,2)" rx="2" ry="2" />
<text  x="1074.50" y="175.5" ></text>
</g>
<g >
<title>ether_demux (94,477 samples, 35.79%)</title><rect x="124.2" y="149" width="422.2" height="15.0" fill="rgb(217,211,28)" rx="2" ry="2" />
<text  x="127.15" y="159.5" >ether_demux</text>
</g>
<g >
<title>_task_fn_rx (134 samples, 0.05%)</title><rect x="32.0" y="277" width="0.6" height="15.0" fill="rgb(242,67,37)" rx="2" ry="2" />
<text  x="34.98" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (6,586 samples, 2.49%)</title><rect x="581.2" y="197" width="29.4" height="15.0" fill="rgb(211,86,40)" rx="2" ry="2" />
<text  x="584.16" y="207.5" >ix..</text>
</g>
<g >
<title>netisr_dispatch_src (4,365 samples, 1.65%)</title><rect x="1080.2" y="149" width="19.5" height="15.0" fill="rgb(218,86,47)" rx="2" ry="2" />
<text  x="1083.23" y="159.5" ></text>
</g>
<g >
<title>sleepq_signal (124 samples, 0.05%)</title><rect x="60.6" y="181" width="0.6" height="15.0" fill="rgb(212,76,39)" rx="2" ry="2" />
<text  x="63.64" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (134 samples, 0.05%)</title><rect x="32.0" y="261" width="0.6" height="15.0" fill="rgb(208,183,45)" rx="2" ry="2" />
<text  x="34.98" y="271.5" ></text>
</g>
<g >
<title>memmove_erms (906 samples, 0.34%)</title><rect x="301.2" y="53" width="4.0" height="15.0" fill="rgb(246,176,12)" rx="2" ry="2" />
<text  x="304.18" y="63.5" ></text>
</g>
<g >
<title>wakeup_any (134 samples, 0.05%)</title><rect x="32.0" y="69" width="0.6" height="15.0" fill="rgb(248,88,2)" rx="2" ry="2" />
<text  x="34.98" y="79.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (3,543 samples, 1.34%)</title><rect x="1058.0" y="181" width="15.8" height="15.0" fill="rgb(250,162,50)" rx="2" ry="2" />
<text  x="1060.96" y="191.5" ></text>
</g>
<g >
<title>nd6_resolve (5,048 samples, 1.91%)</title><rect x="282.7" y="69" width="22.5" height="15.0" fill="rgb(241,47,30)" rx="2" ry="2" />
<text  x="285.66" y="79.5" >n..</text>
</g>
<g >
<title>taskqueue_thread_enqueue (37 samples, 0.01%)</title><rect x="1099.5" y="37" width="0.1" height="15.0" fill="rgb(244,6,30)" rx="2" ry="2" />
<text  x="1102.48" y="47.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (12,061 samples, 4.57%)</title><rect x="1133.6" y="245" width="53.9" height="15.0" fill="rgb(240,179,7)" rx="2" ry="2" />
<text  x="1136.63" y="255.5" >iflib..</text>
</g>
<g >
<title>ip6_input (89,642 samples, 33.95%)</title><rect x="145.8" y="117" width="400.6" height="15.0" fill="rgb(227,64,28)" rx="2" ry="2" />
<text  x="148.76" y="127.5" >ip6_input</text>
</g>
<g >
<title>wakeup (568 samples, 0.22%)</title><rect x="1077.1" y="229" width="2.5" height="15.0" fill="rgb(209,174,30)" rx="2" ry="2" />
<text  x="1080.07" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (4,365 samples, 1.65%)</title><rect x="1080.2" y="69" width="19.5" height="15.0" fill="rgb(218,221,6)" rx="2" ry="2" />
<text  x="1083.23" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,365 samples, 1.65%)</title><rect x="1080.2" y="277" width="19.5" height="15.0" fill="rgb(221,30,16)" rx="2" ry="2" />
<text  x="1083.23" y="287.5" ></text>
</g>
<g >
<title>ip6_tryforward (133 samples, 0.05%)</title><rect x="1079.6" y="133" width="0.6" height="15.0" fill="rgb(211,104,12)" rx="2" ry="2" />
<text  x="1082.63" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (11,144 samples, 4.22%)</title><rect x="1135.1" y="229" width="49.8" height="15.0" fill="rgb(212,171,52)" rx="2" ry="2" />
<text  x="1138.07" y="239.5" >group..</text>
</g>
<g >
<title>iflib_rxeof (128,502 samples, 48.67%)</title><rect x="61.3" y="213" width="574.4" height="15.0" fill="rgb(247,154,7)" rx="2" ry="2" />
<text  x="64.34" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ether_input (134 samples, 0.05%)</title><rect x="32.0" y="245" width="0.6" height="15.0" fill="rgb(239,154,7)" rx="2" ry="2" />
<text  x="34.98" y="255.5" ></text>
</g>
<g >
<title>memcmp (73 samples, 0.03%)</title><rect x="322.2" y="69" width="0.3" height="15.0" fill="rgb(205,169,28)" rx="2" ry="2" />
<text  x="325.20" y="79.5" ></text>
</g>
<g >
<title>sleepq_broadcast (51 samples, 0.02%)</title><rect x="1077.5" y="213" width="0.2" height="15.0" fill="rgb(247,207,48)" rx="2" ry="2" />
<text  x="1080.49" y="223.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (45 samples, 0.02%)</title><rect x="1189.3" y="181" width="0.2" height="15.0" fill="rgb(233,99,16)" rx="2" ry="2" />
<text  x="1192.33" y="191.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (3,934 samples, 1.49%)</title><rect x="14.1" y="277" width="17.5" height="15.0" fill="rgb(221,16,35)" rx="2" ry="2" />
<text  x="17.05" y="287.5" ></text>
</g>
<g >
<title>fib6_lookup (13,815 samples, 5.23%)</title><rect x="325.2" y="69" width="61.7" height="15.0" fill="rgb(220,187,46)" rx="2" ry="2" />
<text  x="328.20" y="79.5" >fib6_l..</text>
</g>
<g >
<title>spinlock_exit (163 samples, 0.06%)</title><rect x="59.1" y="197" width="0.7" height="15.0" fill="rgb(238,171,13)" rx="2" ry="2" />
<text  x="62.08" y="207.5" ></text>
</g>
<g >
<title>intr_event_handle (18,731 samples, 7.09%)</title><rect x="1104.0" y="261" width="83.7" height="15.0" fill="rgb(211,212,49)" rx="2" ry="2" />
<text  x="1107.00" y="271.5" >intr_even..</text>
</g>
<g >
<title>cache_alloc_retry (62 samples, 0.02%)</title><rect x="565.3" y="181" width="0.3" height="15.0" fill="rgb(253,30,2)" rx="2" ry="2" />
<text  x="568.34" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (234,191 samples, 88.71%)</title><rect x="32.9" y="245" width="1046.7" height="15.0" fill="rgb(223,94,24)" rx="2" ry="2" />
<text  x="35.87" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_rxeof (4,365 samples, 1.65%)</title><rect x="1080.2" y="229" width="19.5" height="15.0" fill="rgb(242,67,12)" rx="2" ry="2" />
<text  x="1083.23" y="239.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (519 samples, 0.20%)</title><rect x="576.3" y="165" width="2.3" height="15.0" fill="rgb(207,216,23)" rx="2" ry="2" />
<text  x="579.30" y="175.5" ></text>
</g>
<g >
<title>memcmp (407 samples, 0.15%)</title><rect x="546.4" y="149" width="1.8" height="15.0" fill="rgb(215,25,21)" rx="2" ry="2" />
<text  x="549.43" y="159.5" ></text>
</g>
<g >
<title>if_inc_counter (95 samples, 0.04%)</title><rect x="679.7" y="181" width="0.4" height="15.0" fill="rgb(225,85,23)" rx="2" ry="2" />
<text  x="682.66" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (243 samples, 0.09%)</title><rect x="1183.8" y="213" width="1.1" height="15.0" fill="rgb(238,63,36)" rx="2" ry="2" />
<text  x="1186.80" y="223.5" ></text>
</g>
<g >
<title>m_free (3,608 samples, 1.37%)</title><rect x="696.2" y="149" width="16.1" height="15.0" fill="rgb(225,174,53)" rx="2" ry="2" />
<text  x="699.19" y="159.5" ></text>
</g>
<g >
<title>wakeup_any (133 samples, 0.05%)</title><rect x="1079.6" y="53" width="0.6" height="15.0" fill="rgb(227,223,38)" rx="2" ry="2" />
<text  x="1082.63" y="63.5" ></text>
</g>
</g>
</svg>
