##################################################################
# For modifying this file, you need to remount / in read-write:  #
# mount -u rw /                                                  #
#                                                                #
# Don't load modules not necessary for mounting local disk here: #
# - add module name to the kld_list variable in rc.conf          #
# Example for loading the padlock crypto module and coretemp:    #
# kld_list='padlock coretemp'                                    #
#                                                                #
# Don't put serial/dual console port value like these here too:  #
# - boot_serial                                                  #
# - comconsole_speed                                             #
# - console                                                      #
# Use /boot.config in place                                      #
##################################################################

### Don't wait for USB (can prevent correct reboot)
hw.usb.no_shutdown_wait="1"

### Use next-gen MRSAS drivers in place of MFI for device supporting it
# This solve lot's of [mfi] COMMAND 0x... TIMEOUT AFTER ## SECONDS
hw.mfi.mrsas_enable="1"

### Tune some global values ###
net.fibs="16"		# Numbers of FIB
hw.usb.no_pf="1"	# Disable USB packet filtering

# Disable HyperThreading
# This tuning tips is no more true on 13-head
machdep.hyperthreading_allowed="0"

### Intel NIC tuning ###
# https://bsdrp.net/documentation/technical_docs/performance#nic_drivers_tuning
# Don't limit the maximum of number of received packets to process at a time
hw.igb.rx_process_limit="-1"
hw.em.rx_process_limit="-1"
hw.ix.rx_process_limit="-1"
# Allow unsupported SFP
hw.ix.unsupported_sfp="1"
hw.ix.allow_unsupported_sfp="1"

### Chelsio NIC tuning ###
# Prevent to reserve ASIC ressources unused on a router/firewall,
# improve performance when we will reach 10Mpps or more
hw.cxgbe.toecaps_allowed="0"
hw.cxgbe.rdmacaps_allowed="0"
hw.cxgbe.iscsicaps_allowed="0"
hw.cxgbe.fcoecaps_allowed="0"

### link tunning ###
# Increase interface send queue length
# lagg user: This value should be at minimum the sum of txd buffer of each NIC in the lagg
net.link.ifqmaxlen="10240"

# Avoid message netisr_register: epair requested queue limit 430080 capped to net.isr.maxqlimit 1024
net.isr.maxqlimit=430080

#Benchmark can be done from a GENERIC-NODEBUG that didn't include cxgbe drivers
t4fw_cfg_load="YES"
t5fw_cfg_load="YES"
if_cxgbe_load="YES"
hw.cxgbe.pause_settings="0"

# This server has 24 core, increase to maximum power of 2 (default to 8)
hw.cxgbe.nrxq="16"
hw.cxgbe.ntxq="16"
hw.cxgbe.nrxq10g="16"
hw.cxgbe.ntxq10g="16"

# Drivers name is different on -head
mlxen_load="YES"
mlx5en_load="YES"

# On this 2x12 core server, need to prevent mlx5en to create 24 RX queues
# This result into unresponsive system, but need a minimum of 16
dev.mce.0.conf.channels=16
dev.mce.1.conf.channels=16
# Increasing RX and TX queue size, then increasing number of packets
# to store before generating interrupt
# Reduce CPU load (interrupt)
dev.mce.0.conf.rx_queue_size="8192"
dev.mce.1.conf.rx_queue_size="8192"
dev.mce.0.conf.rx_coalesce_usecs="200"
dev.mce.1.conf.rx_coalesce_usecs="200"
dev.mce.0.conf.rx_coalesce_pkts="1024"
dev.mce.1.conf.rx_coalesce_pkts="1024"
dev.mce.0.conf.tx_queue_size="8192"
dev.mce.1.conf.tx_queue_size="8192"
dev.mce.0.conf.tx_coalesce_usecs="200"
dev.mce.1.conf.tx_coalesce_usecs="200"
dev.mce.0.conf.tx_coalesce_pkts="1024"
dev.mce.1.conf.tx_coalesce_pkts="1024"
