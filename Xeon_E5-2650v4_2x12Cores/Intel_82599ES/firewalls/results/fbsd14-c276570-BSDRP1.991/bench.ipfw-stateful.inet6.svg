<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ether_nh_input (14,732 samples, 5.51%)</title><rect x="1056.6" y="181" width="65.0" height="15.0" fill="rgb(207,115,48)" rx="2" ry="2" />
<text  x="1059.60" y="191.5" >ether_n..</text>
</g>
<g >
<title>ip6_input (103,827 samples, 38.80%)</title><rect x="129.8" y="117" width="457.8" height="15.0" fill="rgb(242,93,8)" rx="2" ry="2" />
<text  x="132.80" y="127.5" >ip6_input</text>
</g>
<g >
<title>zone_import (50 samples, 0.02%)</title><rect x="606.3" y="149" width="0.2" height="15.0" fill="rgb(251,29,21)" rx="2" ry="2" />
<text  x="609.26" y="159.5" ></text>
</g>
<g >
<title>sleepq_release (50 samples, 0.02%)</title><rect x="1013.1" y="213" width="0.2" height="15.0" fill="rgb(244,61,11)" rx="2" ry="2" />
<text  x="1016.07" y="223.5" ></text>
</g>
<g >
<title>ip6_input (14,732 samples, 5.51%)</title><rect x="1056.6" y="133" width="65.0" height="15.0" fill="rgb(207,58,13)" rx="2" ry="2" />
<text  x="1059.60" y="143.5" >ip6_input</text>
</g>
<g >
<title>ipfw_check_packet (9,629 samples, 3.60%)</title><rect x="1014.1" y="101" width="42.5" height="15.0" fill="rgb(220,107,39)" rx="2" ry="2" />
<text  x="1017.14" y="111.5" >ipf..</text>
</g>
<g >
<title>ip6_findroute (14,532 samples, 5.43%)</title><rect x="301.0" y="85" width="64.0" height="15.0" fill="rgb(221,48,14)" rx="2" ry="2" />
<text  x="303.96" y="95.5" >ip6_fin..</text>
</g>
<g >
<title>ether_nh_input (9,765 samples, 3.65%)</title><rect x="1013.5" y="197" width="43.1" height="15.0" fill="rgb(252,142,50)" rx="2" ry="2" />
<text  x="1016.54" y="207.5" >ethe..</text>
</g>
<g >
<title>timercb (286 samples, 0.11%)</title><rect x="1188.7" y="261" width="1.3" height="15.0" fill="rgb(246,39,40)" rx="2" ry="2" />
<text  x="1191.74" y="271.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (13,863 samples, 5.18%)</title><rect x="523.9" y="37" width="61.1" height="15.0" fill="rgb(240,92,10)" rx="2" ry="2" />
<text  x="526.85" y="47.5" >ipfw_d..</text>
</g>
<g >
<title>memcmp (1,224 samples, 0.46%)</title><rect x="1051.2" y="37" width="5.4" height="15.0" fill="rgb(248,181,31)" rx="2" ry="2" />
<text  x="1054.20" y="47.5" ></text>
</g>
<g >
<title>msi_eoi_source (26 samples, 0.01%)</title><rect x="1187.9" y="245" width="0.1" height="15.0" fill="rgb(206,30,15)" rx="2" ry="2" />
<text  x="1190.88" y="255.5" ></text>
</g>
<g >
<title>ether_nh_input (144 samples, 0.05%)</title><rect x="31.3" y="213" width="0.6" height="15.0" fill="rgb(242,27,8)" rx="2" ry="2" />
<text  x="34.30" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_timer (317 samples, 0.12%)</title><rect x="1188.6" y="277" width="1.4" height="15.0" fill="rgb(254,220,15)" rx="2" ry="2" />
<text  x="1191.60" y="287.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (43 samples, 0.02%)</title><rect x="1189.5" y="181" width="0.2" height="15.0" fill="rgb(226,13,42)" rx="2" ry="2" />
<text  x="1192.48" y="191.5" ></text>
</g>
<g >
<title>intr_event_handle (14,068 samples, 5.26%)</title><rect x="1126.0" y="261" width="62.0" height="15.0" fill="rgb(205,120,39)" rx="2" ry="2" />
<text  x="1128.96" y="271.5" >intr_e..</text>
</g>
<g >
<title>m_freem (4,004 samples, 1.50%)</title><rect x="721.0" y="165" width="17.7" height="15.0" fill="rgb(253,10,28)" rx="2" ry="2" />
<text  x="724.00" y="175.5" ></text>
</g>
<g >
<title>wakeup (544 samples, 0.20%)</title><rect x="1011.0" y="229" width="2.4" height="15.0" fill="rgb(252,105,0)" rx="2" ry="2" />
<text  x="1014.05" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (8,157 samples, 3.05%)</title><rect x="1148.9" y="229" width="36.0" height="15.0" fill="rgb(217,80,34)" rx="2" ry="2" />
<text  x="1151.94" y="239.5" >gro..</text>
</g>
<g >
<title>iflib_rxeof (9,765 samples, 3.65%)</title><rect x="1013.5" y="245" width="43.1" height="15.0" fill="rgb(227,78,35)" rx="2" ry="2" />
<text  x="1016.54" y="255.5" >ifli..</text>
</g>
<g >
<title>sleepq_signal (99 samples, 0.04%)</title><rect x="1184.5" y="197" width="0.4" height="15.0" fill="rgb(207,186,54)" rx="2" ry="2" />
<text  x="1187.47" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (133 samples, 0.05%)</title><rect x="1184.9" y="229" width="0.6" height="15.0" fill="rgb(238,47,44)" rx="2" ry="2" />
<text  x="1187.91" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (165 samples, 0.06%)</title><rect x="122.4" y="133" width="0.7" height="15.0" fill="rgb(209,137,23)" rx="2" ry="2" />
<text  x="125.37" y="143.5" ></text>
</g>
<g >
<title>handleevents (268 samples, 0.10%)</title><rect x="1188.8" y="245" width="1.2" height="15.0" fill="rgb(220,196,45)" rx="2" ry="2" />
<text  x="1191.82" y="255.5" ></text>
</g>
<g >
<title>iflib_get_ifp (24 samples, 0.01%)</title><rect x="1187.6" y="213" width="0.1" height="15.0" fill="rgb(241,75,43)" rx="2" ry="2" />
<text  x="1190.59" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (552 samples, 0.21%)</title><rect x="606.7" y="181" width="2.5" height="15.0" fill="rgb(245,155,14)" rx="2" ry="2" />
<text  x="609.74" y="191.5" ></text>
</g>
<g >
<title>_task_fn_tx (75,855 samples, 28.35%)</title><rect x="674.9" y="229" width="334.4" height="15.0" fill="rgb(253,217,39)" rx="2" ry="2" />
<text  x="677.85" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>pfil_run_hooks (10,420 samples, 3.89%)</title><rect x="1075.6" y="101" width="46.0" height="15.0" fill="rgb(220,157,51)" rx="2" ry="2" />
<text  x="1078.61" y="111.5" >pfil..</text>
</g>
<g >
<title>m_adj (800 samples, 0.30%)</title><rect x="118.8" y="133" width="3.6" height="15.0" fill="rgb(215,185,40)" rx="2" ry="2" />
<text  x="121.84" y="143.5" ></text>
</g>
<g >
<title>memcpy_erms (812 samples, 0.30%)</title><rect x="258.5" y="69" width="3.6" height="15.0" fill="rgb(238,78,44)" rx="2" ry="2" />
<text  x="261.52" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (136 samples, 0.05%)</title><rect x="1013.5" y="69" width="0.6" height="15.0" fill="rgb(228,48,43)" rx="2" ry="2" />
<text  x="1016.54" y="79.5" ></text>
</g>
<g >
<title>ether_nh_input (110,534 samples, 41.31%)</title><rect x="102.2" y="165" width="487.4" height="15.0" fill="rgb(236,72,23)" rx="2" ry="2" />
<text  x="105.20" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>spinlock_exit (77 samples, 0.03%)</title><rect x="1184.6" y="181" width="0.3" height="15.0" fill="rgb(242,32,13)" rx="2" ry="2" />
<text  x="1187.57" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (14,732 samples, 5.51%)</title><rect x="1056.6" y="149" width="65.0" height="15.0" fill="rgb(224,25,8)" rx="2" ry="2" />
<text  x="1059.60" y="159.5" >netisr_..</text>
</g>
<g >
<title>ether_output (24,506 samples, 9.16%)</title><rect x="176.0" y="85" width="108.0" height="15.0" fill="rgb(237,121,13)" rx="2" ry="2" />
<text  x="178.98" y="95.5" >ether_output</text>
</g>
<g >
<title>netmap_rx_irq (29 samples, 0.01%)</title><rect x="674.7" y="213" width="0.1" height="15.0" fill="rgb(214,185,38)" rx="2" ry="2" />
<text  x="677.72" y="223.5" ></text>
</g>
<g >
<title>memcmp (3,377 samples, 1.26%)</title><rect x="1106.7" y="37" width="14.9" height="15.0" fill="rgb(215,81,42)" rx="2" ry="2" />
<text  x="1109.67" y="47.5" ></text>
</g>
<g >
<title>ether_output (4,312 samples, 1.61%)</title><rect x="1056.6" y="101" width="19.0" height="15.0" fill="rgb(227,114,35)" rx="2" ry="2" />
<text  x="1059.60" y="111.5" ></text>
</g>
<g >
<title>sleepq_signal (99 samples, 0.04%)</title><rect x="31.5" y="53" width="0.4" height="15.0" fill="rgb(239,158,21)" rx="2" ry="2" />
<text  x="34.50" y="63.5" ></text>
</g>
<g >
<title>if_getsoftc (169 samples, 0.06%)</title><rect x="226.8" y="37" width="0.7" height="15.0" fill="rgb(215,58,51)" rx="2" ry="2" />
<text  x="229.78" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (260 samples, 0.10%)</title><rect x="1009.9" y="229" width="1.1" height="15.0" fill="rgb(222,167,13)" rx="2" ry="2" />
<text  x="1012.90" y="239.5" ></text>
</g>
<g >
<title>ether_output (136 samples, 0.05%)</title><rect x="1013.5" y="117" width="0.6" height="15.0" fill="rgb(223,153,13)" rx="2" ry="2" />
<text  x="1016.54" y="127.5" ></text>
</g>
<g >
<title>wakeup_any (260 samples, 0.10%)</title><rect x="51.6" y="197" width="1.1" height="15.0" fill="rgb(243,188,48)" rx="2" ry="2" />
<text  x="54.56" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (136 samples, 0.05%)</title><rect x="1013.5" y="101" width="0.6" height="15.0" fill="rgb(251,8,22)" rx="2" ry="2" />
<text  x="1016.54" y="111.5" ></text>
</g>
<g >
<title>nd6_resolve (4,976 samples, 1.86%)</title><rect x="262.1" y="69" width="21.9" height="15.0" fill="rgb(220,67,8)" rx="2" ry="2" />
<text  x="265.10" y="79.5" >n..</text>
</g>
<g >
<title>memcmp (78 samples, 0.03%)</title><rect x="300.6" y="69" width="0.4" height="15.0" fill="rgb(227,196,52)" rx="2" ry="2" />
<text  x="303.62" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (73 samples, 0.03%)</title><rect x="609.2" y="181" width="0.3" height="15.0" fill="rgb(225,189,26)" rx="2" ry="2" />
<text  x="612.17" y="191.5" ></text>
</g>
<g >
<title>ether_input (14,732 samples, 5.51%)</title><rect x="1056.6" y="213" width="65.0" height="15.0" fill="rgb(233,64,39)" rx="2" ry="2" />
<text  x="1059.60" y="223.5" >ether_i..</text>
</g>
<g >
<title>memmove_erms (787 samples, 0.29%)</title><rect x="280.6" y="53" width="3.4" height="15.0" fill="rgb(229,84,43)" rx="2" ry="2" />
<text  x="283.57" y="63.5" ></text>
</g>
<g >
<title>_rm_runlock (729 samples, 0.27%)</title><rect x="297.4" y="69" width="3.2" height="15.0" fill="rgb(252,115,14)" rx="2" ry="2" />
<text  x="300.40" y="79.5" ></text>
</g>
<g >
<title>iflib_rxeof (141,031 samples, 52.70%)</title><rect x="52.8" y="213" width="621.9" height="15.0" fill="rgb(221,20,50)" rx="2" ry="2" />
<text  x="55.83" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_txd_db_check (3,239 samples, 1.21%)</title><rect x="993.9" y="181" width="14.3" height="15.0" fill="rgb(225,74,48)" rx="2" ry="2" />
<text  x="996.93" y="191.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (10,420 samples, 3.89%)</title><rect x="1075.6" y="53" width="46.0" height="15.0" fill="rgb(219,36,51)" rx="2" ry="2" />
<text  x="1078.61" y="63.5" >ipfw..</text>
</g>
<g >
<title>jenkins_hash32 (8,398 samples, 3.14%)</title><rect x="1014.2" y="37" width="37.0" height="15.0" fill="rgb(251,53,32)" rx="2" ry="2" />
<text  x="1017.16" y="47.5" >jen..</text>
</g>
<g >
<title>iflib_if_transmit (12,517 samples, 4.68%)</title><rect x="203.3" y="53" width="55.2" height="15.0" fill="rgb(234,164,11)" rx="2" ry="2" />
<text  x="206.32" y="63.5" >iflib..</text>
</g>
<g >
<title>sleepq_signal (116 samples, 0.04%)</title><rect x="52.2" y="181" width="0.5" height="15.0" fill="rgb(216,181,23)" rx="2" ry="2" />
<text  x="55.20" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (14,732 samples, 5.51%)</title><rect x="1056.6" y="229" width="65.0" height="15.0" fill="rgb(237,137,30)" rx="2" ry="2" />
<text  x="1059.60" y="239.5" >iflib_r..</text>
</g>
<g >
<title>ether_input (144 samples, 0.05%)</title><rect x="31.3" y="245" width="0.6" height="15.0" fill="rgb(216,155,51)" rx="2" ry="2" />
<text  x="34.30" y="255.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (113 samples, 0.04%)</title><rect x="1187.3" y="229" width="0.5" height="15.0" fill="rgb(253,191,54)" rx="2" ry="2" />
<text  x="1190.30" y="239.5" ></text>
</g>
<g >
<title>ether_demux (108,320 samples, 40.48%)</title><rect x="110.0" y="149" width="477.6" height="15.0" fill="rgb(222,148,0)" rx="2" ry="2" />
<text  x="112.99" y="159.5" >ether_demux</text>
</g>
<g >
<title>__mtx_lock_sleep (24 samples, 0.01%)</title><rect x="606.3" y="117" width="0.1" height="15.0" fill="rgb(248,31,39)" rx="2" ry="2" />
<text  x="609.30" y="127.5" ></text>
</g>
<g >
<title>intr_execute_handlers (15,083 samples, 5.64%)</title><rect x="1121.6" y="277" width="66.5" height="15.0" fill="rgb(209,207,18)" rx="2" ry="2" />
<text  x="1124.56" y="287.5" >intr_ex..</text>
</g>
<g >
<title>netisr_dispatch (180 samples, 0.07%)</title><rect x="96.3" y="181" width="0.8" height="15.0" fill="rgb(247,75,31)" rx="2" ry="2" />
<text  x="99.31" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (31 samples, 0.01%)</title><rect x="1184.3" y="181" width="0.2" height="15.0" fill="rgb(209,76,49)" rx="2" ry="2" />
<text  x="1187.34" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (14,732 samples, 5.51%)</title><rect x="1056.6" y="277" width="65.0" height="15.0" fill="rgb(239,45,23)" rx="2" ry="2" />
<text  x="1059.60" y="287.5" >gtaskqu..</text>
</g>
<g >
<title>ether_demux (9,765 samples, 3.65%)</title><rect x="1013.5" y="181" width="43.1" height="15.0" fill="rgb(224,206,19)" rx="2" ry="2" />
<text  x="1016.54" y="191.5" >ethe..</text>
</g>
<g >
<title>ip6_tryforward (14,732 samples, 5.51%)</title><rect x="1056.6" y="117" width="65.0" height="15.0" fill="rgb(226,25,6)" rx="2" ry="2" />
<text  x="1059.60" y="127.5" >ip6_try..</text>
</g>
<g >
<title>sleepq_lock (99 samples, 0.04%)</title><rect x="1013.5" y="37" width="0.5" height="15.0" fill="rgb(249,149,4)" rx="2" ry="2" />
<text  x="1016.54" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4,312 samples, 1.61%)</title><rect x="1056.6" y="53" width="19.0" height="15.0" fill="rgb(244,165,27)" rx="2" ry="2" />
<text  x="1059.60" y="63.5" ></text>
</g>
<g >
<title>ether_input (9,765 samples, 3.65%)</title><rect x="1013.5" y="229" width="43.1" height="15.0" fill="rgb(226,0,23)" rx="2" ry="2" />
<text  x="1016.54" y="239.5" >ethe..</text>
</g>
<g >
<title>spinlock_enter (63 samples, 0.02%)</title><rect x="50.3" y="197" width="0.3" height="15.0" fill="rgb(232,19,34)" rx="2" ry="2" />
<text  x="53.31" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_intr (121 samples, 0.05%)</title><rect x="1188.1" y="277" width="0.5" height="15.0" fill="rgb(228,76,32)" rx="2" ry="2" />
<text  x="1191.07" y="287.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (7,026 samples, 2.63%)</title><rect x="227.5" y="37" width="31.0" height="15.0" fill="rgb(217,84,53)" rx="2" ry="2" />
<text  x="230.52" y="47.5" >if..</text>
</g>
<g >
<title>ether_output_frame (14,319 samples, 5.35%)</title><rect x="195.4" y="69" width="63.1" height="15.0" fill="rgb(252,201,25)" rx="2" ry="2" />
<text  x="198.38" y="79.5" >ether_..</text>
</g>
<g >
<title>_task_fn_rx (9,765 samples, 3.65%)</title><rect x="1013.5" y="261" width="43.1" height="15.0" fill="rgb(246,206,3)" rx="2" ry="2" />
<text  x="1016.54" y="271.5" >_tas..</text>
</g>
<g >
<title>in6_localip (3,838 samples, 1.43%)</title><rect x="284.0" y="85" width="17.0" height="15.0" fill="rgb(245,32,44)" rx="2" ry="2" />
<text  x="287.04" y="95.5" ></text>
</g>
<g >
<title>if_getdrvflags (28 samples, 0.01%)</title><rect x="52.7" y="213" width="0.1" height="15.0" fill="rgb(248,215,11)" rx="2" ry="2" />
<text  x="55.71" y="223.5" ></text>
</g>
<g >
<title>_rm_rlock (3,894 samples, 1.46%)</title><rect x="501.2" y="37" width="17.2" height="15.0" fill="rgb(235,208,37)" rx="2" ry="2" />
<text  x="504.23" y="47.5" ></text>
</g>
<g >
<title>cache_alloc (55 samples, 0.02%)</title><rect x="606.2" y="165" width="0.3" height="15.0" fill="rgb(231,24,2)" rx="2" ry="2" />
<text  x="609.24" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (144 samples, 0.05%)</title><rect x="31.3" y="117" width="0.6" height="15.0" fill="rgb(205,118,8)" rx="2" ry="2" />
<text  x="34.30" y="127.5" ></text>
</g>
<g >
<title>sleepq_signal (37 samples, 0.01%)</title><rect x="1014.0" y="37" width="0.1" height="15.0" fill="rgb(249,195,21)" rx="2" ry="2" />
<text  x="1016.97" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (6,298 samples, 2.35%)</title><rect x="622.1" y="197" width="27.8" height="15.0" fill="rgb(232,34,52)" rx="2" ry="2" />
<text  x="625.12" y="207.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (144 samples, 0.05%)</title><rect x="31.3" y="181" width="0.6" height="15.0" fill="rgb(238,77,42)" rx="2" ry="2" />
<text  x="34.30" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (203 samples, 0.08%)</title><rect x="1186.4" y="229" width="0.9" height="15.0" fill="rgb(211,203,48)" rx="2" ry="2" />
<text  x="1189.41" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (23 samples, 0.01%)</title><rect x="1187.7" y="213" width="0.1" height="15.0" fill="rgb(205,177,49)" rx="2" ry="2" />
<text  x="1190.70" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (9,765 samples, 3.65%)</title><rect x="1013.5" y="165" width="43.1" height="15.0" fill="rgb(206,172,9)" rx="2" ry="2" />
<text  x="1016.54" y="175.5" >neti..</text>
</g>
<g >
<title>spinlock_enter (42 samples, 0.02%)</title><rect x="52.0" y="165" width="0.2" height="15.0" fill="rgb(233,150,49)" rx="2" ry="2" />
<text  x="55.01" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (99 samples, 0.04%)</title><rect x="31.5" y="37" width="0.4" height="15.0" fill="rgb(226,81,16)" rx="2" ry="2" />
<text  x="34.50" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (136 samples, 0.05%)</title><rect x="1013.5" y="53" width="0.6" height="15.0" fill="rgb(245,19,19)" rx="2" ry="2" />
<text  x="1016.54" y="63.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3,571 samples, 1.33%)</title><rect x="962.6" y="149" width="15.7" height="15.0" fill="rgb(243,23,29)" rx="2" ry="2" />
<text  x="965.60" y="159.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (9,623 samples, 3.60%)</title><rect x="1014.2" y="69" width="42.4" height="15.0" fill="rgb(235,101,17)" rx="2" ry="2" />
<text  x="1017.16" y="79.5" >ipf..</text>
</g>
<g >
<title>drain_ring_lockless (75,534 samples, 28.23%)</title><rect x="675.2" y="213" width="333.0" height="15.0" fill="rgb(238,16,18)" rx="2" ry="2" />
<text  x="678.16" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>mb_dtor_mbuf (169 samples, 0.06%)</title><rect x="736.4" y="117" width="0.8" height="15.0" fill="rgb(239,168,21)" rx="2" ry="2" />
<text  x="739.45" y="127.5" ></text>
</g>
<g >
<title>pmc_hook_handler (171 samples, 0.06%)</title><rect x="1189.1" y="213" width="0.7" height="15.0" fill="rgb(231,135,22)" rx="2" ry="2" />
<text  x="1192.05" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (144 samples, 0.05%)</title><rect x="31.3" y="101" width="0.6" height="15.0" fill="rgb(227,59,49)" rx="2" ry="2" />
<text  x="34.30" y="111.5" ></text>
</g>
<g >
<title>spinlock_exit (188 samples, 0.07%)</title><rect x="1183.0" y="213" width="0.8" height="15.0" fill="rgb(244,161,6)" rx="2" ry="2" />
<text  x="1185.96" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (1,952 samples, 0.73%)</title><rect x="1056.6" y="37" width="8.6" height="15.0" fill="rgb(231,66,5)" rx="2" ry="2" />
<text  x="1059.60" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (206 samples, 0.08%)</title><rect x="1185.5" y="229" width="0.9" height="15.0" fill="rgb(248,97,43)" rx="2" ry="2" />
<text  x="1188.50" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (55 samples, 0.02%)</title><rect x="606.5" y="181" width="0.2" height="15.0" fill="rgb(205,26,5)" rx="2" ry="2" />
<text  x="609.50" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (144 samples, 0.05%)</title><rect x="31.3" y="229" width="0.6" height="15.0" fill="rgb(221,22,19)" rx="2" ry="2" />
<text  x="34.30" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (101 samples, 0.04%)</title><rect x="779.3" y="165" width="0.4" height="15.0" fill="rgb(234,191,1)" rx="2" ry="2" />
<text  x="782.26" y="175.5" ></text>
</g>
<g >
<title>intr_lookup_source (86 samples, 0.03%)</title><rect x="1188.2" y="261" width="0.4" height="15.0" fill="rgb(216,128,45)" rx="2" ry="2" />
<text  x="1191.22" y="271.5" ></text>
</g>
<g >
<title>_rm_rlock (1,352 samples, 0.51%)</title><rect x="291.4" y="69" width="6.0" height="15.0" fill="rgb(254,209,25)" rx="2" ry="2" />
<text  x="294.44" y="79.5" ></text>
</g>
<g >
<title>ip6_tryforward (144 samples, 0.05%)</title><rect x="31.3" y="149" width="0.6" height="15.0" fill="rgb(254,42,35)" rx="2" ry="2" />
<text  x="34.30" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,465 samples, 0.92%)</title><rect x="215.9" y="37" width="10.9" height="15.0" fill="rgb(237,38,33)" rx="2" ry="2" />
<text  x="218.91" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (111,688 samples, 41.74%)</title><rect x="97.1" y="181" width="492.5" height="15.0" fill="rgb(253,84,36)" rx="2" ry="2" />
<text  x="100.11" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>_ck_epoch_delref (25 samples, 0.01%)</title><rect x="49.0" y="213" width="0.1" height="15.0" fill="rgb(227,18,32)" rx="2" ry="2" />
<text  x="52.00" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (150 samples, 0.06%)</title><rect x="589.7" y="197" width="0.6" height="15.0" fill="rgb(226,206,7)" rx="2" ry="2" />
<text  x="592.66" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (74 samples, 0.03%)</title><rect x="1009.0" y="213" width="0.3" height="15.0" fill="rgb(244,2,38)" rx="2" ry="2" />
<text  x="1012.02" y="223.5" ></text>
</g>
<g >
<title>ip6_tryforward (9,765 samples, 3.65%)</title><rect x="1013.5" y="133" width="43.1" height="15.0" fill="rgb(232,225,51)" rx="2" ry="2" />
<text  x="1016.54" y="143.5" >ip6_..</text>
</g>
<g >
<title>ether_output_frame (4,312 samples, 1.61%)</title><rect x="1056.6" y="85" width="19.0" height="15.0" fill="rgb(245,113,44)" rx="2" ry="2" />
<text  x="1059.60" y="95.5" ></text>
</g>
<g >
<title>_rm_runlock (1,234 samples, 0.46%)</title><rect x="518.4" y="37" width="5.4" height="15.0" fill="rgb(253,122,31)" rx="2" ry="2" />
<text  x="521.40" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (45 samples, 0.02%)</title><rect x="31.3" y="53" width="0.2" height="15.0" fill="rgb(234,16,7)" rx="2" ry="2" />
<text  x="34.30" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (3,531 samples, 1.32%)</title><rect x="978.3" y="165" width="15.6" height="15.0" fill="rgb(241,173,24)" rx="2" ry="2" />
<text  x="981.35" y="175.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (43 samples, 0.02%)</title><rect x="674.5" y="197" width="0.2" height="15.0" fill="rgb(209,118,46)" rx="2" ry="2" />
<text  x="677.53" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (144 samples, 0.05%)</title><rect x="31.3" y="85" width="0.6" height="15.0" fill="rgb(245,46,35)" rx="2" ry="2" />
<text  x="34.30" y="95.5" ></text>
</g>
<g >
<title>hash_packet (9,623 samples, 3.60%)</title><rect x="1014.2" y="53" width="42.4" height="15.0" fill="rgb(246,155,17)" rx="2" ry="2" />
<text  x="1017.16" y="63.5" >has..</text>
</g>
<g >
<title>iflib_if_transmit (4,312 samples, 1.61%)</title><rect x="1056.6" y="69" width="19.0" height="15.0" fill="rgb(228,88,8)" rx="2" ry="2" />
<text  x="1059.60" y="79.5" ></text>
</g>
<g >
<title>pmap_kextract (333 samples, 0.12%)</title><rect x="737.2" y="117" width="1.5" height="15.0" fill="rgb(231,97,53)" rx="2" ry="2" />
<text  x="740.19" y="127.5" ></text>
</g>
<g >
<title>all (267,598 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(210,60,12)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ip6_input (144 samples, 0.05%)</title><rect x="31.3" y="165" width="0.6" height="15.0" fill="rgb(245,195,34)" rx="2" ry="2" />
<text  x="34.30" y="175.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (2,201 samples, 0.82%)</title><rect x="270.9" y="53" width="9.7" height="15.0" fill="rgb(244,7,35)" rx="2" ry="2" />
<text  x="273.86" y="63.5" ></text>
</g>
<g >
<title>lradix6_lookup (12,297 samples, 4.60%)</title><rect x="310.8" y="53" width="54.2" height="15.0" fill="rgb(226,185,8)" rx="2" ry="2" />
<text  x="313.82" y="63.5" >lradi..</text>
</g>
<g >
<title>netisr_dispatch_src (9,765 samples, 3.65%)</title><rect x="1013.5" y="213" width="43.1" height="15.0" fill="rgb(249,55,16)" rx="2" ry="2" />
<text  x="1016.54" y="223.5" >neti..</text>
</g>
<g >
<title>ether_output (144 samples, 0.05%)</title><rect x="31.3" y="133" width="0.6" height="15.0" fill="rgb(209,85,9)" rx="2" ry="2" />
<text  x="34.30" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (14,732 samples, 5.51%)</title><rect x="1056.6" y="197" width="65.0" height="15.0" fill="rgb(250,34,4)" rx="2" ry="2" />
<text  x="1059.60" y="207.5" >netisr_..</text>
</g>
<g >
<title>_task_fn_rx (14,732 samples, 5.51%)</title><rect x="1056.6" y="245" width="65.0" height="15.0" fill="rgb(250,87,13)" rx="2" ry="2" />
<text  x="1059.60" y="255.5" >_task_f..</text>
</g>
<g >
<title>m_pkthdr_init (401 samples, 0.15%)</title><rect x="649.9" y="197" width="1.8" height="15.0" fill="rgb(246,35,33)" rx="2" ry="2" />
<text  x="652.91" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (105,349 samples, 39.37%)</title><rect x="123.1" y="133" width="464.5" height="15.0" fill="rgb(220,2,7)" rx="2" ry="2" />
<text  x="126.09" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipfw_check_packet (10,420 samples, 3.89%)</title><rect x="1075.6" y="85" width="46.0" height="15.0" fill="rgb(244,127,45)" rx="2" ry="2" />
<text  x="1078.61" y="95.5" >ipfw..</text>
</g>
<g >
<title>m_tag_locate (603 samples, 0.23%)</title><rect x="585.0" y="53" width="2.6" height="15.0" fill="rgb(205,21,39)" rx="2" ry="2" />
<text  x="587.98" y="63.5" ></text>
</g>
<g >
<title>iflib_rxeof (144 samples, 0.05%)</title><rect x="31.3" y="261" width="0.6" height="15.0" fill="rgb(240,45,30)" rx="2" ry="2" />
<text  x="34.30" y="271.5" ></text>
</g>
<g >
<title>Xapic_isr1 (924 samples, 0.35%)</title><rect x="10.0" y="277" width="4.1" height="15.0" fill="rgb(244,124,24)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (524 samples, 0.20%)</title><rect x="619.8" y="197" width="2.3" height="15.0" fill="rgb(215,184,34)" rx="2" ry="2" />
<text  x="622.81" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (36 samples, 0.01%)</title><rect x="1013.3" y="213" width="0.1" height="15.0" fill="rgb(236,110,15)" rx="2" ry="2" />
<text  x="1016.29" y="223.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (9,154 samples, 3.42%)</title><rect x="1147.4" y="245" width="40.4" height="15.0" fill="rgb(217,25,41)" rx="2" ry="2" />
<text  x="1150.43" y="255.5" >ifl..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (372 samples, 0.14%)</title><rect x="1004.5" y="165" width="1.6" height="15.0" fill="rgb(229,189,18)" rx="2" ry="2" />
<text  x="1007.48" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (44 samples, 0.02%)</title><rect x="1182.8" y="213" width="0.2" height="15.0" fill="rgb(241,152,52)" rx="2" ry="2" />
<text  x="1185.77" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (724 samples, 0.27%)</title><rect x="717.8" y="165" width="3.2" height="15.0" fill="rgb(241,165,0)" rx="2" ry="2" />
<text  x="720.81" y="175.5" ></text>
</g>
<g >
<title>ether_demux (144 samples, 0.05%)</title><rect x="31.3" y="197" width="0.6" height="15.0" fill="rgb(232,165,33)" rx="2" ry="2" />
<text  x="34.30" y="207.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (6,776 samples, 2.53%)</title><rect x="708.8" y="181" width="29.9" height="15.0" fill="rgb(221,57,10)" rx="2" ry="2" />
<text  x="711.78" y="191.5" >if..</text>
</g>
<g >
<title>iflib_encap (57,889 samples, 21.63%)</title><rect x="738.7" y="181" width="255.2" height="15.0" fill="rgb(217,174,34)" rx="2" ry="2" />
<text  x="741.66" y="191.5" >iflib_encap</text>
</g>
<g >
<title>mb_ctor_mbuf (512 samples, 0.19%)</title><rect x="617.6" y="165" width="2.2" height="15.0" fill="rgb(210,80,36)" rx="2" ry="2" />
<text  x="620.55" y="175.5" ></text>
</g>
<g >
<title>if_inc_counter (177 samples, 0.07%)</title><rect x="590.3" y="197" width="0.8" height="15.0" fill="rgb(254,144,24)" rx="2" ry="2" />
<text  x="593.33" y="207.5" ></text>
</g>
<g >
<title>ipfw_chk (9,629 samples, 3.60%)</title><rect x="1014.1" y="85" width="42.5" height="15.0" fill="rgb(212,172,25)" rx="2" ry="2" />
<text  x="1017.14" y="95.5" >ipf..</text>
</g>
<g >
<title>ip6_input (9,765 samples, 3.65%)</title><rect x="1013.5" y="149" width="43.1" height="15.0" fill="rgb(220,53,42)" rx="2" ry="2" />
<text  x="1016.54" y="159.5" >ip6_..</text>
</g>
<g >
<title>pfil_run_hooks (9,629 samples, 3.60%)</title><rect x="1014.1" y="117" width="42.5" height="15.0" fill="rgb(240,220,46)" rx="2" ry="2" />
<text  x="1017.14" y="127.5" >pfi..</text>
</g>
<g >
<title>dyn_update_proto_state (2,432 samples, 0.91%)</title><rect x="1075.6" y="37" width="10.7" height="15.0" fill="rgb(236,35,11)" rx="2" ry="2" />
<text  x="1078.61" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (222,540 samples, 83.16%)</title><rect x="32.1" y="245" width="981.3" height="15.0" fill="rgb(208,4,3)" rx="2" ry="2" />
<text  x="35.14" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>gtaskqueue_thread_loop (222,541 samples, 83.16%)</title><rect x="32.1" y="261" width="981.3" height="15.0" fill="rgb(232,228,1)" rx="2" ry="2" />
<text  x="35.13" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>Xapic_isr1_pti (3,839 samples, 1.43%)</title><rect x="14.1" y="277" width="16.9" height="15.0" fill="rgb(248,193,36)" rx="2" ry="2" />
<text  x="17.07" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (141,905 samples, 53.03%)</title><rect x="49.1" y="229" width="625.8" height="15.0" fill="rgb(223,210,7)" rx="2" ry="2" />
<text  x="52.11" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>pmap_kextract (373 samples, 0.14%)</title><rect x="976.7" y="133" width="1.6" height="15.0" fill="rgb(219,209,12)" rx="2" ry="2" />
<text  x="979.70" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (744 samples, 0.28%)</title><rect x="49.4" y="213" width="3.3" height="15.0" fill="rgb(231,5,29)" rx="2" ry="2" />
<text  x="52.43" y="223.5" ></text>
</g>
<g >
<title>fib6_lookup (13,974 samples, 5.22%)</title><rect x="303.4" y="69" width="61.6" height="15.0" fill="rgb(248,164,18)" rx="2" ry="2" />
<text  x="306.42" y="79.5" >fib6_l..</text>
</g>
<g >
<title>ether_demux (14,732 samples, 5.51%)</title><rect x="1056.6" y="165" width="65.0" height="15.0" fill="rgb(222,182,52)" rx="2" ry="2" />
<text  x="1059.60" y="175.5" >ether_d..</text>
</g>
<g >
<title>ixgbe_write_reg (473 samples, 0.18%)</title><rect x="1006.1" y="165" width="2.1" height="15.0" fill="rgb(226,72,38)" rx="2" ry="2" />
<text  x="1009.12" y="175.5" ></text>
</g>
<g >
<title>ipfw_check_packet (47,500 samples, 17.75%)</title><rect x="378.2" y="69" width="209.4" height="15.0" fill="rgb(235,208,35)" rx="2" ry="2" />
<text  x="381.18" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>memcpy_erms (1,178 samples, 0.44%)</title><rect x="651.7" y="197" width="5.2" height="15.0" fill="rgb(224,15,15)" rx="2" ry="2" />
<text  x="654.68" y="207.5" ></text>
</g>
<g >
<title>pmc_process_samples (167 samples, 0.06%)</title><rect x="1189.1" y="197" width="0.7" height="15.0" fill="rgb(245,9,25)" rx="2" ry="2" />
<text  x="1192.07" y="207.5" ></text>
</g>
<g >
<title>m_free (3,492 samples, 1.30%)</title><rect x="723.3" y="149" width="15.4" height="15.0" fill="rgb(222,182,51)" rx="2" ry="2" />
<text  x="726.26" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (189 samples, 0.07%)</title><rect x="50.6" y="197" width="0.8" height="15.0" fill="rgb(209,87,52)" rx="2" ry="2" />
<text  x="53.59" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (78 samples, 0.03%)</title><rect x="52.4" y="165" width="0.3" height="15.0" fill="rgb(206,44,32)" rx="2" ry="2" />
<text  x="55.36" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (14,732 samples, 5.51%)</title><rect x="1056.6" y="261" width="65.0" height="15.0" fill="rgb(225,148,54)" rx="2" ry="2" />
<text  x="1059.60" y="271.5" >gtaskqu..</text>
</g>
<g >
<title>spinlock_enter (114 samples, 0.04%)</title><rect x="1009.4" y="229" width="0.5" height="15.0" fill="rgb(253,217,21)" rx="2" ry="2" />
<text  x="1012.40" y="239.5" ></text>
</g>
<g >
<title>doreti (44 samples, 0.02%)</title><rect x="31.9" y="277" width="0.2" height="15.0" fill="rgb(242,141,13)" rx="2" ry="2" />
<text  x="34.93" y="287.5" ></text>
</g>
<g >
<title>sleepq_broadcast (46 samples, 0.02%)</title><rect x="1011.3" y="213" width="0.2" height="15.0" fill="rgb(250,221,0)" rx="2" ry="2" />
<text  x="1014.31" y="223.5" ></text>
</g>
<g >
<title>fork_exit (222,561 samples, 83.17%)</title><rect x="32.1" y="277" width="981.4" height="15.0" fill="rgb(224,2,51)" rx="2" ry="2" />
<text  x="35.13" y="287.5" >fork_exit</text>
</g>
<g >
<title>rn_match (11,512 samples, 4.30%)</title><rect x="314.3" y="37" width="50.7" height="15.0" fill="rgb(254,191,36)" rx="2" ry="2" />
<text  x="317.28" y="47.5" >rn_ma..</text>
</g>
<g >
<title>iflib_if_transmit (136 samples, 0.05%)</title><rect x="1013.5" y="85" width="0.6" height="15.0" fill="rgb(235,157,15)" rx="2" ry="2" />
<text  x="1016.54" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (45 samples, 0.02%)</title><rect x="31.3" y="37" width="0.2" height="15.0" fill="rgb(250,152,52)" rx="2" ry="2" />
<text  x="34.30" y="47.5" ></text>
</g>
<g >
<title>iflib_fl_refill (6,510 samples, 2.43%)</title><rect x="591.1" y="197" width="28.7" height="15.0" fill="rgb(235,100,9)" rx="2" ry="2" />
<text  x="594.11" y="207.5" >if..</text>
</g>
<g >
<title>pfil_run_hooks (49,939 samples, 18.66%)</title><rect x="367.4" y="85" width="220.2" height="15.0" fill="rgb(226,100,43)" rx="2" ry="2" />
<text  x="370.43" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>iflib_txq_drain (70,743 samples, 26.44%)</title><rect x="696.3" y="197" width="311.9" height="15.0" fill="rgb(251,211,26)" rx="2" ry="2" />
<text  x="699.29" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (45,047 samples, 16.83%)</title><rect x="779.7" y="165" width="198.6" height="15.0" fill="rgb(224,21,25)" rx="2" ry="2" />
<text  x="782.71" y="175.5" >bus_dmamap_load_mbuf_sg</text>
</g>
<g >
<title>hardclock (218 samples, 0.08%)</title><rect x="1188.9" y="229" width="0.9" height="15.0" fill="rgb(229,154,28)" rx="2" ry="2" />
<text  x="1191.86" y="239.5" ></text>
</g>
<g >
<title>if_inc_counter (95 samples, 0.04%)</title><rect x="708.4" y="181" width="0.4" height="15.0" fill="rgb(219,140,1)" rx="2" ry="2" />
<text  x="711.36" y="191.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (158 samples, 0.06%)</title><rect x="48.4" y="229" width="0.7" height="15.0" fill="rgb(234,80,45)" rx="2" ry="2" />
<text  x="51.41" y="239.5" ></text>
</g>
<g >
<title>memcmp (445 samples, 0.17%)</title><rect x="587.6" y="149" width="2.0" height="15.0" fill="rgb(218,177,49)" rx="2" ry="2" />
<text  x="590.64" y="159.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (141 samples, 0.05%)</title><rect x="1008.4" y="213" width="0.6" height="15.0" fill="rgb(243,98,42)" rx="2" ry="2" />
<text  x="1011.40" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (2,310 samples, 0.86%)</title><rect x="1065.2" y="37" width="10.2" height="15.0" fill="rgb(207,157,51)" rx="2" ry="2" />
<text  x="1068.20" y="47.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2,339 samples, 0.87%)</title><rect x="609.5" y="181" width="10.3" height="15.0" fill="rgb(236,51,26)" rx="2" ry="2" />
<text  x="612.50" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (233 samples, 0.09%)</title><rect x="1183.9" y="213" width="1.0" height="15.0" fill="rgb(206,36,4)" rx="2" ry="2" />
<text  x="1186.88" y="223.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,671 samples, 1.00%)</title><rect x="726.9" y="133" width="11.8" height="15.0" fill="rgb(222,138,51)" rx="2" ry="2" />
<text  x="729.88" y="143.5" ></text>
</g>
<g >
<title>sleepq_lock (111 samples, 0.04%)</title><rect x="1184.0" y="197" width="0.5" height="15.0" fill="rgb(237,82,33)" rx="2" ry="2" />
<text  x="1186.99" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (144 samples, 0.05%)</title><rect x="31.3" y="69" width="0.6" height="15.0" fill="rgb(239,59,8)" rx="2" ry="2" />
<text  x="34.30" y="79.5" ></text>
</g>
<g >
<title>cache_alloc_retry (70 samples, 0.03%)</title><rect x="606.2" y="181" width="0.3" height="15.0" fill="rgb(245,215,29)" rx="2" ry="2" />
<text  x="609.19" y="191.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (29 samples, 0.01%)</title><rect x="1075.4" y="37" width="0.1" height="15.0" fill="rgb(218,146,22)" rx="2" ry="2" />
<text  x="1078.39" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (144 samples, 0.05%)</title><rect x="31.3" y="277" width="0.6" height="15.0" fill="rgb(237,64,52)" rx="2" ry="2" />
<text  x="34.30" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (33 samples, 0.01%)</title><rect x="1012.9" y="197" width="0.2" height="15.0" fill="rgb(221,223,23)" rx="2" ry="2" />
<text  x="1015.92" y="207.5" ></text>
</g>
<g >
<title>memcmp (461 samples, 0.17%)</title><rect x="278.5" y="37" width="2.1" height="15.0" fill="rgb(239,229,22)" rx="2" ry="2" />
<text  x="281.54" y="47.5" ></text>
</g>
<g >
<title>Xtimerint_pti (58 samples, 0.02%)</title><rect x="31.0" y="277" width="0.3" height="15.0" fill="rgb(218,169,16)" rx="2" ry="2" />
<text  x="34.04" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (28 samples, 0.01%)</title><rect x="1185.4" y="213" width="0.1" height="15.0" fill="rgb(208,167,33)" rx="2" ry="2" />
<text  x="1188.37" y="223.5" ></text>
</g>
<g >
<title>ipfw_chk (44,129 samples, 16.49%)</title><rect x="390.4" y="53" width="194.6" height="15.0" fill="rgb(214,20,23)" rx="2" ry="2" />
<text  x="393.39" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>ipfw_chk (10,420 samples, 3.89%)</title><rect x="1075.6" y="69" width="46.0" height="15.0" fill="rgb(252,111,5)" rx="2" ry="2" />
<text  x="1078.61" y="79.5" >ipfw..</text>
</g>
<g >
<title>_epoch_enter_preempt (240 samples, 0.09%)</title><rect x="47.4" y="229" width="1.0" height="15.0" fill="rgb(218,124,52)" rx="2" ry="2" />
<text  x="50.35" y="239.5" ></text>
</g>
<g >
<title>ip6_tryforward (100,373 samples, 37.51%)</title><rect x="145.0" y="101" width="442.6" height="15.0" fill="rgb(239,156,20)" rx="2" ry="2" />
<text  x="148.04" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>sleepq_lock (353 samples, 0.13%)</title><rect x="1011.5" y="213" width="1.6" height="15.0" fill="rgb(253,92,35)" rx="2" ry="2" />
<text  x="1014.51" y="223.5" ></text>
</g>
<g >
<title>hash_packet (4,609 samples, 1.72%)</title><rect x="1086.3" y="37" width="20.4" height="15.0" fill="rgb(210,116,52)" rx="2" ry="2" />
<text  x="1089.33" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (131 samples, 0.05%)</title><rect x="51.6" y="181" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="54.62" y="191.5" ></text>
</g>
<g >
<title>memcmp (541 samples, 0.20%)</title><rect x="365.0" y="85" width="2.4" height="15.0" fill="rgb(228,102,30)" rx="2" ry="2" />
<text  x="368.04" y="95.5" ></text>
</g>
<g >
<title>keg_alloc_slab (42 samples, 0.02%)</title><rect x="606.3" y="133" width="0.2" height="15.0" fill="rgb(234,46,37)" rx="2" ry="2" />
<text  x="609.27" y="143.5" ></text>
</g>
<g >
<title>ether_input (112,133 samples, 41.90%)</title><rect x="95.1" y="197" width="494.5" height="15.0" fill="rgb(215,93,20)" rx="2" ry="2" />
<text  x="98.14" y="207.5" >ether_input</text>
</g>
<g >
<title>gtaskqueue_run_locked (9,765 samples, 3.65%)</title><rect x="1013.5" y="277" width="43.1" height="15.0" fill="rgb(206,224,44)" rx="2" ry="2" />
<text  x="1016.54" y="287.5" >gtas..</text>
</g>
<g >
<title>rxd_frag_to_sd (4,005 samples, 1.50%)</title><rect x="656.9" y="197" width="17.6" height="15.0" fill="rgb(210,226,20)" rx="2" ry="2" />
<text  x="659.87" y="207.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (31 samples, 0.01%)</title><rect x="51.4" y="197" width="0.2" height="15.0" fill="rgb(242,178,15)" rx="2" ry="2" />
<text  x="54.42" y="207.5" ></text>
</g>
</g>
</svg>
