<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>netisr_dispatch (71 samples, 0.03%)</title><rect x="409.0" y="197" width="0.3" height="15.0" fill="rgb(219,63,0)" rx="2" ry="2" />
<text  x="411.96" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (15,248 samples, 5.70%)</title><rect x="1117.9" y="229" width="67.3" height="15.0" fill="rgb(245,148,10)" rx="2" ry="2" />
<text  x="1120.94" y="239.5" >groupta..</text>
</g>
<g >
<title>sleepq_release (64 samples, 0.02%)</title><rect x="1042.2" y="213" width="0.3" height="15.0" fill="rgb(247,0,22)" rx="2" ry="2" />
<text  x="1045.22" y="223.5" ></text>
</g>
<g >
<title>_task_fn_admin (67 samples, 0.03%)</title><rect x="73.3" y="229" width="0.3" height="15.0" fill="rgb(229,220,49)" rx="2" ry="2" />
<text  x="76.26" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (45,536 samples, 17.02%)</title><rect x="137.1" y="165" width="200.9" height="15.0" fill="rgb(243,103,7)" rx="2" ry="2" />
<text  x="140.11" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>spinlock_enter (77 samples, 0.03%)</title><rect x="74.7" y="197" width="0.4" height="15.0" fill="rgb(228,148,14)" rx="2" ry="2" />
<text  x="77.72" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,358 samples, 1.63%)</title><rect x="1043.3" y="261" width="19.2" height="15.0" fill="rgb(208,24,27)" rx="2" ry="2" />
<text  x="1046.27" y="271.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (3,397 samples, 1.27%)</title><rect x="1021.9" y="181" width="15.0" height="15.0" fill="rgb(227,63,37)" rx="2" ry="2" />
<text  x="1024.94" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (63 samples, 0.02%)</title><rect x="76.4" y="165" width="0.3" height="15.0" fill="rgb(226,13,27)" rx="2" ry="2" />
<text  x="79.38" y="175.5" ></text>
</g>
<g >
<title>ether_output (128 samples, 0.05%)</title><rect x="30.9" y="133" width="0.5" height="15.0" fill="rgb(248,153,24)" rx="2" ry="2" />
<text  x="33.87" y="143.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (575 samples, 0.21%)</title><rect x="1034.4" y="165" width="2.5" height="15.0" fill="rgb(247,137,43)" rx="2" ry="2" />
<text  x="1037.39" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (2,339 samples, 0.87%)</title><rect x="1052.0" y="37" width="10.3" height="15.0" fill="rgb(218,160,54)" rx="2" ry="2" />
<text  x="1055.02" y="47.5" ></text>
</g>
<g >
<title>intr_lookup_source (45 samples, 0.02%)</title><rect x="1188.6" y="261" width="0.2" height="15.0" fill="rgb(239,18,6)" rx="2" ry="2" />
<text  x="1191.64" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4,358 samples, 1.63%)</title><rect x="1043.3" y="149" width="19.2" height="15.0" fill="rgb(247,30,26)" rx="2" ry="2" />
<text  x="1046.27" y="159.5" ></text>
</g>
<g >
<title>ether_output (22,912 samples, 8.56%)</title><rect x="206.0" y="85" width="101.1" height="15.0" fill="rgb(228,17,33)" rx="2" ry="2" />
<text  x="209.00" y="95.5" >ether_output</text>
</g>
<g >
<title>sleepq_signal (104 samples, 0.04%)</title><rect x="1184.7" y="197" width="0.5" height="15.0" fill="rgb(211,95,41)" rx="2" ry="2" />
<text  x="1187.74" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (136 samples, 0.05%)</title><rect x="1042.7" y="261" width="0.6" height="15.0" fill="rgb(212,75,16)" rx="2" ry="2" />
<text  x="1045.67" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (150 samples, 0.06%)</title><rect x="75.1" y="197" width="0.6" height="15.0" fill="rgb(240,203,7)" rx="2" ry="2" />
<text  x="78.06" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (269 samples, 0.10%)</title><rect x="1184.0" y="213" width="1.2" height="15.0" fill="rgb(237,127,53)" rx="2" ry="2" />
<text  x="1187.01" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (14,681 samples, 5.49%)</title><rect x="239.0" y="69" width="64.8" height="15.0" fill="rgb(215,136,33)" rx="2" ry="2" />
<text  x="242.04" y="79.5" >ether_o..</text>
</g>
<g >
<title>iflib_if_transmit (136 samples, 0.05%)</title><rect x="1042.7" y="85" width="0.6" height="15.0" fill="rgb(247,2,23)" rx="2" ry="2" />
<text  x="1045.67" y="95.5" ></text>
</g>
<g >
<title>sleepq_lock (141 samples, 0.05%)</title><rect x="1184.1" y="197" width="0.6" height="15.0" fill="rgb(239,138,24)" rx="2" ry="2" />
<text  x="1187.12" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (37 samples, 0.01%)</title><rect x="1043.1" y="37" width="0.2" height="15.0" fill="rgb(234,53,16)" rx="2" ry="2" />
<text  x="1046.11" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (39 samples, 0.01%)</title><rect x="1042.1" y="197" width="0.1" height="15.0" fill="rgb(233,208,11)" rx="2" ry="2" />
<text  x="1045.05" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (36,447 samples, 13.62%)</title><rect x="175.6" y="101" width="160.7" height="15.0" fill="rgb(231,220,49)" rx="2" ry="2" />
<text  x="178.56" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ether_input (4,358 samples, 1.63%)</title><rect x="1043.3" y="213" width="19.2" height="15.0" fill="rgb(223,9,8)" rx="2" ry="2" />
<text  x="1046.27" y="223.5" ></text>
</g>
<g >
<title>if_inc_counter (83 samples, 0.03%)</title><rect x="487.7" y="181" width="0.4" height="15.0" fill="rgb(226,35,18)" rx="2" ry="2" />
<text  x="490.73" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (319 samples, 0.12%)</title><rect x="1040.8" y="213" width="1.4" height="15.0" fill="rgb(209,27,15)" rx="2" ry="2" />
<text  x="1043.82" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (128 samples, 0.05%)</title><rect x="30.9" y="213" width="0.5" height="15.0" fill="rgb(250,40,9)" rx="2" ry="2" />
<text  x="33.87" y="223.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (518 samples, 0.19%)</title><rect x="365.9" y="165" width="2.2" height="15.0" fill="rgb(222,171,38)" rx="2" ry="2" />
<text  x="368.85" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (136 samples, 0.05%)</title><rect x="1042.7" y="53" width="0.6" height="15.0" fill="rgb(222,183,4)" rx="2" ry="2" />
<text  x="1045.67" y="63.5" ></text>
</g>
<g >
<title>iflib_fl_refill (6,516 samples, 2.44%)</title><rect x="339.4" y="197" width="28.7" height="15.0" fill="rgb(220,7,43)" rx="2" ry="2" />
<text  x="342.39" y="207.5" >if..</text>
</g>
<g >
<title>drain_ring_lockless (44 samples, 0.02%)</title><rect x="73.3" y="213" width="0.2" height="15.0" fill="rgb(235,187,36)" rx="2" ry="2" />
<text  x="76.26" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (72 samples, 0.03%)</title><rect x="1184.9" y="181" width="0.3" height="15.0" fill="rgb(237,185,27)" rx="2" ry="2" />
<text  x="1187.88" y="191.5" ></text>
</g>
<g >
<title>timercb (235 samples, 0.09%)</title><rect x="1189.0" y="261" width="1.0" height="15.0" fill="rgb(252,94,50)" rx="2" ry="2" />
<text  x="1191.95" y="271.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (189 samples, 0.07%)</title><rect x="518.5" y="117" width="0.8" height="15.0" fill="rgb(245,81,51)" rx="2" ry="2" />
<text  x="521.51" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (571 samples, 0.21%)</title><rect x="368.1" y="197" width="2.6" height="15.0" fill="rgb(241,61,0)" rx="2" ry="2" />
<text  x="371.14" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (6,995 samples, 2.61%)</title><rect x="272.9" y="37" width="30.9" height="15.0" fill="rgb(219,125,30)" rx="2" ry="2" />
<text  x="275.91" y="47.5" >if..</text>
</g>
<g >
<title>_task_fn_tx (138,634 samples, 51.82%)</title><rect x="426.6" y="229" width="611.5" height="15.0" fill="rgb(217,5,13)" rx="2" ry="2" />
<text  x="429.59" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>iflib_rxeof (79,162 samples, 29.59%)</title><rect x="77.3" y="213" width="349.2" height="15.0" fill="rgb(246,41,28)" rx="2" ry="2" />
<text  x="80.34" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>_epoch_exit_preempt (115 samples, 0.04%)</title><rect x="72.8" y="229" width="0.5" height="15.0" fill="rgb(212,21,8)" rx="2" ry="2" />
<text  x="75.75" y="239.5" ></text>
</g>
<g >
<title>handleevents (219 samples, 0.08%)</title><rect x="1189.0" y="245" width="1.0" height="15.0" fill="rgb(205,203,6)" rx="2" ry="2" />
<text  x="1192.03" y="255.5" ></text>
</g>
<g >
<title>ip_input (4,358 samples, 1.63%)</title><rect x="1043.3" y="133" width="19.2" height="15.0" fill="rgb(233,53,48)" rx="2" ry="2" />
<text  x="1046.27" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,358 samples, 1.63%)</title><rect x="1043.3" y="277" width="19.2" height="15.0" fill="rgb(218,75,54)" rx="2" ry="2" />
<text  x="1046.27" y="287.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (96,041 samples, 35.90%)</title><rect x="578.5" y="165" width="423.6" height="15.0" fill="rgb(242,65,14)" rx="2" ry="2" />
<text  x="581.49" y="175.5" >bus_dmamap_load_mbuf_sg</text>
</g>
<g >
<title>netisr_dispatch_src (128 samples, 0.05%)</title><rect x="30.9" y="229" width="0.5" height="15.0" fill="rgb(218,151,6)" rx="2" ry="2" />
<text  x="33.87" y="239.5" ></text>
</g>
<g >
<title>iflib_get_ifp (23 samples, 0.01%)</title><rect x="1187.9" y="213" width="0.1" height="15.0" fill="rgb(228,136,24)" rx="2" ry="2" />
<text  x="1190.87" y="223.5" ></text>
</g>
<g >
<title>in_lltable_lookup (863 samples, 0.32%)</title><rect x="233.6" y="53" width="3.8" height="15.0" fill="rgb(227,30,12)" rx="2" ry="2" />
<text  x="236.56" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch (175 samples, 0.07%)</title><rect x="155.7" y="133" width="0.8" height="15.0" fill="rgb(254,132,5)" rx="2" ry="2" />
<text  x="158.73" y="143.5" ></text>
</g>
<g >
<title>sleepq_lock (157 samples, 0.06%)</title><rect x="76.0" y="181" width="0.7" height="15.0" fill="rgb(253,196,49)" rx="2" ry="2" />
<text  x="78.96" y="191.5" ></text>
</g>
<g >
<title>ether_input (128 samples, 0.05%)</title><rect x="30.9" y="245" width="0.5" height="15.0" fill="rgb(253,138,47)" rx="2" ry="2" />
<text  x="33.87" y="255.5" ></text>
</g>
<g >
<title>iflib_rxeof (136 samples, 0.05%)</title><rect x="1042.7" y="245" width="0.6" height="15.0" fill="rgb(223,166,7)" rx="2" ry="2" />
<text  x="1045.67" y="255.5" ></text>
</g>
<g >
<title>pmc_process_samples (128 samples, 0.05%)</title><rect x="1189.2" y="197" width="0.6" height="15.0" fill="rgb(230,150,20)" rx="2" ry="2" />
<text  x="1192.22" y="207.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2,353 samples, 0.88%)</title><rect x="357.8" y="181" width="10.3" height="15.0" fill="rgb(235,134,5)" rx="2" ry="2" />
<text  x="360.76" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (244 samples, 0.09%)</title><rect x="1186.4" y="229" width="1.1" height="15.0" fill="rgb(222,218,37)" rx="2" ry="2" />
<text  x="1189.44" y="239.5" ></text>
</g>
<g >
<title>ether_output (136 samples, 0.05%)</title><rect x="1042.7" y="117" width="0.6" height="15.0" fill="rgb(226,109,44)" rx="2" ry="2" />
<text  x="1045.67" y="127.5" ></text>
</g>
<g >
<title>in_localip (1,597 samples, 0.60%)</title><rect x="307.1" y="85" width="7.0" height="15.0" fill="rgb(248,114,37)" rx="2" ry="2" />
<text  x="310.07" y="95.5" ></text>
</g>
<g >
<title>ether_demux (43,383 samples, 16.22%)</title><rect x="145.0" y="149" width="191.3" height="15.0" fill="rgb(209,126,1)" rx="2" ry="2" />
<text  x="147.97" y="159.5" >ether_demux</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (7,422 samples, 2.77%)</title><rect x="488.1" y="181" width="32.7" height="15.0" fill="rgb(243,221,34)" rx="2" ry="2" />
<text  x="491.10" y="191.5" >if..</text>
</g>
<g >
<title>netisr_dispatch_src (136 samples, 0.05%)</title><rect x="1042.7" y="213" width="0.6" height="15.0" fill="rgb(220,74,25)" rx="2" ry="2" />
<text  x="1045.67" y="223.5" ></text>
</g>
<g >
<title>hardclock (162 samples, 0.06%)</title><rect x="1189.1" y="229" width="0.7" height="15.0" fill="rgb(223,92,45)" rx="2" ry="2" />
<text  x="1192.09" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (353 samples, 0.13%)</title><rect x="1038.8" y="229" width="1.5" height="15.0" fill="rgb(214,76,38)" rx="2" ry="2" />
<text  x="1041.77" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (742 samples, 0.28%)</title><rect x="303.8" y="69" width="3.3" height="15.0" fill="rgb(245,42,33)" rx="2" ry="2" />
<text  x="306.79" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4,358 samples, 1.63%)</title><rect x="1043.3" y="53" width="19.2" height="15.0" fill="rgb(249,26,12)" rx="2" ry="2" />
<text  x="1046.27" y="63.5" ></text>
</g>
<g >
<title>ip_input (39,294 samples, 14.69%)</title><rect x="163.0" y="117" width="173.3" height="15.0" fill="rgb(218,86,37)" rx="2" ry="2" />
<text  x="166.00" y="127.5" >ip_input</text>
</g>
<g >
<title>iflib_txq_drain (44 samples, 0.02%)</title><rect x="73.3" y="197" width="0.2" height="15.0" fill="rgb(205,176,7)" rx="2" ry="2" />
<text  x="76.26" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (428 samples, 0.16%)</title><rect x="402.2" y="197" width="1.9" height="15.0" fill="rgb(230,105,29)" rx="2" ry="2" />
<text  x="405.17" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (98 samples, 0.04%)</title><rect x="131.9" y="181" width="0.5" height="15.0" fill="rgb(242,211,42)" rx="2" ry="2" />
<text  x="134.94" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (331 samples, 0.12%)</title><rect x="75.8" y="197" width="1.5" height="15.0" fill="rgb(222,71,42)" rx="2" ry="2" />
<text  x="78.80" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (128 samples, 0.05%)</title><rect x="30.9" y="277" width="0.5" height="15.0" fill="rgb(244,207,20)" rx="2" ry="2" />
<text  x="33.87" y="287.5" ></text>
</g>
<g >
<title>ip_tryforward (136 samples, 0.05%)</title><rect x="1042.7" y="133" width="0.6" height="15.0" fill="rgb(233,46,3)" rx="2" ry="2" />
<text  x="1045.67" y="143.5" ></text>
</g>
<g >
<title>ip_input (136 samples, 0.05%)</title><rect x="1042.7" y="149" width="0.6" height="15.0" fill="rgb(237,94,20)" rx="2" ry="2" />
<text  x="1045.67" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (47 samples, 0.02%)</title><rect x="1183.0" y="213" width="0.2" height="15.0" fill="rgb(213,77,32)" rx="2" ry="2" />
<text  x="1186.01" y="223.5" ></text>
</g>
<g >
<title>if_inc_counter (140 samples, 0.05%)</title><rect x="338.8" y="197" width="0.6" height="15.0" fill="rgb(254,189,37)" rx="2" ry="2" />
<text  x="341.78" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (4,493 samples, 1.68%)</title><rect x="1002.1" y="165" width="19.8" height="15.0" fill="rgb(244,110,26)" rx="2" ry="2" />
<text  x="1005.12" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (99 samples, 0.04%)</title><rect x="1042.7" y="37" width="0.4" height="15.0" fill="rgb(211,73,31)" rx="2" ry="2" />
<text  x="1045.67" y="47.5" ></text>
</g>
<g >
<title>fork_exit (229,193 samples, 85.67%)</title><rect x="31.7" y="277" width="1011.0" height="15.0" fill="rgb(211,211,17)" rx="2" ry="2" />
<text  x="34.71" y="287.5" >fork_exit</text>
</g>
<g >
<title>ixgbe_msix_que (131 samples, 0.05%)</title><rect x="1187.5" y="229" width="0.6" height="15.0" fill="rgb(213,229,40)" rx="2" ry="2" />
<text  x="1190.52" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (150 samples, 0.06%)</title><rect x="1185.8" y="229" width="0.6" height="15.0" fill="rgb(229,165,27)" rx="2" ry="2" />
<text  x="1188.78" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (104 samples, 0.04%)</title><rect x="76.8" y="165" width="0.5" height="15.0" fill="rgb(220,51,26)" rx="2" ry="2" />
<text  x="79.80" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (136 samples, 0.05%)</title><rect x="1042.7" y="277" width="0.6" height="15.0" fill="rgb(237,126,40)" rx="2" ry="2" />
<text  x="1045.67" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (23 samples, 0.01%)</title><rect x="1185.7" y="213" width="0.1" height="15.0" fill="rgb(253,192,10)" rx="2" ry="2" />
<text  x="1188.68" y="223.5" ></text>
</g>
<g >
<title>wakeup (527 samples, 0.20%)</title><rect x="1040.3" y="229" width="2.4" height="15.0" fill="rgb(224,80,4)" rx="2" ry="2" />
<text  x="1043.33" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (128 samples, 0.05%)</title><rect x="30.9" y="149" width="0.5" height="15.0" fill="rgb(226,213,49)" rx="2" ry="2" />
<text  x="33.87" y="159.5" ></text>
</g>
<g >
<title>ether_demux (136 samples, 0.05%)</title><rect x="1042.7" y="181" width="0.6" height="15.0" fill="rgb(214,201,53)" rx="2" ry="2" />
<text  x="1045.67" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (7,145 samples, 2.67%)</title><rect x="370.7" y="197" width="31.5" height="15.0" fill="rgb(217,34,51)" rx="2" ry="2" />
<text  x="373.65" y="207.5" >ix..</text>
</g>
<g >
<title>pmc_hook_handler (132 samples, 0.05%)</title><rect x="1189.2" y="213" width="0.6" height="15.0" fill="rgb(239,182,31)" rx="2" ry="2" />
<text  x="1192.21" y="223.5" ></text>
</g>
<g >
<title>m_freem (4,203 samples, 1.57%)</title><rect x="502.3" y="165" width="18.5" height="15.0" fill="rgb(221,70,37)" rx="2" ry="2" />
<text  x="505.29" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (28 samples, 0.01%)</title><rect x="1188.0" y="213" width="0.1" height="15.0" fill="rgb(230,15,13)" rx="2" ry="2" />
<text  x="1190.98" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (451 samples, 0.17%)</title><rect x="1032.4" y="165" width="2.0" height="15.0" fill="rgb(209,106,51)" rx="2" ry="2" />
<text  x="1035.40" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (136 samples, 0.05%)</title><rect x="1042.7" y="69" width="0.6" height="15.0" fill="rgb(231,161,48)" rx="2" ry="2" />
<text  x="1045.67" y="79.5" ></text>
</g>
<g >
<title>iflib_encap (113,605 samples, 42.47%)</title><rect x="520.8" y="181" width="501.1" height="15.0" fill="rgb(215,52,15)" rx="2" ry="2" />
<text  x="523.83" y="191.5" >iflib_encap</text>
</g>
<g >
<title>sleepq_signal (138 samples, 0.05%)</title><rect x="76.7" y="181" width="0.6" height="15.0" fill="rgb(243,184,32)" rx="2" ry="2" />
<text  x="79.65" y="191.5" ></text>
</g>
<g >
<title>fib4_lookup (4,486 samples, 1.68%)</title><rect x="316.5" y="69" width="19.8" height="15.0" fill="rgb(234,157,5)" rx="2" ry="2" />
<text  x="319.53" y="79.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (3,760 samples, 1.41%)</title><rect x="13.9" y="277" width="16.6" height="15.0" fill="rgb(238,57,37)" rx="2" ry="2" />
<text  x="16.92" y="287.5" ></text>
</g>
<g >
<title>doreti (61 samples, 0.02%)</title><rect x="31.4" y="277" width="0.3" height="15.0" fill="rgb(243,5,40)" rx="2" ry="2" />
<text  x="34.44" y="287.5" ></text>
</g>
<g >
<title>if_getsoftc (184 samples, 0.07%)</title><rect x="272.1" y="37" width="0.8" height="15.0" fill="rgb(253,164,44)" rx="2" ry="2" />
<text  x="275.10" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (138 samples, 0.05%)</title><rect x="1038.2" y="229" width="0.6" height="15.0" fill="rgb(220,76,31)" rx="2" ry="2" />
<text  x="1041.16" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (88 samples, 0.03%)</title><rect x="578.1" y="165" width="0.4" height="15.0" fill="rgb(247,96,38)" rx="2" ry="2" />
<text  x="581.10" y="175.5" ></text>
</g>
<g >
<title>iflib_if_transmit (128 samples, 0.05%)</title><rect x="30.9" y="101" width="0.5" height="15.0" fill="rgb(233,195,20)" rx="2" ry="2" />
<text  x="33.87" y="111.5" ></text>
</g>
<g >
<title>all (267,515 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(210,170,46)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ether_input (46,980 samples, 17.56%)</title><rect x="130.7" y="197" width="207.3" height="15.0" fill="rgb(212,2,6)" rx="2" ry="2" />
<text  x="133.74" y="207.5" >ether_input</text>
</g>
<g >
<title>sleepq_broadcast (48 samples, 0.02%)</title><rect x="1040.6" y="213" width="0.2" height="15.0" fill="rgb(229,97,26)" rx="2" ry="2" />
<text  x="1043.60" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (128 samples, 0.05%)</title><rect x="30.9" y="261" width="0.5" height="15.0" fill="rgb(244,43,46)" rx="2" ry="2" />
<text  x="33.87" y="271.5" ></text>
</g>
<g >
<title>cache_alloc_retry (85 samples, 0.03%)</title><rect x="354.7" y="181" width="0.3" height="15.0" fill="rgb(241,218,27)" rx="2" ry="2" />
<text  x="357.67" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (54 samples, 0.02%)</title><rect x="357.5" y="181" width="0.3" height="15.0" fill="rgb(242,112,35)" rx="2" ry="2" />
<text  x="360.52" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (262 samples, 0.10%)</title><rect x="1188.8" y="277" width="1.2" height="15.0" fill="rgb(252,175,5)" rx="2" ry="2" />
<text  x="1191.84" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (229,188 samples, 85.67%)</title><rect x="31.7" y="245" width="1011.0" height="15.0" fill="rgb(226,94,46)" rx="2" ry="2" />
<text  x="34.71" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (132 samples, 0.05%)</title><rect x="1185.2" y="229" width="0.6" height="15.0" fill="rgb(238,73,10)" rx="2" ry="2" />
<text  x="1188.20" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_intr (113 samples, 0.04%)</title><rect x="1188.3" y="277" width="0.5" height="15.0" fill="rgb(239,1,21)" rx="2" ry="2" />
<text  x="1191.34" y="287.5" ></text>
</g>
<g >
<title>Xtimerint_pti (73 samples, 0.03%)</title><rect x="30.6" y="277" width="0.3" height="15.0" fill="rgb(212,91,36)" rx="2" ry="2" />
<text  x="33.55" y="287.5" ></text>
</g>
<g >
<title>intr_execute_handlers (28,530 samples, 10.66%)</title><rect x="1062.5" y="277" width="125.8" height="15.0" fill="rgb(243,9,6)" rx="2" ry="2" />
<text  x="1065.49" y="287.5" >intr_execute_ha..</text>
</g>
<g >
<title>wakeup_any (128 samples, 0.05%)</title><rect x="30.9" y="69" width="0.5" height="15.0" fill="rgb(218,88,21)" rx="2" ry="2" />
<text  x="33.87" y="79.5" ></text>
</g>
<g >
<title>ether_nh_input (136 samples, 0.05%)</title><rect x="1042.7" y="197" width="0.6" height="15.0" fill="rgb(242,199,42)" rx="2" ry="2" />
<text  x="1045.67" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (4,358 samples, 1.63%)</title><rect x="1043.3" y="229" width="19.2" height="15.0" fill="rgb(242,95,34)" rx="2" ry="2" />
<text  x="1046.27" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (74 samples, 0.03%)</title><rect x="31.1" y="53" width="0.3" height="15.0" fill="rgb(251,128,24)" rx="2" ry="2" />
<text  x="34.11" y="63.5" ></text>
</g>
<g >
<title>ether_input (136 samples, 0.05%)</title><rect x="1042.7" y="229" width="0.6" height="15.0" fill="rgb(221,69,17)" rx="2" ry="2" />
<text  x="1045.67" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (4,358 samples, 1.63%)</title><rect x="1043.3" y="85" width="19.2" height="15.0" fill="rgb(232,154,31)" rx="2" ry="2" />
<text  x="1046.27" y="95.5" ></text>
</g>
<g >
<title>pmap_kextract (329 samples, 0.12%)</title><rect x="1000.7" y="133" width="1.4" height="15.0" fill="rgb(227,164,53)" rx="2" ry="2" />
<text  x="1003.67" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (53 samples, 0.02%)</title><rect x="1184.5" y="181" width="0.2" height="15.0" fill="rgb(212,183,29)" rx="2" ry="2" />
<text  x="1187.51" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (33 samples, 0.01%)</title><rect x="1042.5" y="213" width="0.2" height="15.0" fill="rgb(247,54,16)" rx="2" ry="2" />
<text  x="1045.51" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (769 samples, 0.29%)</title><rect x="73.9" y="213" width="3.4" height="15.0" fill="rgb(205,15,54)" rx="2" ry="2" />
<text  x="76.87" y="223.5" ></text>
</g>
<g >
<title>lapic_et_start (29 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(240,215,35)" rx="2" ry="2" />
<text  x="1192.81" y="239.5" ></text>
</g>
<g >
<title>iflib_encap (36 samples, 0.01%)</title><rect x="73.3" y="181" width="0.1" height="15.0" fill="rgb(246,156,12)" rx="2" ry="2" />
<text  x="76.29" y="191.5" ></text>
</g>
<g >
<title>memmove_erms (378 samples, 0.14%)</title><rect x="237.4" y="53" width="1.6" height="15.0" fill="rgb(212,106,8)" rx="2" ry="2" />
<text  x="240.37" y="63.5" ></text>
</g>
<g >
<title>ether_output_frame (136 samples, 0.05%)</title><rect x="1042.7" y="101" width="0.6" height="15.0" fill="rgb(242,135,53)" rx="2" ry="2" />
<text  x="1045.67" y="111.5" ></text>
</g>
<g >
<title>bsearch4_lookup (3,253 samples, 1.22%)</title><rect x="322.0" y="53" width="14.3" height="15.0" fill="rgb(210,84,45)" rx="2" ry="2" />
<text  x="324.97" y="63.5" ></text>
</g>
<g >
<title>if_getdrvflags (174 samples, 0.07%)</title><rect x="338.0" y="197" width="0.8" height="15.0" fill="rgb(235,70,6)" rx="2" ry="2" />
<text  x="341.01" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (54 samples, 0.02%)</title><rect x="30.9" y="53" width="0.2" height="15.0" fill="rgb(211,86,31)" rx="2" ry="2" />
<text  x="33.87" y="63.5" ></text>
</g>
<g >
<title>ether_demux (128 samples, 0.05%)</title><rect x="30.9" y="197" width="0.5" height="15.0" fill="rgb(224,137,23)" rx="2" ry="2" />
<text  x="33.87" y="207.5" ></text>
</g>
<g >
<title>ether_demux (4,358 samples, 1.63%)</title><rect x="1043.3" y="165" width="19.2" height="15.0" fill="rgb(209,49,16)" rx="2" ry="2" />
<text  x="1046.27" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (40,767 samples, 15.24%)</title><rect x="156.5" y="133" width="179.8" height="15.0" fill="rgb(223,150,53)" rx="2" ry="2" />
<text  x="159.51" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>spinlock_enter (1,983 samples, 0.74%)</title><rect x="1043.3" y="37" width="8.7" height="15.0" fill="rgb(211,205,42)" rx="2" ry="2" />
<text  x="1046.27" y="47.5" ></text>
</g>
<g >
<title>memcmp (371 samples, 0.14%)</title><rect x="336.3" y="149" width="1.7" height="15.0" fill="rgb(227,70,53)" rx="2" ry="2" />
<text  x="339.33" y="159.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (170 samples, 0.06%)</title><rect x="1037.1" y="213" width="0.7" height="15.0" fill="rgb(249,134,49)" rx="2" ry="2" />
<text  x="1040.08" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (24 samples, 0.01%)</title><rect x="73.3" y="165" width="0.1" height="15.0" fill="rgb(230,67,32)" rx="2" ry="2" />
<text  x="76.33" y="175.5" ></text>
</g>
<g >
<title>m_adj (798 samples, 0.30%)</title><rect x="152.2" y="133" width="3.5" height="15.0" fill="rgb(217,125,31)" rx="2" ry="2" />
<text  x="155.21" y="143.5" ></text>
</g>
<g >
<title>_task_fn_rx (4,358 samples, 1.63%)</title><rect x="1043.3" y="245" width="19.2" height="15.0" fill="rgb(235,35,29)" rx="2" ry="2" />
<text  x="1046.27" y="255.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (3,868 samples, 1.45%)</title><rect x="409.3" y="197" width="17.0" height="15.0" fill="rgb(209,28,24)" rx="2" ry="2" />
<text  x="412.28" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (128 samples, 0.05%)</title><rect x="30.9" y="85" width="0.5" height="15.0" fill="rgb(247,199,47)" rx="2" ry="2" />
<text  x="33.87" y="95.5" ></text>
</g>
<g >
<title>spinlock_exit (160 samples, 0.06%)</title><rect x="1183.2" y="213" width="0.7" height="15.0" fill="rgb(226,96,25)" rx="2" ry="2" />
<text  x="1186.22" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4,358 samples, 1.63%)</title><rect x="1043.3" y="197" width="19.2" height="15.0" fill="rgb(229,97,20)" rx="2" ry="2" />
<text  x="1046.27" y="207.5" ></text>
</g>
<g >
<title>Xapic_isr1 (889 samples, 0.33%)</title><rect x="10.0" y="277" width="3.9" height="15.0" fill="rgb(242,153,20)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ip_tryforward (4,358 samples, 1.63%)</title><rect x="1043.3" y="117" width="19.2" height="15.0" fill="rgb(247,109,1)" rx="2" ry="2" />
<text  x="1046.27" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,749 samples, 1.03%)</title><rect x="260.0" y="37" width="12.1" height="15.0" fill="rgb(226,32,25)" rx="2" ry="2" />
<text  x="262.97" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (63 samples, 0.02%)</title><rect x="1037.8" y="213" width="0.3" height="15.0" fill="rgb(244,144,43)" rx="2" ry="2" />
<text  x="1040.83" y="223.5" ></text>
</g>
<g >
<title>cache_alloc (58 samples, 0.02%)</title><rect x="354.8" y="165" width="0.2" height="15.0" fill="rgb(207,149,32)" rx="2" ry="2" />
<text  x="357.77" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (128 samples, 0.05%)</title><rect x="30.9" y="117" width="0.5" height="15.0" fill="rgb(225,53,41)" rx="2" ry="2" />
<text  x="33.87" y="127.5" ></text>
</g>
<g >
<title>ip_input (128 samples, 0.05%)</title><rect x="30.9" y="165" width="0.5" height="15.0" fill="rgb(223,105,27)" rx="2" ry="2" />
<text  x="33.87" y="175.5" ></text>
</g>
<g >
<title>ip_findroute (5,035 samples, 1.88%)</title><rect x="314.1" y="85" width="22.2" height="15.0" fill="rgb(249,192,17)" rx="2" ry="2" />
<text  x="317.11" y="95.5" >i..</text>
</g>
<g >
<title>drain_ring_lockless (138,284 samples, 51.69%)</title><rect x="427.0" y="213" width="609.9" height="15.0" fill="rgb(211,175,38)" rx="2" ry="2" />
<text  x="429.97" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (53 samples, 0.02%)</title><rect x="355.0" y="181" width="0.3" height="15.0" fill="rgb(241,138,29)" rx="2" ry="2" />
<text  x="358.04" y="191.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3,561 samples, 1.33%)</title><rect x="986.4" y="149" width="15.7" height="15.0" fill="rgb(236,74,27)" rx="2" ry="2" />
<text  x="989.41" y="159.5" ></text>
</g>
<g >
<title>ether_output (4,358 samples, 1.63%)</title><rect x="1043.3" y="101" width="19.2" height="15.0" fill="rgb(246,43,46)" rx="2" ry="2" />
<text  x="1046.27" y="111.5" ></text>
</g>
<g >
<title>arpresolve (2,843 samples, 1.06%)</title><rect x="226.5" y="69" width="12.5" height="15.0" fill="rgb(208,68,51)" rx="2" ry="2" />
<text  x="229.49" y="79.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (23 samples, 0.01%)</title><rect x="72.6" y="213" width="0.2" height="15.0" fill="rgb(249,102,49)" rx="2" ry="2" />
<text  x="75.65" y="223.5" ></text>
</g>
<g >
<title>m_free (3,617 samples, 1.35%)</title><rect x="504.9" y="149" width="15.9" height="15.0" fill="rgb(247,168,0)" rx="2" ry="2" />
<text  x="507.88" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (136 samples, 0.05%)</title><rect x="1042.7" y="165" width="0.6" height="15.0" fill="rgb(205,101,17)" rx="2" ry="2" />
<text  x="1045.67" y="175.5" ></text>
</g>
<g >
<title>zone_import (50 samples, 0.02%)</title><rect x="354.8" y="149" width="0.2" height="15.0" fill="rgb(237,55,44)" rx="2" ry="2" />
<text  x="357.81" y="159.5" ></text>
</g>
<g >
<title>keg_alloc_slab (39 samples, 0.01%)</title><rect x="354.8" y="133" width="0.2" height="15.0" fill="rgb(225,164,53)" rx="2" ry="2" />
<text  x="357.83" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (229,189 samples, 85.67%)</title><rect x="31.7" y="261" width="1011.0" height="15.0" fill="rgb(241,126,34)" rx="2" ry="2" />
<text  x="34.71" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>pmap_kextract (339 samples, 0.13%)</title><rect x="519.3" y="117" width="1.5" height="15.0" fill="rgb(236,214,14)" rx="2" ry="2" />
<text  x="522.34" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (74 samples, 0.03%)</title><rect x="31.1" y="37" width="0.3" height="15.0" fill="rgb(254,152,19)" rx="2" ry="2" />
<text  x="34.11" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (508 samples, 0.19%)</title><rect x="355.3" y="181" width="2.2" height="15.0" fill="rgb(231,11,23)" rx="2" ry="2" />
<text  x="358.28" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (871 samples, 0.33%)</title><rect x="498.5" y="165" width="3.8" height="15.0" fill="rgb(220,37,8)" rx="2" ry="2" />
<text  x="501.45" y="175.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,782 samples, 1.04%)</title><rect x="508.6" y="133" width="12.2" height="15.0" fill="rgb(225,120,31)" rx="2" ry="2" />
<text  x="511.56" y="143.5" ></text>
</g>
<g >
<title>iflib_txq_drain (127,382 samples, 47.62%)</title><rect x="475.1" y="197" width="561.8" height="15.0" fill="rgb(215,174,21)" rx="2" ry="2" />
<text  x="478.06" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>iflib_if_transmit (4,358 samples, 1.63%)</title><rect x="1043.3" y="69" width="19.2" height="15.0" fill="rgb(238,148,3)" rx="2" ry="2" />
<text  x="1046.27" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (46,610 samples, 17.42%)</title><rect x="132.4" y="181" width="205.6" height="15.0" fill="rgb(237,74,26)" rx="2" ry="2" />
<text  x="135.37" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>memcpy_erms (1,112 samples, 0.42%)</title><rect x="404.1" y="197" width="4.9" height="15.0" fill="rgb(231,120,32)" rx="2" ry="2" />
<text  x="407.06" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (128 samples, 0.05%)</title><rect x="30.9" y="181" width="0.5" height="15.0" fill="rgb(212,94,18)" rx="2" ry="2" />
<text  x="33.87" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (4,358 samples, 1.63%)</title><rect x="1043.3" y="181" width="19.2" height="15.0" fill="rgb(245,213,38)" rx="2" ry="2" />
<text  x="1046.27" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (54 samples, 0.02%)</title><rect x="30.9" y="37" width="0.2" height="15.0" fill="rgb(228,229,49)" rx="2" ry="2" />
<text  x="33.87" y="47.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (248 samples, 0.09%)</title><rect x="71.7" y="229" width="1.1" height="15.0" fill="rgb(252,10,30)" rx="2" ry="2" />
<text  x="74.66" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (80,037 samples, 29.92%)</title><rect x="73.6" y="229" width="353.0" height="15.0" fill="rgb(229,208,7)" rx="2" ry="2" />
<text  x="76.55" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>intr_event_handle (27,486 samples, 10.27%)</title><rect x="1067.0" y="261" width="121.3" height="15.0" fill="rgb(228,132,38)" rx="2" ry="2" />
<text  x="1070.02" y="271.5" >intr_event_handle</text>
</g>
<g >
<title>tcp_lro_flush_all (42 samples, 0.02%)</title><rect x="426.3" y="197" width="0.2" height="15.0" fill="rgb(215,166,6)" rx="2" ry="2" />
<text  x="429.34" y="207.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (16,237 samples, 6.07%)</title><rect x="1116.5" y="245" width="71.6" height="15.0" fill="rgb(235,157,7)" rx="2" ry="2" />
<text  x="1119.48" y="255.5" >iflib_fa..</text>
</g>
<g >
<title>iflib_if_transmit (12,668 samples, 4.74%)</title><rect x="247.9" y="53" width="55.9" height="15.0" fill="rgb(236,227,31)" rx="2" ry="2" />
<text  x="250.91" y="63.5" >iflib..</text>
</g>
</g>
</svg>
