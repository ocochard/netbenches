<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>mlx5e_sq_xmit (977 samples, 0.15%)</title><rect x="600.3" y="69" width="1.8" height="15.0" fill="rgb(218,67,19)" rx="2" ry="2" />
<text  x="603.25" y="79.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (63 samples, 0.01%)</title><rect x="1189.3" y="181" width="0.2" height="15.0" fill="rgb(226,82,52)" rx="2" ry="2" />
<text  x="1192.34" y="191.5" ></text>
</g>
<g >
<title>in_localip (432 samples, 0.07%)</title><rect x="82.5" y="101" width="0.8" height="15.0" fill="rgb(230,84,0)" rx="2" ry="2" />
<text  x="85.49" y="111.5" ></text>
</g>
<g >
<title>tdq_notify (471 samples, 0.07%)</title><rect x="595.9" y="213" width="0.9" height="15.0" fill="rgb(230,194,38)" rx="2" ry="2" />
<text  x="598.91" y="223.5" ></text>
</g>
<g >
<title>sched_switch (589 samples, 0.09%)</title><rect x="580.5" y="229" width="1.1" height="15.0" fill="rgb(239,80,28)" rx="2" ry="2" />
<text  x="583.53" y="239.5" ></text>
</g>
<g >
<title>sched_idletd (8,386 samples, 1.31%)</title><rect x="566.8" y="261" width="15.4" height="15.0" fill="rgb(248,226,7)" rx="2" ry="2" />
<text  x="569.77" y="271.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (100 samples, 0.02%)</title><rect x="48.5" y="181" width="0.1" height="15.0" fill="rgb(253,132,45)" rx="2" ry="2" />
<text  x="51.46" y="191.5" ></text>
</g>
<g >
<title>hardclock (339 samples, 0.05%)</title><rect x="1189.0" y="229" width="0.6" height="15.0" fill="rgb(207,121,50)" rx="2" ry="2" />
<text  x="1191.96" y="239.5" ></text>
</g>
<g >
<title>rsb_flush (148 samples, 0.02%)</title><rect x="580.3" y="229" width="0.2" height="15.0" fill="rgb(236,92,22)" rx="2" ry="2" />
<text  x="583.26" y="239.5" ></text>
</g>
<g >
<title>ipf_makefrip (3,625 samples, 0.57%)</title><rect x="491.9" y="53" width="6.7" height="15.0" fill="rgb(208,177,37)" rx="2" ry="2" />
<text  x="494.93" y="63.5" ></text>
</g>
<g >
<title>ether_input (91 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(210,221,39)" rx="2" ry="2" />
<text  x="1192.83" y="255.5" ></text>
</g>
<g >
<title>mi_switch (6,602 samples, 1.03%)</title><rect x="27.6" y="245" width="12.1" height="15.0" fill="rgb(230,142,34)" rx="2" ry="2" />
<text  x="30.59" y="255.5" ></text>
</g>
<g >
<title>cpu_switch (663 samples, 0.10%)</title><rect x="579.0" y="229" width="1.2" height="15.0" fill="rgb(221,83,27)" rx="2" ry="2" />
<text  x="581.99" y="239.5" ></text>
</g>
<g >
<title>ether_output (977 samples, 0.15%)</title><rect x="600.3" y="117" width="1.8" height="15.0" fill="rgb(238,135,38)" rx="2" ry="2" />
<text  x="603.25" y="127.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (283 samples, 0.04%)</title><rect x="575.7" y="213" width="0.5" height="15.0" fill="rgb(245,141,5)" rx="2" ry="2" />
<text  x="578.67" y="223.5" ></text>
</g>
<g >
<title>ipf_nat_checkout (228 samples, 0.04%)</title><rect x="499.0" y="53" width="0.4" height="15.0" fill="rgb(229,203,20)" rx="2" ry="2" />
<text  x="501.98" y="63.5" ></text>
</g>
<g >
<title>mlx5e_get_cqe (321 samples, 0.05%)</title><rect x="27.0" y="165" width="0.6" height="15.0" fill="rgb(208,96,28)" rx="2" ry="2" />
<text  x="30.00" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (319,437 samples, 49.85%)</title><rect x="600.3" y="197" width="588.1" height="15.0" fill="rgb(243,155,26)" rx="2" ry="2" />
<text  x="603.25" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>cpu_search_highest (1,866 samples, 0.29%)</title><rect x="35.3" y="197" width="3.5" height="15.0" fill="rgb(234,98,8)" rx="2" ry="2" />
<text  x="38.35" y="207.5" ></text>
</g>
<g >
<title>mlx5e_xmit (977 samples, 0.15%)</title><rect x="600.3" y="85" width="1.8" height="15.0" fill="rgb(246,202,17)" rx="2" ry="2" />
<text  x="603.25" y="95.5" ></text>
</g>
<g >
<title>pfil_run_hooks (318,460 samples, 49.69%)</title><rect x="602.1" y="117" width="586.3" height="15.0" fill="rgb(245,202,28)" rx="2" ry="2" />
<text  x="605.05" y="127.5" >pfil_run_hooks</text>
</g>
<g >
<title>netisr_dispatch_src (319,437 samples, 49.85%)</title><rect x="600.3" y="165" width="588.1" height="15.0" fill="rgb(251,192,13)" rx="2" ry="2" />
<text  x="603.25" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch_src (319,437 samples, 49.85%)</title><rect x="600.3" y="213" width="588.1" height="15.0" fill="rgb(232,0,43)" rx="2" ry="2" />
<text  x="603.25" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch_src (91 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(232,2,24)" rx="2" ry="2" />
<text  x="1192.83" y="191.5" ></text>
</g>
<g >
<title>lock_delay (1,238 samples, 0.19%)</title><rect x="597.2" y="213" width="2.3" height="15.0" fill="rgb(213,132,27)" rx="2" ry="2" />
<text  x="600.20" y="223.5" ></text>
</g>
<g >
<title>cpu_idle (4,478 samples, 0.70%)</title><rect x="568.1" y="245" width="8.2" height="15.0" fill="rgb(208,41,4)" rx="2" ry="2" />
<text  x="571.05" y="255.5" ></text>
</g>
<g >
<title>ip_input (272,906 samples, 42.58%)</title><rect x="56.6" y="133" width="502.5" height="15.0" fill="rgb(234,192,38)" rx="2" ry="2" />
<text  x="59.60" y="143.5" >ip_input</text>
</g>
<g >
<title>thread_lock_flags_ (871 samples, 0.14%)</title><rect x="564.9" y="245" width="1.6" height="15.0" fill="rgb(212,179,44)" rx="2" ry="2" />
<text  x="567.94" y="255.5" ></text>
</g>
<g >
<title>ether_output_frame (977 samples, 0.15%)</title><rect x="600.3" y="101" width="1.8" height="15.0" fill="rgb(245,136,5)" rx="2" ry="2" />
<text  x="603.25" y="111.5" ></text>
</g>
<g >
<title>sched_add (6,202 samples, 0.97%)</title><rect x="585.4" y="229" width="11.4" height="15.0" fill="rgb(211,222,28)" rx="2" ry="2" />
<text  x="588.38" y="239.5" ></text>
</g>
<g >
<title>cpu_search_highest (1,398 samples, 0.22%)</title><rect x="576.3" y="245" width="2.6" height="15.0" fill="rgb(225,210,49)" rx="2" ry="2" />
<text  x="579.30" y="255.5" ></text>
</g>
<g >
<title>tdq_move (251 samples, 0.04%)</title><rect x="39.2" y="213" width="0.5" height="15.0" fill="rgb(205,143,39)" rx="2" ry="2" />
<text  x="42.24" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (91 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(209,68,26)" rx="2" ry="2" />
<text  x="1192.83" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (91 samples, 0.01%)</title><rect x="1189.8" y="53" width="0.2" height="15.0" fill="rgb(221,52,54)" rx="2" ry="2" />
<text  x="1192.83" y="63.5" ></text>
</g>
<g >
<title>lock_delay (385 samples, 0.06%)</title><rect x="586.2" y="197" width="0.7" height="15.0" fill="rgb(227,109,22)" rx="2" ry="2" />
<text  x="589.22" y="207.5" ></text>
</g>
<g >
<title>vn_io_fault (112 samples, 0.02%)</title><rect x="566.6" y="245" width="0.2" height="15.0" fill="rgb(229,196,46)" rx="2" ry="2" />
<text  x="569.56" y="255.5" ></text>
</g>
<g >
<title>m_copydata (300 samples, 0.05%)</title><rect x="81.1" y="37" width="0.5" height="15.0" fill="rgb(232,108,41)" rx="2" ry="2" />
<text  x="84.08" y="47.5" ></text>
</g>
<g >
<title>m_pkthdr_init (215 samples, 0.03%)</title><rect x="564.4" y="165" width="0.4" height="15.0" fill="rgb(207,221,0)" rx="2" ry="2" />
<text  x="567.43" y="175.5" ></text>
</g>
<g >
<title>arpresolve (1,159 samples, 0.18%)</title><rect x="63.8" y="85" width="2.1" height="15.0" fill="rgb(236,200,48)" rx="2" ry="2" />
<text  x="66.78" y="95.5" ></text>
</g>
<g >
<title>m_adj (292 samples, 0.05%)</title><rect x="55.1" y="149" width="0.6" height="15.0" fill="rgb(224,89,16)" rx="2" ry="2" />
<text  x="58.13" y="159.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (286 samples, 0.04%)</title><rect x="575.7" y="229" width="0.5" height="15.0" fill="rgb(248,42,17)" rx="2" ry="2" />
<text  x="578.66" y="239.5" ></text>
</g>
<g >
<title>timercb (647 samples, 0.10%)</title><rect x="1188.6" y="261" width="1.2" height="15.0" fill="rgb(247,177,49)" rx="2" ry="2" />
<text  x="1191.64" y="271.5" ></text>
</g>
<g >
<title>fib4_lookup (884 samples, 0.14%)</title><rect x="83.6" y="85" width="1.6" height="15.0" fill="rgb(243,151,41)" rx="2" ry="2" />
<text  x="86.57" y="95.5" ></text>
</g>
<g >
<title>refill_fl (55 samples, 0.01%)</title><rect x="564.8" y="213" width="0.1" height="15.0" fill="rgb(218,120,43)" rx="2" ry="2" />
<text  x="567.84" y="223.5" ></text>
</g>
<g >
<title>ip_input (319,437 samples, 49.85%)</title><rect x="600.3" y="149" width="588.1" height="15.0" fill="rgb(246,220,15)" rx="2" ry="2" />
<text  x="603.25" y="159.5" >ip_input</text>
</g>
<g >
<title>memcpy_erms (155 samples, 0.02%)</title><rect x="82.2" y="85" width="0.3" height="15.0" fill="rgb(207,9,31)" rx="2" ry="2" />
<text  x="85.21" y="95.5" ></text>
</g>
<g >
<title>critical_exit_preempt (62 samples, 0.01%)</title><rect x="583.9" y="245" width="0.1" height="15.0" fill="rgb(210,170,13)" rx="2" ry="2" />
<text  x="586.90" y="255.5" ></text>
</g>
<g >
<title>lock_delay (196 samples, 0.03%)</title><rect x="581.8" y="229" width="0.4" height="15.0" fill="rgb(209,82,52)" rx="2" ry="2" />
<text  x="584.83" y="239.5" ></text>
</g>
<g >
<title>pmap_kextract (147 samples, 0.02%)</title><rect x="26.7" y="117" width="0.3" height="15.0" fill="rgb(225,207,35)" rx="2" ry="2" />
<text  x="29.73" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (254 samples, 0.04%)</title><rect x="39.8" y="245" width="0.4" height="15.0" fill="rgb(219,183,19)" rx="2" ry="2" />
<text  x="42.76" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (64 samples, 0.01%)</title><rect x="38.8" y="213" width="0.1" height="15.0" fill="rgb(248,117,51)" rx="2" ry="2" />
<text  x="41.78" y="223.5" ></text>
</g>
<g >
<title>fpu_activate_sw (340 samples, 0.05%)</title><rect x="579.3" y="213" width="0.6" height="15.0" fill="rgb(224,204,50)" rx="2" ry="2" />
<text  x="582.31" y="223.5" ></text>
</g>
<g >
<title>m_free (2,223 samples, 0.35%)</title><rect x="22.9" y="149" width="4.1" height="15.0" fill="rgb(212,159,18)" rx="2" ry="2" />
<text  x="25.91" y="159.5" ></text>
</g>
<g >
<title>runq_add (188 samples, 0.03%)</title><rect x="595.6" y="197" width="0.3" height="15.0" fill="rgb(229,223,51)" rx="2" ry="2" />
<text  x="598.56" y="207.5" ></text>
</g>
<g >
<title>lock_delay (160,071 samples, 24.98%)</title><rect x="893.7" y="37" width="294.7" height="15.0" fill="rgb(233,167,46)" rx="2" ry="2" />
<text  x="896.69" y="47.5" >lock_delay</text>
</g>
<g >
<title>choosethread (345 samples, 0.05%)</title><rect x="580.8" y="213" width="0.6" height="15.0" fill="rgb(223,110,54)" rx="2" ry="2" />
<text  x="583.78" y="223.5" ></text>
</g>
<g >
<title>sched_switch (5,002 samples, 0.78%)</title><rect x="30.5" y="229" width="9.2" height="15.0" fill="rgb(206,145,23)" rx="2" ry="2" />
<text  x="33.54" y="239.5" ></text>
</g>
<g >
<title>ether_input (278,963 samples, 43.53%)</title><rect x="45.6" y="213" width="513.7" height="15.0" fill="rgb(249,186,40)" rx="2" ry="2" />
<text  x="48.64" y="223.5" >ether_input</text>
</g>
<g >
<title>_epoch_exit_preempt (625 samples, 0.10%)</title><rect x="48.6" y="197" width="1.2" height="15.0" fill="rgb(251,0,38)" rx="2" ry="2" />
<text  x="51.64" y="207.5" ></text>
</g>
<g >
<title>sched_choose (335 samples, 0.05%)</title><rect x="580.8" y="197" width="0.6" height="15.0" fill="rgb(243,76,15)" rx="2" ry="2" />
<text  x="583.80" y="207.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (256,763 samples, 40.07%)</title><rect x="86.3" y="85" width="472.8" height="15.0" fill="rgb(209,72,26)" rx="2" ry="2" />
<text  x="89.33" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ip_tryforward (319,437 samples, 49.85%)</title><rect x="600.3" y="133" width="588.1" height="15.0" fill="rgb(245,196,2)" rx="2" ry="2" />
<text  x="603.25" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>lock_delay (767 samples, 0.12%)</title><rect x="565.1" y="229" width="1.4" height="15.0" fill="rgb(236,199,3)" rx="2" ry="2" />
<text  x="568.11" y="239.5" ></text>
</g>
<g >
<title>pmc_hook_handler (291 samples, 0.05%)</title><rect x="1189.0" y="213" width="0.6" height="15.0" fill="rgb(238,60,52)" rx="2" ry="2" />
<text  x="1192.02" y="223.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (459 samples, 0.07%)</title><rect x="586.1" y="213" width="0.8" height="15.0" fill="rgb(242,134,4)" rx="2" ry="2" />
<text  x="589.09" y="223.5" ></text>
</g>
<g >
<title>ipf_auth_check (393 samples, 0.06%)</title><rect x="451.8" y="53" width="0.7" height="15.0" fill="rgb(231,150,1)" rx="2" ry="2" />
<text  x="454.76" y="63.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (510 samples, 0.08%)</title><rect x="563.9" y="181" width="0.9" height="15.0" fill="rgb(237,180,2)" rx="2" ry="2" />
<text  x="566.89" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (91 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(228,123,28)" rx="2" ry="2" />
<text  x="1192.83" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (59 samples, 0.01%)</title><rect x="581.6" y="245" width="0.1" height="15.0" fill="rgb(246,57,49)" rx="2" ry="2" />
<text  x="584.62" y="255.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (1,419 samples, 0.22%)</title><rect x="596.9" y="229" width="2.6" height="15.0" fill="rgb(254,170,37)" rx="2" ry="2" />
<text  x="599.93" y="239.5" ></text>
</g>
<g >
<title>ipf_scanlist (160,073 samples, 24.98%)</title><rect x="893.7" y="69" width="294.7" height="15.0" fill="rgb(232,184,39)" rx="2" ry="2" />
<text  x="896.69" y="79.5" >ipf_scanlist</text>
</g>
<g >
<title>acpi_cpu_idle_mwait (259 samples, 0.04%)</title><rect x="575.7" y="197" width="0.5" height="15.0" fill="rgb(227,5,3)" rx="2" ry="2" />
<text  x="578.70" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (91 samples, 0.01%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(247,203,46)" rx="2" ry="2" />
<text  x="1192.83" y="127.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (11,904 samples, 1.86%)</title><rect x="534.4" y="37" width="21.9" height="15.0" fill="rgb(231,48,43)" rx="2" ry="2" />
<text  x="537.35" y="47.5" >_..</text>
</g>
<g >
<title>mlx5e_tx_cq_comp (4,512 samples, 0.70%)</title><rect x="19.3" y="181" width="8.3" height="15.0" fill="rgb(205,90,9)" rx="2" ry="2" />
<text  x="22.29" y="191.5" ></text>
</g>
<g >
<title>m_freem (2,331 samples, 0.36%)</title><rect x="22.7" y="165" width="4.3" height="15.0" fill="rgb(218,138,29)" rx="2" ry="2" />
<text  x="25.71" y="175.5" ></text>
</g>
<g >
<title>ipf_scanlist (30,886 samples, 4.82%)</title><rect x="499.4" y="53" width="56.9" height="15.0" fill="rgb(233,76,46)" rx="2" ry="2" />
<text  x="502.40" y="63.5" >ipf_sc..</text>
</g>
<g >
<title>sched_choose (238 samples, 0.04%)</title><rect x="34.0" y="197" width="0.5" height="15.0" fill="rgb(248,102,44)" rx="2" ry="2" />
<text  x="37.03" y="207.5" ></text>
</g>
<g >
<title>choosethread (257 samples, 0.04%)</title><rect x="34.0" y="213" width="0.5" height="15.0" fill="rgb(219,101,24)" rx="2" ry="2" />
<text  x="37.00" y="223.5" ></text>
</g>
<g >
<title>intr_event_handle (9,529 samples, 1.49%)</title><rect x="582.7" y="261" width="17.5" height="15.0" fill="rgb(221,14,9)" rx="2" ry="2" />
<text  x="585.65" y="271.5" ></text>
</g>
<g >
<title>runq_choose (57 samples, 0.01%)</title><rect x="34.2" y="181" width="0.1" height="15.0" fill="rgb(252,161,49)" rx="2" ry="2" />
<text  x="37.24" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (184 samples, 0.03%)</title><rect x="38.9" y="213" width="0.3" height="15.0" fill="rgb(233,183,4)" rx="2" ry="2" />
<text  x="41.90" y="223.5" ></text>
</g>
<g >
<title>cpu_search_highest (2,343 samples, 0.37%)</title><rect x="34.5" y="213" width="4.3" height="15.0" fill="rgb(205,122,44)" rx="2" ry="2" />
<text  x="37.47" y="223.5" ></text>
</g>
<g >
<title>memset_erms (1,194 samples, 0.19%)</title><rect x="556.9" y="53" width="2.2" height="15.0" fill="rgb(228,181,53)" rx="2" ry="2" />
<text  x="559.90" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (68 samples, 0.01%)</title><rect x="596.8" y="229" width="0.1" height="15.0" fill="rgb(231,180,11)" rx="2" ry="2" />
<text  x="599.80" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (858 samples, 0.13%)</title><rect x="47.1" y="197" width="1.5" height="15.0" fill="rgb(220,187,37)" rx="2" ry="2" />
<text  x="50.06" y="207.5" ></text>
</g>
<g >
<title>mlx5e_sq_xmit (3,688 samples, 0.58%)</title><rect x="75.4" y="53" width="6.8" height="15.0" fill="rgb(216,17,25)" rx="2" ry="2" />
<text  x="78.42" y="63.5" ></text>
</g>
<g >
<title>ipf_derefrule (158,387 samples, 24.71%)</title><rect x="602.1" y="69" width="291.6" height="15.0" fill="rgb(224,37,6)" rx="2" ry="2" />
<text  x="605.05" y="79.5" >ipf_derefrule</text>
</g>
<g >
<title>mlx5_msix_handler (5,828 samples, 0.91%)</title><rect x="16.9" y="229" width="10.7" height="15.0" fill="rgb(224,146,29)" rx="2" ry="2" />
<text  x="19.86" y="239.5" ></text>
</g>
<g >
<title>mlx5_cq_completion (4,866 samples, 0.76%)</title><rect x="18.6" y="197" width="9.0" height="15.0" fill="rgb(238,8,39)" rx="2" ry="2" />
<text  x="21.63" y="207.5" ></text>
</g>
<g >
<title>runq_choose (74 samples, 0.01%)</title><rect x="581.2" y="181" width="0.1" height="15.0" fill="rgb(233,18,30)" rx="2" ry="2" />
<text  x="584.20" y="191.5" ></text>
</g>
<g >
<title>handleevents (537 samples, 0.08%)</title><rect x="1188.8" y="245" width="1.0" height="15.0" fill="rgb(208,23,42)" rx="2" ry="2" />
<text  x="1191.84" y="255.5" ></text>
</g>
<g >
<title>ipf_pr_pullup (471 samples, 0.07%)</title><rect x="497.7" y="37" width="0.9" height="15.0" fill="rgb(226,161,32)" rx="2" ry="2" />
<text  x="500.74" y="47.5" ></text>
</g>
<g >
<title>pmap_activate_sw (147 samples, 0.02%)</title><rect x="579.9" y="213" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="582.94" y="223.5" ></text>
</g>
<g >
<title>_thread_lock (191 samples, 0.03%)</title><rect x="567.7" y="245" width="0.4" height="15.0" fill="rgb(248,103,15)" rx="2" ry="2" />
<text  x="570.70" y="255.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (70 samples, 0.01%)</title><rect x="45.5" y="213" width="0.1" height="15.0" fill="rgb(208,107,52)" rx="2" ry="2" />
<text  x="48.51" y="223.5" ></text>
</g>
<g >
<title>ipf_derefrule (21,424 samples, 3.34%)</title><rect x="452.5" y="53" width="39.4" height="15.0" fill="rgb(227,73,1)" rx="2" ry="2" />
<text  x="455.49" y="63.5" >ipf..</text>
</g>
<g >
<title>_epoch_enter_preempt (527 samples, 0.08%)</title><rect x="15.4" y="245" width="0.9" height="15.0" fill="rgb(242,92,31)" rx="2" ry="2" />
<text  x="18.35" y="255.5" ></text>
</g>
<g >
<title>t4_intr (91 samples, 0.01%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(209,155,23)" rx="2" ry="2" />
<text  x="1192.83" y="287.5" ></text>
</g>
<g >
<title>Xapic_isr1 (309 samples, 0.05%)</title><rect x="10.0" y="277" width="0.6" height="15.0" fill="rgb(251,107,22)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>fork_exit (308,705 samples, 48.17%)</title><rect x="13.9" y="277" width="568.4" height="15.0" fill="rgb(220,30,48)" rx="2" ry="2" />
<text  x="16.86" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_demux (274,355 samples, 42.81%)</title><rect x="53.9" y="165" width="505.2" height="15.0" fill="rgb(231,216,26)" rx="2" ry="2" />
<text  x="56.94" y="175.5" >ether_demux</text>
</g>
<g >
<title>tscp_get_timecount_low (59 samples, 0.01%)</title><rect x="1188.7" y="229" width="0.1" height="15.0" fill="rgb(241,32,16)" rx="2" ry="2" />
<text  x="1191.73" y="239.5" ></text>
</g>
<g >
<title>rsb_flush (273 samples, 0.04%)</title><rect x="30.0" y="229" width="0.5" height="15.0" fill="rgb(237,96,21)" rx="2" ry="2" />
<text  x="33.04" y="239.5" ></text>
</g>
<g >
<title>sched_rem (116 samples, 0.02%)</title><rect x="39.3" y="197" width="0.2" height="15.0" fill="rgb(208,190,32)" rx="2" ry="2" />
<text  x="42.30" y="207.5" ></text>
</g>
<g >
<title>mlx5e_get_l2_header_size (172 samples, 0.03%)</title><rect x="81.6" y="37" width="0.3" height="15.0" fill="rgb(206,183,34)" rx="2" ry="2" />
<text  x="84.63" y="47.5" ></text>
</g>
<g >
<title>cpu_switch (152 samples, 0.02%)</title><rect x="599.6" y="229" width="0.3" height="15.0" fill="rgb(238,104,15)" rx="2" ry="2" />
<text  x="602.60" y="239.5" ></text>
</g>
<g >
<title>memcmp (97 samples, 0.02%)</title><rect x="559.1" y="165" width="0.2" height="15.0" fill="rgb(209,169,25)" rx="2" ry="2" />
<text  x="562.10" y="175.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (1,086 samples, 0.17%)</title><rect x="562.8" y="197" width="2.0" height="15.0" fill="rgb(230,196,18)" rx="2" ry="2" />
<text  x="565.83" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (69 samples, 0.01%)</title><rect x="16.3" y="245" width="0.2" height="15.0" fill="rgb(239,169,5)" rx="2" ry="2" />
<text  x="19.32" y="255.5" ></text>
</g>
<g >
<title>ipf_checkv4sum (834 samples, 0.13%)</title><rect x="496.2" y="37" width="1.5" height="15.0" fill="rgb(218,90,38)" rx="2" ry="2" />
<text  x="499.21" y="47.5" ></text>
</g>
<g >
<title>ip_findroute (1,036 samples, 0.16%)</title><rect x="83.3" y="101" width="1.9" height="15.0" fill="rgb(235,196,54)" rx="2" ry="2" />
<text  x="86.29" y="111.5" ></text>
</g>
<g >
<title>all (640,858 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(244,198,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (276,470 samples, 43.14%)</title><rect x="50.2" y="197" width="509.1" height="15.0" fill="rgb(226,36,51)" rx="2" ry="2" />
<text  x="53.23" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>__mtx_lock_sleep (161,489 samples, 25.20%)</title><rect x="119.3" y="53" width="297.4" height="15.0" fill="rgb(207,163,20)" rx="2" ry="2" />
<text  x="122.35" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>ether_input (319,437 samples, 49.85%)</title><rect x="600.3" y="229" width="588.1" height="15.0" fill="rgb(219,189,14)" rx="2" ry="2" />
<text  x="603.25" y="239.5" >ether_input</text>
</g>
<g >
<title>t4_intr (284,975 samples, 44.47%)</title><rect x="40.2" y="245" width="524.7" height="15.0" fill="rgb(219,129,13)" rx="2" ry="2" />
<text  x="43.22" y="255.5" >t4_intr</text>
</g>
<g >
<title>ipf_nat_checkin (204 samples, 0.03%)</title><rect x="498.6" y="53" width="0.4" height="15.0" fill="rgb(226,130,27)" rx="2" ry="2" />
<text  x="501.61" y="63.5" ></text>
</g>
<g >
<title>mi_switch (1,487 samples, 0.23%)</title><rect x="578.9" y="245" width="2.7" height="15.0" fill="rgb(222,107,32)" rx="2" ry="2" />
<text  x="581.88" y="255.5" ></text>
</g>
<g >
<title>pmclog_loop (114 samples, 0.02%)</title><rect x="566.6" y="261" width="0.2" height="15.0" fill="rgb(234,165,34)" rx="2" ry="2" />
<text  x="569.55" y="271.5" ></text>
</g>
<g >
<title>intr_event_schedule_thread (8,427 samples, 1.31%)</title><rect x="584.0" y="245" width="15.5" height="15.0" fill="rgb(225,188,52)" rx="2" ry="2" />
<text  x="587.02" y="255.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (745 samples, 0.12%)</title><rect x="600.3" y="37" width="1.3" height="15.0" fill="rgb(234,79,23)" rx="2" ry="2" />
<text  x="603.26" y="47.5" ></text>
</g>
<g >
<title>fpu_activate_sw (110 samples, 0.02%)</title><rect x="599.7" y="213" width="0.2" height="15.0" fill="rgb(227,227,8)" rx="2" ry="2" />
<text  x="602.65" y="223.5" ></text>
</g>
<g >
<title>VOP_WRITE_APV (112 samples, 0.02%)</title><rect x="566.6" y="213" width="0.2" height="15.0" fill="rgb(232,127,40)" rx="2" ry="2" />
<text  x="569.56" y="223.5" ></text>
</g>
<g >
<title>lock_delay (158,386 samples, 24.71%)</title><rect x="602.1" y="37" width="291.6" height="15.0" fill="rgb(227,86,48)" rx="2" ry="2" />
<text  x="605.05" y="47.5" >lock_delay</text>
</g>
<g >
<title>_mtx_lock_spin_cookie (651 samples, 0.10%)</title><rect x="32.8" y="213" width="1.2" height="15.0" fill="rgb(217,45,54)" rx="2" ry="2" />
<text  x="35.80" y="223.5" ></text>
</g>
<g >
<title>cpu_search_lowest (4,236 samples, 0.66%)</title><rect x="587.5" y="197" width="7.8" height="15.0" fill="rgb(211,62,43)" rx="2" ry="2" />
<text  x="590.49" y="207.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (7,906 samples, 1.23%)</title><rect x="432.6" y="53" width="14.6" height="15.0" fill="rgb(236,181,17)" rx="2" ry="2" />
<text  x="435.61" y="63.5" ></text>
</g>
<g >
<title>ip_input (91 samples, 0.01%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(208,107,54)" rx="2" ry="2" />
<text  x="1192.83" y="175.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (91 samples, 0.01%)</title><rect x="1189.8" y="69" width="0.2" height="15.0" fill="rgb(205,116,14)" rx="2" ry="2" />
<text  x="1192.83" y="79.5" ></text>
</g>
<g >
<title>sched_switch (102 samples, 0.02%)</title><rect x="600.0" y="229" width="0.2" height="15.0" fill="rgb(233,39,26)" rx="2" ry="2" />
<text  x="602.98" y="239.5" ></text>
</g>
<g >
<title>ether_output (91 samples, 0.01%)</title><rect x="1189.8" y="133" width="0.2" height="15.0" fill="rgb(214,124,26)" rx="2" ry="2" />
<text  x="1192.83" y="143.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (438 samples, 0.07%)</title><rect x="79.2" y="37" width="0.8" height="15.0" fill="rgb(232,169,41)" rx="2" ry="2" />
<text  x="82.20" y="47.5" ></text>
</g>
<g >
<title>fpu_activate_sw (729 samples, 0.11%)</title><rect x="28.4" y="213" width="1.3" height="15.0" fill="rgb(223,72,27)" rx="2" ry="2" />
<text  x="31.39" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (746 samples, 0.12%)</title><rect x="600.3" y="53" width="1.3" height="15.0" fill="rgb(235,172,28)" rx="2" ry="2" />
<text  x="603.25" y="63.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (318,460 samples, 49.69%)</title><rect x="602.1" y="101" width="586.3" height="15.0" fill="rgb(245,22,33)" rx="2" ry="2" />
<text  x="605.05" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>service_iq_fl (284,964 samples, 44.47%)</title><rect x="40.2" y="229" width="524.7" height="15.0" fill="rgb(214,180,8)" rx="2" ry="2" />
<text  x="43.24" y="239.5" >service_iq_fl</text>
</g>
<g >
<title>cpu_search_highest (1,140 samples, 0.18%)</title><rect x="576.8" y="229" width="2.1" height="15.0" fill="rgb(242,113,41)" rx="2" ry="2" />
<text  x="579.77" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (158,387 samples, 24.71%)</title><rect x="602.1" y="53" width="291.6" height="15.0" fill="rgb(214,168,33)" rx="2" ry="2" />
<text  x="605.05" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>cpu_switch (1,039 samples, 0.16%)</title><rect x="28.1" y="229" width="1.9" height="15.0" fill="rgb(221,73,5)" rx="2" ry="2" />
<text  x="31.05" y="239.5" ></text>
</g>
<g >
<title>cpu_search_lowest (3,690 samples, 0.58%)</title><rect x="588.5" y="181" width="6.8" height="15.0" fill="rgb(245,113,35)" rx="2" ry="2" />
<text  x="591.50" y="191.5" ></text>
</g>
<g >
<title>mi_switch (336 samples, 0.05%)</title><rect x="599.6" y="245" width="0.6" height="15.0" fill="rgb(228,167,21)" rx="2" ry="2" />
<text  x="602.55" y="255.5" ></text>
</g>
<g >
<title>pmc_process_samples (276 samples, 0.04%)</title><rect x="1189.1" y="197" width="0.5" height="15.0" fill="rgb(235,81,38)" rx="2" ry="2" />
<text  x="1192.05" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (8,851 samples, 1.38%)</title><rect x="65.9" y="85" width="16.3" height="15.0" fill="rgb(218,33,37)" rx="2" ry="2" />
<text  x="68.91" y="95.5" ></text>
</g>
<g >
<title>Xtimerint_pti (185 samples, 0.03%)</title><rect x="13.4" y="277" width="0.4" height="15.0" fill="rgb(231,84,16)" rx="2" ry="2" />
<text  x="16.42" y="287.5" ></text>
</g>
<g >
<title>__rw_rlock_int (8,646 samples, 1.35%)</title><rect x="416.7" y="53" width="15.9" height="15.0" fill="rgb(209,0,34)" rx="2" ry="2" />
<text  x="419.69" y="63.5" ></text>
</g>
<g >
<title>sched_pickcpu (4,538 samples, 0.71%)</title><rect x="586.9" y="213" width="8.4" height="15.0" fill="rgb(208,115,14)" rx="2" ry="2" />
<text  x="589.93" y="223.5" ></text>
</g>
<g >
<title>intr_execute_handlers (9,751 samples, 1.52%)</title><rect x="582.3" y="277" width="17.9" height="15.0" fill="rgb(210,111,53)" rx="2" ry="2" />
<text  x="585.27" y="287.5" ></text>
</g>
<g >
<title>ffs_balloc_ufs2 (68 samples, 0.01%)</title><rect x="566.6" y="181" width="0.1" height="15.0" fill="rgb(240,81,28)" rx="2" ry="2" />
<text  x="569.60" y="191.5" ></text>
</g>
<g >
<title>in_lltable_lookup (300 samples, 0.05%)</title><rect x="64.8" y="69" width="0.6" height="15.0" fill="rgb(224,169,6)" rx="2" ry="2" />
<text  x="67.82" y="79.5" ></text>
</g>
<g >
<title>uma_zfree_arg (622 samples, 0.10%)</title><rect x="25.9" y="133" width="1.1" height="15.0" fill="rgb(229,100,0)" rx="2" ry="2" />
<text  x="28.86" y="143.5" ></text>
</g>
<g >
<title>ipf_state_check (342 samples, 0.05%)</title><rect x="556.3" y="53" width="0.6" height="15.0" fill="rgb(247,12,43)" rx="2" ry="2" />
<text  x="559.27" y="63.5" ></text>
</g>
<g >
<title>lkpi_irq_handler (5,852 samples, 0.91%)</title><rect x="16.8" y="245" width="10.8" height="15.0" fill="rgb(230,36,38)" rx="2" ry="2" />
<text  x="19.82" y="255.5" ></text>
</g>
<g >
<title>ether_nh_input (275,495 samples, 42.99%)</title><rect x="52.0" y="181" width="507.3" height="15.0" fill="rgb(210,173,42)" rx="2" ry="2" />
<text  x="55.03" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>get_scatter_segment (3,007 samples, 0.47%)</title><rect x="559.3" y="213" width="5.5" height="15.0" fill="rgb(216,164,44)" rx="2" ry="2" />
<text  x="562.29" y="223.5" ></text>
</g>
<g >
<title>bsearch4_lookup (490 samples, 0.08%)</title><rect x="84.3" y="69" width="0.9" height="15.0" fill="rgb(224,23,39)" rx="2" ry="2" />
<text  x="87.29" y="79.5" ></text>
</g>
<g >
<title>service_iq_fl (91 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(210,51,33)" rx="2" ry="2" />
<text  x="1192.83" y="271.5" ></text>
</g>
<g >
<title>memmove_erms (1,156 samples, 0.18%)</title><rect x="560.7" y="197" width="2.1" height="15.0" fill="rgb(221,225,45)" rx="2" ry="2" />
<text  x="563.70" y="207.5" ></text>
</g>
<g >
<title>ipf_check (256,373 samples, 40.00%)</title><rect x="87.0" y="69" width="472.1" height="15.0" fill="rgb(237,60,3)" rx="2" ry="2" />
<text  x="90.05" y="79.5" >ipf_check</text>
</g>
<g >
<title>_ck_epoch_delref (81 samples, 0.01%)</title><rect x="49.6" y="181" width="0.2" height="15.0" fill="rgb(216,227,30)" rx="2" ry="2" />
<text  x="52.64" y="191.5" ></text>
</g>
<g >
<title>pfil_run_hooks (257,378 samples, 40.16%)</title><rect x="85.2" y="101" width="473.9" height="15.0" fill="rgb(208,144,40)" rx="2" ry="2" />
<text  x="88.20" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>tdq_add (91 samples, 0.01%)</title><rect x="39.5" y="197" width="0.2" height="15.0" fill="rgb(205,64,39)" rx="2" ry="2" />
<text  x="42.51" y="207.5" ></text>
</g>
<g >
<title>vn_write (112 samples, 0.02%)</title><rect x="566.6" y="229" width="0.2" height="15.0" fill="rgb(230,42,19)" rx="2" ry="2" />
<text  x="569.56" y="239.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (248 samples, 0.04%)</title><rect x="581.8" y="245" width="0.4" height="15.0" fill="rgb(242,198,17)" rx="2" ry="2" />
<text  x="584.75" y="255.5" ></text>
</g>
<g >
<title>cpu_activeclock (58 samples, 0.01%)</title><rect x="575.6" y="229" width="0.1" height="15.0" fill="rgb(241,174,34)" rx="2" ry="2" />
<text  x="578.56" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (273,364 samples, 42.66%)</title><rect x="55.8" y="149" width="503.3" height="15.0" fill="rgb(246,211,16)" rx="2" ry="2" />
<text  x="58.76" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>memmove_erms (231 samples, 0.04%)</title><rect x="601.6" y="37" width="0.5" height="15.0" fill="rgb(212,157,45)" rx="2" ry="2" />
<text  x="604.63" y="47.5" ></text>
</g>
<g >
<title>service_iq_fl (319,437 samples, 49.85%)</title><rect x="600.3" y="245" width="588.1" height="15.0" fill="rgb(225,173,38)" rx="2" ry="2" />
<text  x="603.25" y="255.5" >service_iq_fl</text>
</g>
<g >
<title>mlx5e_sq_xmit (91 samples, 0.01%)</title><rect x="1189.8" y="85" width="0.2" height="15.0" fill="rgb(221,27,1)" rx="2" ry="2" />
<text  x="1192.83" y="95.5" ></text>
</g>
<g >
<title>m_copydata (231 samples, 0.04%)</title><rect x="601.6" y="53" width="0.5" height="15.0" fill="rgb(234,162,10)" rx="2" ry="2" />
<text  x="604.63" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (160,073 samples, 24.98%)</title><rect x="893.7" y="53" width="294.7" height="15.0" fill="rgb(252,211,45)" rx="2" ry="2" />
<text  x="896.69" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>memmove_erms (290 samples, 0.05%)</title><rect x="65.4" y="69" width="0.5" height="15.0" fill="rgb(223,166,52)" rx="2" ry="2" />
<text  x="68.38" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (12,167 samples, 1.90%)</title><rect x="469.5" y="37" width="22.4" height="15.0" fill="rgb(235,17,40)" rx="2" ry="2" />
<text  x="472.53" y="47.5" >_..</text>
</g>
<g >
<title>ip_tryforward (272,193 samples, 42.47%)</title><rect x="57.9" y="117" width="501.2" height="15.0" fill="rgb(207,63,13)" rx="2" ry="2" />
<text  x="60.92" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>lock_delay (589 samples, 0.09%)</title><rect x="32.9" y="197" width="1.1" height="15.0" fill="rgb(245,99,7)" rx="2" ry="2" />
<text  x="35.90" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (91 samples, 0.01%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(233,110,0)" rx="2" ry="2" />
<text  x="1192.83" y="159.5" ></text>
</g>
<g >
<title>mlx5e_sq_tls_xmit (141 samples, 0.02%)</title><rect x="81.9" y="37" width="0.3" height="15.0" fill="rgb(212,5,14)" rx="2" ry="2" />
<text  x="84.95" y="47.5" ></text>
</g>
<g >
<title>m_adj (582 samples, 0.09%)</title><rect x="80.0" y="37" width="1.1" height="15.0" fill="rgb(247,80,30)" rx="2" ry="2" />
<text  x="83.01" y="47.5" ></text>
</g>
<g >
<title>_rw_wowned (2,494 samples, 0.39%)</title><rect x="447.2" y="53" width="4.6" height="15.0" fill="rgb(237,101,37)" rx="2" ry="2" />
<text  x="450.17" y="63.5" ></text>
</g>
<g >
<title>_thread_lock (193 samples, 0.03%)</title><rect x="16.5" y="245" width="0.3" height="15.0" fill="rgb(223,150,38)" rx="2" ry="2" />
<text  x="19.45" y="255.5" ></text>
</g>
<g >
<title>ether_output (12,079 samples, 1.88%)</title><rect x="60.3" y="101" width="22.2" height="15.0" fill="rgb(222,7,33)" rx="2" ry="2" />
<text  x="63.25" y="111.5" >e..</text>
</g>
<g >
<title>lapic_handle_timer (722 samples, 0.11%)</title><rect x="1188.5" y="277" width="1.3" height="15.0" fill="rgb(216,153,16)" rx="2" ry="2" />
<text  x="1191.50" y="287.5" ></text>
</g>
<g >
<title>ithread_loop (319,438 samples, 49.85%)</title><rect x="600.3" y="277" width="588.1" height="15.0" fill="rgb(210,63,23)" rx="2" ry="2" />
<text  x="603.25" y="287.5" >ithread_loop</text>
</g>
<g >
<title>netisr_dispatch (240 samples, 0.04%)</title><rect x="49.8" y="197" width="0.4" height="15.0" fill="rgb(214,121,8)" rx="2" ry="2" />
<text  x="52.79" y="207.5" ></text>
</g>
<g >
<title>binuptime (82 samples, 0.01%)</title><rect x="1188.7" y="245" width="0.1" height="15.0" fill="rgb(218,121,2)" rx="2" ry="2" />
<text  x="1191.69" y="255.5" ></text>
</g>
<g >
<title>tdq_add (284 samples, 0.04%)</title><rect x="595.4" y="213" width="0.5" height="15.0" fill="rgb(246,222,11)" rx="2" ry="2" />
<text  x="598.39" y="223.5" ></text>
</g>
<g >
<title>ether_demux (319,437 samples, 49.85%)</title><rect x="600.3" y="181" width="588.1" height="15.0" fill="rgb(245,121,38)" rx="2" ry="2" />
<text  x="603.25" y="191.5" >ether_demux</text>
</g>
<g >
<title>mlx5e_xmit (91 samples, 0.01%)</title><rect x="1189.8" y="101" width="0.2" height="15.0" fill="rgb(242,224,30)" rx="2" ry="2" />
<text  x="1192.83" y="111.5" ></text>
</g>
<g >
<title>lapic_et_start (90 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.1" height="15.0" fill="rgb(214,95,48)" rx="2" ry="2" />
<text  x="1192.58" y="239.5" ></text>
</g>
<g >
<title>t4_intr (319,437 samples, 49.85%)</title><rect x="600.3" y="261" width="588.1" height="15.0" fill="rgb(211,227,20)" rx="2" ry="2" />
<text  x="603.25" y="271.5" >t4_intr</text>
</g>
<g >
<title>mlx5e_xmit (8,125 samples, 1.27%)</title><rect x="67.2" y="69" width="15.0" height="15.0" fill="rgb(215,217,19)" rx="2" ry="2" />
<text  x="70.25" y="79.5" ></text>
</g>
<g >
<title>ether_demux (91 samples, 0.01%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(245,90,0)" rx="2" ry="2" />
<text  x="1192.83" y="207.5" ></text>
</g>
<g >
<title>_thread_lock (577 samples, 0.09%)</title><rect x="584.3" y="229" width="1.1" height="15.0" fill="rgb(221,202,16)" rx="2" ry="2" />
<text  x="587.32" y="239.5" ></text>
</g>
<g >
<title>ffs_write (112 samples, 0.02%)</title><rect x="566.6" y="197" width="0.2" height="15.0" fill="rgb(224,46,5)" rx="2" ry="2" />
<text  x="569.56" y="207.5" ></text>
</g>
<g >
<title>ipf_check (318,460 samples, 49.69%)</title><rect x="602.1" y="85" width="586.3" height="15.0" fill="rgb(233,201,54)" rx="2" ry="2" />
<text  x="605.05" y="95.5" >ipf_check</text>
</g>
<g >
<title>mlx5_eq_int (5,743 samples, 0.90%)</title><rect x="17.0" y="213" width="10.6" height="15.0" fill="rgb(237,112,43)" rx="2" ry="2" />
<text  x="20.02" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (1,525 samples, 0.24%)</title><rect x="10.6" y="277" width="2.8" height="15.0" fill="rgb(221,54,3)" rx="2" ry="2" />
<text  x="13.57" y="287.5" ></text>
</g>
<g >
<title>pmap_kextract (91 samples, 0.01%)</title><rect x="1189.8" y="37" width="0.2" height="15.0" fill="rgb(234,88,43)" rx="2" ry="2" />
<text  x="1192.83" y="47.5" ></text>
</g>
<g >
<title>pmap_activate_sw (125 samples, 0.02%)</title><rect x="29.7" y="213" width="0.3" height="15.0" fill="rgb(207,62,12)" rx="2" ry="2" />
<text  x="32.73" y="223.5" ></text>
</g>
<g >
<title>ithread_loop (300,158 samples, 46.84%)</title><rect x="13.9" y="261" width="552.6" height="15.0" fill="rgb(251,85,17)" rx="2" ry="2" />
<text  x="16.87" y="271.5" >ithread_loop</text>
</g>
<g >
<title>runq_add (57 samples, 0.01%)</title><rect x="39.6" y="181" width="0.1" height="15.0" fill="rgb(213,180,41)" rx="2" ry="2" />
<text  x="42.57" y="191.5" ></text>
</g>
<g >
<title>lock_delay (149,849 samples, 23.38%)</title><rect x="140.8" y="37" width="275.9" height="15.0" fill="rgb(241,175,45)" rx="2" ry="2" />
<text  x="143.78" y="47.5" >lock_delay</text>
</g>
</g>
</svg>
