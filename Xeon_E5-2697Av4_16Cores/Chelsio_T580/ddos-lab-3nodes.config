#!/bin/sh
# Network diagram
# All 3 servers are using the same Chelsio T580-LP-CR (40G)
# But this NIC seems able to generate at 44Mpps only and not at the 59.2Mpps linerate.
# Even by using both cxl0 and cxl1 together (PCI bandwidth or NIC limitation?)
# So need to use another packet generator, to add the missing 15.2pps to reach the 59.2Mpps
# But because DUT will be able to forward at a speed of about 30Mpps, if using the second
# port of pxetest1 as generator, we need to restrict it speeed at 14Mpps too.
# if using second interface of pkt receiver, to add the missing 20Mpps, we will have a risk of overloading
# its own NIC preventing to correctly count receiving packet rate
#              -------------admin network (ssh)-----------------------------------------------------
#                    |                                  |                        |
#+-----------------------+  +----------------------------------------+  +-----------------------+
#|    Packet receiver    |  |             Device under test          |  |     Packet generator  |
#|        pxetest1       |  |             pxetest2                   |  |        pxetest3       |
#|                       |  |                                        |  |                       |
#|                       |  |                   cxl0: 198.18.0.2/24  |<=| vcxl0: 198.18.0.13/24 |
#|                       |  |                          2001:2::2/64  |  |         2001:2::13/64 |
#|                       |  |                     00:07:43:2c:bc:50  |  |     00:07:43:30:f5:b1 |
#|                       |  |                                        |  |                       |
#| vcxl0: 198.19.0.11/24 |<=| cxl1: 198.19.0.2/24                    |  |                       |
#|  2001:2:0:8000::11/64 |  | 2001:2:0:8000::2/64                    |  | /boot/loader.conf:    |
#|     00:07:43:2e:c7:31 |  | 00:07:43:2c:bc:58                      |  | hw.cxgbe.num_vis=2    |
#|                       |  |                                        |  | hw.cxgbe.nnmrxq_vi=4  |
#| /boot/loader.conf:    |  |          static routes                 |  | hw.cxgbe.nnmtxq_vi=4  |
#| hw.cxgbe.num_vis=2    |  |      198.18.0.0/16 > 198.18.0.13       |  | hw.cxgbe.nm_txcsum=1  |
#| hw.cxgbe.nnmrxq_vi=4  |  |      198.19.0.0/16 > 198.19.0.11       |  |                       |
#| hw.cxgbe.nnmtxq_vi=4  |  |        2001:2::/49 > 2001:2::13        |  +-----------------------+
#| hw.cxgbe.nm_txcsum=1  |  | 2001:2:0:8000::/49 > 2001:2:0:8000::11 |
#|                       |  |                                        |
#| vcxl1: 198.18.0.11/24 |  |                static arp              |
#| 00:07:43:2e:c7:39     |  | 198.18.0.13 > 00:07:43:30:f5:b1        |<=|
#+-----------------------+  | 198.19.0.11 > 00:07:43:2e:c7:31        |  |
#          |                +----------------------------------------|  |
#          |                                                            |
#          --------------------------------------------------------------

# Admin network IP
SENDER_ADMIN="pxetest3"
SENDER_ADMIN_2="pxetest1"
RECEIVER_ADMIN="pxetest1"
DUT_ADMIN="pxetest2"
REF_ADMIN=""

# LAB network IP and data
SENDER_LAB_IP="198.18.0.13"
# DDoS need this second pkt-gen
SENDER_LAB_2_IP="198.18.0.11"
RECEIVER_LAB_IP="198.19.0.11"

#netmap pkt-gen need these information:
SENDER_LAB_IF="vcxl0"
SENDER_LAB_IF_MAC="00:07:43:30:f5:b1"
SENDER_LAB_2_IF="vcxl1"
SENDER_LAB_2_IF_MAC="00:07:43:2e:c7:39"
RECEIVER_LAB_IF="vcxl0"
RECEIVER_LAB_IF_MAC="00:07:43:2e:c7:31"
DUT_LAB_IF_MAC_SENDER_SIDE="00:07:43:2c:bc:50"
DUT_LAB_IF_MAC_RECEIVER_SIDE="00:07:43:2c:bc:58"

# Netmap pkt size didn't include CRC (4 Bytes)
# RFC2544 ask to try with:
# 64, 128, 256, 512, 1024, 1280, 1518
# This mean for netmap pktgen:
# 60, 124, 252, 508, 1020, 1276, 1514
# But need to add 2 for inet6
# So, just generate 1 byte payload UDP packet with Ethernet padding
: ${PKT_SIZE:="43"}

# PMC event to collect
: ${PMC_EVENT:="cpu_clk_unhalted.thread_p"}

#Timeout: Number of seconds / 5 to wait before declaring a problem for DUT rebooting process
REBOOT_TIMEOUT=120

#Is DUT online? This step allow the switch to fill its MAC table (avoiding  to
# broadcast this storm to all ports)
IS_DUT_ONLINE_TARGET=${DUT_ADMIN}
IS_DUT_ONLINE_CMD="ping -c 2 ${RECEIVER_LAB_IP} && ping -c 2 ${SENDER_LAB_IP} && \
ping -c 2 ${SENDER_LAB_2_IP}"

##### DDoS bench with two pkt-gen
# 40G linerate= 59.2Mpps, but max with one NIC with netmap: 44Mpps
# Legitimate= 20Mpps
# DDoS=40Mpps
# pxetest3: DDoS from 198.18.2.1 to 198.18.2.255, at fixed 40Mpps rate (10 x 4)
# pxtest1: Legitimate from 198.18.1.1 to 198.18.1.255, at fixed 10Mpps rate (10 x 2)
# Destination: The receiver host
# Generate about 101 600 flows 2x(254*200)
: ${AF:="4"}
: ${SENDER_LAB_NET:="198.18.2.1:2000-198.18.2.255:2200"}
: ${SENDER_LAB_NET_2:="198.18.1.1:2000-198.18.1.255:2200"}
: ${RECEIVER_LAB_NET:="198.19.0.11:2000"}
: ${PKT_TO_SEND:="1000000000"}

# DDoS Generator:
SENDER_START_CMD="pkt-gen -N -f tx -i ${SENDER_LAB_IF} -n ${PKT_TO_SEND} \
-${AF} -d ${RECEIVER_LAB_NET} -D ${DUT_LAB_IF_MAC_SENDER_SIDE} -w 2 \
-s ${SENDER_LAB_NET} -S ${SENDER_LAB_IF_MAC} -l ${PKT_SIZE} -p 4 -c 4 -R 10000000"

# Legitimate generator:
# 2 gen at 10Mpps each
SENDER_2_START_CMD="pkt-gen -N -f tx -i ${SENDER_LAB_2_IF} -n ${PKT_TO_SEND} \
-${AF} -d ${RECEIVER_LAB_NET} -D ${DUT_LAB_IF_MAC_SENDER_SIDE} -w 2 \
-s ${SENDER_LAB_NET_2} -S ${SENDER_LAB_2_IF_MAC} -l ${PKT_SIZE} -p 2 -c 2 -R 10000000"

#CUSTOM_CMD="nstat -I cxl0 2"
RECEIVER_START_CMD="pkt-gen -N -f rx -i ${RECEIVER_LAB_IF} -w 2 -W"
RECEIVER_STOP_CMD="pkill pkt-gen"
SENDER_STOP_CMD="pkill pkt-gen"
