<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>cpu_idle (156 samples, 0.02%)</title><rect x="1139.3" y="245" width="0.3" height="15.0" fill="rgb(239,124,5)" rx="2" ry="2" />
<text  x="1142.31" y="255.5" ></text>
</g>
<g >
<title>keg_alloc_slab (237 samples, 0.03%)</title><rect x="1136.9" y="149" width="0.4" height="15.0" fill="rgb(215,89,34)" rx="2" ry="2" />
<text  x="1139.89" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,351 samples, 0.34%)</title><rect x="1186.0" y="229" width="4.0" height="15.0" fill="rgb(238,216,42)" rx="2" ry="2" />
<text  x="1188.96" y="239.5" ></text>
</g>
<g >
<title>lock_delay (1,195 samples, 0.17%)</title><rect x="1154.0" y="213" width="2.1" height="15.0" fill="rgb(207,71,15)" rx="2" ry="2" />
<text  x="1157.01" y="223.5" ></text>
</g>
<g >
<title>lock_delay (256 samples, 0.04%)</title><rect x="73.9" y="197" width="0.5" height="15.0" fill="rgb(211,53,23)" rx="2" ry="2" />
<text  x="76.92" y="207.5" ></text>
</g>
<g >
<title>m_copydata (3,811 samples, 0.55%)</title><rect x="1177.8" y="53" width="6.5" height="15.0" fill="rgb(206,86,21)" rx="2" ry="2" />
<text  x="1180.75" y="63.5" ></text>
</g>
<g >
<title>fork_exit (657,011 samples, 95.57%)</title><rect x="12.3" y="277" width="1127.7" height="15.0" fill="rgb(210,146,22)" rx="2" ry="2" />
<text  x="15.27" y="287.5" >fork_exit</text>
</g>
<g >
<title>netisr_dispatch (113 samples, 0.02%)</title><rect x="1045.8" y="165" width="0.2" height="15.0" fill="rgb(238,62,24)" rx="2" ry="2" />
<text  x="1048.80" y="175.5" ></text>
</g>
<g >
<title>m_freem (23,239 samples, 3.38%)</title><rect x="26.4" y="165" width="39.8" height="15.0" fill="rgb(246,145,4)" rx="2" ry="2" />
<text  x="29.35" y="175.5" >m_f..</text>
</g>
<g >
<title>pmclog_loop (142 samples, 0.02%)</title><rect x="1139.0" y="261" width="0.2" height="15.0" fill="rgb(207,95,7)" rx="2" ry="2" />
<text  x="1141.96" y="271.5" ></text>
</g>
<g >
<title>cpu_switch (871 samples, 0.13%)</title><rect x="70.6" y="229" width="1.5" height="15.0" fill="rgb(207,197,9)" rx="2" ry="2" />
<text  x="73.56" y="239.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (9,926 samples, 1.44%)</title><rect x="593.9" y="69" width="17.0" height="15.0" fill="rgb(240,79,43)" rx="2" ry="2" />
<text  x="596.89" y="79.5" ></text>
</g>
<g >
<title>_rm_rlock (13,299 samples, 1.93%)</title><rect x="1002.8" y="53" width="22.8" height="15.0" fill="rgb(211,88,39)" rx="2" ry="2" />
<text  x="1005.75" y="63.5" >_..</text>
</g>
<g >
<title>m_tag_locate (4,421 samples, 0.64%)</title><rect x="1034.5" y="69" width="7.6" height="15.0" fill="rgb(217,125,4)" rx="2" ry="2" />
<text  x="1037.54" y="79.5" ></text>
</g>
<g >
<title>spinlock_exit (118 samples, 0.02%)</title><rect x="76.3" y="213" width="0.2" height="15.0" fill="rgb(209,71,26)" rx="2" ry="2" />
<text  x="79.26" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (1,070 samples, 0.16%)</title><rect x="1188.2" y="53" width="1.8" height="15.0" fill="rgb(242,190,41)" rx="2" ry="2" />
<text  x="1191.16" y="63.5" ></text>
</g>
<g >
<title>Xtimerint_pti (182 samples, 0.03%)</title><rect x="11.9" y="277" width="0.3" height="15.0" fill="rgb(211,144,43)" rx="2" ry="2" />
<text  x="14.91" y="287.5" ></text>
</g>
<g >
<title>ffs_write (142 samples, 0.02%)</title><rect x="1139.0" y="197" width="0.2" height="15.0" fill="rgb(240,31,17)" rx="2" ry="2" />
<text  x="1141.96" y="207.5" ></text>
</g>
<g >
<title>nd6_resolve (23,768 samples, 3.46%)</title><rect x="575.7" y="85" width="40.8" height="15.0" fill="rgb(222,159,18)" rx="2" ry="2" />
<text  x="578.71" y="95.5" >nd6..</text>
</g>
<g >
<title>memmove_erms (3,253 samples, 0.47%)</title><rect x="610.9" y="69" width="5.6" height="15.0" fill="rgb(227,42,6)" rx="2" ry="2" />
<text  x="613.92" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (186 samples, 0.03%)</title><rect x="1136.9" y="133" width="0.3" height="15.0" fill="rgb(207,123,40)" rx="2" ry="2" />
<text  x="1139.91" y="143.5" ></text>
</g>
<g >
<title>m_copydata (3,287 samples, 0.48%)</title><rect x="559.1" y="37" width="5.7" height="15.0" fill="rgb(242,35,43)" rx="2" ry="2" />
<text  x="562.13" y="47.5" ></text>
</g>
<g >
<title>_thread_lock (425 samples, 0.06%)</title><rect x="1141.1" y="229" width="0.8" height="15.0" fill="rgb(222,202,0)" rx="2" ry="2" />
<text  x="1144.15" y="239.5" ></text>
</g>
<g >
<title>m_free (1,830 samples, 0.27%)</title><rect x="496.8" y="37" width="3.2" height="15.0" fill="rgb(210,114,12)" rx="2" ry="2" />
<text  x="499.83" y="47.5" ></text>
</g>
<g >
<title>vn_write (142 samples, 0.02%)</title><rect x="1139.0" y="229" width="0.2" height="15.0" fill="rgb(228,204,46)" rx="2" ry="2" />
<text  x="1141.96" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_intr (64 samples, 0.01%)</title><rect x="1184.3" y="277" width="0.1" height="15.0" fill="rgb(215,210,48)" rx="2" ry="2" />
<text  x="1187.29" y="287.5" ></text>
</g>
<g >
<title>intr_event_handle (9,296 samples, 1.35%)</title><rect x="1140.2" y="261" width="16.0" height="15.0" fill="rgb(210,184,52)" rx="2" ry="2" />
<text  x="1143.20" y="271.5" ></text>
</g>
<g >
<title>m_freem (1,281 samples, 0.19%)</title><rect x="1186.0" y="85" width="2.2" height="15.0" fill="rgb(212,178,1)" rx="2" ry="2" />
<text  x="1188.96" y="95.5" ></text>
</g>
<g >
<title>ether_output_frame (104,766 samples, 15.24%)</title><rect x="391.1" y="85" width="179.8" height="15.0" fill="rgb(232,206,43)" rx="2" ry="2" />
<text  x="394.13" y="95.5" >ether_output_frame</text>
</g>
<g >
<title>tdq_notify (244 samples, 0.04%)</title><rect x="1153.1" y="213" width="0.5" height="15.0" fill="rgb(219,159,46)" rx="2" ry="2" />
<text  x="1156.14" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (480,921 samples, 69.95%)</title><rect x="220.5" y="181" width="825.5" height="15.0" fill="rgb(246,130,53)" rx="2" ry="2" />
<text  x="223.54" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>t4_intr (2,351 samples, 0.34%)</title><rect x="1186.0" y="277" width="4.0" height="15.0" fill="rgb(221,69,33)" rx="2" ry="2" />
<text  x="1188.96" y="287.5" ></text>
</g>
<g >
<title>get_scatter_segment (52,424 samples, 7.63%)</title><rect x="1046.0" y="213" width="90.0" height="15.0" fill="rgb(236,121,7)" rx="2" ry="2" />
<text  x="1048.99" y="223.5" >get_scatte..</text>
</g>
<g >
<title>cpu_search_highest (723 samples, 0.11%)</title><rect x="75.0" y="213" width="1.2" height="15.0" fill="rgb(230,185,23)" rx="2" ry="2" />
<text  x="77.95" y="223.5" ></text>
</g>
<g >
<title>mlx5e_xmit (2,351 samples, 0.34%)</title><rect x="1186.0" y="101" width="4.0" height="15.0" fill="rgb(223,216,29)" rx="2" ry="2" />
<text  x="1188.96" y="111.5" ></text>
</g>
<g >
<title>ether_input (2,351 samples, 0.34%)</title><rect x="1186.0" y="245" width="4.0" height="15.0" fill="rgb(253,92,14)" rx="2" ry="2" />
<text  x="1188.96" y="255.5" ></text>
</g>
<g >
<title>memcmp (1,904 samples, 0.28%)</title><rect x="732.3" y="101" width="3.2" height="15.0" fill="rgb(211,138,29)" rx="2" ry="2" />
<text  x="735.25" y="111.5" ></text>
</g>
<g >
<title>tdq_move (350 samples, 0.05%)</title><rect x="76.5" y="213" width="0.6" height="15.0" fill="rgb(220,187,49)" rx="2" ry="2" />
<text  x="79.46" y="223.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (8,294 samples, 1.21%)</title><rect x="194.1" y="197" width="14.2" height="15.0" fill="rgb(211,119,18)" rx="2" ry="2" />
<text  x="197.10" y="207.5" ></text>
</g>
<g >
<title>ether_input (16,339 samples, 2.38%)</title><rect x="1156.2" y="229" width="28.1" height="15.0" fill="rgb(253,66,9)" rx="2" ry="2" />
<text  x="1159.25" y="239.5" >e..</text>
</g>
<g >
<title>m_free (5,070 samples, 0.74%)</title><rect x="1156.2" y="53" width="8.8" height="15.0" fill="rgb(241,151,34)" rx="2" ry="2" />
<text  x="1159.25" y="63.5" ></text>
</g>
<g >
<title>memcmp (2,140 samples, 0.31%)</title><rect x="1042.1" y="165" width="3.7" height="15.0" fill="rgb(243,115,50)" rx="2" ry="2" />
<text  x="1045.13" y="175.5" ></text>
</g>
<g >
<title>lapic_et_start (90 samples, 0.01%)</title><rect x="1185.7" y="229" width="0.2" height="15.0" fill="rgb(206,5,28)" rx="2" ry="2" />
<text  x="1188.73" y="239.5" ></text>
</g>
<g >
<title>m_freem (2,773 samples, 0.40%)</title><rect x="495.2" y="53" width="4.8" height="15.0" fill="rgb(236,3,3)" rx="2" ry="2" />
<text  x="498.21" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (16,339 samples, 2.38%)</title><rect x="1156.2" y="165" width="28.1" height="15.0" fill="rgb(238,97,45)" rx="2" ry="2" />
<text  x="1159.25" y="175.5" >n..</text>
</g>
<g >
<title>pmap_kextract (977 samples, 0.14%)</title><rect x="64.6" y="117" width="1.6" height="15.0" fill="rgb(237,187,45)" rx="2" ry="2" />
<text  x="67.56" y="127.5" ></text>
</g>
<g >
<title>m_free (1,281 samples, 0.19%)</title><rect x="1186.0" y="69" width="2.2" height="15.0" fill="rgb(215,3,19)" rx="2" ry="2" />
<text  x="1188.96" y="79.5" ></text>
</g>
<g >
<title>tdq_add (109 samples, 0.02%)</title><rect x="76.9" y="197" width="0.1" height="15.0" fill="rgb(213,11,42)" rx="2" ry="2" />
<text  x="79.86" y="207.5" ></text>
</g>
<g >
<title>uma_zfree_arg (7,012 samples, 1.02%)</title><rect x="54.2" y="133" width="12.0" height="15.0" fill="rgb(251,21,16)" rx="2" ry="2" />
<text  x="57.20" y="143.5" ></text>
</g>
<g >
<title>fpu_activate_sw (454 samples, 0.07%)</title><rect x="71.0" y="213" width="0.7" height="15.0" fill="rgb(224,123,48)" rx="2" ry="2" />
<text  x="73.96" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (2,161 samples, 0.31%)</title><rect x="190.4" y="181" width="3.7" height="15.0" fill="rgb(238,68,36)" rx="2" ry="2" />
<text  x="193.39" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (908 samples, 0.13%)</title><rect x="1184.4" y="277" width="1.6" height="15.0" fill="rgb(218,94,31)" rx="2" ry="2" />
<text  x="1187.40" y="287.5" ></text>
</g>
<g >
<title>ether_output_frame (2,351 samples, 0.34%)</title><rect x="1186.0" y="117" width="4.0" height="15.0" fill="rgb(225,125,26)" rx="2" ry="2" />
<text  x="1188.96" y="127.5" ></text>
</g>
<g >
<title>_rm_runlock (2,854 samples, 0.42%)</title><rect x="640.5" y="85" width="4.8" height="15.0" fill="rgb(240,101,0)" rx="2" ry="2" />
<text  x="643.45" y="95.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (8,766 samples, 1.28%)</title><rect x="1120.9" y="181" width="15.1" height="15.0" fill="rgb(211,21,5)" rx="2" ry="2" />
<text  x="1123.93" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (1,070 samples, 0.16%)</title><rect x="1188.2" y="37" width="1.8" height="15.0" fill="rgb(239,195,4)" rx="2" ry="2" />
<text  x="1191.16" y="47.5" ></text>
</g>
<g >
<title>cpu_search_highest (76 samples, 0.01%)</title><rect x="1139.6" y="245" width="0.1" height="15.0" fill="rgb(211,27,54)" rx="2" ry="2" />
<text  x="1142.57" y="255.5" ></text>
</g>
<g >
<title>ip6_input (447,040 samples, 65.03%)</title><rect x="274.8" y="133" width="767.3" height="15.0" fill="rgb(219,123,22)" rx="2" ry="2" />
<text  x="277.83" y="143.5" >ip6_input</text>
</g>
<g >
<title>ip6_input (16,339 samples, 2.38%)</title><rect x="1156.2" y="149" width="28.1" height="15.0" fill="rgb(220,74,19)" rx="2" ry="2" />
<text  x="1159.25" y="159.5" >i..</text>
</g>
<g >
<title>choosethread (341 samples, 0.05%)</title><rect x="74.4" y="213" width="0.6" height="15.0" fill="rgb(211,159,25)" rx="2" ry="2" />
<text  x="77.37" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (16,339 samples, 2.38%)</title><rect x="1156.2" y="197" width="28.1" height="15.0" fill="rgb(243,215,50)" rx="2" ry="2" />
<text  x="1159.25" y="207.5" >e..</text>
</g>
<g >
<title>netisr_dispatch_src (454,967 samples, 66.18%)</title><rect x="261.2" y="149" width="780.9" height="15.0" fill="rgb(252,143,4)" rx="2" ry="2" />
<text  x="264.22" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ip6_findroute (50,388 samples, 7.33%)</title><rect x="645.8" y="101" width="86.5" height="15.0" fill="rgb(207,56,25)" rx="2" ry="2" />
<text  x="648.77" y="111.5" >ip6_findro..</text>
</g>
<g >
<title>runq_add (67 samples, 0.01%)</title><rect x="76.9" y="181" width="0.1" height="15.0" fill="rgb(237,92,16)" rx="2" ry="2" />
<text  x="79.93" y="191.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (12,696 samples, 1.85%)</title><rect x="172.3" y="197" width="21.8" height="15.0" fill="rgb(251,174,24)" rx="2" ry="2" />
<text  x="175.31" y="207.5" >_..</text>
</g>
<g >
<title>m_pkthdr_init (3,967 samples, 0.58%)</title><rect x="1129.2" y="165" width="6.8" height="15.0" fill="rgb(239,64,29)" rx="2" ry="2" />
<text  x="1132.16" y="175.5" ></text>
</g>
<g >
<title>memmove_erms (3,811 samples, 0.55%)</title><rect x="1177.8" y="37" width="6.5" height="15.0" fill="rgb(235,54,11)" rx="2" ry="2" />
<text  x="1180.75" y="47.5" ></text>
</g>
<g >
<title>binuptime (79 samples, 0.01%)</title><rect x="1184.6" y="245" width="0.1" height="15.0" fill="rgb(232,144,47)" rx="2" ry="2" />
<text  x="1187.60" y="255.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (1,399 samples, 0.20%)</title><rect x="1153.7" y="229" width="2.4" height="15.0" fill="rgb(242,39,51)" rx="2" ry="2" />
<text  x="1156.71" y="239.5" ></text>
</g>
<g >
<title>cache_alloc (264 samples, 0.04%)</title><rect x="1136.9" y="181" width="0.4" height="15.0" fill="rgb(215,143,13)" rx="2" ry="2" />
<text  x="1139.88" y="191.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (5,055 samples, 0.74%)</title><rect x="540.9" y="37" width="8.7" height="15.0" fill="rgb(240,192,9)" rx="2" ry="2" />
<text  x="543.92" y="47.5" ></text>
</g>
<g >
<title>uma_zfree_arg (1,281 samples, 0.19%)</title><rect x="1186.0" y="53" width="2.2" height="15.0" fill="rgb(223,165,50)" rx="2" ry="2" />
<text  x="1188.96" y="63.5" ></text>
</g>
<g >
<title>ether_demux (2,351 samples, 0.34%)</title><rect x="1186.0" y="197" width="4.0" height="15.0" fill="rgb(223,226,54)" rx="2" ry="2" />
<text  x="1188.96" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (793 samples, 0.12%)</title><rect x="1186.8" y="37" width="1.4" height="15.0" fill="rgb(248,25,10)" rx="2" ry="2" />
<text  x="1189.80" y="47.5" ></text>
</g>
<g >
<title>mlx5e_sq_xmit (1,070 samples, 0.16%)</title><rect x="1188.2" y="85" width="1.8" height="15.0" fill="rgb(216,195,31)" rx="2" ry="2" />
<text  x="1191.16" y="95.5" ></text>
</g>
<g >
<title>memcmp (244 samples, 0.04%)</title><rect x="645.3" y="85" width="0.5" height="15.0" fill="rgb(238,149,42)" rx="2" ry="2" />
<text  x="648.35" y="95.5" ></text>
</g>
<g >
<title>lock_delay (792 samples, 0.12%)</title><rect x="1137.6" y="229" width="1.3" height="15.0" fill="rgb(250,133,45)" rx="2" ry="2" />
<text  x="1140.57" y="239.5" ></text>
</g>
<g >
<title>mlx5_msix_handler (32,587 samples, 4.74%)</title><rect x="14.3" y="229" width="55.9" height="15.0" fill="rgb(222,180,50)" rx="2" ry="2" />
<text  x="17.32" y="239.5" >mlx5_..</text>
</g>
<g >
<title>_rm_runlock (5,219 samples, 0.76%)</title><rect x="1025.6" y="53" width="8.9" height="15.0" fill="rgb(222,222,52)" rx="2" ry="2" />
<text  x="1028.58" y="63.5" ></text>
</g>
<g >
<title>t4_intr (617,509 samples, 89.82%)</title><rect x="77.5" y="245" width="1059.9" height="15.0" fill="rgb(206,90,39)" rx="2" ry="2" />
<text  x="80.48" y="255.5" >t4_intr</text>
</g>
<g >
<title>ether_output (2,351 samples, 0.34%)</title><rect x="1186.0" y="133" width="4.0" height="15.0" fill="rgb(237,146,30)" rx="2" ry="2" />
<text  x="1188.96" y="143.5" ></text>
</g>
<g >
<title>handleevents (713 samples, 0.10%)</title><rect x="1184.7" y="245" width="1.3" height="15.0" fill="rgb(247,136,38)" rx="2" ry="2" />
<text  x="1187.74" y="255.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (84 samples, 0.01%)</title><rect x="1185.4" y="181" width="0.1" height="15.0" fill="rgb(254,85,46)" rx="2" ry="2" />
<text  x="1188.41" y="191.5" ></text>
</g>
<g >
<title>ether_output (16,339 samples, 2.38%)</title><rect x="1156.2" y="117" width="28.1" height="15.0" fill="rgb(205,216,34)" rx="2" ry="2" />
<text  x="1159.25" y="127.5" >e..</text>
</g>
<g >
<title>pmap_activate_sw (184 samples, 0.03%)</title><rect x="71.7" y="213" width="0.4" height="15.0" fill="rgb(211,69,1)" rx="2" ry="2" />
<text  x="74.74" y="223.5" ></text>
</g>
<g >
<title>refill_fl (556 samples, 0.08%)</title><rect x="1136.4" y="213" width="1.0" height="15.0" fill="rgb(222,77,37)" rx="2" ry="2" />
<text  x="1139.42" y="223.5" ></text>
</g>
<g >
<title>m_adj (3,452 samples, 0.50%)</title><rect x="253.6" y="149" width="6.0" height="15.0" fill="rgb(207,54,34)" rx="2" ry="2" />
<text  x="256.63" y="159.5" ></text>
</g>
<g >
<title>cpu_search_lowest (4,343 samples, 0.63%)</title><rect x="1145.3" y="181" width="7.4" height="15.0" fill="rgb(250,169,22)" rx="2" ry="2" />
<text  x="1148.26" y="191.5" ></text>
</g>
<g >
<title>mlx5e_sq_tls_xmit (1,600 samples, 0.23%)</title><rect x="568.2" y="37" width="2.7" height="15.0" fill="rgb(240,27,10)" rx="2" ry="2" />
<text  x="571.20" y="47.5" ></text>
</g>
<g >
<title>fib6_lookup (47,511 samples, 6.91%)</title><rect x="650.7" y="85" width="81.6" height="15.0" fill="rgb(221,20,5)" rx="2" ry="2" />
<text  x="653.71" y="95.5" >fib6_lookup</text>
</g>
<g >
<title>rsb_flush (179 samples, 0.03%)</title><rect x="72.1" y="229" width="0.3" height="15.0" fill="rgb(226,77,14)" rx="2" ry="2" />
<text  x="75.08" y="239.5" ></text>
</g>
<g >
<title>t4_intr (16,339 samples, 2.38%)</title><rect x="1156.2" y="261" width="28.1" height="15.0" fill="rgb(248,204,32)" rx="2" ry="2" />
<text  x="1159.25" y="271.5" >t..</text>
</g>
<g >
<title>mlx5e_tx_cq_comp (31,652 samples, 4.60%)</title><rect x="15.9" y="181" width="54.3" height="15.0" fill="rgb(234,71,43)" rx="2" ry="2" />
<text  x="18.92" y="191.5" >mlx5e..</text>
</g>
<g >
<title>all (687,487 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(214,96,31)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>intr_event_schedule_thread (8,837 samples, 1.29%)</title><rect x="1140.9" y="245" width="15.2" height="15.0" fill="rgb(232,0,22)" rx="2" ry="2" />
<text  x="1143.94" y="255.5" ></text>
</g>
<g >
<title>memcpy_erms (2,776 samples, 0.40%)</title><rect x="570.9" y="85" width="4.8" height="15.0" fill="rgb(243,164,47)" rx="2" ry="2" />
<text  x="573.95" y="95.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (366 samples, 0.05%)</title><rect x="13.2" y="245" width="0.6" height="15.0" fill="rgb(213,176,41)" rx="2" ry="2" />
<text  x="16.16" y="255.5" ></text>
</g>
<g >
<title>zone_fetch_bucket (80 samples, 0.01%)</title><rect x="1069.1" y="165" width="0.2" height="15.0" fill="rgb(254,127,53)" rx="2" ry="2" />
<text  x="1072.12" y="175.5" ></text>
</g>
<g >
<title>mlx5e_sq_xmit (41,351 samples, 6.01%)</title><rect x="500.0" y="53" width="70.9" height="15.0" fill="rgb(248,142,22)" rx="2" ry="2" />
<text  x="502.97" y="63.5" >mlx5e_sq..</text>
</g>
<g >
<title>ip6_tryforward (2,351 samples, 0.34%)</title><rect x="1186.0" y="149" width="4.0" height="15.0" fill="rgb(215,142,51)" rx="2" ry="2" />
<text  x="1188.96" y="159.5" ></text>
</g>
<g >
<title>tscp_get_timecount_low (67 samples, 0.01%)</title><rect x="1184.6" y="229" width="0.1" height="15.0" fill="rgb(231,119,49)" rx="2" ry="2" />
<text  x="1187.62" y="239.5" ></text>
</g>
<g >
<title>sched_idletd (396 samples, 0.06%)</title><rect x="1139.2" y="261" width="0.7" height="15.0" fill="rgb(245,229,15)" rx="2" ry="2" />
<text  x="1142.21" y="271.5" ></text>
</g>
<g >
<title>cache_alloc_retry (388 samples, 0.06%)</title><rect x="1068.6" y="197" width="0.7" height="15.0" fill="rgb(234,93,42)" rx="2" ry="2" />
<text  x="1071.64" y="207.5" ></text>
</g>
<g >
<title>uma_zfree_arg (5,070 samples, 0.74%)</title><rect x="1156.2" y="37" width="8.8" height="15.0" fill="rgb(221,126,53)" rx="2" ry="2" />
<text  x="1159.25" y="47.5" ></text>
</g>
<g >
<title>ipfw_check_packet (164,619 samples, 23.95%)</title><rect x="759.6" y="85" width="282.5" height="15.0" fill="rgb(210,135,15)" rx="2" ry="2" />
<text  x="762.57" y="95.5" >ipfw_check_packet</text>
</g>
<g >
<title>ffs_balloc_ufs2 (80 samples, 0.01%)</title><rect x="1139.0" y="181" width="0.2" height="15.0" fill="rgb(253,197,30)" rx="2" ry="2" />
<text  x="1142.03" y="191.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (488 samples, 0.07%)</title><rect x="1186.0" y="37" width="0.8" height="15.0" fill="rgb(216,15,11)" rx="2" ry="2" />
<text  x="1188.96" y="47.5" ></text>
</g>
<g >
<title>mlx5e_xmit (16,339 samples, 2.38%)</title><rect x="1156.2" y="85" width="28.1" height="15.0" fill="rgb(218,194,13)" rx="2" ry="2" />
<text  x="1159.25" y="95.5" >m..</text>
</g>
<g >
<title>mlx5_eq_int (32,507 samples, 4.73%)</title><rect x="14.5" y="213" width="55.7" height="15.0" fill="rgb(233,34,19)" rx="2" ry="2" />
<text  x="17.45" y="223.5" >mlx5_..</text>
</g>
<g >
<title>Xapic_isr1_pti (848 samples, 0.12%)</title><rect x="10.4" y="277" width="1.4" height="15.0" fill="rgb(246,85,49)" rx="2" ry="2" />
<text  x="13.38" y="287.5" ></text>
</g>
<g >
<title>ether_input (516,273 samples, 75.10%)</title><rect x="159.9" y="213" width="886.1" height="15.0" fill="rgb(249,97,8)" rx="2" ry="2" />
<text  x="162.86" y="223.5" >ether_input</text>
</g>
<g >
<title>service_iq_fl (617,497 samples, 89.82%)</title><rect x="77.5" y="229" width="1059.9" height="15.0" fill="rgb(214,204,41)" rx="2" ry="2" />
<text  x="80.50" y="239.5" >service_iq_fl</text>
</g>
<g >
<title>hardclock (520 samples, 0.08%)</title><rect x="1184.8" y="229" width="0.9" height="15.0" fill="rgb(242,52,31)" rx="2" ry="2" />
<text  x="1187.84" y="239.5" ></text>
</g>
<g >
<title>uma_zfree_arg (62 samples, 0.01%)</title><rect x="1069.0" y="165" width="0.1" height="15.0" fill="rgb(243,138,9)" rx="2" ry="2" />
<text  x="1072.02" y="175.5" ></text>
</g>
<g >
<title>rn_match (35,236 samples, 5.13%)</title><rect x="671.8" y="53" width="60.5" height="15.0" fill="rgb(222,140,22)" rx="2" ry="2" />
<text  x="674.78" y="63.5" >rn_match</text>
</g>
<g >
<title>mlx5_cq_completion (31,923 samples, 4.64%)</title><rect x="15.5" y="197" width="54.7" height="15.0" fill="rgb(239,89,19)" rx="2" ry="2" />
<text  x="18.46" y="207.5" >mlx5_..</text>
</g>
<g >
<title>service_iq_fl (2,351 samples, 0.34%)</title><rect x="1186.0" y="261" width="4.0" height="15.0" fill="rgb(223,210,4)" rx="2" ry="2" />
<text  x="1188.96" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (487,570 samples, 70.92%)</title><rect x="209.1" y="197" width="836.9" height="15.0" fill="rgb(218,99,54)" rx="2" ry="2" />
<text  x="212.13" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>cache_alloc_retry (264 samples, 0.04%)</title><rect x="1136.9" y="197" width="0.4" height="15.0" fill="rgb(218,193,14)" rx="2" ry="2" />
<text  x="1139.88" y="207.5" ></text>
</g>
<g >
<title>sched_choose (327 samples, 0.05%)</title><rect x="74.4" y="197" width="0.6" height="15.0" fill="rgb(235,29,10)" rx="2" ry="2" />
<text  x="77.39" y="207.5" ></text>
</g>
<g >
<title>service_iq_fl (16,339 samples, 2.38%)</title><rect x="1156.2" y="245" width="28.1" height="15.0" fill="rgb(219,75,20)" rx="2" ry="2" />
<text  x="1159.25" y="255.5" >s..</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (7,458 samples, 1.08%)</title><rect x="1165.0" y="53" width="12.8" height="15.0" fill="rgb(231,175,13)" rx="2" ry="2" />
<text  x="1167.95" y="63.5" ></text>
</g>
<g >
<title>sched_rem (189 samples, 0.03%)</title><rect x="76.5" y="197" width="0.4" height="15.0" fill="rgb(240,61,48)" rx="2" ry="2" />
<text  x="79.53" y="207.5" ></text>
</g>
<g >
<title>sched_add (6,816 samples, 0.99%)</title><rect x="1141.9" y="229" width="11.7" height="15.0" fill="rgb(233,200,39)" rx="2" ry="2" />
<text  x="1144.88" y="239.5" ></text>
</g>
<g >
<title>runq_choose (73 samples, 0.01%)</title><rect x="74.7" y="181" width="0.2" height="15.0" fill="rgb(232,23,34)" rx="2" ry="2" />
<text  x="77.74" y="191.5" ></text>
</g>
<g >
<title>_rm_rlock (6,466 samples, 0.94%)</title><rect x="629.4" y="85" width="11.1" height="15.0" fill="rgb(222,46,51)" rx="2" ry="2" />
<text  x="632.35" y="95.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (473 samples, 0.07%)</title><rect x="63.7" y="117" width="0.9" height="15.0" fill="rgb(224,19,36)" rx="2" ry="2" />
<text  x="66.75" y="127.5" ></text>
</g>
<g >
<title>sched_switch (2,772 samples, 0.40%)</title><rect x="72.4" y="229" width="4.7" height="15.0" fill="rgb(223,64,6)" rx="2" ry="2" />
<text  x="75.39" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (462 samples, 0.07%)</title><rect x="208.3" y="197" width="0.8" height="15.0" fill="rgb(239,3,9)" rx="2" ry="2" />
<text  x="211.34" y="207.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (19,320 samples, 2.81%)</title><rect x="1102.8" y="197" width="33.2" height="15.0" fill="rgb(240,64,3)" rx="2" ry="2" />
<text  x="1105.81" y="207.5" >um..</text>
</g>
<g >
<title>vn_io_fault (142 samples, 0.02%)</title><rect x="1139.0" y="245" width="0.2" height="15.0" fill="rgb(230,147,42)" rx="2" ry="2" />
<text  x="1141.96" y="255.5" ></text>
</g>
<g >
<title>pmc_process_samples (443 samples, 0.06%)</title><rect x="1185.0" y="197" width="0.7" height="15.0" fill="rgb(248,219,42)" rx="2" ry="2" />
<text  x="1187.97" y="207.5" ></text>
</g>
<g >
<title>lkpi_irq_handler (32,608 samples, 4.74%)</title><rect x="14.3" y="245" width="55.9" height="15.0" fill="rgb(250,122,21)" rx="2" ry="2" />
<text  x="17.28" y="255.5" >lkpi_..</text>
</g>
<g >
<title>lock_delay (179 samples, 0.03%)</title><rect x="1136.9" y="117" width="0.3" height="15.0" fill="rgb(242,201,45)" rx="2" ry="2" />
<text  x="1139.92" y="127.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (828 samples, 0.12%)</title><rect x="1142.3" y="213" width="1.5" height="15.0" fill="rgb(207,61,31)" rx="2" ry="2" />
<text  x="1145.35" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (16,339 samples, 2.38%)</title><rect x="1156.2" y="101" width="28.1" height="15.0" fill="rgb(223,220,46)" rx="2" ry="2" />
<text  x="1159.25" y="111.5" >e..</text>
</g>
<g >
<title>ipfw_chk (142,064 samples, 20.66%)</title><rect x="790.7" y="69" width="243.8" height="15.0" fill="rgb(236,5,11)" rx="2" ry="2" />
<text  x="793.70" y="79.5" >ipfw_chk</text>
</g>
<g >
<title>mlx5e_get_cqe (2,336 samples, 0.34%)</title><rect x="66.2" y="165" width="4.0" height="15.0" fill="rgb(246,49,43)" rx="2" ry="2" />
<text  x="69.24" y="175.5" ></text>
</g>
<g >
<title>m_free (22,060 samples, 3.21%)</title><rect x="28.4" y="149" width="37.8" height="15.0" fill="rgb(221,28,3)" rx="2" ry="2" />
<text  x="31.38" y="159.5" >m_f..</text>
</g>
<g >
<title>memcmp (1,964 samples, 0.29%)</title><rect x="607.6" y="53" width="3.3" height="15.0" fill="rgb(229,77,48)" rx="2" ry="2" />
<text  x="610.55" y="63.5" ></text>
</g>
<g >
<title>cache_free (350 samples, 0.05%)</title><rect x="63.1" y="117" width="0.6" height="15.0" fill="rgb(241,31,17)" rx="2" ry="2" />
<text  x="66.15" y="127.5" ></text>
</g>
<g >
<title>ether_demux (16,339 samples, 2.38%)</title><rect x="1156.2" y="181" width="28.1" height="15.0" fill="rgb(236,225,38)" rx="2" ry="2" />
<text  x="1159.25" y="191.5" >e..</text>
</g>
<g >
<title>mi_switch (4,020 samples, 0.58%)</title><rect x="70.2" y="245" width="6.9" height="15.0" fill="rgb(209,193,2)" rx="2" ry="2" />
<text  x="73.25" y="255.5" ></text>
</g>
<g >
<title>VOP_WRITE_APV (142 samples, 0.02%)</title><rect x="1139.0" y="213" width="0.2" height="15.0" fill="rgb(207,169,18)" rx="2" ry="2" />
<text  x="1141.96" y="223.5" ></text>
</g>
<g >
<title>lock_delay (716 samples, 0.10%)</title><rect x="1142.5" y="197" width="1.3" height="15.0" fill="rgb(225,208,8)" rx="2" ry="2" />
<text  x="1145.53" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (371 samples, 0.05%)</title><rect x="159.2" y="213" width="0.7" height="15.0" fill="rgb(251,24,12)" rx="2" ry="2" />
<text  x="162.23" y="223.5" ></text>
</g>
<g >
<title>mlx5e_sq_xmit (11,269 samples, 1.64%)</title><rect x="1165.0" y="69" width="19.3" height="15.0" fill="rgb(208,13,29)" rx="2" ry="2" />
<text  x="1167.95" y="79.5" ></text>
</g>
<g >
<title>zone_import (264 samples, 0.04%)</title><rect x="1136.9" y="165" width="0.4" height="15.0" fill="rgb(205,55,15)" rx="2" ry="2" />
<text  x="1139.88" y="175.5" ></text>
</g>
<g >
<title>mlx5e_get_l2_header_size (1,997 samples, 0.29%)</title><rect x="564.8" y="37" width="3.4" height="15.0" fill="rgb(220,120,52)" rx="2" ry="2" />
<text  x="567.77" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (2,351 samples, 0.34%)</title><rect x="1186.0" y="213" width="4.0" height="15.0" fill="rgb(217,53,48)" rx="2" ry="2" />
<text  x="1188.96" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (7,419 samples, 1.08%)</title><rect x="1165.0" y="37" width="12.8" height="15.0" fill="rgb(241,155,9)" rx="2" ry="2" />
<text  x="1168.02" y="47.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (926 samples, 0.13%)</title><rect x="1137.4" y="245" width="1.6" height="15.0" fill="rgb(212,206,54)" rx="2" ry="2" />
<text  x="1140.37" y="255.5" ></text>
</g>
<g >
<title>Xapic_isr1 (220 samples, 0.03%)</title><rect x="10.0" y="277" width="0.4" height="15.0" fill="rgb(226,15,0)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (286 samples, 0.04%)</title><rect x="73.9" y="213" width="0.5" height="15.0" fill="rgb(207,210,42)" rx="2" ry="2" />
<text  x="76.88" y="223.5" ></text>
</g>
<g >
<title>cpu_search_highest (532 samples, 0.08%)</title><rect x="75.3" y="197" width="0.9" height="15.0" fill="rgb(216,164,26)" rx="2" ry="2" />
<text  x="78.28" y="207.5" ></text>
</g>
<g >
<title>timercb (814 samples, 0.12%)</title><rect x="1184.6" y="261" width="1.4" height="15.0" fill="rgb(239,161,15)" rx="2" ry="2" />
<text  x="1187.56" y="271.5" ></text>
</g>
<g >
<title>ithread_loop (656,425 samples, 95.48%)</title><rect x="12.3" y="261" width="1126.7" height="15.0" fill="rgb(229,188,3)" rx="2" ry="2" />
<text  x="15.28" y="271.5" >ithread_loop</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (352 samples, 0.05%)</title><rect x="540.3" y="37" width="0.6" height="15.0" fill="rgb(231,85,48)" rx="2" ry="2" />
<text  x="543.31" y="47.5" ></text>
</g>
<g >
<title>ether_output (152,311 samples, 22.15%)</title><rect x="355.1" y="101" width="261.4" height="15.0" fill="rgb(254,44,54)" rx="2" ry="2" />
<text  x="358.08" y="111.5" >ether_output</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (1,070 samples, 0.16%)</title><rect x="1188.2" y="69" width="1.8" height="15.0" fill="rgb(216,220,47)" rx="2" ry="2" />
<text  x="1191.16" y="79.5" ></text>
</g>
<g >
<title>spinlock_exit (77 samples, 0.01%)</title><rect x="1153.6" y="229" width="0.1" height="15.0" fill="rgb(233,166,32)" rx="2" ry="2" />
<text  x="1156.58" y="239.5" ></text>
</g>
<g >
<title>zone_put_bucket (204 samples, 0.03%)</title><rect x="63.4" y="101" width="0.3" height="15.0" fill="rgb(219,4,11)" rx="2" ry="2" />
<text  x="66.40" y="111.5" ></text>
</g>
<g >
<title>cpu_search_lowest (4,945 samples, 0.72%)</title><rect x="1144.2" y="197" width="8.5" height="15.0" fill="rgb(240,202,44)" rx="2" ry="2" />
<text  x="1147.22" y="207.5" ></text>
</g>
<g >
<title>ip6_input (2,351 samples, 0.34%)</title><rect x="1186.0" y="165" width="4.0" height="15.0" fill="rgb(216,12,23)" rx="2" ry="2" />
<text  x="1188.96" y="175.5" ></text>
</g>
<g >
<title>intr_execute_handlers (9,444 samples, 1.37%)</title><rect x="1140.0" y="277" width="16.2" height="15.0" fill="rgb(206,63,3)" rx="2" ry="2" />
<text  x="1142.96" y="287.5" ></text>
</g>
<g >
<title>ether_demux (468,327 samples, 68.12%)</title><rect x="238.3" y="165" width="803.8" height="15.0" fill="rgb(247,33,12)" rx="2" ry="2" />
<text  x="241.29" y="175.5" >ether_demux</text>
</g>
<g >
<title>_epoch_enter_preempt (67 samples, 0.01%)</title><rect x="15.8" y="181" width="0.1" height="15.0" fill="rgb(206,177,13)" rx="2" ry="2" />
<text  x="18.76" y="191.5" ></text>
</g>
<g >
<title>lradix6_lookup (38,589 samples, 5.61%)</title><rect x="666.0" y="69" width="66.3" height="15.0" fill="rgb(213,205,49)" rx="2" ry="2" />
<text  x="669.02" y="79.5" >lradix6..</text>
</g>
<g >
<title>mlx5e_xmit (97,723 samples, 14.21%)</title><rect x="403.2" y="69" width="167.7" height="15.0" fill="rgb(215,126,1)" rx="2" ry="2" />
<text  x="406.22" y="79.5" >mlx5e_xmit</text>
</g>
<g >
<title>runq_add (138 samples, 0.02%)</title><rect x="1152.9" y="197" width="0.2" height="15.0" fill="rgb(222,170,26)" rx="2" ry="2" />
<text  x="1155.91" y="207.5" ></text>
</g>
<g >
<title>ithread_loop (16,340 samples, 2.38%)</title><rect x="1156.2" y="277" width="28.1" height="15.0" fill="rgb(248,95,30)" rx="2" ry="2" />
<text  x="1159.25" y="287.5" >i..</text>
</g>
<g >
<title>spinlock_exit (189 samples, 0.03%)</title><rect x="77.2" y="245" width="0.3" height="15.0" fill="rgb(247,106,9)" rx="2" ry="2" />
<text  x="80.16" y="255.5" ></text>
</g>
<g >
<title>sched_pickcpu (5,204 samples, 0.76%)</title><rect x="1143.8" y="213" width="8.9" height="15.0" fill="rgb(232,124,23)" rx="2" ry="2" />
<text  x="1146.78" y="223.5" ></text>
</g>
<g >
<title>m_freem (5,070 samples, 0.74%)</title><rect x="1156.2" y="69" width="8.8" height="15.0" fill="rgb(243,160,52)" rx="2" ry="2" />
<text  x="1159.25" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch (969 samples, 0.14%)</title><rect x="259.6" y="149" width="1.6" height="15.0" fill="rgb(214,40,24)" rx="2" ry="2" />
<text  x="262.56" y="159.5" ></text>
</g>
<g >
<title>cache_alloc (345 samples, 0.05%)</title><rect x="1068.7" y="181" width="0.6" height="15.0" fill="rgb(232,208,36)" rx="2" ry="2" />
<text  x="1071.68" y="191.5" ></text>
</g>
<g >
<title>memmove_erms (19,524 samples, 2.84%)</title><rect x="1069.3" y="197" width="33.5" height="15.0" fill="rgb(221,155,27)" rx="2" ry="2" />
<text  x="1072.30" y="207.5" >me..</text>
</g>
<g >
<title>netisr_dispatch (259 samples, 0.04%)</title><rect x="1136.0" y="213" width="0.4" height="15.0" fill="rgb(241,41,35)" rx="2" ry="2" />
<text  x="1138.97" y="223.5" ></text>
</g>
<g >
<title>ip6_tryforward (16,339 samples, 2.38%)</title><rect x="1156.2" y="133" width="28.1" height="15.0" fill="rgb(250,226,30)" rx="2" ry="2" />
<text  x="1159.25" y="143.5" >i..</text>
</g>
<g >
<title>mi_switch (81 samples, 0.01%)</title><rect x="1139.7" y="245" width="0.1" height="15.0" fill="rgb(222,2,32)" rx="2" ry="2" />
<text  x="1142.71" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (16,339 samples, 2.38%)</title><rect x="1156.2" y="213" width="28.1" height="15.0" fill="rgb(236,221,4)" rx="2" ry="2" />
<text  x="1159.25" y="223.5" >n..</text>
</g>
<g >
<title>ip6_tryforward (431,656 samples, 62.79%)</title><rect x="301.2" y="117" width="740.9" height="15.0" fill="rgb(213,165,25)" rx="2" ry="2" />
<text  x="304.23" y="127.5" >ip6_tryforward</text>
</g>
<g >
<title>_ck_epoch_delref (1,319 samples, 0.19%)</title><rect x="206.1" y="181" width="2.2" height="15.0" fill="rgb(226,90,1)" rx="2" ry="2" />
<text  x="209.07" y="191.5" ></text>
</g>
<g >
<title>bucket_alloc (88 samples, 0.01%)</title><rect x="63.2" y="101" width="0.2" height="15.0" fill="rgb(237,222,40)" rx="2" ry="2" />
<text  x="66.23" y="111.5" ></text>
</g>
<g >
<title>m_adj (5,557 samples, 0.81%)</title><rect x="549.6" y="37" width="9.5" height="15.0" fill="rgb(248,156,23)" rx="2" ry="2" />
<text  x="552.59" y="47.5" ></text>
</g>
<g >
<title>_thread_lock (242 samples, 0.04%)</title><rect x="13.9" y="245" width="0.4" height="15.0" fill="rgb(243,48,13)" rx="2" ry="2" />
<text  x="16.86" y="255.5" ></text>
</g>
<g >
<title>in6_localip (17,048 samples, 2.48%)</title><rect x="616.5" y="101" width="29.3" height="15.0" fill="rgb(228,163,45)" rx="2" ry="2" />
<text  x="619.51" y="111.5" >in..</text>
</g>
<g >
<title>netisr_dispatch_src (2,351 samples, 0.34%)</title><rect x="1186.0" y="181" width="4.0" height="15.0" fill="rgb(221,205,9)" rx="2" ry="2" />
<text  x="1188.96" y="191.5" ></text>
</g>
<g >
<title>cpu_search_highest (64 samples, 0.01%)</title><rect x="1139.6" y="229" width="0.1" height="15.0" fill="rgb(222,81,14)" rx="2" ry="2" />
<text  x="1142.59" y="239.5" ></text>
</g>
<g >
<title>pmc_hook_handler (455 samples, 0.07%)</title><rect x="1184.9" y="213" width="0.8" height="15.0" fill="rgb(219,183,8)" rx="2" ry="2" />
<text  x="1187.95" y="223.5" ></text>
</g>
<g >
<title>tdq_add (210 samples, 0.03%)</title><rect x="1152.8" y="213" width="0.3" height="15.0" fill="rgb(228,171,30)" rx="2" ry="2" />
<text  x="1155.78" y="223.5" ></text>
</g>
<g >
<title>pfil_run_hooks (178,631 samples, 25.98%)</title><rect x="735.5" y="101" width="306.6" height="15.0" fill="rgb(244,186,50)" rx="2" ry="2" />
<text  x="738.52" y="111.5" >pfil_run_hooks</text>
</g>
</g>
</svg>
