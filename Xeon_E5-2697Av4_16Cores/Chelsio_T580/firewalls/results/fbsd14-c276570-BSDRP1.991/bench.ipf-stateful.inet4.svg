<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ipf_checkv4sum (547 samples, 0.08%)</title><rect x="372.9" y="37" width="1.0" height="15.0" fill="rgb(213,112,40)" rx="2" ry="2" />
<text  x="375.94" y="47.5" ></text>
</g>
<g >
<title>pmclog_loop (126 samples, 0.02%)</title><rect x="453.1" y="261" width="0.3" height="15.0" fill="rgb(251,2,19)" rx="2" ry="2" />
<text  x="456.14" y="271.5" ></text>
</g>
<g >
<title>lock_delay (891 samples, 0.13%)</title><rect x="472.9" y="213" width="1.6" height="15.0" fill="rgb(211,119,7)" rx="2" ry="2" />
<text  x="475.93" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (59 samples, 0.01%)</title><rect x="20.1" y="117" width="0.1" height="15.0" fill="rgb(250,22,46)" rx="2" ry="2" />
<text  x="23.12" y="127.5" ></text>
</g>
<g >
<title>lock_delay (393 samples, 0.06%)</title><rect x="23.7" y="197" width="0.7" height="15.0" fill="rgb(213,15,26)" rx="2" ry="2" />
<text  x="26.73" y="207.5" ></text>
</g>
<g >
<title>mlx5e_get_cqe (142 samples, 0.02%)</title><rect x="20.2" y="165" width="0.3" height="15.0" fill="rgb(247,51,14)" rx="2" ry="2" />
<text  x="23.22" y="175.5" ></text>
</g>
<g >
<title>service_iq_fl (237,608 samples, 35.93%)</title><rect x="28.1" y="229" width="423.9" height="15.0" fill="rgb(241,125,42)" rx="2" ry="2" />
<text  x="31.06" y="239.5" >service_iq_fl</text>
</g>
<g >
<title>memcmp (92 samples, 0.01%)</title><rect x="448.1" y="165" width="0.1" height="15.0" fill="rgb(234,99,22)" rx="2" ry="2" />
<text  x="451.07" y="175.5" ></text>
</g>
<g >
<title>cpu_search_highest (866 samples, 0.13%)</title><rect x="459.6" y="245" width="1.6" height="15.0" fill="rgb(224,212,11)" rx="2" ry="2" />
<text  x="462.62" y="255.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (357 samples, 0.05%)</title><rect x="475.0" y="37" width="0.6" height="15.0" fill="rgb(209,93,42)" rx="2" ry="2" />
<text  x="478.01" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (399,385 samples, 60.39%)</title><rect x="475.0" y="197" width="712.6" height="15.0" fill="rgb(220,146,24)" rx="2" ry="2" />
<text  x="478.00" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>ip_input (461 samples, 0.07%)</title><rect x="1189.2" y="165" width="0.8" height="15.0" fill="rgb(234,95,49)" rx="2" ry="2" />
<text  x="1192.18" y="175.5" ></text>
</g>
<g >
<title>ether_input (233,297 samples, 35.27%)</title><rect x="32.0" y="213" width="416.2" height="15.0" fill="rgb(241,118,18)" rx="2" ry="2" />
<text  x="35.00" y="223.5" >ether_input</text>
</g>
<g >
<title>memcmp (2,937 samples, 0.44%)</title><rect x="396.4" y="37" width="5.3" height="15.0" fill="rgb(206,152,38)" rx="2" ry="2" />
<text  x="399.41" y="47.5" ></text>
</g>
<g >
<title>ether_demux (230,071 samples, 34.79%)</title><rect x="37.6" y="165" width="410.5" height="15.0" fill="rgb(238,135,16)" rx="2" ry="2" />
<text  x="40.59" y="175.5" >ether_demux</text>
</g>
<g >
<title>ipf_scanlist (8,804 samples, 1.33%)</title><rect x="375.1" y="53" width="15.7" height="15.0" fill="rgb(248,37,20)" rx="2" ry="2" />
<text  x="378.06" y="63.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (4,774 samples, 0.72%)</title><rect x="329.3" y="53" width="8.5" height="15.0" fill="rgb(221,83,17)" rx="2" ry="2" />
<text  x="332.32" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (34,221 samples, 5.17%)</title><rect x="672.0" y="53" width="61.1" height="15.0" fill="rgb(253,206,3)" rx="2" ry="2" />
<text  x="675.05" y="63.5" >__mtx_..</text>
</g>
<g >
<title>sched_choose (117 samples, 0.02%)</title><rect x="24.4" y="197" width="0.3" height="15.0" fill="rgb(240,178,17)" rx="2" ry="2" />
<text  x="27.45" y="207.5" ></text>
</g>
<g >
<title>fpu_activate_sw (65 samples, 0.01%)</title><rect x="474.6" y="213" width="0.1" height="15.0" fill="rgb(239,181,11)" rx="2" ry="2" />
<text  x="477.61" y="223.5" ></text>
</g>
<g >
<title>lkpi_irq_handler (3,148 samples, 0.48%)</title><rect x="14.9" y="245" width="5.6" height="15.0" fill="rgb(240,165,24)" rx="2" ry="2" />
<text  x="17.86" y="255.5" ></text>
</g>
<g >
<title>service_iq_fl (461 samples, 0.07%)</title><rect x="1189.2" y="261" width="0.8" height="15.0" fill="rgb(225,88,40)" rx="2" ry="2" />
<text  x="1192.18" y="271.5" ></text>
</g>
<g >
<title>acpi_cpu_idle_mwait (310 samples, 0.05%)</title><rect x="458.9" y="197" width="0.6" height="15.0" fill="rgb(241,50,4)" rx="2" ry="2" />
<text  x="461.93" y="207.5" ></text>
</g>
<g >
<title>pmc_process_samples (377 samples, 0.06%)</title><rect x="1188.3" y="197" width="0.6" height="15.0" fill="rgb(206,207,35)" rx="2" ry="2" />
<text  x="1191.26" y="207.5" ></text>
</g>
<g >
<title>runq_add (141 samples, 0.02%)</title><rect x="471.9" y="197" width="0.2" height="15.0" fill="rgb(240,53,23)" rx="2" ry="2" />
<text  x="474.87" y="207.5" ></text>
</g>
<g >
<title>sched_switch (64 samples, 0.01%)</title><rect x="474.8" y="229" width="0.1" height="15.0" fill="rgb(214,91,3)" rx="2" ry="2" />
<text  x="477.83" y="239.5" ></text>
</g>
<g >
<title>cpu_activeclock (66 samples, 0.01%)</title><rect x="458.7" y="229" width="0.2" height="15.0" fill="rgb(219,228,24)" rx="2" ry="2" />
<text  x="461.74" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (399,385 samples, 60.39%)</title><rect x="475.0" y="213" width="712.6" height="15.0" fill="rgb(212,134,10)" rx="2" ry="2" />
<text  x="478.00" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sched_switch (362 samples, 0.05%)</title><rect x="462.2" y="229" width="0.7" height="15.0" fill="rgb(208,190,53)" rx="2" ry="2" />
<text  x="465.22" y="239.5" ></text>
</g>
<g >
<title>ipf_check (219,384 samples, 33.17%)</title><rect x="56.7" y="69" width="391.4" height="15.0" fill="rgb(232,226,27)" rx="2" ry="2" />
<text  x="59.65" y="79.5" >ipf_check</text>
</g>
<g >
<title>mi_switch (953 samples, 0.14%)</title><rect x="461.2" y="245" width="1.7" height="15.0" fill="rgb(245,175,27)" rx="2" ry="2" />
<text  x="464.17" y="255.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (339 samples, 0.05%)</title><rect x="451.3" y="181" width="0.6" height="15.0" fill="rgb(249,170,38)" rx="2" ry="2" />
<text  x="454.29" y="191.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (731 samples, 0.11%)</title><rect x="450.6" y="197" width="1.3" height="15.0" fill="rgb(254,68,44)" rx="2" ry="2" />
<text  x="453.59" y="207.5" ></text>
</g>
<g >
<title>cpu_switch (429 samples, 0.06%)</title><rect x="461.2" y="229" width="0.8" height="15.0" fill="rgb(228,10,10)" rx="2" ry="2" />
<text  x="464.24" y="239.5" ></text>
</g>
<g >
<title>ipf_derefrule (109,898 samples, 16.62%)</title><rect x="476.0" y="69" width="196.0" height="15.0" fill="rgb(235,141,22)" rx="2" ry="2" />
<text  x="478.97" y="79.5" >ipf_derefrule</text>
</g>
<g >
<title>netisr_dispatch (165 samples, 0.02%)</title><rect x="34.5" y="197" width="0.3" height="15.0" fill="rgb(237,186,27)" rx="2" ry="2" />
<text  x="37.52" y="207.5" ></text>
</g>
<g >
<title>m_free (203 samples, 0.03%)</title><rect x="1187.2" y="53" width="0.4" height="15.0" fill="rgb(234,203,48)" rx="2" ry="2" />
<text  x="1190.21" y="63.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (358 samples, 0.05%)</title><rect x="475.0" y="53" width="0.6" height="15.0" fill="rgb(213,8,30)" rx="2" ry="2" />
<text  x="478.00" y="63.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (424 samples, 0.06%)</title><rect x="1189.2" y="117" width="0.8" height="15.0" fill="rgb(221,152,51)" rx="2" ry="2" />
<text  x="1192.24" y="127.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (358 samples, 0.05%)</title><rect x="458.9" y="229" width="0.6" height="15.0" fill="rgb(223,17,13)" rx="2" ry="2" />
<text  x="461.85" y="239.5" ></text>
</g>
<g >
<title>ipf_state_lookup (254,515 samples, 38.48%)</title><rect x="733.1" y="53" width="454.1" height="15.0" fill="rgb(234,13,50)" rx="2" ry="2" />
<text  x="736.11" y="63.5" >ipf_state_lookup</text>
</g>
<g >
<title>_mtx_lock_spin_cookie (296 samples, 0.04%)</title><rect x="465.8" y="213" width="0.5" height="15.0" fill="rgb(219,134,17)" rx="2" ry="2" />
<text  x="468.77" y="223.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (2,342 samples, 0.35%)</title><rect x="410.1" y="37" width="4.2" height="15.0" fill="rgb(250,0,27)" rx="2" ry="2" />
<text  x="413.14" y="47.5" ></text>
</g>
<g >
<title>t4_intr (461 samples, 0.07%)</title><rect x="1189.2" y="277" width="0.8" height="15.0" fill="rgb(205,67,44)" rx="2" ry="2" />
<text  x="1192.18" y="287.5" ></text>
</g>
<g >
<title>all (661,373 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(205,99,46)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>cpu_search_highest (1,104 samples, 0.17%)</title><rect x="25.1" y="197" width="2.0" height="15.0" fill="rgb(207,177,5)" rx="2" ry="2" />
<text  x="28.14" y="207.5" ></text>
</g>
<g >
<title>cpu_idle (3,126 samples, 0.47%)</title><rect x="454.0" y="245" width="5.6" height="15.0" fill="rgb(212,98,27)" rx="2" ry="2" />
<text  x="457.04" y="255.5" ></text>
</g>
<g >
<title>ip_input (228,769 samples, 34.59%)</title><rect x="39.9" y="133" width="408.2" height="15.0" fill="rgb(238,166,15)" rx="2" ry="2" />
<text  x="42.91" y="143.5" >ip_input</text>
</g>
<g >
<title>fork_exit (252,405 samples, 38.16%)</title><rect x="13.0" y="277" width="450.3" height="15.0" fill="rgb(247,21,2)" rx="2" ry="2" />
<text  x="15.96" y="287.5" >fork_exit</text>
</g>
<g >
<title>rsb_flush (106 samples, 0.02%)</title><rect x="462.0" y="229" width="0.2" height="15.0" fill="rgb(211,125,44)" rx="2" ry="2" />
<text  x="465.03" y="239.5" ></text>
</g>
<g >
<title>mi_switch (4,053 samples, 0.61%)</title><rect x="20.5" y="245" width="7.2" height="15.0" fill="rgb(254,57,17)" rx="2" ry="2" />
<text  x="23.48" y="255.5" ></text>
</g>
<g >
<title>ithread_loop (399,385 samples, 60.39%)</title><rect x="475.0" y="277" width="712.6" height="15.0" fill="rgb(221,38,1)" rx="2" ry="2" />
<text  x="478.00" y="287.5" >ithread_loop</text>
</g>
<g >
<title>netisr_dispatch_src (461 samples, 0.07%)</title><rect x="1189.2" y="181" width="0.8" height="15.0" fill="rgb(205,159,31)" rx="2" ry="2" />
<text  x="1192.18" y="191.5" ></text>
</g>
<g >
<title>Xapic_isr1 (221 samples, 0.03%)</title><rect x="10.0" y="277" width="0.4" height="15.0" fill="rgb(214,136,41)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sched_add (4,133 samples, 0.62%)</title><rect x="465.3" y="229" width="7.4" height="15.0" fill="rgb(219,125,27)" rx="2" ry="2" />
<text  x="468.33" y="239.5" ></text>
</g>
<g >
<title>sched_choose (190 samples, 0.03%)</title><rect x="462.4" y="197" width="0.3" height="15.0" fill="rgb(239,25,48)" rx="2" ry="2" />
<text  x="465.39" y="207.5" ></text>
</g>
<g >
<title>mlx5_cq_completion (2,501 samples, 0.38%)</title><rect x="16.0" y="197" width="4.5" height="15.0" fill="rgb(228,220,29)" rx="2" ry="2" />
<text  x="19.01" y="207.5" ></text>
</g>
<g >
<title>ithread_loop (246,695 samples, 37.30%)</title><rect x="13.0" y="261" width="440.1" height="15.0" fill="rgb(221,214,52)" rx="2" ry="2" />
<text  x="16.00" y="271.5" >ithread_loop</text>
</g>
<g >
<title>ipf_movequeue (116 samples, 0.02%)</title><rect x="415.8" y="37" width="0.2" height="15.0" fill="rgb(241,37,43)" rx="2" ry="2" />
<text  x="418.80" y="47.5" ></text>
</g>
<g >
<title>sched_rem (81 samples, 0.01%)</title><rect x="27.5" y="197" width="0.1" height="15.0" fill="rgb(237,39,5)" rx="2" ry="2" />
<text  x="30.45" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (230,754 samples, 34.89%)</title><rect x="36.5" y="181" width="411.7" height="15.0" fill="rgb(227,184,29)" rx="2" ry="2" />
<text  x="39.54" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>memmove_erms (183 samples, 0.03%)</title><rect x="475.6" y="37" width="0.4" height="15.0" fill="rgb(230,6,29)" rx="2" ry="2" />
<text  x="478.64" y="47.5" ></text>
</g>
<g >
<title>lock_delay (109,897 samples, 16.62%)</title><rect x="476.0" y="37" width="196.0" height="15.0" fill="rgb(223,214,51)" rx="2" ry="2" />
<text  x="478.97" y="47.5" >lock_delay</text>
</g>
<g >
<title>_epoch_enter_preempt (347 samples, 0.05%)</title><rect x="13.9" y="245" width="0.7" height="15.0" fill="rgb(215,145,47)" rx="2" ry="2" />
<text  x="16.95" y="255.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (109,898 samples, 16.62%)</title><rect x="476.0" y="53" width="196.0" height="15.0" fill="rgb(241,22,33)" rx="2" ry="2" />
<text  x="478.97" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>service_iq_fl (399,385 samples, 60.39%)</title><rect x="475.0" y="245" width="712.6" height="15.0" fill="rgb(247,55,10)" rx="2" ry="2" />
<text  x="478.00" y="255.5" >service_iq_fl</text>
</g>
<g >
<title>ipf_nat_checkout (111 samples, 0.02%)</title><rect x="374.9" y="53" width="0.2" height="15.0" fill="rgb(218,9,51)" rx="2" ry="2" />
<text  x="377.87" y="63.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (356 samples, 0.05%)</title><rect x="458.9" y="213" width="0.6" height="15.0" fill="rgb(229,76,42)" rx="2" ry="2" />
<text  x="461.86" y="223.5" ></text>
</g>
<g >
<title>VOP_WRITE_APV (124 samples, 0.02%)</title><rect x="453.1" y="213" width="0.3" height="15.0" fill="rgb(254,12,19)" rx="2" ry="2" />
<text  x="456.14" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (2,739 samples, 0.41%)</title><rect x="385.8" y="37" width="4.9" height="15.0" fill="rgb(207,122,39)" rx="2" ry="2" />
<text  x="388.82" y="47.5" ></text>
</g>
<g >
<title>fpu_activate_sw (205 samples, 0.03%)</title><rect x="461.5" y="213" width="0.3" height="15.0" fill="rgb(247,144,26)" rx="2" ry="2" />
<text  x="464.48" y="223.5" ></text>
</g>
<g >
<title>ether_input (399,385 samples, 60.39%)</title><rect x="475.0" y="229" width="712.6" height="15.0" fill="rgb(211,137,8)" rx="2" ry="2" />
<text  x="478.00" y="239.5" >ether_input</text>
</g>
<g >
<title>uma_zfree_arg (273 samples, 0.04%)</title><rect x="19.7" y="133" width="0.5" height="15.0" fill="rgb(207,47,27)" rx="2" ry="2" />
<text  x="22.74" y="143.5" ></text>
</g>
<g >
<title>uma_zfree_arg (203 samples, 0.03%)</title><rect x="1187.2" y="37" width="0.4" height="15.0" fill="rgb(239,74,30)" rx="2" ry="2" />
<text  x="1190.21" y="47.5" ></text>
</g>
<g >
<title>m_free (301 samples, 0.05%)</title><rect x="1189.5" y="69" width="0.5" height="15.0" fill="rgb(210,185,7)" rx="2" ry="2" />
<text  x="1192.46" y="79.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (444 samples, 0.07%)</title><rect x="23.6" y="213" width="0.8" height="15.0" fill="rgb(224,182,14)" rx="2" ry="2" />
<text  x="26.64" y="223.5" ></text>
</g>
<g >
<title>_rw_wowned (1,451 samples, 0.22%)</title><rect x="337.8" y="53" width="2.6" height="15.0" fill="rgb(223,209,50)" rx="2" ry="2" />
<text  x="340.84" y="63.5" ></text>
</g>
<g >
<title>mlx5e_xmit (3,612 samples, 0.55%)</title><rect x="46.0" y="69" width="6.5" height="15.0" fill="rgb(253,118,40)" rx="2" ry="2" />
<text  x="49.03" y="79.5" ></text>
</g>
<g >
<title>lapic_et_start (92 samples, 0.01%)</title><rect x="1188.9" y="229" width="0.2" height="15.0" fill="rgb(228,93,1)" rx="2" ry="2" />
<text  x="1191.94" y="239.5" ></text>
</g>
<g >
<title>sched_idletd (5,515 samples, 0.83%)</title><rect x="453.4" y="261" width="9.8" height="15.0" fill="rgb(244,16,37)" rx="2" ry="2" />
<text  x="456.37" y="271.5" ></text>
</g>
<g >
<title>bsearch4_lookup (526 samples, 0.08%)</title><rect x="54.4" y="69" width="0.9" height="15.0" fill="rgb(250,181,7)" rx="2" ry="2" />
<text  x="57.39" y="79.5" ></text>
</g>
<g >
<title>lapic_handle_timer (839 samples, 0.13%)</title><rect x="1187.7" y="277" width="1.5" height="15.0" fill="rgb(238,0,51)" rx="2" ry="2" />
<text  x="1190.68" y="287.5" ></text>
</g>
<g >
<title>ipf_state_add (6,364 samples, 0.96%)</title><rect x="390.8" y="53" width="11.3" height="15.0" fill="rgb(225,54,34)" rx="2" ry="2" />
<text  x="393.77" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (231,720 samples, 35.04%)</title><rect x="34.8" y="197" width="413.4" height="15.0" fill="rgb(207,54,29)" rx="2" ry="2" />
<text  x="37.81" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>mi_switch (213 samples, 0.03%)</title><rect x="474.6" y="245" width="0.3" height="15.0" fill="rgb(219,109,39)" rx="2" ry="2" />
<text  x="477.56" y="255.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (532 samples, 0.08%)</title><rect x="32.8" y="197" width="1.0" height="15.0" fill="rgb(223,176,38)" rx="2" ry="2" />
<text  x="35.82" y="207.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (229 samples, 0.03%)</title><rect x="51.1" y="37" width="0.4" height="15.0" fill="rgb(225,188,42)" rx="2" ry="2" />
<text  x="54.09" y="47.5" ></text>
</g>
<g >
<title>m_copydata (183 samples, 0.03%)</title><rect x="475.6" y="53" width="0.4" height="15.0" fill="rgb(224,17,36)" rx="2" ry="2" />
<text  x="478.64" y="63.5" ></text>
</g>
<g >
<title>Xtimerint_pti (208 samples, 0.03%)</title><rect x="12.5" y="277" width="0.4" height="15.0" fill="rgb(219,223,5)" rx="2" ry="2" />
<text  x="15.50" y="287.5" ></text>
</g>
<g >
<title>ffs_write (124 samples, 0.02%)</title><rect x="453.1" y="197" width="0.3" height="15.0" fill="rgb(248,19,49)" rx="2" ry="2" />
<text  x="456.14" y="207.5" ></text>
</g>
<g >
<title>m_adj (318 samples, 0.05%)</title><rect x="51.5" y="37" width="0.6" height="15.0" fill="rgb(214,208,51)" rx="2" ry="2" />
<text  x="54.50" y="47.5" ></text>
</g>
<g >
<title>_rw_wowned (831 samples, 0.13%)</title><rect x="414.3" y="37" width="1.5" height="15.0" fill="rgb(235,32,51)" rx="2" ry="2" />
<text  x="417.31" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (122 samples, 0.02%)</title><rect x="1189.2" y="53" width="0.3" height="15.0" fill="rgb(249,89,24)" rx="2" ry="2" />
<text  x="1192.24" y="63.5" ></text>
</g>
<g >
<title>cpu_idleclock (62 samples, 0.01%)</title><rect x="459.5" y="229" width="0.1" height="15.0" fill="rgb(237,173,45)" rx="2" ry="2" />
<text  x="462.49" y="239.5" ></text>
</g>
<g >
<title>ipf_makefrip (2,621 samples, 0.40%)</title><rect x="369.8" y="53" width="4.7" height="15.0" fill="rgb(229,50,54)" rx="2" ry="2" />
<text  x="372.80" y="63.5" ></text>
</g>
<g >
<title>ip_tryforward (461 samples, 0.07%)</title><rect x="1189.2" y="149" width="0.8" height="15.0" fill="rgb(207,34,42)" rx="2" ry="2" />
<text  x="1192.18" y="159.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (79 samples, 0.01%)</title><rect x="1188.6" y="181" width="0.2" height="15.0" fill="rgb(240,125,6)" rx="2" ry="2" />
<text  x="1191.64" y="191.5" ></text>
</g>
<g >
<title>hardclock (471 samples, 0.07%)</title><rect x="1188.1" y="229" width="0.8" height="15.0" fill="rgb(205,33,15)" rx="2" ry="2" />
<text  x="1191.10" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (399,385 samples, 60.39%)</title><rect x="475.0" y="165" width="712.6" height="15.0" fill="rgb(228,160,38)" rx="2" ry="2" />
<text  x="478.00" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>cpu_search_lowest (2,470 samples, 0.37%)</title><rect x="467.2" y="181" width="4.4" height="15.0" fill="rgb(206,156,16)" rx="2" ry="2" />
<text  x="470.24" y="191.5" ></text>
</g>
<g >
<title>rsb_flush (197 samples, 0.03%)</title><rect x="22.0" y="229" width="0.3" height="15.0" fill="rgb(233,74,26)" rx="2" ry="2" />
<text  x="24.98" y="239.5" ></text>
</g>
<g >
<title>intr_execute_handlers (6,546 samples, 0.99%)</title><rect x="463.3" y="277" width="11.7" height="15.0" fill="rgb(212,45,17)" rx="2" ry="2" />
<text  x="466.29" y="287.5" ></text>
</g>
<g >
<title>ipf_state_check (24,784 samples, 3.75%)</title><rect x="402.1" y="53" width="44.2" height="15.0" fill="rgb(228,11,48)" rx="2" ry="2" />
<text  x="405.13" y="63.5" >ipf_..</text>
</g>
<g >
<title>ip_input (399,385 samples, 60.39%)</title><rect x="475.0" y="149" width="712.6" height="15.0" fill="rgb(233,227,30)" rx="2" ry="2" />
<text  x="478.00" y="159.5" >ip_input</text>
</g>
<g >
<title>_epoch_exit_preempt (423 samples, 0.06%)</title><rect x="33.8" y="197" width="0.7" height="15.0" fill="rgb(252,187,40)" rx="2" ry="2" />
<text  x="36.77" y="207.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (987 samples, 0.15%)</title><rect x="472.8" y="229" width="1.8" height="15.0" fill="rgb(236,59,45)" rx="2" ry="2" />
<text  x="475.80" y="239.5" ></text>
</g>
<g >
<title>cpu_search_highest (683 samples, 0.10%)</title><rect x="459.9" y="229" width="1.3" height="15.0" fill="rgb(243,111,17)" rx="2" ry="2" />
<text  x="462.94" y="239.5" ></text>
</g>
<g >
<title>ether_output (541 samples, 0.08%)</title><rect x="475.0" y="117" width="1.0" height="15.0" fill="rgb(233,85,23)" rx="2" ry="2" />
<text  x="478.00" y="127.5" ></text>
</g>
<g >
<title>strncpy (759 samples, 0.11%)</title><rect x="445.0" y="37" width="1.3" height="15.0" fill="rgb(241,59,27)" rx="2" ry="2" />
<text  x="447.99" y="47.5" ></text>
</g>
<g >
<title>pmc_hook_handler (398 samples, 0.06%)</title><rect x="1188.2" y="213" width="0.7" height="15.0" fill="rgb(218,185,10)" rx="2" ry="2" />
<text  x="1191.22" y="223.5" ></text>
</g>
<g >
<title>__rw_rlock_int (5,615 samples, 0.85%)</title><rect x="733.1" y="37" width="10.0" height="15.0" fill="rgb(221,151,32)" rx="2" ry="2" />
<text  x="736.12" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (144 samples, 0.02%)</title><rect x="52.5" y="85" width="0.2" height="15.0" fill="rgb(254,45,24)" rx="2" ry="2" />
<text  x="55.47" y="95.5" ></text>
</g>
<g >
<title>intr_event_schedule_thread (5,691 samples, 0.86%)</title><rect x="464.4" y="245" width="10.2" height="15.0" fill="rgb(251,53,40)" rx="2" ry="2" />
<text  x="467.40" y="255.5" ></text>
</g>
<g >
<title>ether_demux (399,385 samples, 60.39%)</title><rect x="475.0" y="181" width="712.6" height="15.0" fill="rgb(249,182,24)" rx="2" ry="2" />
<text  x="478.00" y="191.5" >ether_demux</text>
</g>
<g >
<title>choosethread (126 samples, 0.02%)</title><rect x="24.4" y="213" width="0.3" height="15.0" fill="rgb(237,169,29)" rx="2" ry="2" />
<text  x="27.43" y="223.5" ></text>
</g>
<g >
<title>ip_findroute (956 samples, 0.14%)</title><rect x="53.6" y="101" width="1.7" height="15.0" fill="rgb(231,213,40)" rx="2" ry="2" />
<text  x="56.62" y="111.5" ></text>
</g>
<g >
<title>vn_write (125 samples, 0.02%)</title><rect x="453.1" y="229" width="0.3" height="15.0" fill="rgb(231,10,44)" rx="2" ry="2" />
<text  x="456.14" y="239.5" ></text>
</g>
<g >
<title>m_pkthdr_init (127 samples, 0.02%)</title><rect x="451.7" y="165" width="0.2" height="15.0" fill="rgb(208,48,5)" rx="2" ry="2" />
<text  x="454.67" y="175.5" ></text>
</g>
<g >
<title>cpu_switch (88 samples, 0.01%)</title><rect x="474.6" y="229" width="0.1" height="15.0" fill="rgb(223,124,35)" rx="2" ry="2" />
<text  x="477.59" y="239.5" ></text>
</g>
<g >
<title>_thread_lock (107 samples, 0.02%)</title><rect x="453.8" y="245" width="0.2" height="15.0" fill="rgb(233,164,18)" rx="2" ry="2" />
<text  x="456.85" y="255.5" ></text>
</g>
<g >
<title>ether_demux (461 samples, 0.07%)</title><rect x="1189.2" y="197" width="0.8" height="15.0" fill="rgb(218,201,37)" rx="2" ry="2" />
<text  x="1192.18" y="207.5" ></text>
</g>
<g >
<title>intr_event_handle (6,354 samples, 0.96%)</title><rect x="463.6" y="261" width="11.4" height="15.0" fill="rgb(234,116,33)" rx="2" ry="2" />
<text  x="466.63" y="271.5" ></text>
</g>
<g >
<title>pmap_kextract (266 samples, 0.04%)</title><rect x="1189.5" y="37" width="0.5" height="15.0" fill="rgb(249,125,34)" rx="2" ry="2" />
<text  x="1192.52" y="47.5" ></text>
</g>
<g >
<title>mlx5_eq_int (3,044 samples, 0.46%)</title><rect x="15.0" y="213" width="5.5" height="15.0" fill="rgb(209,183,2)" rx="2" ry="2" />
<text  x="18.05" y="223.5" ></text>
</g>
<g >
<title>pfil_run_hooks (220,128 samples, 33.28%)</title><rect x="55.3" y="101" width="392.8" height="15.0" fill="rgb(220,86,8)" rx="2" ry="2" />
<text  x="58.32" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>ip_tryforward (228,185 samples, 34.50%)</title><rect x="40.9" y="117" width="407.2" height="15.0" fill="rgb(219,169,36)" rx="2" ry="2" />
<text  x="43.95" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>netisr_dispatch_src (229,145 samples, 34.65%)</title><rect x="39.2" y="149" width="408.9" height="15.0" fill="rgb(217,214,45)" rx="2" ry="2" />
<text  x="42.24" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>thread_lock_flags_ (646 samples, 0.10%)</title><rect x="452.0" y="245" width="1.1" height="15.0" fill="rgb(226,54,11)" rx="2" ry="2" />
<text  x="454.99" y="255.5" ></text>
</g>
<g >
<title>ether_input (461 samples, 0.07%)</title><rect x="1189.2" y="245" width="0.8" height="15.0" fill="rgb(222,138,28)" rx="2" ry="2" />
<text  x="1192.18" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (129 samples, 0.02%)</title><rect x="27.2" y="213" width="0.2" height="15.0" fill="rgb(245,20,1)" rx="2" ry="2" />
<text  x="30.19" y="223.5" ></text>
</g>
<g >
<title>lock_delay (265 samples, 0.04%)</title><rect x="465.8" y="197" width="0.5" height="15.0" fill="rgb(248,145,34)" rx="2" ry="2" />
<text  x="468.81" y="207.5" ></text>
</g>
<g >
<title>ipf_matchsrcdst (242,448 samples, 36.66%)</title><rect x="754.6" y="37" width="432.6" height="15.0" fill="rgb(218,161,27)" rx="2" ry="2" />
<text  x="757.64" y="47.5" >ipf_matchsrcdst</text>
</g>
<g >
<title>m_freem (203 samples, 0.03%)</title><rect x="1187.2" y="69" width="0.4" height="15.0" fill="rgb(242,30,24)" rx="2" ry="2" />
<text  x="1190.21" y="79.5" ></text>
</g>
<g >
<title>lock_delay (34,221 samples, 5.17%)</title><rect x="672.0" y="37" width="61.1" height="15.0" fill="rgb(228,30,9)" rx="2" ry="2" />
<text  x="675.05" y="47.5" >lock_d..</text>
</g>
<g >
<title>ipf_scanlist (34,221 samples, 5.17%)</title><rect x="672.0" y="69" width="61.1" height="15.0" fill="rgb(219,30,4)" rx="2" ry="2" />
<text  x="675.05" y="79.5" >ipf_sc..</text>
</g>
<g >
<title>ipf_state_lookup (16,247 samples, 2.46%)</title><rect x="416.0" y="37" width="29.0" height="15.0" fill="rgb(216,65,28)" rx="2" ry="2" />
<text  x="419.00" y="47.5" >ip..</text>
</g>
<g >
<title>lapic_handle_intr (57 samples, 0.01%)</title><rect x="1187.6" y="277" width="0.1" height="15.0" fill="rgb(214,62,48)" rx="2" ry="2" />
<text  x="1190.57" y="287.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (9,716 samples, 1.47%)</title><rect x="352.5" y="37" width="17.3" height="15.0" fill="rgb(222,173,54)" rx="2" ry="2" />
<text  x="355.46" y="47.5" ></text>
</g>
<g >
<title>sched_switch (3,014 samples, 0.46%)</title><rect x="22.3" y="229" width="5.4" height="15.0" fill="rgb(246,132,34)" rx="2" ry="2" />
<text  x="25.33" y="239.5" ></text>
</g>
<g >
<title>timercb (753 samples, 0.11%)</title><rect x="1187.8" y="261" width="1.4" height="15.0" fill="rgb(251,112,51)" rx="2" ry="2" />
<text  x="1190.83" y="271.5" ></text>
</g>
<g >
<title>mlx5e_xmit (541 samples, 0.08%)</title><rect x="475.0" y="85" width="1.0" height="15.0" fill="rgb(245,202,36)" rx="2" ry="2" />
<text  x="478.00" y="95.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (219,696 samples, 33.22%)</title><rect x="56.1" y="85" width="392.0" height="15.0" fill="rgb(224,214,43)" rx="2" ry="2" />
<text  x="59.10" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_state_add (122 samples, 0.02%)</title><rect x="1189.2" y="85" width="0.3" height="15.0" fill="rgb(238,208,2)" rx="2" ry="2" />
<text  x="1192.24" y="95.5" ></text>
</g>
<g >
<title>__rw_rlock_int (5,707 samples, 0.86%)</title><rect x="319.1" y="53" width="10.2" height="15.0" fill="rgb(226,34,12)" rx="2" ry="2" />
<text  x="322.14" y="63.5" ></text>
</g>
<g >
<title>ipf_check (424 samples, 0.06%)</title><rect x="1189.2" y="101" width="0.8" height="15.0" fill="rgb(221,148,38)" rx="2" ry="2" />
<text  x="1192.24" y="111.5" ></text>
</g>
<g >
<title>ether_nh_input (461 samples, 0.07%)</title><rect x="1189.2" y="213" width="0.8" height="15.0" fill="rgb(207,134,10)" rx="2" ry="2" />
<text  x="1192.18" y="223.5" ></text>
</g>
<g >
<title>ipf_nat_checkin (220 samples, 0.03%)</title><rect x="374.5" y="53" width="0.4" height="15.0" fill="rgb(251,109,51)" rx="2" ry="2" />
<text  x="377.47" y="63.5" ></text>
</g>
<g >
<title>mlx5e_sq_xmit (1,648 samples, 0.25%)</title><rect x="49.5" y="53" width="3.0" height="15.0" fill="rgb(253,216,29)" rx="2" ry="2" />
<text  x="52.53" y="63.5" ></text>
</g>
<g >
<title>ipf_pr_pullup (313 samples, 0.05%)</title><rect x="373.9" y="37" width="0.6" height="15.0" fill="rgb(215,178,19)" rx="2" ry="2" />
<text  x="376.91" y="47.5" ></text>
</g>
<g >
<title>ether_output (5,772 samples, 0.87%)</title><rect x="42.4" y="101" width="10.3" height="15.0" fill="rgb(225,6,35)" rx="2" ry="2" />
<text  x="45.43" y="111.5" ></text>
</g>
<g >
<title>mlx5e_sq_xmit (541 samples, 0.08%)</title><rect x="475.0" y="69" width="1.0" height="15.0" fill="rgb(236,192,10)" rx="2" ry="2" />
<text  x="478.00" y="79.5" ></text>
</g>
<g >
<title>lock_delay (114 samples, 0.02%)</title><rect x="463.0" y="229" width="0.2" height="15.0" fill="rgb(211,162,10)" rx="2" ry="2" />
<text  x="465.99" y="239.5" ></text>
</g>
<g >
<title>pmap_activate_sw (69 samples, 0.01%)</title><rect x="21.8" y="213" width="0.1" height="15.0" fill="rgb(221,120,13)" rx="2" ry="2" />
<text  x="24.82" y="223.5" ></text>
</g>
<g >
<title>pmap_activate_sw (88 samples, 0.01%)</title><rect x="461.8" y="213" width="0.2" height="15.0" fill="rgb(211,204,45)" rx="2" ry="2" />
<text  x="464.85" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (185 samples, 0.03%)</title><rect x="27.7" y="245" width="0.3" height="15.0" fill="rgb(213,220,30)" rx="2" ry="2" />
<text  x="30.71" y="255.5" ></text>
</g>
<g >
<title>_thread_lock (136 samples, 0.02%)</title><rect x="14.6" y="245" width="0.3" height="15.0" fill="rgb(218,198,15)" rx="2" ry="2" />
<text  x="17.62" y="255.5" ></text>
</g>
<g >
<title>fib4_lookup (890 samples, 0.13%)</title><rect x="53.7" y="85" width="1.6" height="15.0" fill="rgb(225,81,22)" rx="2" ry="2" />
<text  x="56.74" y="95.5" ></text>
</g>
<g >
<title>lock_delay (122 samples, 0.02%)</title><rect x="1189.2" y="37" width="0.3" height="15.0" fill="rgb(221,158,49)" rx="2" ry="2" />
<text  x="1192.24" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (65 samples, 0.01%)</title><rect x="44.8" y="69" width="0.1" height="15.0" fill="rgb(227,52,18)" rx="2" ry="2" />
<text  x="47.78" y="79.5" ></text>
</g>
<g >
<title>memmove_erms (766 samples, 0.12%)</title><rect x="449.2" y="197" width="1.4" height="15.0" fill="rgb(222,122,17)" rx="2" ry="2" />
<text  x="452.22" y="207.5" ></text>
</g>
<g >
<title>ipf_state_insert (122 samples, 0.02%)</title><rect x="1189.2" y="69" width="0.3" height="15.0" fill="rgb(218,84,37)" rx="2" ry="2" />
<text  x="1192.24" y="79.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (398,844 samples, 60.31%)</title><rect x="476.0" y="101" width="711.6" height="15.0" fill="rgb(212,41,25)" rx="2" ry="2" />
<text  x="478.97" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>get_scatter_segment (2,048 samples, 0.31%)</title><rect x="448.2" y="213" width="3.7" height="15.0" fill="rgb(219,68,18)" rx="2" ry="2" />
<text  x="451.24" y="223.5" ></text>
</g>
<g >
<title>cpu_search_lowest (2,786 samples, 0.42%)</title><rect x="466.7" y="197" width="4.9" height="15.0" fill="rgb(249,219,51)" rx="2" ry="2" />
<text  x="469.68" y="207.5" ></text>
</g>
<g >
<title>in_localip (499 samples, 0.08%)</title><rect x="52.7" y="101" width="0.9" height="15.0" fill="rgb(212,109,0)" rx="2" ry="2" />
<text  x="55.73" y="111.5" ></text>
</g>
<g >
<title>t4_intr (237,617 samples, 35.93%)</title><rect x="28.0" y="245" width="424.0" height="15.0" fill="rgb(214,58,6)" rx="2" ry="2" />
<text  x="31.04" y="255.5" >t4_intr</text>
</g>
<g >
<title>netisr_dispatch_src (461 samples, 0.07%)</title><rect x="1189.2" y="229" width="0.8" height="15.0" fill="rgb(229,176,5)" rx="2" ry="2" />
<text  x="1192.18" y="239.5" ></text>
</g>
<g >
<title>arpresolve (517 samples, 0.08%)</title><rect x="44.0" y="85" width="0.9" height="15.0" fill="rgb(244,44,20)" rx="2" ry="2" />
<text  x="46.98" y="95.5" ></text>
</g>
<g >
<title>m_freem (301 samples, 0.05%)</title><rect x="1189.5" y="85" width="0.5" height="15.0" fill="rgb(234,15,37)" rx="2" ry="2" />
<text  x="1192.46" y="95.5" ></text>
</g>
<g >
<title>m_adj (152 samples, 0.02%)</title><rect x="38.9" y="149" width="0.3" height="15.0" fill="rgb(211,34,8)" rx="2" ry="2" />
<text  x="41.92" y="159.5" ></text>
</g>
<g >
<title>binuptime (74 samples, 0.01%)</title><rect x="1187.8" y="245" width="0.2" height="15.0" fill="rgb(236,214,19)" rx="2" ry="2" />
<text  x="1190.85" y="255.5" ></text>
</g>
<g >
<title>ipf_state_check (254,516 samples, 38.48%)</title><rect x="733.1" y="69" width="454.1" height="15.0" fill="rgb(214,23,48)" rx="2" ry="2" />
<text  x="736.11" y="79.5" >ipf_state_check</text>
</g>
<g >
<title>mlx5e_tx_cq_comp (2,269 samples, 0.34%)</title><rect x="16.4" y="181" width="4.1" height="15.0" fill="rgb(244,121,11)" rx="2" ry="2" />
<text  x="19.43" y="191.5" ></text>
</g>
<g >
<title>tdq_notify (314 samples, 0.05%)</title><rect x="472.1" y="213" width="0.6" height="15.0" fill="rgb(210,171,51)" rx="2" ry="2" />
<text  x="475.12" y="223.5" ></text>
</g>
<g >
<title>lock_delay (575 samples, 0.09%)</title><rect x="452.1" y="229" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="455.09" y="239.5" ></text>
</g>
<g >
<title>choosethread (192 samples, 0.03%)</title><rect x="462.4" y="213" width="0.3" height="15.0" fill="rgb(242,140,40)" rx="2" ry="2" />
<text  x="465.38" y="223.5" ></text>
</g>
<g >
<title>vn_io_fault (125 samples, 0.02%)</title><rect x="453.1" y="245" width="0.3" height="15.0" fill="rgb(229,138,6)" rx="2" ry="2" />
<text  x="456.14" y="255.5" ></text>
</g>
<g >
<title>t4_intr (399,385 samples, 60.39%)</title><rect x="475.0" y="261" width="712.6" height="15.0" fill="rgb(251,100,15)" rx="2" ry="2" />
<text  x="478.00" y="271.5" >t4_intr</text>
</g>
<g >
<title>thread_lock_flags_ (141 samples, 0.02%)</title><rect x="463.0" y="245" width="0.2" height="15.0" fill="rgb(226,177,41)" rx="2" ry="2" />
<text  x="465.95" y="255.5" ></text>
</g>
<g >
<title>m_freem (1,004 samples, 0.15%)</title><rect x="18.4" y="165" width="1.8" height="15.0" fill="rgb(213,196,41)" rx="2" ry="2" />
<text  x="21.43" y="175.5" ></text>
</g>
<g >
<title>_rw_wowned (966 samples, 0.15%)</title><rect x="752.9" y="37" width="1.7" height="15.0" fill="rgb(230,25,45)" rx="2" ry="2" />
<text  x="755.92" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (399,385 samples, 60.39%)</title><rect x="475.0" y="133" width="712.6" height="15.0" fill="rgb(228,156,33)" rx="2" ry="2" />
<text  x="478.00" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>m_free (970 samples, 0.15%)</title><rect x="18.5" y="149" width="1.7" height="15.0" fill="rgb(210,19,50)" rx="2" ry="2" />
<text  x="21.49" y="159.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (70 samples, 0.01%)</title><rect x="33.6" y="181" width="0.2" height="15.0" fill="rgb(232,150,16)" rx="2" ry="2" />
<text  x="36.64" y="191.5" ></text>
</g>
<g >
<title>memset_erms (264 samples, 0.04%)</title><rect x="401.7" y="37" width="0.4" height="15.0" fill="rgb(253,37,29)" rx="2" ry="2" />
<text  x="404.66" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (398,844 samples, 60.31%)</title><rect x="476.0" y="117" width="711.6" height="15.0" fill="rgb(241,22,14)" rx="2" ry="2" />
<text  x="478.97" y="127.5" >pfil_run_hooks</text>
</g>
<g >
<title>mlx5e_get_l2_header_size (58 samples, 0.01%)</title><rect x="52.3" y="37" width="0.1" height="15.0" fill="rgb(215,191,41)" rx="2" ry="2" />
<text  x="55.26" y="47.5" ></text>
</g>
<g >
<title>tdq_add (220 samples, 0.03%)</title><rect x="471.7" y="213" width="0.4" height="15.0" fill="rgb(249,93,17)" rx="2" ry="2" />
<text  x="474.73" y="223.5" ></text>
</g>
<g >
<title>mlx5e_sq_tls_xmit (62 samples, 0.01%)</title><rect x="52.4" y="37" width="0.1" height="15.0" fill="rgb(218,151,20)" rx="2" ry="2" />
<text  x="55.36" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (541 samples, 0.08%)</title><rect x="475.0" y="101" width="1.0" height="15.0" fill="rgb(207,153,40)" rx="2" ry="2" />
<text  x="478.00" y="111.5" ></text>
</g>
<g >
<title>lock_delay (122,657 samples, 18.55%)</title><rect x="100.3" y="37" width="218.8" height="15.0" fill="rgb(250,78,36)" rx="2" ry="2" />
<text  x="103.30" y="47.5" >lock_delay</text>
</g>
<g >
<title>_rw_runlock_cookie_int (5,480 samples, 0.83%)</title><rect x="743.1" y="37" width="9.8" height="15.0" fill="rgb(223,172,32)" rx="2" ry="2" />
<text  x="746.14" y="47.5" ></text>
</g>
<g >
<title>ipf_derefrule (16,186 samples, 2.45%)</title><rect x="340.9" y="53" width="28.9" height="15.0" fill="rgb(249,209,11)" rx="2" ry="2" />
<text  x="343.92" y="63.5" >ip..</text>
</g>
<g >
<title>ffs_balloc_ufs2 (75 samples, 0.01%)</title><rect x="453.2" y="181" width="0.1" height="15.0" fill="rgb(227,42,39)" rx="2" ry="2" />
<text  x="456.20" y="191.5" ></text>
</g>
<g >
<title>cpu_switch (660 samples, 0.10%)</title><rect x="20.8" y="229" width="1.1" height="15.0" fill="rgb(216,199,40)" rx="2" ry="2" />
<text  x="23.77" y="239.5" ></text>
</g>
<g >
<title>cpu_search_highest (1,376 samples, 0.21%)</title><rect x="24.7" y="213" width="2.4" height="15.0" fill="rgb(236,100,51)" rx="2" ry="2" />
<text  x="27.66" y="223.5" ></text>
</g>
<g >
<title>pfil_run_hooks (424 samples, 0.06%)</title><rect x="1189.2" y="133" width="0.8" height="15.0" fill="rgb(211,46,46)" rx="2" ry="2" />
<text  x="1192.24" y="143.5" ></text>
</g>
<g >
<title>m_copydata (106 samples, 0.02%)</title><rect x="52.1" y="37" width="0.2" height="15.0" fill="rgb(220,126,43)" rx="2" ry="2" />
<text  x="55.07" y="47.5" ></text>
</g>
<g >
<title>mlx5_msix_handler (3,126 samples, 0.47%)</title><rect x="14.9" y="229" width="5.6" height="15.0" fill="rgb(227,144,53)" rx="2" ry="2" />
<text  x="17.90" y="239.5" ></text>
</g>
<g >
<title>fpu_activate_sw (452 samples, 0.07%)</title><rect x="21.0" y="213" width="0.8" height="15.0" fill="rgb(229,47,27)" rx="2" ry="2" />
<text  x="24.01" y="223.5" ></text>
</g>
<g >
<title>memset_erms (895 samples, 0.14%)</title><rect x="446.5" y="53" width="1.6" height="15.0" fill="rgb(208,177,19)" rx="2" ry="2" />
<text  x="449.47" y="63.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (1,152 samples, 0.17%)</title><rect x="10.4" y="277" width="2.0" height="15.0" fill="rgb(209,41,43)" rx="2" ry="2" />
<text  x="13.39" y="287.5" ></text>
</g>
<g >
<title>sched_pickcpu (2,997 samples, 0.45%)</title><rect x="466.3" y="213" width="5.3" height="15.0" fill="rgb(244,199,34)" rx="2" ry="2" />
<text  x="469.30" y="223.5" ></text>
</g>
<g >
<title>_thread_lock (427 samples, 0.06%)</title><rect x="464.6" y="229" width="0.7" height="15.0" fill="rgb(229,73,15)" rx="2" ry="2" />
<text  x="467.57" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (4,245 samples, 0.64%)</title><rect x="44.9" y="85" width="7.6" height="15.0" fill="rgb(241,209,37)" rx="2" ry="2" />
<text  x="47.90" y="95.5" ></text>
</g>
<g >
<title>handleevents (668 samples, 0.10%)</title><rect x="1188.0" y="245" width="1.2" height="15.0" fill="rgb(214,64,25)" rx="2" ry="2" />
<text  x="1190.98" y="255.5" ></text>
</g>
<g >
<title>m_freem (72 samples, 0.01%)</title><rect x="446.3" y="53" width="0.2" height="15.0" fill="rgb(222,164,34)" rx="2" ry="2" />
<text  x="449.34" y="63.5" ></text>
</g>
<g >
<title>ipf_check (398,844 samples, 60.31%)</title><rect x="476.0" y="85" width="711.6" height="15.0" fill="rgb(236,97,18)" rx="2" ry="2" />
<text  x="478.97" y="95.5" >ipf_check</text>
</g>
<g >
<title>ipf_auth_check (274 samples, 0.04%)</title><rect x="340.4" y="53" width="0.5" height="15.0" fill="rgb(212,146,23)" rx="2" ry="2" />
<text  x="343.43" y="63.5" ></text>
</g>
<g >
<title>uma_zfree_arg (301 samples, 0.05%)</title><rect x="1189.5" y="53" width="0.5" height="15.0" fill="rgb(229,158,48)" rx="2" ry="2" />
<text  x="1192.46" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (133,523 samples, 20.19%)</title><rect x="80.9" y="53" width="238.2" height="15.0" fill="rgb(243,52,6)" rx="2" ry="2" />
<text  x="83.91" y="63.5" >__mtx_lock_sleep</text>
</g>
<g >
<title>in_lltable_lookup (255 samples, 0.04%)</title><rect x="44.3" y="69" width="0.5" height="15.0" fill="rgb(228,194,17)" rx="2" ry="2" />
<text  x="47.33" y="79.5" ></text>
</g>
<g >
<title>tdq_move (143 samples, 0.02%)</title><rect x="27.4" y="213" width="0.3" height="15.0" fill="rgb(221,85,15)" rx="2" ry="2" />
<text  x="30.42" y="223.5" ></text>
</g>
</g>
</svg>
