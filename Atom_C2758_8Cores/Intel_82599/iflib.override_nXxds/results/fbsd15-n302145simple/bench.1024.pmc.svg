<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>if_getnumadomain (44 samples, 0.86%)</title><rect x="501.0" y="197" width="10.1" height="15.0" fill="rgb(213,144,7)" rx="2" ry="2" />
<text  x="504.00" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (37 samples, 0.72%)</title><rect x="575.0" y="197" width="8.6" height="15.0" fill="rgb(223,125,21)" rx="2" ry="2" />
<text  x="578.05" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="684.7" y="117" width="0.3" height="15.0" fill="rgb(233,184,21)" rx="2" ry="2" />
<text  x="687.75" y="127.5" ></text>
</g>
<g >
<title>bsearch4_lookup (92 samples, 1.79%)</title><rect x="456.2" y="69" width="21.1" height="15.0" fill="rgb(234,81,49)" rx="2" ry="2" />
<text  x="459.15" y="79.5" ></text>
</g>
<g >
<title>if_getsoftc (12 samples, 0.23%)</title><rect x="399.6" y="37" width="2.7" height="15.0" fill="rgb(253,196,53)" rx="2" ry="2" />
<text  x="402.58" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (60 samples, 1.17%)</title><rect x="805.3" y="165" width="13.8" height="15.0" fill="rgb(216,109,40)" rx="2" ry="2" />
<text  x="808.25" y="175.5" ></text>
</g>
<g >
<title>iflib_if_transmit (5 samples, 0.10%)</title><rect x="26.6" y="101" width="1.1" height="15.0" fill="rgb(206,43,50)" rx="2" ry="2" />
<text  x="29.56" y="111.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.04%)</title><rect x="725.7" y="181" width="0.4" height="15.0" fill="rgb(238,173,29)" rx="2" ry="2" />
<text  x="728.68" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="1011.1" y="133" width="0.2" height="15.0" fill="rgb(237,122,49)" rx="2" ry="2" />
<text  x="1014.08" y="143.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="499.6" y="197" width="0.2" height="15.0" fill="rgb(232,111,2)" rx="2" ry="2" />
<text  x="502.62" y="207.5" ></text>
</g>
<g >
<title>ether_input (144 samples, 2.81%)</title><rect x="1084.2" y="213" width="33.1" height="15.0" fill="rgb(250,43,15)" rx="2" ry="2" />
<text  x="1087.21" y="223.5" >et..</text>
</g>
<g >
<title>ip_input (144 samples, 2.81%)</title><rect x="1084.2" y="133" width="33.1" height="15.0" fill="rgb(216,210,33)" rx="2" ry="2" />
<text  x="1087.21" y="143.5" >ip..</text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.02%)</title><rect x="26.3" y="277" width="0.3" height="15.0" fill="rgb(214,202,48)" rx="2" ry="2" />
<text  x="29.33" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (5 samples, 0.10%)</title><rect x="26.6" y="213" width="1.1" height="15.0" fill="rgb(221,27,12)" rx="2" ry="2" />
<text  x="29.56" y="223.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1156.4" y="213" width="0.3" height="15.0" fill="rgb(212,119,38)" rx="2" ry="2" />
<text  x="1159.42" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (144 samples, 2.81%)</title><rect x="1084.2" y="261" width="33.1" height="15.0" fill="rgb(237,7,45)" rx="2" ry="2" />
<text  x="1087.21" y="271.5" >gt..</text>
</g>
<g >
<title>hardclock (16 samples, 0.31%)</title><rect x="1185.9" y="229" width="3.6" height="15.0" fill="rgb(224,95,17)" rx="2" ry="2" />
<text  x="1188.86" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.10%)</title><rect x="499.8" y="197" width="1.2" height="15.0" fill="rgb(208,4,7)" rx="2" ry="2" />
<text  x="502.85" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (144 samples, 2.81%)</title><rect x="1084.2" y="69" width="33.1" height="15.0" fill="rgb(237,46,3)" rx="2" ry="2" />
<text  x="1087.21" y="79.5" >if..</text>
</g>
<g >
<title>msi_vector (4 samples, 0.08%)</title><rect x="1181.0" y="261" width="1.0" height="15.0" fill="rgb(218,199,51)" rx="2" ry="2" />
<text  x="1184.03" y="271.5" ></text>
</g>
<g >
<title>netmap_rx_irq (5 samples, 0.10%)</title><rect x="685.2" y="213" width="1.2" height="15.0" fill="rgb(243,117,34)" rx="2" ry="2" />
<text  x="688.21" y="223.5" ></text>
</g>
<g >
<title>binuptime (2 samples, 0.04%)</title><rect x="1185.4" y="245" width="0.5" height="15.0" fill="rgb(246,115,31)" rx="2" ry="2" />
<text  x="1188.40" y="255.5" ></text>
</g>
<g >
<title>pmc_process_samples (11 samples, 0.21%)</title><rect x="1187.0" y="197" width="2.5" height="15.0" fill="rgb(210,211,41)" rx="2" ry="2" />
<text  x="1190.01" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (322 samples, 6.28%)</title><rect x="358.9" y="53" width="74.0" height="15.0" fill="rgb(208,132,6)" rx="2" ry="2" />
<text  x="361.87" y="63.5" >iflib_if..</text>
</g>
<g >
<title>ether_output (761 samples, 14.83%)</title><rect x="261.6" y="85" width="175.0" height="15.0" fill="rgb(222,105,22)" rx="2" ry="2" />
<text  x="264.59" y="95.5" >ether_output</text>
</g>
<g >
<title>lapic_eoi (4 samples, 0.08%)</title><rect x="1179.9" y="245" width="0.9" height="15.0" fill="rgb(221,94,46)" rx="2" ry="2" />
<text  x="1182.88" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.08%)</title><rect x="1083.3" y="165" width="0.9" height="15.0" fill="rgb(206,48,38)" rx="2" ry="2" />
<text  x="1086.29" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="684.7" y="165" width="0.3" height="15.0" fill="rgb(232,127,18)" rx="2" ry="2" />
<text  x="687.75" y="175.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="1149.5" y="213" width="0.5" height="15.0" fill="rgb(233,95,45)" rx="2" ry="2" />
<text  x="1152.52" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (4 samples, 0.08%)</title><rect x="1083.3" y="197" width="0.9" height="15.0" fill="rgb(242,65,9)" rx="2" ry="2" />
<text  x="1086.29" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.08%)</title><rect x="1083.3" y="213" width="0.9" height="15.0" fill="rgb(223,214,22)" rx="2" ry="2" />
<text  x="1086.29" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="1154.4" y="181" width="0.9" height="15.0" fill="rgb(253,148,12)" rx="2" ry="2" />
<text  x="1157.35" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (1 samples, 0.02%)</title><rect x="45.4" y="197" width="0.2" height="15.0" fill="rgb(230,222,24)" rx="2" ry="2" />
<text  x="48.42" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (58 samples, 1.13%)</title><rect x="383.2" y="37" width="13.4" height="15.0" fill="rgb(244,202,43)" rx="2" ry="2" />
<text  x="386.25" y="47.5" ></text>
</g>
<g >
<title>lapic_handle_timer (1 samples, 0.02%)</title><rect x="607.7" y="197" width="0.2" height="15.0" fill="rgb(223,197,5)" rx="2" ry="2" />
<text  x="610.70" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (24 samples, 0.47%)</title><rect x="1157.6" y="229" width="5.5" height="15.0" fill="rgb(205,32,11)" rx="2" ry="2" />
<text  x="1160.57" y="239.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (135 samples, 2.63%)</title><rect x="1039.6" y="181" width="31.0" height="15.0" fill="rgb(251,168,23)" rx="2" ry="2" />
<text  x="1042.60" y="191.5" >if..</text>
</g>
<g >
<title>netisr_dispatch_src (144 samples, 2.81%)</title><rect x="1084.2" y="149" width="33.1" height="15.0" fill="rgb(237,85,14)" rx="2" ry="2" />
<text  x="1087.21" y="159.5" >ne..</text>
</g>
<g >
<title>fork_exit (4,580 samples, 89.26%)</title><rect x="30.0" y="277" width="1053.3" height="15.0" fill="rgb(227,145,54)" rx="2" ry="2" />
<text  x="33.01" y="287.5" >fork_exit</text>
</g>
<g >
<title>timercb (22 samples, 0.43%)</title><rect x="1184.9" y="261" width="5.1" height="15.0" fill="rgb(212,60,34)" rx="2" ry="2" />
<text  x="1187.94" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (2 samples, 0.04%)</title><rect x="607.2" y="197" width="0.5" height="15.0" fill="rgb(217,97,36)" rx="2" ry="2" />
<text  x="610.24" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.08%)</title><rect x="1156.7" y="213" width="0.9" height="15.0" fill="rgb(221,89,42)" rx="2" ry="2" />
<text  x="1159.65" y="223.5" ></text>
</g>
<g >
<title>ip_findroute (209 samples, 4.07%)</title><rect x="447.4" y="85" width="48.1" height="15.0" fill="rgb(227,57,14)" rx="2" ry="2" />
<text  x="450.41" y="95.5" >ip_f..</text>
</g>
<g >
<title>m_adj (27 samples, 0.53%)</title><rect x="149.4" y="133" width="6.2" height="15.0" fill="rgb(207,48,32)" rx="2" ry="2" />
<text  x="152.36" y="143.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.14%)</title><rect x="724.1" y="181" width="1.6" height="15.0" fill="rgb(248,108,3)" rx="2" ry="2" />
<text  x="727.07" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (397 samples, 7.74%)</title><rect x="341.6" y="69" width="91.3" height="15.0" fill="rgb(243,144,4)" rx="2" ry="2" />
<text  x="344.62" y="79.5" >ether_outp..</text>
</g>
<g >
<title>netisr_dispatch_src (1,471 samples, 28.67%)</title><rect x="157.2" y="133" width="338.3" height="15.0" fill="rgb(229,47,32)" rx="2" ry="2" />
<text  x="160.18" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (575 samples, 11.21%)</title><rect x="726.1" y="181" width="132.3" height="15.0" fill="rgb(211,96,23)" rx="2" ry="2" />
<text  x="729.14" y="191.5" >iflib_completed_..</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (3 samples, 0.06%)</title><rect x="1148.8" y="213" width="0.7" height="15.0" fill="rgb(231,165,54)" rx="2" ry="2" />
<text  x="1151.83" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="631.2" y="197" width="0.2" height="15.0" fill="rgb(213,99,17)" rx="2" ry="2" />
<text  x="634.16" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (144 samples, 2.81%)</title><rect x="1084.2" y="85" width="33.1" height="15.0" fill="rgb(208,90,23)" rx="2" ry="2" />
<text  x="1087.21" y="95.5" >et..</text>
</g>
<g >
<title>in_lltable_lookup (49 samples, 0.95%)</title><rect x="327.6" y="53" width="11.3" height="15.0" fill="rgb(213,215,21)" rx="2" ry="2" />
<text  x="330.60" y="63.5" ></text>
</g>
<g >
<title>if_getvnet (3 samples, 0.06%)</title><rect x="511.1" y="197" width="0.7" height="15.0" fill="rgb(233,156,49)" rx="2" ry="2" />
<text  x="514.11" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (11 samples, 0.21%)</title><rect x="1064.0" y="165" width="2.5" height="15.0" fill="rgb(233,138,11)" rx="2" ry="2" />
<text  x="1066.97" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (3 samples, 0.06%)</title><rect x="547.5" y="181" width="0.6" height="15.0" fill="rgb(237,152,29)" rx="2" ry="2" />
<text  x="550.45" y="191.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (188 samples, 3.66%)</title><rect x="1136.6" y="245" width="43.3" height="15.0" fill="rgb(232,127,16)" rx="2" ry="2" />
<text  x="1139.65" y="255.5" >ifli..</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="1179.7" y="229" width="0.2" height="15.0" fill="rgb(254,48,19)" rx="2" ry="2" />
<text  x="1182.65" y="239.5" ></text>
</g>
<g >
<title>m_adj (1 samples, 0.02%)</title><rect x="495.5" y="149" width="0.2" height="15.0" fill="rgb(246,138,27)" rx="2" ry="2" />
<text  x="498.48" y="159.5" ></text>
</g>
<g >
<title>iflib_encap (788 samples, 15.36%)</title><rect x="858.4" y="181" width="181.2" height="15.0" fill="rgb(230,30,35)" rx="2" ry="2" />
<text  x="861.38" y="191.5" >iflib_encap</text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.10%)</title><rect x="398.4" y="37" width="1.2" height="15.0" fill="rgb(216,69,30)" rx="2" ry="2" />
<text  x="401.43" y="47.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (8 samples, 0.16%)</title><rect x="856.5" y="117" width="1.9" height="15.0" fill="rgb(224,226,9)" rx="2" ry="2" />
<text  x="859.54" y="127.5" ></text>
</g>
<g >
<title>ip_tryforward (144 samples, 2.81%)</title><rect x="1084.2" y="117" width="33.1" height="15.0" fill="rgb(209,225,1)" rx="2" ry="2" />
<text  x="1087.21" y="127.5" >ip..</text>
</g>
<g >
<title>iflib_if_transmit (4 samples, 0.08%)</title><rect x="1083.3" y="85" width="0.9" height="15.0" fill="rgb(232,89,18)" rx="2" ry="2" />
<text  x="1086.29" y="95.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (2 samples, 0.04%)</title><rect x="1188.2" y="181" width="0.4" height="15.0" fill="rgb(238,109,42)" rx="2" ry="2" />
<text  x="1191.16" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.02%)</title><rect x="684.7" y="149" width="0.3" height="15.0" fill="rgb(205,2,2)" rx="2" ry="2" />
<text  x="687.75" y="159.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (9 samples, 0.18%)</title><rect x="986.9" y="149" width="2.1" height="15.0" fill="rgb(217,158,50)" rx="2" ry="2" />
<text  x="989.93" y="159.5" ></text>
</g>
<g >
<title>ip_tryforward (5 samples, 0.10%)</title><rect x="26.6" y="149" width="1.1" height="15.0" fill="rgb(242,31,42)" rx="2" ry="2" />
<text  x="29.56" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.10%)</title><rect x="26.6" y="229" width="1.1" height="15.0" fill="rgb(247,226,24)" rx="2" ry="2" />
<text  x="29.56" y="239.5" ></text>
</g>
<g >
<title>memcmp (15 samples, 0.29%)</title><rect x="495.7" y="149" width="3.5" height="15.0" fill="rgb(218,75,30)" rx="2" ry="2" />
<text  x="498.71" y="159.5" ></text>
</g>
<g >
<title>ether_output_frame (4 samples, 0.08%)</title><rect x="1083.3" y="101" width="0.9" height="15.0" fill="rgb(212,34,37)" rx="2" ry="2" />
<text  x="1086.29" y="111.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (97 samples, 1.89%)</title><rect x="552.7" y="181" width="22.3" height="15.0" fill="rgb(250,42,6)" rx="2" ry="2" />
<text  x="555.74" y="191.5" >u..</text>
</g>
<g >
<title>Xapic_isr1_pti (44 samples, 0.86%)</title><rect x="16.2" y="277" width="10.1" height="15.0" fill="rgb(205,22,3)" rx="2" ry="2" />
<text  x="19.21" y="287.5" ></text>
</g>
<g >
<title>if_inc_counter (6 samples, 0.12%)</title><rect x="511.8" y="197" width="1.4" height="15.0" fill="rgb(218,7,19)" rx="2" ry="2" />
<text  x="514.80" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (20 samples, 0.39%)</title><rect x="44.5" y="213" width="4.6" height="15.0" fill="rgb(237,220,11)" rx="2" ry="2" />
<text  x="47.50" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (120 samples, 2.34%)</title><rect x="1012.0" y="165" width="27.6" height="15.0" fill="rgb(213,112,41)" rx="2" ry="2" />
<text  x="1015.00" y="175.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.10%)</title><rect x="26.6" y="181" width="1.1" height="15.0" fill="rgb(254,135,15)" rx="2" ry="2" />
<text  x="29.56" y="191.5" ></text>
</g>
<g >
<title>ip_input (5 samples, 0.10%)</title><rect x="26.6" y="165" width="1.1" height="15.0" fill="rgb(228,180,39)" rx="2" ry="2" />
<text  x="29.56" y="175.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (161 samples, 3.14%)</title><rect x="975.0" y="165" width="37.0" height="15.0" fill="rgb(227,39,52)" rx="2" ry="2" />
<text  x="977.97" y="175.5" >bus..</text>
</g>
<g >
<title>wakeup_any (5 samples, 0.10%)</title><rect x="26.6" y="69" width="1.1" height="15.0" fill="rgb(223,100,15)" rx="2" ry="2" />
<text  x="29.56" y="79.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="546.5" y="117" width="0.3" height="15.0" fill="rgb(224,80,12)" rx="2" ry="2" />
<text  x="549.53" y="127.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (4 samples, 0.08%)</title><rect x="1071.1" y="213" width="0.9" height="15.0" fill="rgb(215,92,21)" rx="2" ry="2" />
<text  x="1074.10" y="223.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (10 samples, 0.19%)</title><rect x="38.7" y="229" width="2.3" height="15.0" fill="rgb(214,79,34)" rx="2" ry="2" />
<text  x="41.75" y="239.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (22 samples, 0.43%)</title><rect x="1174.6" y="229" width="5.1" height="15.0" fill="rgb(217,145,43)" rx="2" ry="2" />
<text  x="1177.59" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (5 samples, 0.10%)</title><rect x="1154.1" y="213" width="1.2" height="15.0" fill="rgb(234,176,30)" rx="2" ry="2" />
<text  x="1157.12" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (37 samples, 0.72%)</title><rect x="1146.8" y="229" width="8.5" height="15.0" fill="rgb(242,7,3)" rx="2" ry="2" />
<text  x="1149.76" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (19 samples, 0.37%)</title><rect x="548.1" y="181" width="4.4" height="15.0" fill="rgb(249,117,14)" rx="2" ry="2" />
<text  x="551.14" y="191.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (8 samples, 0.16%)</title><rect x="396.6" y="37" width="1.8" height="15.0" fill="rgb(231,6,28)" rx="2" ry="2" />
<text  x="399.59" y="47.5" ></text>
</g>
<g >
<title>ether_output (144 samples, 2.81%)</title><rect x="1084.2" y="101" width="33.1" height="15.0" fill="rgb(229,157,23)" rx="2" ry="2" />
<text  x="1087.21" y="111.5" >et..</text>
</g>
<g >
<title>uma_zalloc_arg (1 samples, 0.02%)</title><rect x="685.0" y="197" width="0.2" height="15.0" fill="rgb(242,107,2)" rx="2" ry="2" />
<text  x="687.98" y="207.5" ></text>
</g>
<g >
<title>sleepq_broadcast (4 samples, 0.08%)</title><rect x="1080.5" y="213" width="1.0" height="15.0" fill="rgb(228,84,15)" rx="2" ry="2" />
<text  x="1083.53" y="223.5" ></text>
</g>
<g >
<title>uma_zfree_arg (104 samples, 2.03%)</title><rect x="834.5" y="133" width="23.9" height="15.0" fill="rgb(247,61,24)" rx="2" ry="2" />
<text  x="837.46" y="143.5" >u..</text>
</g>
<g >
<title>if_input (2 samples, 0.04%)</title><rect x="513.2" y="197" width="0.4" height="15.0" fill="rgb(225,90,53)" rx="2" ry="2" />
<text  x="516.18" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (28 samples, 0.55%)</title><rect x="607.9" y="197" width="6.5" height="15.0" fill="rgb(233,121,16)" rx="2" ry="2" />
<text  x="610.93" y="207.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (229 samples, 4.46%)</title><rect x="631.4" y="197" width="52.7" height="15.0" fill="rgb(231,176,39)" rx="2" ry="2" />
<text  x="634.39" y="207.5" >rxd_f..</text>
</g>
<g >
<title>ether_nh_input (144 samples, 2.81%)</title><rect x="1084.2" y="181" width="33.1" height="15.0" fill="rgb(210,97,53)" rx="2" ry="2" />
<text  x="1087.21" y="191.5" >et..</text>
</g>
<g >
<title>statclock (1 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(254,40,33)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (9 samples, 0.18%)</title><rect x="691.9" y="197" width="2.0" height="15.0" fill="rgb(228,45,2)" rx="2" ry="2" />
<text  x="694.87" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,800 samples, 54.57%)</title><rect x="42.4" y="229" width="644.0" height="15.0" fill="rgb(216,227,32)" rx="2" ry="2" />
<text  x="45.43" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (6 samples, 0.12%)</title><rect x="1072.0" y="213" width="1.4" height="15.0" fill="rgb(225,20,22)" rx="2" ry="2" />
<text  x="1075.02" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.06%)</title><rect x="1011.3" y="149" width="0.7" height="15.0" fill="rgb(212,148,10)" rx="2" ry="2" />
<text  x="1014.31" y="159.5" ></text>
</g>
<g >
<title>sleepq_lock (8 samples, 0.16%)</title><rect x="1081.5" y="213" width="1.8" height="15.0" fill="rgb(249,125,45)" rx="2" ry="2" />
<text  x="1084.45" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (103 samples, 2.01%)</title><rect x="583.6" y="197" width="23.6" height="15.0" fill="rgb(218,9,50)" rx="2" ry="2" />
<text  x="586.56" y="207.5" >i..</text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="45.9" y="197" width="0.7" height="15.0" fill="rgb(232,71,42)" rx="2" ry="2" />
<text  x="48.88" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (7 samples, 0.14%)</title><rect x="46.6" y="197" width="1.6" height="15.0" fill="rgb(250,224,38)" rx="2" ry="2" />
<text  x="49.57" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.08%)</title><rect x="1083.3" y="37" width="0.9" height="15.0" fill="rgb(215,164,12)" rx="2" ry="2" />
<text  x="1086.29" y="47.5" ></text>
</g>
<g >
<title>m_freem (171 samples, 3.33%)</title><rect x="819.1" y="165" width="39.3" height="15.0" fill="rgb(250,171,52)" rx="2" ry="2" />
<text  x="822.05" y="175.5" >m_f..</text>
</g>
<g >
<title>memcpy_erms (73 samples, 1.42%)</title><rect x="614.4" y="197" width="16.8" height="15.0" fill="rgb(249,209,22)" rx="2" ry="2" />
<text  x="617.37" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1176.9" y="213" width="0.2" height="15.0" fill="rgb(220,19,3)" rx="2" ry="2" />
<text  x="1179.89" y="223.5" ></text>
</g>
<g >
<title>ether_output (4 samples, 0.08%)</title><rect x="1083.3" y="117" width="0.9" height="15.0" fill="rgb(213,41,38)" rx="2" ry="2" />
<text  x="1086.29" y="127.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="1072.7" y="197" width="0.7" height="15.0" fill="rgb(207,143,51)" rx="2" ry="2" />
<text  x="1075.71" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (1 samples, 0.02%)</title><rect x="546.5" y="133" width="0.3" height="15.0" fill="rgb(246,224,49)" rx="2" ry="2" />
<text  x="549.53" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (5 samples, 0.10%)</title><rect x="26.6" y="117" width="1.1" height="15.0" fill="rgb(249,29,30)" rx="2" ry="2" />
<text  x="29.56" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="499.2" y="149" width="0.4" height="15.0" fill="rgb(223,184,50)" rx="2" ry="2" />
<text  x="502.16" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch (7 samples, 0.14%)</title><rect x="155.6" y="133" width="1.6" height="15.0" fill="rgb(235,37,8)" rx="2" ry="2" />
<text  x="158.57" y="143.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,665 samples, 32.45%)</title><rect x="688.2" y="213" width="382.9" height="15.0" fill="rgb(253,228,25)" rx="2" ry="2" />
<text  x="691.20" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>cache_alloc_retry (15 samples, 0.29%)</title><rect x="544.0" y="181" width="3.5" height="15.0" fill="rgb(209,47,23)" rx="2" ry="2" />
<text  x="547.00" y="191.5" ></text>
</g>
<g >
<title>ether_input (1,807 samples, 35.22%)</title><rect x="84.1" y="197" width="415.5" height="15.0" fill="rgb(230,226,32)" rx="2" ry="2" />
<text  x="87.05" y="207.5" >ether_input</text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.02%)</title><rect x="1189.5" y="229" width="0.3" height="15.0" fill="rgb(250,43,24)" rx="2" ry="2" />
<text  x="1192.54" y="239.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.10%)</title><rect x="1154.1" y="197" width="1.2" height="15.0" fill="rgb(218,97,40)" rx="2" ry="2" />
<text  x="1157.12" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (8 samples, 0.16%)</title><rect x="493.6" y="53" width="1.9" height="15.0" fill="rgb(215,63,38)" rx="2" ry="2" />
<text  x="496.64" y="63.5" ></text>
</g>
<g >
<title>tsc_get_config (3 samples, 0.06%)</title><rect x="1188.9" y="181" width="0.6" height="15.0" fill="rgb(207,122,33)" rx="2" ry="2" />
<text  x="1191.85" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.04%)</title><rect x="1070.6" y="181" width="0.5" height="15.0" fill="rgb(243,158,23)" rx="2" ry="2" />
<text  x="1073.64" y="191.5" ></text>
</g>
<g >
<title>ether_demux (144 samples, 2.81%)</title><rect x="1084.2" y="165" width="33.1" height="15.0" fill="rgb(207,7,25)" rx="2" ry="2" />
<text  x="1087.21" y="175.5" >et..</text>
</g>
<g >
<title>ip_tryforward (4 samples, 0.08%)</title><rect x="1083.3" y="133" width="0.9" height="15.0" fill="rgb(248,198,10)" rx="2" ry="2" />
<text  x="1086.29" y="143.5" ></text>
</g>
<g >
<title>memcpy_erms (16 samples, 0.31%)</title><rect x="432.9" y="69" width="3.7" height="15.0" fill="rgb(246,42,16)" rx="2" ry="2" />
<text  x="435.92" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4 samples, 0.08%)</title><rect x="1083.3" y="277" width="0.9" height="15.0" fill="rgb(240,17,46)" rx="2" ry="2" />
<text  x="1086.29" y="287.5" ></text>
</g>
<g >
<title>intr_lookup_source (8 samples, 0.16%)</title><rect x="1183.1" y="261" width="1.8" height="15.0" fill="rgb(241,3,12)" rx="2" ry="2" />
<text  x="1186.10" y="271.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.10%)</title><rect x="1075.0" y="229" width="1.2" height="15.0" fill="rgb(231,150,25)" rx="2" ry="2" />
<text  x="1078.01" y="239.5" ></text>
</g>
<g >
<title>ip_input (4 samples, 0.08%)</title><rect x="1083.3" y="149" width="0.9" height="15.0" fill="rgb(252,191,5)" rx="2" ry="2" />
<text  x="1086.29" y="159.5" ></text>
</g>
<g >
<title>ether_input (4 samples, 0.08%)</title><rect x="1083.3" y="229" width="0.9" height="15.0" fill="rgb(222,87,46)" rx="2" ry="2" />
<text  x="1086.29" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (50 samples, 0.97%)</title><rect x="1163.1" y="229" width="11.5" height="15.0" fill="rgb(248,84,41)" rx="2" ry="2" />
<text  x="1166.09" y="239.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (6 samples, 0.12%)</title><rect x="41.0" y="229" width="1.4" height="15.0" fill="rgb(213,6,49)" rx="2" ry="2" />
<text  x="44.05" y="239.5" ></text>
</g>
<g >
<title>cache_alloc (5 samples, 0.10%)</title><rect x="545.6" y="165" width="1.2" height="15.0" fill="rgb(205,126,32)" rx="2" ry="2" />
<text  x="548.61" y="175.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(214,165,41)" rx="2" ry="2" />
<text  x="1192.77" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (10 samples, 0.19%)</title><rect x="1155.3" y="229" width="2.3" height="15.0" fill="rgb(205,34,31)" rx="2" ry="2" />
<text  x="1158.27" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (70 samples, 1.36%)</title><rect x="1101.2" y="37" width="16.1" height="15.0" fill="rgb(215,225,2)" rx="2" ry="2" />
<text  x="1104.23" y="47.5" ></text>
</g>
<g >
<title>zone_import (2 samples, 0.04%)</title><rect x="546.3" y="149" width="0.5" height="15.0" fill="rgb(218,83,18)" rx="2" ry="2" />
<text  x="549.30" y="159.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,640 samples, 31.96%)</title><rect x="693.9" y="197" width="377.2" height="15.0" fill="rgb(244,195,37)" rx="2" ry="2" />
<text  x="696.94" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>iflib_rxeof (4 samples, 0.08%)</title><rect x="1083.3" y="245" width="0.9" height="15.0" fill="rgb(210,155,21)" rx="2" ry="2" />
<text  x="1086.29" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (17 samples, 0.33%)</title><rect x="1076.2" y="229" width="3.9" height="15.0" fill="rgb(234,12,46)" rx="2" ry="2" />
<text  x="1079.16" y="239.5" ></text>
</g>
<g >
<title>intr_execute_handlers (281 samples, 5.48%)</title><rect x="1117.3" y="277" width="64.7" height="15.0" fill="rgb(252,156,21)" rx="2" ry="2" />
<text  x="1120.33" y="287.5" >intr_ex..</text>
</g>
<g >
<title>Xapic_isr1 (27 samples, 0.53%)</title><rect x="10.0" y="277" width="6.2" height="15.0" fill="rgb(230,7,22)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,579 samples, 89.24%)</title><rect x="30.2" y="245" width="1053.1" height="15.0" fill="rgb(239,56,24)" rx="2" ry="2" />
<text  x="33.24" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_rxeof (2,766 samples, 53.91%)</title><rect x="49.1" y="213" width="636.1" height="15.0" fill="rgb(220,93,28)" rx="2" ry="2" />
<text  x="52.10" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ether_nh_input (1,687 samples, 32.88%)</title><rect x="111.6" y="165" width="388.0" height="15.0" fill="rgb(208,61,3)" rx="2" ry="2" />
<text  x="114.65" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>fib4_lookup (79 samples, 1.54%)</title><rect x="477.3" y="69" width="18.2" height="15.0" fill="rgb(212,52,27)" rx="2" ry="2" />
<text  x="480.31" y="79.5" ></text>
</g>
<g >
<title>m_free (156 samples, 3.04%)</title><rect x="822.5" y="149" width="35.9" height="15.0" fill="rgb(211,80,0)" rx="2" ry="2" />
<text  x="825.50" y="159.5" >m_f..</text>
</g>
<g >
<title>ifmp_ring_enqueue (133 samples, 2.59%)</title><rect x="402.3" y="37" width="30.6" height="15.0" fill="rgb(228,38,51)" rx="2" ry="2" />
<text  x="405.34" y="47.5" >if..</text>
</g>
<g >
<title>ether_demux (4 samples, 0.08%)</title><rect x="1083.3" y="181" width="0.9" height="15.0" fill="rgb(236,211,44)" rx="2" ry="2" />
<text  x="1086.29" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.10%)</title><rect x="833.3" y="133" width="1.2" height="15.0" fill="rgb(209,52,8)" rx="2" ry="2" />
<text  x="836.31" y="143.5" ></text>
</g>
<g >
<title>memmove_erms (12 samples, 0.23%)</title><rect x="338.9" y="53" width="2.7" height="15.0" fill="rgb(212,214,22)" rx="2" ry="2" />
<text  x="341.86" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (4 samples, 0.08%)</title><rect x="1083.3" y="261" width="0.9" height="15.0" fill="rgb(219,158,23)" rx="2" ry="2" />
<text  x="1086.29" y="271.5" ></text>
</g>
<g >
<title>ether_demux (1,566 samples, 30.52%)</title><rect x="135.3" y="149" width="360.2" height="15.0" fill="rgb(213,120,0)" rx="2" ry="2" />
<text  x="138.34" y="159.5" >ether_demux</text>
</g>
<g >
<title>lapic_handle_intr (13 samples, 0.25%)</title><rect x="1182.0" y="277" width="2.9" height="15.0" fill="rgb(223,90,44)" rx="2" ry="2" />
<text  x="1184.95" y="287.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (3 samples, 0.06%)</title><rect x="546.8" y="165" width="0.7" height="15.0" fill="rgb(242,107,46)" rx="2" ry="2" />
<text  x="549.76" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="1082.8" y="197" width="0.5" height="15.0" fill="rgb(229,111,19)" rx="2" ry="2" />
<text  x="1085.83" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (2 samples, 0.04%)</title><rect x="38.3" y="229" width="0.4" height="15.0" fill="rgb(240,96,44)" rx="2" ry="2" />
<text  x="41.29" y="239.5" ></text>
</g>
<g >
<title>runq_is_queue_empty (1 samples, 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(214,67,6)" rx="2" ry="2" />
<text  x="1192.77" y="207.5" ></text>
</g>
<g >
<title>sleepq_release (7 samples, 0.14%)</title><rect x="1073.4" y="229" width="1.6" height="15.0" fill="rgb(224,9,34)" rx="2" ry="2" />
<text  x="1076.40" y="239.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (12 samples, 0.23%)</title><rect x="572.3" y="165" width="2.7" height="15.0" fill="rgb(239,189,26)" rx="2" ry="2" />
<text  x="575.29" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,752 samples, 34.15%)</title><rect x="96.7" y="181" width="402.9" height="15.0" fill="rgb(238,211,46)" rx="2" ry="2" />
<text  x="99.70" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="45.6" y="197" width="0.3" height="15.0" fill="rgb(239,15,36)" rx="2" ry="2" />
<text  x="48.65" y="207.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1188.6" y="181" width="0.3" height="15.0" fill="rgb(225,23,5)" rx="2" ry="2" />
<text  x="1191.62" y="191.5" ></text>
</g>
<g >
<title>all (5,131 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(238,15,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>spinlock_exit (5 samples, 0.10%)</title><rect x="1153.0" y="213" width="1.1" height="15.0" fill="rgb(208,143,5)" rx="2" ry="2" />
<text  x="1155.97" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (5 samples, 0.10%)</title><rect x="26.6" y="85" width="1.1" height="15.0" fill="rgb(231,109,27)" rx="2" ry="2" />
<text  x="29.56" y="95.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.08%)</title><rect x="1083.3" y="69" width="0.9" height="15.0" fill="rgb(230,135,7)" rx="2" ry="2" />
<text  x="1086.29" y="79.5" ></text>
</g>
<g >
<title>doreti (10 samples, 0.19%)</title><rect x="27.7" y="277" width="2.3" height="15.0" fill="rgb(215,36,50)" rx="2" ry="2" />
<text  x="30.71" y="287.5" ></text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.02%)</title><rect x="1180.8" y="245" width="0.2" height="15.0" fill="rgb(241,112,28)" rx="2" ry="2" />
<text  x="1183.80" y="255.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.10%)</title><rect x="26.6" y="53" width="1.1" height="15.0" fill="rgb(219,33,48)" rx="2" ry="2" />
<text  x="29.56" y="63.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (144 samples, 2.81%)</title><rect x="1084.2" y="53" width="33.1" height="15.0" fill="rgb(215,75,17)" rx="2" ry="2" />
<text  x="1087.21" y="63.5" >gr..</text>
</g>
<g >
<title>arpresolve (152 samples, 2.96%)</title><rect x="306.7" y="69" width="34.9" height="15.0" fill="rgb(231,148,4)" rx="2" ry="2" />
<text  x="309.67" y="79.5" >ar..</text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="552.5" y="181" width="0.2" height="15.0" fill="rgb(224,49,5)" rx="2" ry="2" />
<text  x="555.51" y="191.5" ></text>
</g>
<g >
<title>in_localip (47 samples, 0.92%)</title><rect x="436.6" y="85" width="10.8" height="15.0" fill="rgb(224,192,24)" rx="2" ry="2" />
<text  x="439.60" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (13 samples, 0.25%)</title><rect x="1150.0" y="213" width="3.0" height="15.0" fill="rgb(241,135,17)" rx="2" ry="2" />
<text  x="1152.98" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (4 samples, 0.08%)</title><rect x="1083.3" y="53" width="0.9" height="15.0" fill="rgb(234,185,18)" rx="2" ry="2" />
<text  x="1086.29" y="63.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.02%)</title><rect x="30.0" y="245" width="0.2" height="15.0" fill="rgb(223,11,46)" rx="2" ry="2" />
<text  x="33.01" y="255.5" ></text>
</g>
<g >
<title>sleepq_signal (6 samples, 0.12%)</title><rect x="1084.2" y="37" width="1.4" height="15.0" fill="rgb(224,22,1)" rx="2" ry="2" />
<text  x="1087.21" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,580 samples, 89.26%)</title><rect x="30.0" y="261" width="1053.3" height="15.0" fill="rgb(210,51,51)" rx="2" ry="2" />
<text  x="33.01" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>iflib_rxeof (144 samples, 2.81%)</title><rect x="1084.2" y="229" width="33.1" height="15.0" fill="rgb(208,173,1)" rx="2" ry="2" />
<text  x="1087.21" y="239.5" >if..</text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="48.6" y="165" width="0.5" height="15.0" fill="rgb(239,194,18)" rx="2" ry="2" />
<text  x="51.64" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (18 samples, 0.35%)</title><rect x="1066.5" y="165" width="4.1" height="15.0" fill="rgb(212,81,51)" rx="2" ry="2" />
<text  x="1069.50" y="175.5" ></text>
</g>
<g >
<title>ip_input (1,425 samples, 27.77%)</title><rect x="167.8" y="117" width="327.7" height="15.0" fill="rgb(226,221,2)" rx="2" ry="2" />
<text  x="170.76" y="127.5" >ip_input</text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.10%)</title><rect x="26.6" y="37" width="1.1" height="15.0" fill="rgb(244,125,41)" rx="2" ry="2" />
<text  x="29.56" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (144 samples, 2.81%)</title><rect x="1084.2" y="197" width="33.1" height="15.0" fill="rgb(210,118,10)" rx="2" ry="2" />
<text  x="1087.21" y="207.5" >ne..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (97 samples, 1.89%)</title><rect x="989.0" y="149" width="22.3" height="15.0" fill="rgb(250,68,42)" rx="2" ry="2" />
<text  x="992.00" y="159.5" >b..</text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.08%)</title><rect x="48.2" y="181" width="0.9" height="15.0" fill="rgb(206,109,48)" rx="2" ry="2" />
<text  x="51.18" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (10 samples, 0.19%)</title><rect x="94.4" y="181" width="2.3" height="15.0" fill="rgb(225,157,27)" rx="2" ry="2" />
<text  x="97.40" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (5 samples, 0.10%)</title><rect x="26.6" y="277" width="1.1" height="15.0" fill="rgb(212,9,12)" rx="2" ry="2" />
<text  x="29.56" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (68 samples, 1.33%)</title><rect x="1085.6" y="37" width="15.6" height="15.0" fill="rgb(216,222,6)" rx="2" ry="2" />
<text  x="1088.59" y="47.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (3 samples, 0.06%)</title><rect x="40.4" y="213" width="0.6" height="15.0" fill="rgb(238,121,41)" rx="2" ry="2" />
<text  x="43.36" y="223.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.02%)</title><rect x="684.7" y="133" width="0.3" height="15.0" fill="rgb(217,224,13)" rx="2" ry="2" />
<text  x="687.75" y="143.5" ></text>
</g>
<g >
<title>ether_demux (5 samples, 0.10%)</title><rect x="26.6" y="197" width="1.1" height="15.0" fill="rgb(245,228,51)" rx="2" ry="2" />
<text  x="29.56" y="207.5" ></text>
</g>
<g >
<title>ether_output (5 samples, 0.10%)</title><rect x="26.6" y="133" width="1.1" height="15.0" fill="rgb(209,164,40)" rx="2" ry="2" />
<text  x="29.56" y="143.5" ></text>
</g>
<g >
<title>ether_input (5 samples, 0.10%)</title><rect x="26.6" y="245" width="1.1" height="15.0" fill="rgb(231,46,43)" rx="2" ry="2" />
<text  x="29.56" y="255.5" ></text>
</g>
<g >
<title>_task_fn_rx (144 samples, 2.81%)</title><rect x="1084.2" y="245" width="33.1" height="15.0" fill="rgb(216,104,26)" rx="2" ry="2" />
<text  x="1087.21" y="255.5" >_t..</text>
</g>
<g >
<title>lapic_handle_timer (22 samples, 0.43%)</title><rect x="1184.9" y="277" width="5.1" height="15.0" fill="rgb(224,106,46)" rx="2" ry="2" />
<text  x="1187.94" y="287.5" ></text>
</g>
<g >
<title>arpintr (1 samples, 0.02%)</title><rect x="684.7" y="101" width="0.3" height="15.0" fill="rgb(211,112,46)" rx="2" ry="2" />
<text  x="687.75" y="111.5" ></text>
</g>
<g >
<title>ip_tryforward (1,273 samples, 24.81%)</title><rect x="202.7" y="101" width="292.8" height="15.0" fill="rgb(210,81,46)" rx="2" ry="2" />
<text  x="205.72" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>handleevents (18 samples, 0.35%)</title><rect x="1185.9" y="245" width="4.1" height="15.0" fill="rgb(233,154,17)" rx="2" ry="2" />
<text  x="1188.86" y="255.5" ></text>
</g>
<g >
<title>intr_event_handle (234 samples, 4.56%)</title><rect x="1127.2" y="261" width="53.8" height="15.0" fill="rgb(253,65,20)" rx="2" ry="2" />
<text  x="1130.22" y="271.5" >intr_..</text>
</g>
<g >
<title>pmc_hook_handler (13 samples, 0.25%)</title><rect x="1186.6" y="213" width="2.9" height="15.0" fill="rgb(228,167,52)" rx="2" ry="2" />
<text  x="1189.55" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (4 samples, 0.08%)</title><rect x="48.2" y="197" width="0.9" height="15.0" fill="rgb(229,214,24)" rx="2" ry="2" />
<text  x="51.18" y="207.5" ></text>
</g>
<g >
<title>iflib_fl_refill (267 samples, 5.20%)</title><rect x="513.6" y="197" width="61.4" height="15.0" fill="rgb(214,112,8)" rx="2" ry="2" />
<text  x="516.64" y="207.5" >iflib_..</text>
</g>
<g >
<title>ether_bpf_mtap_if (1 samples, 0.02%)</title><rect x="723.8" y="181" width="0.3" height="15.0" fill="rgb(251,51,17)" rx="2" ry="2" />
<text  x="726.84" y="191.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,683 samples, 32.80%)</title><rect x="686.4" y="229" width="387.0" height="15.0" fill="rgb(234,109,4)" rx="2" ry="2" />
<text  x="689.36" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>gtaskqueue_thread_loop (144 samples, 2.81%)</title><rect x="1084.2" y="277" width="33.1" height="15.0" fill="rgb(242,91,16)" rx="2" ry="2" />
<text  x="1087.21" y="287.5" >gt..</text>
</g>
<g >
<title>ether_input (1 samples, 0.02%)</title><rect x="684.7" y="181" width="0.3" height="15.0" fill="rgb(230,93,54)" rx="2" ry="2" />
<text  x="687.75" y="191.5" ></text>
</g>
<g >
<title>wakeup (14 samples, 0.27%)</title><rect x="1080.1" y="229" width="3.2" height="15.0" fill="rgb(241,218,49)" rx="2" ry="2" />
<text  x="1083.07" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (5 samples, 0.10%)</title><rect x="26.6" y="261" width="1.1" height="15.0" fill="rgb(224,96,40)" rx="2" ry="2" />
<text  x="29.56" y="271.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (7 samples, 0.14%)</title><rect x="1178.0" y="213" width="1.7" height="15.0" fill="rgb(223,111,39)" rx="2" ry="2" />
<text  x="1181.04" y="223.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (4 samples, 0.08%)</title><rect x="684.1" y="197" width="0.9" height="15.0" fill="rgb(228,0,43)" rx="2" ry="2" />
<text  x="687.06" y="207.5" ></text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.08%)</title><rect x="1177.1" y="213" width="0.9" height="15.0" fill="rgb(205,50,39)" rx="2" ry="2" />
<text  x="1180.12" y="223.5" ></text>
</g>
</g>
</svg>
