<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>lapic_eoi (2 samples, 0.04%)</title><rect x="1179.4" y="245" width="0.4" height="15.0" fill="rgb(228,169,52)" rx="2" ry="2" />
<text  x="1182.39" y="255.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.04%)</title><rect x="573.2" y="117" width="0.5" height="15.0" fill="rgb(247,78,42)" rx="2" ry="2" />
<text  x="576.23" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (89 samples, 1.74%)</title><rect x="1098.4" y="37" width="20.5" height="15.0" fill="rgb(208,133,14)" rx="2" ry="2" />
<text  x="1101.40" y="47.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (1 samples, 0.02%)</title><rect x="572.3" y="165" width="0.2" height="15.0" fill="rgb(253,121,4)" rx="2" ry="2" />
<text  x="575.31" y="175.5" ></text>
</g>
<g >
<title>handleevents (23 samples, 0.45%)</title><rect x="1184.7" y="245" width="5.3" height="15.0" fill="rgb(213,208,8)" rx="2" ry="2" />
<text  x="1187.69" y="255.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.08%)</title><rect x="46.9" y="181" width="0.9" height="15.0" fill="rgb(229,26,49)" rx="2" ry="2" />
<text  x="49.92" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,478 samples, 28.90%)</title><rect x="177.1" y="133" width="341.0" height="15.0" fill="rgb(228,200,1)" rx="2" ry="2" />
<text  x="180.06" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.04%)</title><rect x="1066.6" y="181" width="0.4" height="15.0" fill="rgb(215,64,34)" rx="2" ry="2" />
<text  x="1069.55" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (5 samples, 0.10%)</title><rect x="1080.4" y="277" width="1.2" height="15.0" fill="rgb(224,138,14)" rx="2" ry="2" />
<text  x="1083.40" y="287.5" ></text>
</g>
<g >
<title>tscp_get_timecount_low (2 samples, 0.04%)</title><rect x="1184.2" y="229" width="0.5" height="15.0" fill="rgb(228,133,11)" rx="2" ry="2" />
<text  x="1187.23" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (5 samples, 0.10%)</title><rect x="1080.4" y="69" width="1.2" height="15.0" fill="rgb(224,81,23)" rx="2" ry="2" />
<text  x="1083.40" y="79.5" ></text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.08%)</title><rect x="425.1" y="37" width="0.9" height="15.0" fill="rgb(236,215,26)" rx="2" ry="2" />
<text  x="428.10" y="47.5" ></text>
</g>
<g >
<title>zone_import (3 samples, 0.06%)</title><rect x="575.1" y="101" width="0.7" height="15.0" fill="rgb(217,119,18)" rx="2" ry="2" />
<text  x="578.08" y="111.5" ></text>
</g>
<g >
<title>lapic_handle_intr (13 samples, 0.25%)</title><rect x="1181.0" y="277" width="3.0" height="15.0" fill="rgb(243,226,15)" rx="2" ry="2" />
<text  x="1184.00" y="287.5" ></text>
</g>
<g >
<title>ether_input (5 samples, 0.10%)</title><rect x="1080.4" y="229" width="1.2" height="15.0" fill="rgb(235,143,7)" rx="2" ry="2" />
<text  x="1083.40" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (37 samples, 0.72%)</title><rect x="16.9" y="277" width="8.6" height="15.0" fill="rgb(217,95,14)" rx="2" ry="2" />
<text  x="19.92" y="287.5" ></text>
</g>
<g >
<title>doreti (8 samples, 0.16%)</title><rect x="26.6" y="277" width="1.9" height="15.0" fill="rgb(229,221,30)" rx="2" ry="2" />
<text  x="29.61" y="287.5" ></text>
</g>
<g >
<title>ip_tryforward (164 samples, 3.21%)</title><rect x="1081.6" y="117" width="37.8" height="15.0" fill="rgb(224,216,25)" rx="2" ry="2" />
<text  x="1084.55" y="127.5" >ip_..</text>
</g>
<g >
<title>pmc_hook_handler (14 samples, 0.27%)</title><rect x="1185.4" y="213" width="3.2" height="15.0" fill="rgb(234,134,2)" rx="2" ry="2" />
<text  x="1188.39" y="223.5" ></text>
</g>
<g >
<title>wakeup (13 samples, 0.25%)</title><rect x="1077.4" y="229" width="3.0" height="15.0" fill="rgb(235,181,50)" rx="2" ry="2" />
<text  x="1080.40" y="239.5" ></text>
</g>
<g >
<title>zone_alloc_item (3 samples, 0.06%)</title><rect x="575.1" y="117" width="0.7" height="15.0" fill="rgb(223,209,23)" rx="2" ry="2" />
<text  x="578.08" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="101.8" y="181" width="0.5" height="15.0" fill="rgb(224,142,32)" rx="2" ry="2" />
<text  x="104.83" y="191.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="575.8" y="133" width="0.2" height="15.0" fill="rgb(218,114,37)" rx="2" ry="2" />
<text  x="578.77" y="143.5" ></text>
</g>
<g >
<title>fork_exit (4,559 samples, 89.15%)</title><rect x="28.5" y="277" width="1051.9" height="15.0" fill="rgb(244,196,50)" rx="2" ry="2" />
<text  x="31.46" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_output (5 samples, 0.10%)</title><rect x="1080.4" y="117" width="1.2" height="15.0" fill="rgb(232,22,31)" rx="2" ry="2" />
<text  x="1083.40" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3 samples, 0.06%)</title><rect x="25.9" y="85" width="0.7" height="15.0" fill="rgb(211,107,41)" rx="2" ry="2" />
<text  x="28.92" y="95.5" ></text>
</g>
<g >
<title>tsc_get_config (2 samples, 0.04%)</title><rect x="1188.2" y="181" width="0.4" height="15.0" fill="rgb(216,213,27)" rx="2" ry="2" />
<text  x="1191.15" y="191.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (88 samples, 1.72%)</title><rect x="582.9" y="181" width="20.3" height="15.0" fill="rgb(245,33,14)" rx="2" ry="2" />
<text  x="585.93" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (117 samples, 2.29%)</title><rect x="612.5" y="197" width="27.0" height="15.0" fill="rgb(216,215,48)" rx="2" ry="2" />
<text  x="615.46" y="207.5" >i..</text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="37.7" y="213" width="0.2" height="15.0" fill="rgb(228,61,5)" rx="2" ry="2" />
<text  x="40.69" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.12%)</title><rect x="1079.0" y="213" width="1.4" height="15.0" fill="rgb(220,59,54)" rx="2" ry="2" />
<text  x="1082.01" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,882 samples, 56.36%)</title><rect x="48.1" y="213" width="665.0" height="15.0" fill="rgb(209,126,41)" rx="2" ry="2" />
<text  x="51.07" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_txq_drain (1,492 samples, 29.17%)</title><rect x="722.8" y="197" width="344.2" height="15.0" fill="rgb(218,96,47)" rx="2" ry="2" />
<text  x="725.75" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>netisr_dispatch_src (1,824 samples, 35.67%)</title><rect x="102.3" y="181" width="420.9" height="15.0" fill="rgb(220,140,45)" rx="2" ry="2" />
<text  x="105.30" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch_src (164 samples, 3.21%)</title><rect x="1081.6" y="149" width="37.8" height="15.0" fill="rgb(221,46,30)" rx="2" ry="2" />
<text  x="1084.55" y="159.5" >net..</text>
</g>
<g >
<title>ixgbe_write_reg (5 samples, 0.10%)</title><rect x="581.8" y="181" width="1.1" height="15.0" fill="rgb(219,221,16)" rx="2" ry="2" />
<text  x="584.77" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (164 samples, 3.21%)</title><rect x="1081.6" y="53" width="37.8" height="15.0" fill="rgb(211,160,18)" rx="2" ry="2" />
<text  x="1084.55" y="63.5" >gro..</text>
</g>
<g >
<title>ether_output_frame (164 samples, 3.21%)</title><rect x="1081.6" y="85" width="37.8" height="15.0" fill="rgb(243,193,5)" rx="2" ry="2" />
<text  x="1084.55" y="95.5" >eth..</text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.06%)</title><rect x="1154.2" y="213" width="0.7" height="15.0" fill="rgb(233,158,42)" rx="2" ry="2" />
<text  x="1157.24" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (164 samples, 3.21%)</title><rect x="1081.6" y="181" width="37.8" height="15.0" fill="rgb(208,83,25)" rx="2" ry="2" />
<text  x="1084.55" y="191.5" >eth..</text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (3 samples, 0.06%)</title><rect x="574.4" y="101" width="0.7" height="15.0" fill="rgb(214,50,35)" rx="2" ry="2" />
<text  x="577.39" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="25.9" y="229" width="0.7" height="15.0" fill="rgb(248,134,11)" rx="2" ry="2" />
<text  x="28.92" y="239.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="575.8" y="117" width="0.2" height="15.0" fill="rgb(253,202,52)" rx="2" ry="2" />
<text  x="578.77" y="127.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.04%)</title><rect x="1189.1" y="229" width="0.4" height="15.0" fill="rgb(248,103,22)" rx="2" ry="2" />
<text  x="1192.08" y="239.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="575.5" y="69" width="0.3" height="15.0" fill="rgb(206,202,23)" rx="2" ry="2" />
<text  x="578.54" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="25.9" y="181" width="0.7" height="15.0" fill="rgb(213,107,51)" rx="2" ry="2" />
<text  x="28.92" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (26 samples, 0.51%)</title><rect x="1184.0" y="277" width="6.0" height="15.0" fill="rgb(246,158,18)" rx="2" ry="2" />
<text  x="1187.00" y="287.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,517 samples, 29.66%)</title><rect x="717.0" y="213" width="350.0" height="15.0" fill="rgb(235,54,29)" rx="2" ry="2" />
<text  x="719.98" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>intr_execute_handlers (267 samples, 5.22%)</title><rect x="1119.4" y="277" width="61.6" height="15.0" fill="rgb(206,10,15)" rx="2" ry="2" />
<text  x="1122.39" y="287.5" >intr_e..</text>
</g>
<g >
<title>tcp_lro_flush_all (3 samples, 0.06%)</title><rect x="712.4" y="197" width="0.7" height="15.0" fill="rgb(236,59,36)" rx="2" ry="2" />
<text  x="715.37" y="207.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (197 samples, 3.85%)</title><rect x="666.9" y="197" width="45.5" height="15.0" fill="rgb(229,72,13)" rx="2" ry="2" />
<text  x="669.91" y="207.5" >rxd_..</text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.12%)</title><rect x="45.5" y="197" width="1.4" height="15.0" fill="rgb(219,103,25)" rx="2" ry="2" />
<text  x="48.53" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (14 samples, 0.27%)</title><rect x="1063.3" y="165" width="3.3" height="15.0" fill="rgb(219,77,29)" rx="2" ry="2" />
<text  x="1066.32" y="175.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (9 samples, 0.18%)</title><rect x="34.7" y="229" width="2.1" height="15.0" fill="rgb(245,137,20)" rx="2" ry="2" />
<text  x="37.69" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (42 samples, 0.82%)</title><rect x="1150.8" y="229" width="9.7" height="15.0" fill="rgb(216,15,19)" rx="2" ry="2" />
<text  x="1153.77" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.14%)</title><rect x="1154.9" y="213" width="1.6" height="15.0" fill="rgb(241,43,6)" rx="2" ry="2" />
<text  x="1157.93" y="223.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="543.9" y="197" width="0.3" height="15.0" fill="rgb(216,100,48)" rx="2" ry="2" />
<text  x="546.93" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (74 samples, 1.45%)</title><rect x="485.3" y="69" width="17.1" height="15.0" fill="rgb(208,81,21)" rx="2" ry="2" />
<text  x="488.32" y="79.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (143 samples, 2.80%)</title><rect x="980.5" y="165" width="33.0" height="15.0" fill="rgb(211,222,51)" rx="2" ry="2" />
<text  x="983.49" y="175.5" >bu..</text>
</g>
<g >
<title>ether_output_frame (3 samples, 0.06%)</title><rect x="25.9" y="117" width="0.7" height="15.0" fill="rgb(233,92,51)" rx="2" ry="2" />
<text  x="28.92" y="127.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (11 samples, 0.22%)</title><rect x="600.7" y="165" width="2.5" height="15.0" fill="rgb(228,131,50)" rx="2" ry="2" />
<text  x="603.69" y="175.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="47.8" y="213" width="0.3" height="15.0" fill="rgb(249,69,47)" rx="2" ry="2" />
<text  x="50.84" y="223.5" ></text>
</g>
<g >
<title>m_adj (1 samples, 0.02%)</title><rect x="518.1" y="149" width="0.2" height="15.0" fill="rgb(208,139,14)" rx="2" ry="2" />
<text  x="521.09" y="159.5" ></text>
</g>
<g >
<title>m_pkthdr_init (22 samples, 0.43%)</title><rect x="639.5" y="197" width="5.0" height="15.0" fill="rgb(231,40,26)" rx="2" ry="2" />
<text  x="642.46" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (5 samples, 0.10%)</title><rect x="1080.4" y="261" width="1.2" height="15.0" fill="rgb(214,96,19)" rx="2" ry="2" />
<text  x="1083.40" y="271.5" ></text>
</g>
<g >
<title>ether_output_frame (414 samples, 8.10%)</title><rect x="367.6" y="69" width="95.6" height="15.0" fill="rgb(206,147,51)" rx="2" ry="2" />
<text  x="370.65" y="79.5" >ether_outpu..</text>
</g>
<g >
<title>iflib_if_transmit (164 samples, 3.21%)</title><rect x="1081.6" y="69" width="37.8" height="15.0" fill="rgb(252,47,8)" rx="2" ry="2" />
<text  x="1084.55" y="79.5" >ifl..</text>
</g>
<g >
<title>_epoch_exit_preempt (5 samples, 0.10%)</title><rect x="36.8" y="229" width="1.1" height="15.0" fill="rgb(206,108,46)" rx="2" ry="2" />
<text  x="39.77" y="239.5" ></text>
</g>
<g >
<title>cache_alloc (15 samples, 0.29%)</title><rect x="572.5" y="165" width="3.5" height="15.0" fill="rgb(212,199,2)" rx="2" ry="2" />
<text  x="575.54" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (6 samples, 0.12%)</title><rect x="1159.1" y="213" width="1.4" height="15.0" fill="rgb(226,42,29)" rx="2" ry="2" />
<text  x="1162.08" y="223.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (2 samples, 0.04%)</title><rect x="575.3" y="85" width="0.5" height="15.0" fill="rgb(217,39,52)" rx="2" ry="2" />
<text  x="578.31" y="95.5" ></text>
</g>
<g >
<title>ether_nh_input (3 samples, 0.06%)</title><rect x="25.9" y="213" width="0.7" height="15.0" fill="rgb(238,81,38)" rx="2" ry="2" />
<text  x="28.92" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (15 samples, 0.29%)</title><rect x="1163.0" y="229" width="3.5" height="15.0" fill="rgb(212,39,15)" rx="2" ry="2" />
<text  x="1166.00" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (9 samples, 0.18%)</title><rect x="749.3" y="181" width="2.1" height="15.0" fill="rgb(232,191,12)" rx="2" ry="2" />
<text  x="752.29" y="191.5" ></text>
</g>
<g >
<title>ip_input (3 samples, 0.06%)</title><rect x="25.9" y="165" width="0.7" height="15.0" fill="rgb(234,43,23)" rx="2" ry="2" />
<text  x="28.92" y="175.5" ></text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.04%)</title><rect x="1067.0" y="213" width="0.5" height="15.0" fill="rgb(210,113,13)" rx="2" ry="2" />
<text  x="1070.02" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load (1 samples, 0.02%)</title><rect x="572.3" y="181" width="0.2" height="15.0" fill="rgb(216,9,31)" rx="2" ry="2" />
<text  x="575.31" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="25.9" y="37" width="0.7" height="15.0" fill="rgb(237,60,48)" rx="2" ry="2" />
<text  x="28.92" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="1070.7" y="197" width="0.5" height="15.0" fill="rgb(243,98,48)" rx="2" ry="2" />
<text  x="1073.71" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.10%)</title><rect x="1080.4" y="37" width="1.2" height="15.0" fill="rgb(246,217,4)" rx="2" ry="2" />
<text  x="1083.40" y="47.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (2 samples, 0.04%)</title><rect x="28.5" y="245" width="0.4" height="15.0" fill="rgb(251,146,25)" rx="2" ry="2" />
<text  x="31.46" y="255.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (8 samples, 0.16%)</title><rect x="1067.5" y="213" width="1.8" height="15.0" fill="rgb(205,201,46)" rx="2" ry="2" />
<text  x="1070.48" y="223.5" ></text>
</g>
<g >
<title>ip_findroute (171 samples, 3.34%)</title><rect x="478.6" y="85" width="39.5" height="15.0" fill="rgb(248,133,30)" rx="2" ry="2" />
<text  x="481.63" y="95.5" >ip_..</text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.06%)</title><rect x="25.9" y="53" width="0.7" height="15.0" fill="rgb(223,79,15)" rx="2" ry="2" />
<text  x="28.92" y="63.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (118 samples, 2.31%)</title><rect x="1039.3" y="181" width="27.3" height="15.0" fill="rgb(235,76,5)" rx="2" ry="2" />
<text  x="1042.33" y="191.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (34 samples, 0.66%)</title><rect x="1166.5" y="229" width="7.8" height="15.0" fill="rgb(207,226,42)" rx="2" ry="2" />
<text  x="1169.46" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (164 samples, 3.21%)</title><rect x="1081.6" y="261" width="37.8" height="15.0" fill="rgb(229,178,17)" rx="2" ry="2" />
<text  x="1084.55" y="271.5" >gta..</text>
</g>
<g >
<title>ifmp_ring_enqueue (144 samples, 2.82%)</title><rect x="429.9" y="37" width="33.3" height="15.0" fill="rgb(252,56,13)" rx="2" ry="2" />
<text  x="432.95" y="47.5" >if..</text>
</g>
<g >
<title>iflib_if_transmit (3 samples, 0.06%)</title><rect x="25.9" y="101" width="0.7" height="15.0" fill="rgb(207,45,9)" rx="2" ry="2" />
<text  x="28.92" y="111.5" ></text>
</g>
<g >
<title>m_freem (161 samples, 3.15%)</title><rect x="837.7" y="165" width="37.1" height="15.0" fill="rgb(235,111,53)" rx="2" ry="2" />
<text  x="840.66" y="175.5" >m_f..</text>
</g>
<g >
<title>uma_small_alloc (6 samples, 0.12%)</title><rect x="573.7" y="117" width="1.4" height="15.0" fill="rgb(253,182,15)" rx="2" ry="2" />
<text  x="576.70" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (164 samples, 3.21%)</title><rect x="1081.6" y="277" width="37.8" height="15.0" fill="rgb(236,197,2)" rx="2" ry="2" />
<text  x="1084.55" y="287.5" >gta..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (86 samples, 1.68%)</title><rect x="992.3" y="149" width="19.8" height="15.0" fill="rgb(211,116,16)" rx="2" ry="2" />
<text  x="995.26" y="159.5" ></text>
</g>
<g >
<title>ether_demux (3 samples, 0.06%)</title><rect x="25.9" y="197" width="0.7" height="15.0" fill="rgb(236,203,19)" rx="2" ry="2" />
<text  x="28.92" y="207.5" ></text>
</g>
<g >
<title>statclock (2 samples, 0.04%)</title><rect x="1189.5" y="229" width="0.5" height="15.0" fill="rgb(244,3,4)" rx="2" ry="2" />
<text  x="1192.54" y="239.5" ></text>
</g>
<g >
<title>ether_demux (164 samples, 3.21%)</title><rect x="1081.6" y="165" width="37.8" height="15.0" fill="rgb(252,161,6)" rx="2" ry="2" />
<text  x="1084.55" y="175.5" >eth..</text>
</g>
<g >
<title>wakeup_any (2 samples, 0.04%)</title><rect x="1118.9" y="37" width="0.5" height="15.0" fill="rgb(207,60,46)" rx="2" ry="2" />
<text  x="1121.93" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (25 samples, 0.49%)</title><rect x="463.2" y="69" width="5.7" height="15.0" fill="rgb(226,27,31)" rx="2" ry="2" />
<text  x="466.17" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.08%)</title><rect x="1178.5" y="213" width="0.9" height="15.0" fill="rgb(229,112,40)" rx="2" ry="2" />
<text  x="1181.46" y="223.5" ></text>
</g>
<g >
<title>ether_output (787 samples, 15.39%)</title><rect x="287.3" y="85" width="181.6" height="15.0" fill="rgb(238,27,48)" rx="2" ry="2" />
<text  x="290.35" y="95.5" >ether_output</text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="1159.5" y="181" width="1.0" height="15.0" fill="rgb(238,68,7)" rx="2" ry="2" />
<text  x="1162.54" y="191.5" ></text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.02%)</title><rect x="25.7" y="277" width="0.2" height="15.0" fill="rgb(217,60,49)" rx="2" ry="2" />
<text  x="28.69" y="287.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (22 samples, 0.43%)</title><rect x="1174.3" y="229" width="5.1" height="15.0" fill="rgb(205,229,7)" rx="2" ry="2" />
<text  x="1177.31" y="239.5" ></text>
</g>
<g >
<title>if_getnetmapadapter (2 samples, 0.04%)</title><rect x="713.3" y="197" width="0.5" height="15.0" fill="rgb(243,195,46)" rx="2" ry="2" />
<text  x="716.29" y="207.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (2 samples, 0.04%)</title><rect x="1187.2" y="181" width="0.5" height="15.0" fill="rgb(233,100,37)" rx="2" ry="2" />
<text  x="1190.23" y="191.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (531 samples, 10.38%)</title><rect x="752.3" y="181" width="122.5" height="15.0" fill="rgb(219,162,25)" rx="2" ry="2" />
<text  x="755.29" y="191.5" >iflib_completed..</text>
</g>
<g >
<title>arpresolve (147 samples, 2.87%)</title><rect x="333.7" y="69" width="33.9" height="15.0" fill="rgb(231,228,45)" rx="2" ry="2" />
<text  x="336.73" y="79.5" >ar..</text>
</g>
<g >
<title>ip_tryforward (5 samples, 0.10%)</title><rect x="1080.4" y="133" width="1.2" height="15.0" fill="rgb(212,70,41)" rx="2" ry="2" />
<text  x="1083.40" y="143.5" ></text>
</g>
<g >
<title>sleepq_broadcast (5 samples, 0.10%)</title><rect x="1077.9" y="213" width="1.1" height="15.0" fill="rgb(247,86,24)" rx="2" ry="2" />
<text  x="1080.86" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.10%)</title><rect x="1080.4" y="165" width="1.2" height="15.0" fill="rgb(206,176,26)" rx="2" ry="2" />
<text  x="1083.40" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (40 samples, 0.78%)</title><rect x="603.2" y="197" width="9.3" height="15.0" fill="rgb(247,135,8)" rx="2" ry="2" />
<text  x="606.23" y="207.5" ></text>
</g>
<g >
<title>pagezero_erms (3 samples, 0.06%)</title><rect x="574.4" y="85" width="0.7" height="15.0" fill="rgb(210,26,7)" rx="2" ry="2" />
<text  x="577.39" y="95.5" ></text>
</g>
<g >
<title>bsearch4_lookup (3 samples, 0.06%)</title><rect x="517.4" y="53" width="0.7" height="15.0" fill="rgb(241,52,38)" rx="2" ry="2" />
<text  x="520.40" y="63.5" ></text>
</g>
<g >
<title>iflib_fl_refill (256 samples, 5.01%)</title><rect x="544.2" y="197" width="59.0" height="15.0" fill="rgb(245,38,45)" rx="2" ry="2" />
<text  x="547.16" y="207.5" >iflib_..</text>
</g>
<g >
<title>if_inc_counter (4 samples, 0.08%)</title><rect x="751.4" y="181" width="0.9" height="15.0" fill="rgb(227,105,12)" rx="2" ry="2" />
<text  x="754.36" y="191.5" ></text>
</g>
<g >
<title>if_getsoftc (17 samples, 0.33%)</title><rect x="426.0" y="37" width="3.9" height="15.0" fill="rgb(211,100,29)" rx="2" ry="2" />
<text  x="429.02" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.10%)</title><rect x="1159.3" y="197" width="1.2" height="15.0" fill="rgb(238,78,46)" rx="2" ry="2" />
<text  x="1162.31" y="207.5" ></text>
</g>
<g >
<title>hardclock (19 samples, 0.37%)</title><rect x="1184.7" y="229" width="4.4" height="15.0" fill="rgb(219,213,18)" rx="2" ry="2" />
<text  x="1187.69" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (112 samples, 2.19%)</title><rect x="1013.5" y="165" width="25.8" height="15.0" fill="rgb(252,185,2)" rx="2" ry="2" />
<text  x="1016.48" y="175.5" >i..</text>
</g>
<g >
<title>in_lltable_lookup (57 samples, 1.11%)</title><rect x="352.0" y="53" width="13.1" height="15.0" fill="rgb(214,4,39)" rx="2" ry="2" />
<text  x="354.96" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,929 samples, 57.27%)</title><rect x="37.9" y="229" width="675.9" height="15.0" fill="rgb(242,81,37)" rx="2" ry="2" />
<text  x="40.92" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_output (164 samples, 3.21%)</title><rect x="1081.6" y="101" width="37.8" height="15.0" fill="rgb(225,225,29)" rx="2" ry="2" />
<text  x="1084.55" y="111.5" >eth..</text>
</g>
<g >
<title>if_getvnet (1 samples, 0.02%)</title><rect x="542.8" y="197" width="0.2" height="15.0" fill="rgb(216,23,27)" rx="2" ry="2" />
<text  x="545.78" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (4 samples, 0.08%)</title><rect x="1183.1" y="261" width="0.9" height="15.0" fill="rgb(239,128,7)" rx="2" ry="2" />
<text  x="1186.08" y="271.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (12 samples, 0.23%)</title><rect x="720.0" y="197" width="2.8" height="15.0" fill="rgb(218,213,38)" rx="2" ry="2" />
<text  x="722.98" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (21 samples, 0.41%)</title><rect x="576.9" y="181" width="4.9" height="15.0" fill="rgb(221,68,31)" rx="2" ry="2" />
<text  x="579.93" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (3 samples, 0.06%)</title><rect x="25.9" y="261" width="0.7" height="15.0" fill="rgb(233,0,51)" rx="2" ry="2" />
<text  x="28.92" y="271.5" ></text>
</g>
<g >
<title>timercb (26 samples, 0.51%)</title><rect x="1184.0" y="261" width="6.0" height="15.0" fill="rgb(205,29,47)" rx="2" ry="2" />
<text  x="1187.00" y="271.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="1162.3" y="213" width="0.7" height="15.0" fill="rgb(208,103,0)" rx="2" ry="2" />
<text  x="1165.31" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (3 samples, 0.06%)</title><rect x="25.9" y="277" width="0.7" height="15.0" fill="rgb(242,216,26)" rx="2" ry="2" />
<text  x="28.92" y="287.5" ></text>
</g>
<g >
<title>pmc_process_samples (12 samples, 0.23%)</title><rect x="1185.8" y="197" width="2.8" height="15.0" fill="rgb(234,58,16)" rx="2" ry="2" />
<text  x="1188.85" y="207.5" ></text>
</g>
<g >
<title>cache_alloc_retry (15 samples, 0.29%)</title><rect x="572.5" y="181" width="3.5" height="15.0" fill="rgb(228,172,32)" rx="2" ry="2" />
<text  x="575.54" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (164 samples, 3.21%)</title><rect x="1081.6" y="197" width="37.8" height="15.0" fill="rgb(231,56,54)" rx="2" ry="2" />
<text  x="1084.55" y="207.5" >net..</text>
</g>
<g >
<title>iflib_encap (713 samples, 13.94%)</title><rect x="874.8" y="181" width="164.5" height="15.0" fill="rgb(221,55,47)" rx="2" ry="2" />
<text  x="877.81" y="191.5" >iflib_encap</text>
</g>
<g >
<title>netisr_dispatch (4 samples, 0.08%)</title><rect x="176.1" y="133" width="1.0" height="15.0" fill="rgb(250,143,38)" rx="2" ry="2" />
<text  x="179.13" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (24 samples, 0.47%)</title><rect x="42.3" y="213" width="5.5" height="15.0" fill="rgb(227,100,7)" rx="2" ry="2" />
<text  x="45.30" y="223.5" ></text>
</g>
<g >
<title>ether_demux (1,581 samples, 30.92%)</title><rect x="153.3" y="149" width="364.8" height="15.0" fill="rgb(233,144,43)" rx="2" ry="2" />
<text  x="156.29" y="159.5" >ether_demux</text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,559 samples, 89.15%)</title><rect x="28.5" y="261" width="1051.9" height="15.0" fill="rgb(240,174,24)" rx="2" ry="2" />
<text  x="31.46" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ether_demux (5 samples, 0.10%)</title><rect x="1080.4" y="181" width="1.2" height="15.0" fill="rgb(246,70,14)" rx="2" ry="2" />
<text  x="1083.40" y="191.5" ></text>
</g>
<g >
<title>ether_input (1,871 samples, 36.59%)</title><rect x="91.5" y="197" width="431.7" height="15.0" fill="rgb(243,19,18)" rx="2" ry="2" />
<text  x="94.45" y="207.5" >ether_input</text>
</g>
<g >
<title>zone_import (15 samples, 0.29%)</title><rect x="572.5" y="149" width="3.5" height="15.0" fill="rgb(246,4,48)" rx="2" ry="2" />
<text  x="575.54" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (5 samples, 0.10%)</title><rect x="1080.4" y="197" width="1.2" height="15.0" fill="rgb(210,45,33)" rx="2" ry="2" />
<text  x="1083.40" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (5 samples, 0.10%)</title><rect x="1080.4" y="245" width="1.2" height="15.0" fill="rgb(221,161,2)" rx="2" ry="2" />
<text  x="1083.40" y="255.5" ></text>
</g>
<g >
<title>soft_get_config (2 samples, 0.04%)</title><rect x="1187.7" y="181" width="0.5" height="15.0" fill="rgb(229,75,43)" rx="2" ry="2" />
<text  x="1190.69" y="191.5" ></text>
</g>
<g >
<title>all (5,114 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,100,12)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.08%)</title><rect x="1153.3" y="213" width="0.9" height="15.0" fill="rgb(211,22,0)" rx="2" ry="2" />
<text  x="1156.31" y="223.5" ></text>
</g>
<g >
<title>intr_event_handle (221 samples, 4.32%)</title><rect x="1128.9" y="261" width="50.9" height="15.0" fill="rgb(219,216,24)" rx="2" ry="2" />
<text  x="1131.85" y="271.5" >intr_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (4,557 samples, 89.11%)</title><rect x="28.9" y="245" width="1051.5" height="15.0" fill="rgb(240,85,23)" rx="2" ry="2" />
<text  x="31.92" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1070.5" y="197" width="0.2" height="15.0" fill="rgb(226,209,51)" rx="2" ry="2" />
<text  x="1073.48" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (4 samples, 0.08%)</title><rect x="543.0" y="197" width="0.9" height="15.0" fill="rgb(240,190,23)" rx="2" ry="2" />
<text  x="546.01" y="207.5" ></text>
</g>
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="25.5" y="277" width="0.2" height="15.0" fill="rgb(224,27,45)" rx="2" ry="2" />
<text  x="28.46" y="287.5" ></text>
</g>
<g >
<title>m_free (138 samples, 2.70%)</title><rect x="843.0" y="149" width="31.8" height="15.0" fill="rgb(208,46,7)" rx="2" ry="2" />
<text  x="845.97" y="159.5" >m_..</text>
</g>
<g >
<title>ip_input (1,417 samples, 27.71%)</title><rect x="191.1" y="117" width="327.0" height="15.0" fill="rgb(211,189,0)" rx="2" ry="2" />
<text  x="194.13" y="127.5" >ip_input</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.08%)</title><rect x="1081.6" y="37" width="0.9" height="15.0" fill="rgb(253,97,39)" rx="2" ry="2" />
<text  x="1084.55" y="47.5" ></text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1187.0" y="181" width="0.2" height="15.0" fill="rgb(216,76,53)" rx="2" ry="2" />
<text  x="1190.00" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (57 samples, 1.11%)</title><rect x="410.6" y="37" width="13.1" height="15.0" fill="rgb(208,214,23)" rx="2" ry="2" />
<text  x="413.56" y="47.5" ></text>
</g>
<g >
<title>ip_input (164 samples, 3.21%)</title><rect x="1081.6" y="133" width="37.8" height="15.0" fill="rgb(250,115,3)" rx="2" ry="2" />
<text  x="1084.55" y="143.5" >ip_..</text>
</g>
<g >
<title>tc_windup (2 samples, 0.04%)</title><rect x="1188.6" y="197" width="0.5" height="15.0" fill="rgb(212,89,35)" rx="2" ry="2" />
<text  x="1191.62" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (3 samples, 0.06%)</title><rect x="25.9" y="69" width="0.7" height="15.0" fill="rgb(252,27,30)" rx="2" ry="2" />
<text  x="28.92" y="79.5" ></text>
</g>
<g >
<title>if_getnumadomain (82 samples, 1.60%)</title><rect x="523.9" y="197" width="18.9" height="15.0" fill="rgb(246,22,24)" rx="2" ry="2" />
<text  x="526.86" y="207.5" ></text>
</g>
<g >
<title>m_adj (23 samples, 0.45%)</title><rect x="170.8" y="133" width="5.3" height="15.0" fill="rgb(240,72,0)" rx="2" ry="2" />
<text  x="173.83" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (57 samples, 1.11%)</title><rect x="824.5" y="165" width="13.2" height="15.0" fill="rgb(214,52,30)" rx="2" ry="2" />
<text  x="827.51" y="175.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (172 samples, 3.36%)</title><rect x="1139.7" y="245" width="39.7" height="15.0" fill="rgb(237,71,2)" rx="2" ry="2" />
<text  x="1142.70" y="255.5" >ifl..</text>
</g>
<g >
<title>ip_input (5 samples, 0.10%)</title><rect x="1080.4" y="149" width="1.2" height="15.0" fill="rgb(246,193,25)" rx="2" ry="2" />
<text  x="1083.40" y="159.5" ></text>
</g>
<g >
<title>memcmp (20 samples, 0.39%)</title><rect x="518.3" y="149" width="4.6" height="15.0" fill="rgb(253,49,28)" rx="2" ry="2" />
<text  x="521.32" y="159.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (6 samples, 0.12%)</title><rect x="423.7" y="37" width="1.4" height="15.0" fill="rgb(246,122,41)" rx="2" ry="2" />
<text  x="426.72" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (5 samples, 0.10%)</title><rect x="1080.4" y="101" width="1.2" height="15.0" fill="rgb(241,88,33)" rx="2" ry="2" />
<text  x="1083.40" y="111.5" ></text>
</g>
<g >
<title>tc_ticktock (2 samples, 0.04%)</title><rect x="1188.6" y="213" width="0.5" height="15.0" fill="rgb(220,68,15)" rx="2" ry="2" />
<text  x="1191.62" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (3 samples, 0.06%)</title><rect x="36.1" y="213" width="0.7" height="15.0" fill="rgb(229,32,50)" rx="2" ry="2" />
<text  x="39.07" y="223.5" ></text>
</g>
<g >
<title>memmove_erms (11 samples, 0.22%)</title><rect x="365.1" y="53" width="2.5" height="15.0" fill="rgb(226,216,28)" rx="2" ry="2" />
<text  x="368.11" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (1,742 samples, 34.06%)</title><rect x="121.2" y="165" width="402.0" height="15.0" fill="rgb(236,145,48)" rx="2" ry="2" />
<text  x="124.22" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="47.6" y="165" width="0.2" height="15.0" fill="rgb(227,99,5)" rx="2" ry="2" />
<text  x="50.61" y="175.5" ></text>
</g>
<g >
<title>tc_fill_vdso_timehands (1 samples, 0.02%)</title><rect x="1188.8" y="181" width="0.3" height="15.0" fill="rgb(242,38,14)" rx="2" ry="2" />
<text  x="1191.85" y="191.5" ></text>
</g>
<g >
<title>iflib_if_transmit (5 samples, 0.10%)</title><rect x="1080.4" y="85" width="1.2" height="15.0" fill="rgb(247,174,44)" rx="2" ry="2" />
<text  x="1083.40" y="95.5" ></text>
</g>
<g >
<title>wakeup_any (4 samples, 0.08%)</title><rect x="46.9" y="197" width="0.9" height="15.0" fill="rgb(235,76,25)" rx="2" ry="2" />
<text  x="49.92" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (8 samples, 0.16%)</title><rect x="1069.3" y="213" width="1.9" height="15.0" fill="rgb(251,169,25)" rx="2" ry="2" />
<text  x="1072.32" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (1,254 samples, 24.52%)</title><rect x="228.7" y="101" width="289.4" height="15.0" fill="rgb(212,208,25)" rx="2" ry="2" />
<text  x="231.74" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (4 samples, 0.08%)</title><rect x="576.0" y="181" width="0.9" height="15.0" fill="rgb(231,102,38)" rx="2" ry="2" />
<text  x="579.00" y="191.5" ></text>
</g>
<g >
<title>ether_output (3 samples, 0.06%)</title><rect x="25.9" y="133" width="0.7" height="15.0" fill="rgb(254,182,49)" rx="2" ry="2" />
<text  x="28.92" y="143.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="34.5" y="229" width="0.2" height="15.0" fill="rgb(223,145,18)" rx="2" ry="2" />
<text  x="37.46" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (7 samples, 0.14%)</title><rect x="990.6" y="149" width="1.7" height="15.0" fill="rgb(246,76,25)" rx="2" ry="2" />
<text  x="993.64" y="159.5" ></text>
</g>
<g >
<title>uma_zfree_arg (86 samples, 1.68%)</title><rect x="855.0" y="133" width="19.8" height="15.0" fill="rgb(223,196,36)" rx="2" ry="2" />
<text  x="857.97" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.08%)</title><rect x="43.2" y="197" width="0.9" height="15.0" fill="rgb(238,30,43)" rx="2" ry="2" />
<text  x="46.23" y="207.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (9 samples, 0.18%)</title><rect x="872.7" y="117" width="2.1" height="15.0" fill="rgb(218,80,2)" rx="2" ry="2" />
<text  x="875.73" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="522.9" y="149" width="0.3" height="15.0" fill="rgb(241,137,23)" rx="2" ry="2" />
<text  x="525.93" y="159.5" ></text>
</g>
<g >
<title>binuptime (2 samples, 0.04%)</title><rect x="1184.2" y="245" width="0.5" height="15.0" fill="rgb(220,7,49)" rx="2" ry="2" />
<text  x="1187.23" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (14 samples, 0.27%)</title><rect x="1060.1" y="165" width="3.2" height="15.0" fill="rgb(244,209,48)" rx="2" ry="2" />
<text  x="1063.09" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (5 samples, 0.10%)</title><rect x="1080.4" y="53" width="1.2" height="15.0" fill="rgb(207,153,9)" rx="2" ry="2" />
<text  x="1083.40" y="63.5" ></text>
</g>
<g >
<title>pmap_kextract (6 samples, 0.12%)</title><rect x="1012.1" y="149" width="1.4" height="15.0" fill="rgb(237,81,35)" rx="2" ry="2" />
<text  x="1015.10" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (11 samples, 0.22%)</title><rect x="1074.9" y="229" width="2.5" height="15.0" fill="rgb(233,185,47)" rx="2" ry="2" />
<text  x="1077.86" y="239.5" ></text>
</g>
<g >
<title>ether_input (3 samples, 0.06%)</title><rect x="25.9" y="245" width="0.7" height="15.0" fill="rgb(213,42,19)" rx="2" ry="2" />
<text  x="28.92" y="255.5" ></text>
</g>
<g >
<title>iflib_rxeof (164 samples, 3.21%)</title><rect x="1081.6" y="229" width="37.8" height="15.0" fill="rgb(230,58,9)" rx="2" ry="2" />
<text  x="1084.55" y="239.5" >ifl..</text>
</g>
<g >
<title>memcpy_erms (96 samples, 1.88%)</title><rect x="644.5" y="197" width="22.2" height="15.0" fill="rgb(231,197,41)" rx="2" ry="2" />
<text  x="647.53" y="207.5" >m..</text>
</g>
<g >
<title>_task_fn_rx (164 samples, 3.21%)</title><rect x="1081.6" y="245" width="37.8" height="15.0" fill="rgb(228,45,25)" rx="2" ry="2" />
<text  x="1084.55" y="255.5" >_ta..</text>
</g>
<g >
<title>ip_tryforward (3 samples, 0.06%)</title><rect x="25.9" y="149" width="0.7" height="15.0" fill="rgb(230,87,48)" rx="2" ry="2" />
<text  x="28.92" y="159.5" ></text>
</g>
<g >
<title>iaf_get_config (2 samples, 0.04%)</title><rect x="1186.5" y="181" width="0.5" height="15.0" fill="rgb(234,61,52)" rx="2" ry="2" />
<text  x="1189.54" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (11 samples, 0.22%)</title><rect x="1156.5" y="213" width="2.6" height="15.0" fill="rgb(215,57,27)" rx="2" ry="2" />
<text  x="1159.54" y="223.5" ></text>
</g>
<g >
<title>ether_input (164 samples, 3.21%)</title><rect x="1081.6" y="213" width="37.8" height="15.0" fill="rgb(239,15,22)" rx="2" ry="2" />
<text  x="1084.55" y="223.5" >eth..</text>
</g>
<g >
<title>sleepq_release (6 samples, 0.12%)</title><rect x="1071.2" y="229" width="1.4" height="15.0" fill="rgb(216,132,12)" rx="2" ry="2" />
<text  x="1074.17" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (335 samples, 6.55%)</title><rect x="385.9" y="53" width="77.3" height="15.0" fill="rgb(206,81,13)" rx="2" ry="2" />
<text  x="388.87" y="63.5" >iflib_if..</text>
</g>
<g >
<title>spinlock_enter (6 samples, 0.12%)</title><rect x="44.1" y="197" width="1.4" height="15.0" fill="rgb(246,31,42)" rx="2" ry="2" />
<text  x="47.15" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (12 samples, 0.23%)</title><rect x="852.2" y="133" width="2.8" height="15.0" fill="rgb(241,11,8)" rx="2" ry="2" />
<text  x="855.20" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.10%)</title><rect x="1080.4" y="213" width="1.2" height="15.0" fill="rgb(205,27,9)" rx="2" ry="2" />
<text  x="1083.40" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="1079.9" y="197" width="0.5" height="15.0" fill="rgb(236,15,9)" rx="2" ry="2" />
<text  x="1082.94" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.06%)</title><rect x="523.2" y="197" width="0.7" height="15.0" fill="rgb(220,145,42)" rx="2" ry="2" />
<text  x="526.16" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (11 samples, 0.22%)</title><rect x="1160.5" y="229" width="2.5" height="15.0" fill="rgb(216,69,45)" rx="2" ry="2" />
<text  x="1163.47" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.08%)</title><rect x="1082.5" y="37" width="0.9" height="15.0" fill="rgb(214,53,18)" rx="2" ry="2" />
<text  x="1085.48" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (30 samples, 0.59%)</title><rect x="10.0" y="277" width="6.9" height="15.0" fill="rgb(247,133,21)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,549 samples, 30.29%)</title><rect x="713.8" y="229" width="357.4" height="15.0" fill="rgb(209,218,3)" rx="2" ry="2" />
<text  x="716.75" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>fib4_lookup (68 samples, 1.33%)</title><rect x="502.4" y="69" width="15.7" height="15.0" fill="rgb(241,165,53)" rx="2" ry="2" />
<text  x="505.40" y="79.5" ></text>
</g>
<g >
<title>msi_vector (5 samples, 0.10%)</title><rect x="1179.8" y="261" width="1.2" height="15.0" fill="rgb(222,57,51)" rx="2" ry="2" />
<text  x="1182.85" y="271.5" ></text>
</g>
<g >
<title>keg_alloc_slab (11 samples, 0.22%)</title><rect x="573.2" y="133" width="2.6" height="15.0" fill="rgb(221,54,48)" rx="2" ry="2" />
<text  x="576.23" y="143.5" ></text>
</g>
<g >
<title>iflib_get_ifp (3 samples, 0.06%)</title><rect x="1177.8" y="213" width="0.7" height="15.0" fill="rgb(237,107,4)" rx="2" ry="2" />
<text  x="1180.77" y="223.5" ></text>
</g>
<g >
<title>netmap_rx_irq (3 samples, 0.06%)</title><rect x="713.1" y="213" width="0.7" height="15.0" fill="rgb(209,70,10)" rx="2" ry="2" />
<text  x="716.06" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="666.7" y="197" width="0.2" height="15.0" fill="rgb(246,29,51)" rx="2" ry="2" />
<text  x="669.68" y="207.5" ></text>
</g>
<g >
<title>in_localip (42 samples, 0.82%)</title><rect x="468.9" y="85" width="9.7" height="15.0" fill="rgb(235,88,48)" rx="2" ry="2" />
<text  x="471.94" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (65 samples, 1.27%)</title><rect x="1083.4" y="37" width="15.0" height="15.0" fill="rgb(206,115,54)" rx="2" ry="2" />
<text  x="1086.40" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.20%)</title><rect x="1072.6" y="229" width="2.3" height="15.0" fill="rgb(209,181,26)" rx="2" ry="2" />
<text  x="1075.55" y="239.5" ></text>
</g>
</g>
</svg>
