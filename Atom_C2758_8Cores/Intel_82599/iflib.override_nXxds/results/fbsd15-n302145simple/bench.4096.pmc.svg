<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="496.5" y="149" width="0.3" height="15.0" fill="rgb(249,90,38)" rx="2" ry="2" />
<text  x="499.54" y="159.5" ></text>
</g>
<g >
<title>ip_input (5 samples, 0.10%)</title><rect x="1084.1" y="149" width="1.2" height="15.0" fill="rgb(217,166,45)" rx="2" ry="2" />
<text  x="1087.14" y="159.5" ></text>
</g>
<g >
<title>lapic_handle_timer (1 samples, 0.02%)</title><rect x="431.2" y="69" width="0.2" height="15.0" fill="rgb(240,229,35)" rx="2" ry="2" />
<text  x="434.15" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (137 samples, 2.65%)</title><rect x="1085.3" y="53" width="31.3" height="15.0" fill="rgb(221,40,32)" rx="2" ry="2" />
<text  x="1088.28" y="63.5" >gr..</text>
</g>
<g >
<title>ixgbe_write_reg (8 samples, 0.16%)</title><rect x="1177.2" y="213" width="1.8" height="15.0" fill="rgb(231,23,10)" rx="2" ry="2" />
<text  x="1180.20" y="223.5" ></text>
</g>
<g >
<title>sleepq_broadcast (8 samples, 0.16%)</title><rect x="1079.3" y="213" width="1.9" height="15.0" fill="rgb(250,187,23)" rx="2" ry="2" />
<text  x="1082.34" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (6 samples, 0.12%)</title><rect x="23.5" y="277" width="1.4" height="15.0" fill="rgb(248,17,40)" rx="2" ry="2" />
<text  x="26.49" y="287.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,659 samples, 32.14%)</title><rect x="688.1" y="213" width="379.4" height="15.0" fill="rgb(241,152,33)" rx="2" ry="2" />
<text  x="691.14" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ether_output_frame (5 samples, 0.10%)</title><rect x="1084.1" y="101" width="1.2" height="15.0" fill="rgb(234,174,35)" rx="2" ry="2" />
<text  x="1087.14" y="111.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (7 samples, 0.14%)</title><rect x="1068.8" y="213" width="1.6" height="15.0" fill="rgb(215,20,38)" rx="2" ry="2" />
<text  x="1071.82" y="223.5" ></text>
</g>
<g >
<title>if_getnumadomain (90 samples, 1.74%)</title><rect x="497.9" y="197" width="20.6" height="15.0" fill="rgb(216,46,17)" rx="2" ry="2" />
<text  x="500.91" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (9 samples, 0.17%)</title><rect x="1150.2" y="213" width="2.1" height="15.0" fill="rgb(231,109,23)" rx="2" ry="2" />
<text  x="1153.22" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.04%)</title><rect x="1149.3" y="213" width="0.5" height="15.0" fill="rgb(225,64,44)" rx="2" ry="2" />
<text  x="1152.30" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (6 samples, 0.12%)</title><rect x="23.5" y="85" width="1.4" height="15.0" fill="rgb(209,57,25)" rx="2" ry="2" />
<text  x="26.49" y="95.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="1083.9" y="245" width="0.2" height="15.0" fill="rgb(212,203,2)" rx="2" ry="2" />
<text  x="1086.91" y="255.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (10 samples, 0.19%)</title><rect x="681.5" y="197" width="2.3" height="15.0" fill="rgb(234,29,34)" rx="2" ry="2" />
<text  x="684.51" y="207.5" ></text>
</g>
<g >
<title>in_lltable_lookup (53 samples, 1.03%)</title><rect x="318.0" y="53" width="12.1" height="15.0" fill="rgb(238,160,44)" rx="2" ry="2" />
<text  x="320.98" y="63.5" ></text>
</g>
<g >
<title>wakeup_any (8 samples, 0.16%)</title><rect x="51.2" y="197" width="1.8" height="15.0" fill="rgb(230,10,27)" rx="2" ry="2" />
<text  x="54.15" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (137 samples, 2.65%)</title><rect x="1085.3" y="197" width="31.3" height="15.0" fill="rgb(225,137,46)" rx="2" ry="2" />
<text  x="1088.28" y="207.5" >ne..</text>
</g>
<g >
<title>pmap_kextract (6 samples, 0.12%)</title><rect x="835.8" y="133" width="1.4" height="15.0" fill="rgb(254,140,33)" rx="2" ry="2" />
<text  x="838.84" y="143.5" ></text>
</g>
<g >
<title>memmove_erms (16 samples, 0.31%)</title><rect x="330.1" y="53" width="3.7" height="15.0" fill="rgb(243,4,2)" rx="2" ry="2" />
<text  x="333.09" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.10%)</title><rect x="47.7" y="197" width="1.2" height="15.0" fill="rgb(228,132,44)" rx="2" ry="2" />
<text  x="50.73" y="207.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="53.2" y="213" width="0.2" height="15.0" fill="rgb(216,203,24)" rx="2" ry="2" />
<text  x="56.21" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_timer (25 samples, 0.48%)</title><rect x="1184.3" y="277" width="5.7" height="15.0" fill="rgb(227,2,19)" rx="2" ry="2" />
<text  x="1187.28" y="287.5" ></text>
</g>
<g >
<title>ether_output (768 samples, 14.88%)</title><rect x="261.7" y="85" width="175.6" height="15.0" fill="rgb(250,17,6)" rx="2" ry="2" />
<text  x="264.73" y="95.5" >ether_output</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="496.8" y="197" width="0.2" height="15.0" fill="rgb(234,121,35)" rx="2" ry="2" />
<text  x="499.77" y="207.5" ></text>
</g>
<g >
<title>m_adj (2 samples, 0.04%)</title><rect x="492.4" y="149" width="0.5" height="15.0" fill="rgb(224,48,25)" rx="2" ry="2" />
<text  x="495.43" y="159.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="553.2" y="69" width="0.3" height="15.0" fill="rgb(230,226,5)" rx="2" ry="2" />
<text  x="556.24" y="79.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (148 samples, 2.87%)</title><rect x="971.0" y="165" width="33.8" height="15.0" fill="rgb(226,9,37)" rx="2" ry="2" />
<text  x="973.96" y="175.5" >bu..</text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.06%)</title><rect x="1175.6" y="213" width="0.7" height="15.0" fill="rgb(254,27,34)" rx="2" ry="2" />
<text  x="1178.60" y="223.5" ></text>
</g>
<g >
<title>zone_import (6 samples, 0.12%)</title><rect x="552.1" y="101" width="1.4" height="15.0" fill="rgb(240,64,26)" rx="2" ry="2" />
<text  x="555.10" y="111.5" ></text>
</g>
<g >
<title>if_getsoftc (9 samples, 0.17%)</title><rect x="393.4" y="37" width="2.1" height="15.0" fill="rgb(210,47,54)" rx="2" ry="2" />
<text  x="396.43" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (6 samples, 0.12%)</title><rect x="23.5" y="229" width="1.4" height="15.0" fill="rgb(205,178,36)" rx="2" ry="2" />
<text  x="26.49" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="1149.8" y="213" width="0.4" height="15.0" fill="rgb(250,189,44)" rx="2" ry="2" />
<text  x="1152.76" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (5 samples, 0.10%)</title><rect x="1084.1" y="133" width="1.2" height="15.0" fill="rgb(229,41,11)" rx="2" ry="2" />
<text  x="1087.14" y="143.5" ></text>
</g>
<g >
<title>iflib_fl_refill (256 samples, 4.96%)</title><rect x="521.0" y="197" width="58.5" height="15.0" fill="rgb(248,41,32)" rx="2" ry="2" />
<text  x="524.01" y="207.5" >iflib_..</text>
</g>
<g >
<title>iflib_if_transmit (351 samples, 6.80%)</title><rect x="350.9" y="53" width="80.3" height="15.0" fill="rgb(228,185,16)" rx="2" ry="2" />
<text  x="353.90" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (82 samples, 1.59%)</title><rect x="985.1" y="149" width="18.8" height="15.0" fill="rgb(220,219,29)" rx="2" ry="2" />
<text  x="988.14" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (6 samples, 0.12%)</title><rect x="1156.2" y="181" width="1.3" height="15.0" fill="rgb(230,192,33)" rx="2" ry="2" />
<text  x="1159.16" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.14%)</title><rect x="391.8" y="37" width="1.6" height="15.0" fill="rgb(246,213,40)" rx="2" ry="2" />
<text  x="394.83" y="47.5" ></text>
</g>
<g >
<title>intr_lookup_source (3 samples, 0.06%)</title><rect x="1183.6" y="261" width="0.7" height="15.0" fill="rgb(248,149,2)" rx="2" ry="2" />
<text  x="1186.60" y="271.5" ></text>
</g>
<g >
<title>ether_input (6 samples, 0.12%)</title><rect x="23.5" y="245" width="1.4" height="15.0" fill="rgb(225,45,26)" rx="2" ry="2" />
<text  x="26.49" y="255.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (5 samples, 0.10%)</title><rect x="1084.1" y="277" width="1.2" height="15.0" fill="rgb(248,103,31)" rx="2" ry="2" />
<text  x="1087.14" y="287.5" ></text>
</g>
<g >
<title>netmap_rx_irq (8 samples, 0.16%)</title><rect x="683.8" y="213" width="1.8" height="15.0" fill="rgb(227,124,22)" rx="2" ry="2" />
<text  x="686.80" y="223.5" ></text>
</g>
<g >
<title>cache_alloc (37 samples, 0.72%)</title><rect x="545.5" y="165" width="8.4" height="15.0" fill="rgb(232,21,23)" rx="2" ry="2" />
<text  x="548.47" y="175.5" ></text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.08%)</title><rect x="497.0" y="197" width="0.9" height="15.0" fill="rgb(227,163,40)" rx="2" ry="2" />
<text  x="500.00" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.04%)</title><rect x="47.0" y="197" width="0.5" height="15.0" fill="rgb(249,59,32)" rx="2" ry="2" />
<text  x="50.04" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (5 samples, 0.10%)</title><rect x="1084.1" y="53" width="1.2" height="15.0" fill="rgb(251,27,16)" rx="2" ry="2" />
<text  x="1087.14" y="63.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (3 samples, 0.06%)</title><rect x="391.1" y="37" width="0.7" height="15.0" fill="rgb(211,42,4)" rx="2" ry="2" />
<text  x="394.14" y="47.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (32 samples, 0.62%)</title><rect x="1171.7" y="229" width="7.3" height="15.0" fill="rgb(217,7,31)" rx="2" ry="2" />
<text  x="1174.71" y="239.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.04%)</title><rect x="548.0" y="117" width="0.4" height="15.0" fill="rgb(210,67,44)" rx="2" ry="2" />
<text  x="550.98" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch (9 samples, 0.17%)</title><rect x="103.5" y="181" width="2.1" height="15.0" fill="rgb(247,191,35)" rx="2" ry="2" />
<text  x="106.51" y="191.5" ></text>
</g>
<g >
<title>ip_tryforward (1,235 samples, 23.93%)</title><rect x="210.1" y="101" width="282.3" height="15.0" fill="rgb(251,199,24)" rx="2" ry="2" />
<text  x="213.06" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (37 samples, 0.72%)</title><rect x="579.5" y="197" width="8.5" height="15.0" fill="rgb(216,213,44)" rx="2" ry="2" />
<text  x="582.54" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,617 samples, 89.46%)</title><rect x="28.3" y="245" width="1055.6" height="15.0" fill="rgb(217,45,27)" rx="2" ry="2" />
<text  x="31.29" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>binuptime (1 samples, 0.02%)</title><rect x="1184.5" y="245" width="0.2" height="15.0" fill="rgb(216,158,51)" rx="2" ry="2" />
<text  x="1187.51" y="255.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (4 samples, 0.08%)</title><rect x="552.6" y="85" width="0.9" height="15.0" fill="rgb(249,113,29)" rx="2" ry="2" />
<text  x="555.56" y="95.5" ></text>
</g>
<g >
<title>ether_nh_input (1,630 samples, 31.58%)</title><rect x="124.1" y="165" width="372.7" height="15.0" fill="rgb(252,62,53)" rx="2" ry="2" />
<text  x="127.09" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ip_input (137 samples, 2.65%)</title><rect x="1085.3" y="133" width="31.3" height="15.0" fill="rgb(207,176,4)" rx="2" ry="2" />
<text  x="1088.28" y="143.5" >ip..</text>
</g>
<g >
<title>iflib_txd_db_check (148 samples, 2.87%)</title><rect x="1033.6" y="181" width="33.9" height="15.0" fill="rgb(223,99,32)" rx="2" ry="2" />
<text  x="1036.61" y="191.5" >if..</text>
</g>
<g >
<title>ip_input (1,375 samples, 26.64%)</title><rect x="178.0" y="117" width="314.4" height="15.0" fill="rgb(230,218,1)" rx="2" ry="2" />
<text  x="181.05" y="127.5" >ip_input</text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.08%)</title><rect x="1176.3" y="213" width="0.9" height="15.0" fill="rgb(218,136,3)" rx="2" ry="2" />
<text  x="1179.28" y="223.5" ></text>
</g>
<g >
<title>cache_alloc_retry (37 samples, 0.72%)</title><rect x="545.5" y="181" width="8.4" height="15.0" fill="rgb(210,135,21)" rx="2" ry="2" />
<text  x="548.47" y="191.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (2 samples, 0.04%)</title><rect x="553.5" y="133" width="0.4" height="15.0" fill="rgb(214,148,9)" rx="2" ry="2" />
<text  x="556.47" y="143.5" ></text>
</g>
<g >
<title>m_freem (139 samples, 2.69%)</title><rect x="824.6" y="165" width="31.8" height="15.0" fill="rgb(220,2,27)" rx="2" ry="2" />
<text  x="827.64" y="175.5" >m_..</text>
</g>
<g >
<title>iflib_if_transmit (5 samples, 0.10%)</title><rect x="1084.1" y="85" width="1.2" height="15.0" fill="rgb(220,199,36)" rx="2" ry="2" />
<text  x="1087.14" y="95.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (52 samples, 1.01%)</title><rect x="1145.6" y="229" width="11.9" height="15.0" fill="rgb(252,176,35)" rx="2" ry="2" />
<text  x="1148.64" y="239.5" ></text>
</g>
<g >
<title>iflib_get_softc (2 samples, 0.04%)</title><rect x="1158.4" y="213" width="0.5" height="15.0" fill="rgb(223,162,48)" rx="2" ry="2" />
<text  x="1161.45" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (137 samples, 2.65%)</title><rect x="1085.3" y="149" width="31.3" height="15.0" fill="rgb(246,104,39)" rx="2" ry="2" />
<text  x="1088.28" y="159.5" >ne..</text>
</g>
<g >
<title>hardclock (18 samples, 0.35%)</title><rect x="1185.2" y="229" width="4.1" height="15.0" fill="rgb(208,74,49)" rx="2" ry="2" />
<text  x="1188.20" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,711 samples, 33.15%)</title><rect x="105.6" y="181" width="391.2" height="15.0" fill="rgb(252,2,11)" rx="2" ry="2" />
<text  x="108.57" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="559.6" y="181" width="0.5" height="15.0" fill="rgb(239,134,48)" rx="2" ry="2" />
<text  x="562.65" y="191.5" ></text>
</g>
<g >
<title>handleevents (23 samples, 0.45%)</title><rect x="1184.7" y="245" width="5.3" height="15.0" fill="rgb(241,105,32)" rx="2" ry="2" />
<text  x="1187.74" y="255.5" ></text>
</g>
<g >
<title>ether_demux (137 samples, 2.65%)</title><rect x="1085.3" y="165" width="31.3" height="15.0" fill="rgb(226,214,51)" rx="2" ry="2" />
<text  x="1088.28" y="175.5" >et..</text>
</g>
<g >
<title>if_input (2 samples, 0.04%)</title><rect x="520.5" y="197" width="0.5" height="15.0" fill="rgb(232,33,33)" rx="2" ry="2" />
<text  x="523.55" y="207.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.02%)</title><rect x="28.1" y="245" width="0.2" height="15.0" fill="rgb(215,56,12)" rx="2" ry="2" />
<text  x="31.06" y="255.5" ></text>
</g>
<g >
<title>m_adj (26 samples, 0.50%)</title><rect x="159.5" y="133" width="6.0" height="15.0" fill="rgb(242,177,5)" rx="2" ry="2" />
<text  x="162.53" y="143.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (176 samples, 3.41%)</title><rect x="641.3" y="197" width="40.2" height="15.0" fill="rgb(236,109,34)" rx="2" ry="2" />
<text  x="644.27" y="207.5" >rxd..</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.08%)</title><rect x="1085.3" y="37" width="0.9" height="15.0" fill="rgb(238,145,11)" rx="2" ry="2" />
<text  x="1088.28" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (103 samples, 2.00%)</title><rect x="588.0" y="197" width="23.5" height="15.0" fill="rgb(237,188,39)" rx="2" ry="2" />
<text  x="591.00" y="207.5" >i..</text>
</g>
<g >
<title>_task_fn_rx (137 samples, 2.65%)</title><rect x="1085.3" y="245" width="31.3" height="15.0" fill="rgb(231,159,30)" rx="2" ry="2" />
<text  x="1088.28" y="255.5" >_t..</text>
</g>
<g >
<title>pmclog_process_callchain (5 samples, 0.10%)</title><rect x="1187.9" y="181" width="1.2" height="15.0" fill="rgb(212,60,3)" rx="2" ry="2" />
<text  x="1190.94" y="191.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,620 samples, 31.39%)</title><rect x="697.1" y="197" width="370.4" height="15.0" fill="rgb(248,164,18)" rx="2" ry="2" />
<text  x="700.06" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ifmp_ring_check_drainage (6 samples, 0.12%)</title><rect x="1067.5" y="213" width="1.3" height="15.0" fill="rgb(238,99,39)" rx="2" ry="2" />
<text  x="1070.45" y="223.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.04%)</title><rect x="1189.3" y="229" width="0.5" height="15.0" fill="rgb(218,161,50)" rx="2" ry="2" />
<text  x="1192.31" y="239.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (544 samples, 10.54%)</title><rect x="732.0" y="181" width="124.4" height="15.0" fill="rgb(239,99,51)" rx="2" ry="2" />
<text  x="735.04" y="191.5" >iflib_completed..</text>
</g>
<g >
<title>sleepq_release (4 samples, 0.08%)</title><rect x="1070.4" y="229" width="0.9" height="15.0" fill="rgb(248,98,21)" rx="2" ry="2" />
<text  x="1073.42" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (5 samples, 0.10%)</title><rect x="1084.1" y="261" width="1.2" height="15.0" fill="rgb(239,147,37)" rx="2" ry="2" />
<text  x="1087.14" y="271.5" ></text>
</g>
<g >
<title>wakeup_any (6 samples, 0.12%)</title><rect x="23.5" y="69" width="1.4" height="15.0" fill="rgb(239,145,53)" rx="2" ry="2" />
<text  x="26.49" y="79.5" ></text>
</g>
<g >
<title>msi_vector (5 samples, 0.10%)</title><rect x="1180.4" y="261" width="1.1" height="15.0" fill="rgb(244,33,18)" rx="2" ry="2" />
<text  x="1183.40" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.12%)</title><rect x="23.5" y="53" width="1.4" height="15.0" fill="rgb(236,159,3)" rx="2" ry="2" />
<text  x="26.49" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (26 samples, 0.50%)</title><rect x="431.4" y="69" width="5.9" height="15.0" fill="rgb(212,143,54)" rx="2" ry="2" />
<text  x="434.38" y="79.5" ></text>
</g>
<g >
<title>lapic_handle_intr (12 samples, 0.23%)</title><rect x="1181.5" y="277" width="2.8" height="15.0" fill="rgb(244,187,16)" rx="2" ry="2" />
<text  x="1184.54" y="287.5" ></text>
</g>
<g >
<title>ether_output (5 samples, 0.10%)</title><rect x="1084.1" y="117" width="1.2" height="15.0" fill="rgb(219,112,42)" rx="2" ry="2" />
<text  x="1087.14" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (3 samples, 0.06%)</title><rect x="553.9" y="181" width="0.7" height="15.0" fill="rgb(237,15,30)" rx="2" ry="2" />
<text  x="556.93" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,757 samples, 53.42%)</title><rect x="53.4" y="213" width="630.4" height="15.0" fill="rgb(251,144,8)" rx="2" ry="2" />
<text  x="56.44" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>in_localip (47 samples, 0.91%)</title><rect x="437.3" y="85" width="10.8" height="15.0" fill="rgb(215,15,3)" rx="2" ry="2" />
<text  x="440.32" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,427 samples, 27.65%)</title><rect x="166.2" y="133" width="326.2" height="15.0" fill="rgb(229,129,32)" rx="2" ry="2" />
<text  x="169.16" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.06%)</title><rect x="1086.2" y="37" width="0.7" height="15.0" fill="rgb(237,111,48)" rx="2" ry="2" />
<text  x="1089.20" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.06%)</title><rect x="165.5" y="133" width="0.7" height="15.0" fill="rgb(246,165,38)" rx="2" ry="2" />
<text  x="168.47" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="1083.7" y="197" width="0.2" height="15.0" fill="rgb(223,32,23)" rx="2" ry="2" />
<text  x="1086.68" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (7 samples, 0.14%)</title><rect x="1157.5" y="229" width="1.6" height="15.0" fill="rgb(222,184,35)" rx="2" ry="2" />
<text  x="1160.53" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (6 samples, 0.12%)</title><rect x="23.5" y="261" width="1.4" height="15.0" fill="rgb(222,192,4)" rx="2" ry="2" />
<text  x="26.49" y="271.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.04%)</title><rect x="553.5" y="117" width="0.4" height="15.0" fill="rgb(222,198,16)" rx="2" ry="2" />
<text  x="556.47" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (137 samples, 2.65%)</title><rect x="1085.3" y="277" width="31.3" height="15.0" fill="rgb(229,26,33)" rx="2" ry="2" />
<text  x="1088.28" y="287.5" >gt..</text>
</g>
<g >
<title>iflib_if_transmit (137 samples, 2.65%)</title><rect x="1085.3" y="69" width="31.3" height="15.0" fill="rgb(215,42,29)" rx="2" ry="2" />
<text  x="1088.28" y="79.5" >if..</text>
</g>
<g >
<title>lapic_eoi (3 samples, 0.06%)</title><rect x="1179.0" y="245" width="0.7" height="15.0" fill="rgb(206,78,9)" rx="2" ry="2" />
<text  x="1182.03" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (22 samples, 0.43%)</title><rect x="554.6" y="181" width="5.0" height="15.0" fill="rgb(237,51,11)" rx="2" ry="2" />
<text  x="557.62" y="191.5" ></text>
</g>
<g >
<title>wakeup (22 samples, 0.43%)</title><rect x="1078.9" y="229" width="5.0" height="15.0" fill="rgb(246,88,7)" rx="2" ry="2" />
<text  x="1081.88" y="239.5" ></text>
</g>
<g >
<title>ether_input (137 samples, 2.65%)</title><rect x="1085.3" y="213" width="31.3" height="15.0" fill="rgb(222,47,25)" rx="2" ry="2" />
<text  x="1088.28" y="223.5" >et..</text>
</g>
<g >
<title>arpresolve (136 samples, 2.64%)</title><rect x="302.7" y="69" width="31.1" height="15.0" fill="rgb(208,189,41)" rx="2" ry="2" />
<text  x="305.66" y="79.5" >ar..</text>
</g>
<g >
<title>iflib_rxeof (137 samples, 2.65%)</title><rect x="1085.3" y="229" width="31.3" height="15.0" fill="rgb(242,219,24)" rx="2" ry="2" />
<text  x="1088.28" y="239.5" >if..</text>
</g>
<g >
<title>bsearch4_lookup (3 samples, 0.06%)</title><rect x="491.7" y="53" width="0.7" height="15.0" fill="rgb(205,38,12)" rx="2" ry="2" />
<text  x="494.74" y="63.5" ></text>
</g>
<g >
<title>ip_tryforward (137 samples, 2.65%)</title><rect x="1085.3" y="117" width="31.3" height="15.0" fill="rgb(212,29,26)" rx="2" ry="2" />
<text  x="1088.28" y="127.5" >ip..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (56 samples, 1.09%)</title><rect x="378.3" y="37" width="12.8" height="15.0" fill="rgb(222,176,50)" rx="2" ry="2" />
<text  x="381.34" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (52 samples, 1.01%)</title><rect x="812.7" y="165" width="11.9" height="15.0" fill="rgb(215,59,2)" rx="2" ry="2" />
<text  x="815.75" y="175.5" ></text>
</g>
<g >
<title>if_getnetmapadapter (2 samples, 0.04%)</title><rect x="685.2" y="197" width="0.4" height="15.0" fill="rgb(228,42,16)" rx="2" ry="2" />
<text  x="688.17" y="207.5" ></text>
</g>
<g >
<title>ether_demux (1,514 samples, 29.34%)</title><rect x="146.3" y="149" width="346.1" height="15.0" fill="rgb(227,0,9)" rx="2" ry="2" />
<text  x="149.27" y="159.5" >ether_demux</text>
</g>
<g >
<title>gtaskqueue_run_locked (137 samples, 2.65%)</title><rect x="1085.3" y="261" width="31.3" height="15.0" fill="rgb(238,76,32)" rx="2" ry="2" />
<text  x="1088.28" y="271.5" >gt..</text>
</g>
<g >
<title>m_pkthdr_init (16 samples, 0.31%)</title><rect x="612.0" y="197" width="3.7" height="15.0" fill="rgb(248,115,45)" rx="2" ry="2" />
<text  x="615.00" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,817 samples, 54.58%)</title><rect x="41.6" y="229" width="644.0" height="15.0" fill="rgb(211,99,30)" rx="2" ry="2" />
<text  x="44.55" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1189.1" y="181" width="0.2" height="15.0" fill="rgb(251,179,48)" rx="2" ry="2" />
<text  x="1192.09" y="191.5" ></text>
</g>
<g >
<title>timercb (24 samples, 0.47%)</title><rect x="1184.5" y="261" width="5.5" height="15.0" fill="rgb(208,3,7)" rx="2" ry="2" />
<text  x="1187.51" y="271.5" ></text>
</g>
<g >
<title>ether_output_frame (137 samples, 2.65%)</title><rect x="1085.3" y="85" width="31.3" height="15.0" fill="rgb(232,1,20)" rx="2" ry="2" />
<text  x="1088.28" y="95.5" >et..</text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="35.4" y="229" width="0.2" height="15.0" fill="rgb(214,123,45)" rx="2" ry="2" />
<text  x="38.38" y="239.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (12 samples, 0.23%)</title><rect x="549.4" y="101" width="2.7" height="15.0" fill="rgb(234,80,38)" rx="2" ry="2" />
<text  x="552.36" y="111.5" ></text>
</g>
<g >
<title>pmc_process_samples (13 samples, 0.25%)</title><rect x="1186.3" y="197" width="3.0" height="15.0" fill="rgb(235,73,0)" rx="2" ry="2" />
<text  x="1189.34" y="207.5" ></text>
</g>
<g >
<title>ip_input (6 samples, 0.12%)</title><rect x="23.5" y="165" width="1.4" height="15.0" fill="rgb(242,70,26)" rx="2" ry="2" />
<text  x="26.49" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (7 samples, 0.14%)</title><rect x="51.4" y="181" width="1.6" height="15.0" fill="rgb(227,209,20)" rx="2" ry="2" />
<text  x="54.38" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (17 samples, 0.33%)</title><rect x="1063.6" y="165" width="3.9" height="15.0" fill="rgb(221,188,0)" rx="2" ry="2" />
<text  x="1066.56" y="175.5" ></text>
</g>
<g >
<title>memcmp (16 samples, 0.31%)</title><rect x="492.9" y="149" width="3.6" height="15.0" fill="rgb(210,84,11)" rx="2" ry="2" />
<text  x="495.88" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="53.0" y="213" width="0.2" height="15.0" fill="rgb(205,215,17)" rx="2" ry="2" />
<text  x="55.98" y="223.5" ></text>
</g>
<g >
<title>all (5,161 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(219,74,52)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>uma_small_alloc (16 samples, 0.31%)</title><rect x="548.4" y="117" width="3.7" height="15.0" fill="rgb(235,73,51)" rx="2" ry="2" />
<text  x="551.44" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (7 samples, 0.14%)</title><rect x="1159.1" y="229" width="1.6" height="15.0" fill="rgb(228,82,35)" rx="2" ry="2" />
<text  x="1162.13" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (5 samples, 0.10%)</title><rect x="1084.1" y="245" width="1.2" height="15.0" fill="rgb(211,0,7)" rx="2" ry="2" />
<text  x="1087.14" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (48 samples, 0.93%)</title><rect x="1160.7" y="229" width="11.0" height="15.0" fill="rgb(224,44,53)" rx="2" ry="2" />
<text  x="1163.73" y="239.5" ></text>
</g>
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="23.3" y="277" width="0.2" height="15.0" fill="rgb(230,5,53)" rx="2" ry="2" />
<text  x="26.26" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,619 samples, 89.50%)</title><rect x="28.1" y="261" width="1056.0" height="15.0" fill="rgb(244,85,5)" rx="2" ry="2" />
<text  x="31.06" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="47.5" y="197" width="0.2" height="15.0" fill="rgb(232,11,18)" rx="2" ry="2" />
<text  x="50.50" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.06%)</title><rect x="640.6" y="197" width="0.7" height="15.0" fill="rgb(233,178,2)" rx="2" ry="2" />
<text  x="643.58" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (10 samples, 0.19%)</title><rect x="48.9" y="197" width="2.3" height="15.0" fill="rgb(219,86,2)" rx="2" ry="2" />
<text  x="51.87" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (9 samples, 0.17%)</title><rect x="1155.5" y="213" width="2.0" height="15.0" fill="rgb(235,102,37)" rx="2" ry="2" />
<text  x="1158.48" y="223.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (188 samples, 3.64%)</title><rect x="1136.0" y="245" width="43.0" height="15.0" fill="rgb(205,55,49)" rx="2" ry="2" />
<text  x="1139.04" y="255.5" >ifli..</text>
</g>
<g >
<title>ether_nh_input (137 samples, 2.65%)</title><rect x="1085.3" y="181" width="31.3" height="15.0" fill="rgb(249,154,39)" rx="2" ry="2" />
<text  x="1088.28" y="191.5" >et..</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (5 samples, 0.10%)</title><rect x="984.0" y="149" width="1.1" height="15.0" fill="rgb(253,138,51)" rx="2" ry="2" />
<text  x="987.00" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="1158.9" y="213" width="0.2" height="15.0" fill="rgb(232,62,3)" rx="2" ry="2" />
<text  x="1161.91" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.16%)</title><rect x="729.5" y="181" width="1.9" height="15.0" fill="rgb(213,197,51)" rx="2" ry="2" />
<text  x="732.52" y="191.5" ></text>
</g>
<g >
<title>ip_findroute (194 samples, 3.76%)</title><rect x="448.1" y="85" width="44.3" height="15.0" fill="rgb(243,12,50)" rx="2" ry="2" />
<text  x="451.07" y="95.5" >ip_f..</text>
</g>
<g >
<title>ether_output (6 samples, 0.12%)</title><rect x="23.5" y="133" width="1.4" height="15.0" fill="rgb(208,183,19)" rx="2" ry="2" />
<text  x="26.49" y="143.5" ></text>
</g>
<g >
<title>bsearch4_lookup (86 samples, 1.67%)</title><rect x="454.7" y="69" width="19.7" height="15.0" fill="rgb(213,105,22)" rx="2" ry="2" />
<text  x="457.70" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (5 samples, 0.10%)</title><rect x="1084.1" y="69" width="1.2" height="15.0" fill="rgb(235,139,45)" rx="2" ry="2" />
<text  x="1087.14" y="79.5" ></text>
</g>
<g >
<title>wakeup_any (2 samples, 0.04%)</title><rect x="1116.1" y="37" width="0.5" height="15.0" fill="rgb(208,175,43)" rx="2" ry="2" />
<text  x="1119.15" y="47.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (10 samples, 0.19%)</title><rect x="39.3" y="229" width="2.3" height="15.0" fill="rgb(253,65,28)" rx="2" ry="2" />
<text  x="42.27" y="239.5" ></text>
</g>
<g >
<title>uma_zfree_arg (84 samples, 1.63%)</title><rect x="837.2" y="133" width="19.2" height="15.0" fill="rgb(213,114,24)" rx="2" ry="2" />
<text  x="840.21" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (12 samples, 0.23%)</title><rect x="1071.3" y="229" width="2.8" height="15.0" fill="rgb(251,91,33)" rx="2" ry="2" />
<text  x="1074.34" y="239.5" ></text>
</g>
<g >
<title>ether_demux (6 samples, 0.12%)</title><rect x="23.5" y="197" width="1.4" height="15.0" fill="rgb(231,110,8)" rx="2" ry="2" />
<text  x="26.49" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (2 samples, 0.04%)</title><rect x="611.5" y="197" width="0.5" height="15.0" fill="rgb(217,68,53)" rx="2" ry="2" />
<text  x="614.55" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (109 samples, 2.11%)</title><rect x="615.7" y="197" width="24.9" height="15.0" fill="rgb(241,220,53)" rx="2" ry="2" />
<text  x="618.66" y="207.5" >m..</text>
</g>
<g >
<title>msi_eoi_source (3 samples, 0.06%)</title><rect x="1179.7" y="245" width="0.7" height="15.0" fill="rgb(230,106,10)" rx="2" ry="2" />
<text  x="1182.71" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.10%)</title><rect x="1084.1" y="165" width="1.2" height="15.0" fill="rgb(211,74,1)" rx="2" ry="2" />
<text  x="1087.14" y="175.5" ></text>
</g>
<g >
<title>ether_input (1,769 samples, 34.28%)</title><rect x="92.3" y="197" width="404.5" height="15.0" fill="rgb(238,177,28)" rx="2" ry="2" />
<text  x="95.31" y="207.5" >ether_input</text>
</g>
<g >
<title>_task_fn_tx (1,683 samples, 32.61%)</title><rect x="685.6" y="229" width="384.8" height="15.0" fill="rgb(243,11,4)" rx="2" ry="2" />
<text  x="688.62" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>fib4_lookup (79 samples, 1.53%)</title><rect x="474.4" y="69" width="18.0" height="15.0" fill="rgb(247,169,15)" rx="2" ry="2" />
<text  x="477.36" y="79.5" ></text>
</g>
<g >
<title>spinlock_exit (21 samples, 0.41%)</title><rect x="1074.1" y="229" width="4.8" height="15.0" fill="rgb(211,163,21)" rx="2" ry="2" />
<text  x="1077.08" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (6 samples, 0.12%)</title><rect x="23.5" y="117" width="1.4" height="15.0" fill="rgb(227,13,29)" rx="2" ry="2" />
<text  x="26.49" y="127.5" ></text>
</g>
<g >
<title>ether_input (5 samples, 0.10%)</title><rect x="1084.1" y="229" width="1.2" height="15.0" fill="rgb(248,112,48)" rx="2" ry="2" />
<text  x="1087.14" y="239.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (156 samples, 3.02%)</title><rect x="395.5" y="37" width="35.7" height="15.0" fill="rgb(251,188,48)" rx="2" ry="2" />
<text  x="398.48" y="47.5" >ifm..</text>
</g>
<g >
<title>ip_tryforward (6 samples, 0.12%)</title><rect x="23.5" y="149" width="1.4" height="15.0" fill="rgb(246,6,48)" rx="2" ry="2" />
<text  x="26.49" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (14 samples, 0.27%)</title><rect x="1152.3" y="213" width="3.2" height="15.0" fill="rgb(208,209,43)" rx="2" ry="2" />
<text  x="1155.27" y="223.5" ></text>
</g>
<g >
<title>fork_exit (4,619 samples, 89.50%)</title><rect x="28.1" y="277" width="1056.0" height="15.0" fill="rgb(225,14,18)" rx="2" ry="2" />
<text  x="31.06" y="287.5" >fork_exit</text>
</g>
<g >
<title>mb_dtor_mbuf (7 samples, 0.14%)</title><rect x="854.8" y="117" width="1.6" height="15.0" fill="rgb(225,168,15)" rx="2" ry="2" />
<text  x="857.82" y="127.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.02%)</title><rect x="553.0" y="69" width="0.2" height="15.0" fill="rgb(223,193,45)" rx="2" ry="2" />
<text  x="556.01" y="79.5" ></text>
</g>
<g >
<title>pagezero_erms (11 samples, 0.21%)</title><rect x="549.4" y="85" width="2.5" height="15.0" fill="rgb(220,107,49)" rx="2" ry="2" />
<text  x="552.36" y="95.5" ></text>
</g>
<g >
<title>ether_output_frame (426 samples, 8.25%)</title><rect x="333.8" y="69" width="97.4" height="15.0" fill="rgb(247,31,21)" rx="2" ry="2" />
<text  x="336.75" y="79.5" >ether_outpu..</text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="1070.0" y="197" width="0.4" height="15.0" fill="rgb(212,224,45)" rx="2" ry="2" />
<text  x="1072.97" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.10%)</title><rect x="1084.1" y="37" width="1.2" height="15.0" fill="rgb(236,69,47)" rx="2" ry="2" />
<text  x="1087.14" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (15 samples, 0.29%)</title><rect x="10.0" y="277" width="3.4" height="15.0" fill="rgb(246,112,23)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (20 samples, 0.39%)</title><rect x="1059.0" y="165" width="4.6" height="15.0" fill="rgb(206,187,37)" rx="2" ry="2" />
<text  x="1061.99" y="175.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (10 samples, 0.19%)</title><rect x="694.8" y="197" width="2.3" height="15.0" fill="rgb(219,137,43)" rx="2" ry="2" />
<text  x="697.77" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="52.1" y="165" width="0.9" height="15.0" fill="rgb(230,186,54)" rx="2" ry="2" />
<text  x="55.07" y="175.5" ></text>
</g>
<g >
<title>intr_execute_handlers (284 samples, 5.50%)</title><rect x="1116.6" y="277" width="64.9" height="15.0" fill="rgb(206,175,29)" rx="2" ry="2" />
<text  x="1119.61" y="287.5" >intr_ex..</text>
</g>
<g >
<title>spinlock_enter (54 samples, 1.05%)</title><rect x="1086.9" y="37" width="12.3" height="15.0" fill="rgb(251,182,53)" rx="2" ry="2" />
<text  x="1089.88" y="47.5" ></text>
</g>
<g >
<title>zone_import (37 samples, 0.72%)</title><rect x="545.5" y="149" width="8.4" height="15.0" fill="rgb(248,35,3)" rx="2" ry="2" />
<text  x="548.47" y="159.5" ></text>
</g>
<g >
<title>iflib_if_transmit (6 samples, 0.12%)</title><rect x="23.5" y="101" width="1.4" height="15.0" fill="rgb(213,129,45)" rx="2" ry="2" />
<text  x="26.49" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (6 samples, 0.12%)</title><rect x="23.5" y="181" width="1.4" height="15.0" fill="rgb(208,88,43)" rx="2" ry="2" />
<text  x="26.49" y="191.5" ></text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.06%)</title><rect x="731.4" y="181" width="0.6" height="15.0" fill="rgb(213,205,51)" rx="2" ry="2" />
<text  x="734.35" y="191.5" ></text>
</g>
<g >
<title>iflib_encap (775 samples, 15.02%)</title><rect x="856.4" y="181" width="177.2" height="15.0" fill="rgb(232,201,25)" rx="2" ry="2" />
<text  x="859.42" y="191.5" >iflib_encap</text>
</g>
<g >
<title>loadtimer (1 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(218,109,10)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>pmc_hook_handler (13 samples, 0.25%)</title><rect x="1186.3" y="213" width="3.0" height="15.0" fill="rgb(236,53,42)" rx="2" ry="2" />
<text  x="1189.34" y="223.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (85 samples, 1.65%)</title><rect x="560.1" y="181" width="19.4" height="15.0" fill="rgb(227,205,20)" rx="2" ry="2" />
<text  x="563.10" y="191.5" ></text>
</g>
<g >
<title>pmap_zero_page (1 samples, 0.02%)</title><rect x="551.9" y="85" width="0.2" height="15.0" fill="rgb(208,201,48)" rx="2" ry="2" />
<text  x="554.87" y="95.5" ></text>
</g>
<g >
<title>if_inc_counter (7 samples, 0.14%)</title><rect x="518.9" y="197" width="1.6" height="15.0" fill="rgb(222,173,15)" rx="2" ry="2" />
<text  x="521.95" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (30 samples, 0.58%)</title><rect x="546.6" y="133" width="6.9" height="15.0" fill="rgb(248,150,29)" rx="2" ry="2" />
<text  x="549.61" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (126 samples, 2.44%)</title><rect x="1004.8" y="165" width="28.8" height="15.0" fill="rgb(223,20,36)" rx="2" ry="2" />
<text  x="1007.80" y="175.5" >ix..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (36 samples, 0.70%)</title><rect x="44.8" y="213" width="8.2" height="15.0" fill="rgb(240,203,6)" rx="2" ry="2" />
<text  x="47.75" y="223.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (16 samples, 0.31%)</title><rect x="35.6" y="229" width="3.7" height="15.0" fill="rgb(227,126,33)" rx="2" ry="2" />
<text  x="38.61" y="239.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="1003.7" y="133" width="0.2" height="15.0" fill="rgb(213,164,40)" rx="2" ry="2" />
<text  x="1006.66" y="143.5" ></text>
</g>
<g >
<title>ether_nh_input (6 samples, 0.12%)</title><rect x="23.5" y="213" width="1.4" height="15.0" fill="rgb(250,23,7)" rx="2" ry="2" />
<text  x="26.49" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (74 samples, 1.43%)</title><rect x="1099.2" y="37" width="16.9" height="15.0" fill="rgb(238,200,18)" rx="2" ry="2" />
<text  x="1102.23" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.02%)</title><rect x="547.8" y="117" width="0.2" height="15.0" fill="rgb(223,171,50)" rx="2" ry="2" />
<text  x="550.76" y="127.5" ></text>
</g>
<g >
<title>zone_alloc_item (6 samples, 0.12%)</title><rect x="552.1" y="117" width="1.4" height="15.0" fill="rgb(223,39,37)" rx="2" ry="2" />
<text  x="555.10" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.10%)</title><rect x="1084.1" y="213" width="1.2" height="15.0" fill="rgb(227,208,7)" rx="2" ry="2" />
<text  x="1087.14" y="223.5" ></text>
</g>
<g >
<title>doreti (14 samples, 0.27%)</title><rect x="24.9" y="277" width="3.2" height="15.0" fill="rgb(240,85,43)" rx="2" ry="2" />
<text  x="27.86" y="287.5" ></text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1187.7" y="181" width="0.2" height="15.0" fill="rgb(241,23,14)" rx="2" ry="2" />
<text  x="1190.71" y="191.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (43 samples, 0.83%)</title><rect x="13.4" y="277" width="9.9" height="15.0" fill="rgb(218,135,38)" rx="2" ry="2" />
<text  x="16.43" y="287.5" ></text>
</g>
<g >
<title>sleepq_lock (9 samples, 0.17%)</title><rect x="1155.5" y="197" width="2.0" height="15.0" fill="rgb(231,168,17)" rx="2" ry="2" />
<text  x="1158.48" y="207.5" ></text>
</g>
<g >
<title>ether_demux (5 samples, 0.10%)</title><rect x="1084.1" y="181" width="1.2" height="15.0" fill="rgb(222,124,44)" rx="2" ry="2" />
<text  x="1087.14" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (5 samples, 0.10%)</title><rect x="1084.1" y="197" width="1.2" height="15.0" fill="rgb(216,191,38)" rx="2" ry="2" />
<text  x="1087.14" y="207.5" ></text>
</g>
<g >
<title>m_free (120 samples, 2.33%)</title><rect x="829.0" y="149" width="27.4" height="15.0" fill="rgb(207,71,40)" rx="2" ry="2" />
<text  x="831.98" y="159.5" >m..</text>
</g>
<g >
<title>pmap_kextract (4 samples, 0.08%)</title><rect x="1003.9" y="149" width="0.9" height="15.0" fill="rgb(233,107,21)" rx="2" ry="2" />
<text  x="1006.89" y="159.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (13 samples, 0.25%)</title><rect x="576.6" y="165" width="2.9" height="15.0" fill="rgb(220,89,20)" rx="2" ry="2" />
<text  x="579.56" y="175.5" ></text>
</g>
<g >
<title>intr_event_handle (239 samples, 4.63%)</title><rect x="1125.8" y="261" width="54.6" height="15.0" fill="rgb(243,119,16)" rx="2" ry="2" />
<text  x="1128.75" y="271.5" >intr_..</text>
</g>
<g >
<title>et_start (1 samples, 0.02%)</title><rect x="1185.0" y="229" width="0.2" height="15.0" fill="rgb(230,220,18)" rx="2" ry="2" />
<text  x="1187.97" y="239.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (6 samples, 0.12%)</title><rect x="37.9" y="213" width="1.4" height="15.0" fill="rgb(237,46,17)" rx="2" ry="2" />
<text  x="40.89" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (12 samples, 0.23%)</title><rect x="1081.2" y="213" width="2.7" height="15.0" fill="rgb(242,160,41)" rx="2" ry="2" />
<text  x="1084.17" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (6 samples, 0.12%)</title><rect x="23.5" y="37" width="1.4" height="15.0" fill="rgb(251,141,33)" rx="2" ry="2" />
<text  x="26.49" y="47.5" ></text>
</g>
<g >
<title>ether_output (137 samples, 2.65%)</title><rect x="1085.3" y="101" width="31.3" height="15.0" fill="rgb(208,132,18)" rx="2" ry="2" />
<text  x="1088.28" y="111.5" >et..</text>
</g>
<g >
<title>if_getvnet (2 samples, 0.04%)</title><rect x="518.5" y="197" width="0.4" height="15.0" fill="rgb(241,205,46)" rx="2" ry="2" />
<text  x="521.49" y="207.5" ></text>
</g>
</g>
</svg>
