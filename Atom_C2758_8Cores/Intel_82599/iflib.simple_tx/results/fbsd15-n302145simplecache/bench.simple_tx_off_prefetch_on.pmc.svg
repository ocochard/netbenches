<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="26.7" y="229" width="0.5" height="15.0" fill="rgb(221,82,35)" rx="2" ry="2" />
<text  x="29.71" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.06%)</title><rect x="1154.7" y="213" width="0.7" height="15.0" fill="rgb(230,227,45)" rx="2" ry="2" />
<text  x="1157.72" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (142 samples, 2.79%)</title><rect x="1090.7" y="69" width="32.9" height="15.0" fill="rgb(232,124,31)" rx="2" ry="2" />
<text  x="1093.66" y="79.5" >if..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (79 samples, 1.55%)</title><rect x="993.4" y="149" width="18.3" height="15.0" fill="rgb(219,26,4)" rx="2" ry="2" />
<text  x="996.41" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (1,784 samples, 35.09%)</title><rect x="120.5" y="165" width="414.0" height="15.0" fill="rgb(231,222,13)" rx="2" ry="2" />
<text  x="123.48" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (40 samples, 0.79%)</title><rect x="594.2" y="197" width="9.3" height="15.0" fill="rgb(207,99,11)" rx="2" ry="2" />
<text  x="597.20" y="207.5" ></text>
</g>
<g >
<title>ip_findroute (221 samples, 4.35%)</title><rect x="479.5" y="85" width="51.3" height="15.0" fill="rgb(250,207,35)" rx="2" ry="2" />
<text  x="482.54" y="95.5" >ip_fi..</text>
</g>
<g >
<title>ether_demux (2 samples, 0.04%)</title><rect x="26.7" y="197" width="0.5" height="15.0" fill="rgb(210,46,40)" rx="2" ry="2" />
<text  x="29.71" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (9 samples, 0.18%)</title><rect x="841.6" y="133" width="2.1" height="15.0" fill="rgb(254,1,31)" rx="2" ry="2" />
<text  x="844.62" y="143.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1187.9" y="181" width="0.2" height="15.0" fill="rgb(208,59,23)" rx="2" ry="2" />
<text  x="1190.91" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.08%)</title><rect x="761.5" y="181" width="1.0" height="15.0" fill="rgb(242,70,21)" rx="2" ry="2" />
<text  x="764.54" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,570 samples, 89.89%)</title><rect x="29.7" y="261" width="1060.7" height="15.0" fill="rgb(209,126,24)" rx="2" ry="2" />
<text  x="32.73" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>lapic_handle_timer (18 samples, 0.35%)</title><rect x="1185.8" y="277" width="4.2" height="15.0" fill="rgb(216,56,29)" rx="2" ry="2" />
<text  x="1188.82" y="287.5" ></text>
</g>
<g >
<title>lapic_handle_intr (13 samples, 0.26%)</title><rect x="1182.8" y="277" width="3.0" height="15.0" fill="rgb(232,3,26)" rx="2" ry="2" />
<text  x="1185.80" y="287.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.04%)</title><rect x="534.8" y="197" width="0.4" height="15.0" fill="rgb(237,134,25)" rx="2" ry="2" />
<text  x="537.78" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,904 samples, 57.12%)</title><rect x="52.2" y="213" width="674.1" height="15.0" fill="rgb(205,16,9)" rx="2" ry="2" />
<text  x="55.24" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.12%)</title><rect x="563.1" y="133" width="1.4" height="15.0" fill="rgb(221,37,13)" rx="2" ry="2" />
<text  x="566.10" y="143.5" ></text>
</g>
<g >
<title>msi_vector (1 samples, 0.02%)</title><rect x="1181.6" y="261" width="0.3" height="15.0" fill="rgb(207,83,31)" rx="2" ry="2" />
<text  x="1184.64" y="271.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (105 samples, 2.07%)</title><rect x="569.8" y="181" width="24.4" height="15.0" fill="rgb(207,196,10)" rx="2" ry="2" />
<text  x="572.83" y="191.5" >u..</text>
</g>
<g >
<title>in_localip (41 samples, 0.81%)</title><rect x="470.0" y="85" width="9.5" height="15.0" fill="rgb(214,118,35)" rx="2" ry="2" />
<text  x="473.02" y="95.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (2 samples, 0.04%)</title><rect x="40.6" y="213" width="0.5" height="15.0" fill="rgb(235,178,52)" rx="2" ry="2" />
<text  x="43.64" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.06%)</title><rect x="46.9" y="197" width="0.7" height="15.0" fill="rgb(239,195,43)" rx="2" ry="2" />
<text  x="49.90" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.04%)</title><rect x="1185.4" y="261" width="0.4" height="15.0" fill="rgb(209,103,51)" rx="2" ry="2" />
<text  x="1188.36" y="271.5" ></text>
</g>
<g >
<title>ether_output_frame (488 samples, 9.60%)</title><rect x="353.3" y="69" width="113.2" height="15.0" fill="rgb(248,93,16)" rx="2" ry="2" />
<text  x="356.28" y="79.5" >ether_output_..</text>
</g>
<g >
<title>_task_fn_rx (2,954 samples, 58.10%)</title><rect x="42.0" y="229" width="685.7" height="15.0" fill="rgb(233,13,51)" rx="2" ry="2" />
<text  x="45.03" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (4 samples, 0.08%)</title><rect x="563.3" y="101" width="1.0" height="15.0" fill="rgb(230,109,16)" rx="2" ry="2" />
<text  x="566.33" y="111.5" ></text>
</g>
<g >
<title>doreti (11 samples, 0.22%)</title><rect x="27.2" y="277" width="2.5" height="15.0" fill="rgb(233,215,30)" rx="2" ry="2" />
<text  x="30.18" y="287.5" ></text>
</g>
<g >
<title>bsearch4_lookup (103 samples, 2.03%)</title><rect x="486.3" y="69" width="23.9" height="15.0" fill="rgb(239,115,39)" rx="2" ry="2" />
<text  x="489.27" y="79.5" >b..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (13 samples, 0.26%)</title><rect x="1076.7" y="213" width="3.1" height="15.0" fill="rgb(231,200,45)" rx="2" ry="2" />
<text  x="1079.73" y="223.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (8 samples, 0.16%)</title><rect x="39.2" y="229" width="1.9" height="15.0" fill="rgb(238,57,37)" rx="2" ry="2" />
<text  x="42.24" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (308 samples, 6.06%)</title><rect x="635.3" y="197" width="71.5" height="15.0" fill="rgb(225,111,22)" rx="2" ry="2" />
<text  x="638.28" y="207.5" >memcpy_e..</text>
</g>
<g >
<title>bsearch4_lookup (5 samples, 0.10%)</title><rect x="529.7" y="53" width="1.1" height="15.0" fill="rgb(214,165,1)" rx="2" ry="2" />
<text  x="532.67" y="63.5" ></text>
</g>
<g >
<title>ip_tryforward (142 samples, 2.79%)</title><rect x="1090.7" y="117" width="32.9" height="15.0" fill="rgb(223,92,41)" rx="2" ry="2" />
<text  x="1093.66" y="127.5" >ip..</text>
</g>
<g >
<title>spinlock_enter (12 samples, 0.24%)</title><rect x="1155.4" y="213" width="2.8" height="15.0" fill="rgb(246,224,50)" rx="2" ry="2" />
<text  x="1158.42" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (8 samples, 0.16%)</title><rect x="48.8" y="197" width="1.8" height="15.0" fill="rgb(217,120,19)" rx="2" ry="2" />
<text  x="51.76" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (101 samples, 1.99%)</title><rect x="603.5" y="197" width="23.4" height="15.0" fill="rgb(239,173,52)" rx="2" ry="2" />
<text  x="606.48" y="207.5" >i..</text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.14%)</title><rect x="562.9" y="181" width="1.6" height="15.0" fill="rgb(247,38,32)" rx="2" ry="2" />
<text  x="565.86" y="191.5" ></text>
</g>
<g >
<title>sleepq_broadcast (6 samples, 0.12%)</title><rect x="1088.6" y="213" width="1.4" height="15.0" fill="rgb(236,184,41)" rx="2" ry="2" />
<text  x="1091.57" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (392 samples, 7.71%)</title><rect x="375.6" y="53" width="90.9" height="15.0" fill="rgb(248,159,7)" rx="2" ry="2" />
<text  x="378.56" y="63.5" >iflib_if_t..</text>
</g>
<g >
<title>ether_input (2 samples, 0.04%)</title><rect x="26.7" y="245" width="0.5" height="15.0" fill="rgb(219,155,10)" rx="2" ry="2" />
<text  x="29.71" y="255.5" ></text>
</g>
<g >
<title>m_freem (167 samples, 3.28%)</title><rect x="827.9" y="165" width="38.8" height="15.0" fill="rgb(233,57,4)" rx="2" ry="2" />
<text  x="830.92" y="175.5" >m_f..</text>
</g>
<g >
<title>m_adj (17 samples, 0.33%)</title><rect x="167.6" y="133" width="3.9" height="15.0" fill="rgb(209,193,30)" rx="2" ry="2" />
<text  x="170.60" y="143.5" ></text>
</g>
<g >
<title>spinlock_exit (11 samples, 0.22%)</title><rect x="1158.2" y="213" width="2.6" height="15.0" fill="rgb(239,83,42)" rx="2" ry="2" />
<text  x="1161.20" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (2 samples, 0.04%)</title><rect x="26.7" y="277" width="0.5" height="15.0" fill="rgb(205,75,43)" rx="2" ry="2" />
<text  x="29.71" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="51.1" y="165" width="0.9" height="15.0" fill="rgb(238,106,45)" rx="2" ry="2" />
<text  x="54.08" y="175.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(211,191,14)" rx="2" ry="2" />
<text  x="1192.77" y="223.5" ></text>
</g>
<g >
<title>tc_ticktock (3 samples, 0.06%)</title><rect x="1188.4" y="213" width="0.7" height="15.0" fill="rgb(237,148,50)" rx="2" ry="2" />
<text  x="1191.38" y="223.5" ></text>
</g>
<g >
<title>intr_execute_handlers (251 samples, 4.94%)</title><rect x="1123.6" y="277" width="58.3" height="15.0" fill="rgb(244,198,20)" rx="2" ry="2" />
<text  x="1126.62" y="287.5" >intr_e..</text>
</g>
<g >
<title>netisr_dispatch_src (1,869 samples, 36.76%)</title><rect x="100.8" y="181" width="433.7" height="15.0" fill="rgb(220,67,13)" rx="2" ry="2" />
<text  x="103.75" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch (7 samples, 0.14%)</title><rect x="99.1" y="181" width="1.7" height="15.0" fill="rgb(224,83,26)" rx="2" ry="2" />
<text  x="102.13" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="866.5" y="117" width="0.2" height="15.0" fill="rgb(239,9,42)" rx="2" ry="2" />
<text  x="869.45" y="127.5" ></text>
</g>
<g >
<title>ip_input (1,489 samples, 29.29%)</title><rect x="185.2" y="117" width="345.6" height="15.0" fill="rgb(224,220,34)" rx="2" ry="2" />
<text  x="188.24" y="127.5" >ip_input</text>
</g>
<g >
<title>wakeup (10 samples, 0.20%)</title><rect x="1087.9" y="229" width="2.3" height="15.0" fill="rgb(218,131,16)" rx="2" ry="2" />
<text  x="1090.88" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (142 samples, 2.79%)</title><rect x="1090.7" y="261" width="32.9" height="15.0" fill="rgb(209,39,0)" rx="2" ry="2" />
<text  x="1093.66" y="271.5" >gt..</text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.14%)</title><rect x="1081.6" y="229" width="1.6" height="15.0" fill="rgb(238,106,6)" rx="2" ry="2" />
<text  x="1084.61" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (2 samples, 0.04%)</title><rect x="26.7" y="261" width="0.5" height="15.0" fill="rgb(239,26,2)" rx="2" ry="2" />
<text  x="29.71" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.04%)</title><rect x="26.7" y="85" width="0.5" height="15.0" fill="rgb(254,48,5)" rx="2" ry="2" />
<text  x="29.71" y="95.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="39.0" y="229" width="0.2" height="15.0" fill="rgb(225,192,11)" rx="2" ry="2" />
<text  x="42.01" y="239.5" ></text>
</g>
<g >
<title>fib4_lookup (89 samples, 1.75%)</title><rect x="510.2" y="69" width="20.6" height="15.0" fill="rgb(233,179,16)" rx="2" ry="2" />
<text  x="513.18" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (13 samples, 0.26%)</title><rect x="1070.5" y="165" width="3.0" height="15.0" fill="rgb(248,58,38)" rx="2" ry="2" />
<text  x="1073.47" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="171.5" y="133" width="0.3" height="15.0" fill="rgb(238,177,37)" rx="2" ry="2" />
<text  x="174.54" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (3 samples, 0.06%)</title><rect x="564.5" y="181" width="0.7" height="15.0" fill="rgb(249,201,30)" rx="2" ry="2" />
<text  x="567.49" y="191.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (22 samples, 0.43%)</title><rect x="1175.4" y="229" width="5.1" height="15.0" fill="rgb(236,192,10)" rx="2" ry="2" />
<text  x="1178.38" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="706.8" y="197" width="0.2" height="15.0" fill="rgb(205,121,4)" rx="2" ry="2" />
<text  x="709.77" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="1162.8" y="213" width="0.3" height="15.0" fill="rgb(239,123,43)" rx="2" ry="2" />
<text  x="1165.84" y="223.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (166 samples, 3.27%)</title><rect x="1142.0" y="245" width="38.5" height="15.0" fill="rgb(218,21,50)" rx="2" ry="2" />
<text  x="1144.96" y="255.5" >ifl..</text>
</g>
<g >
<title>gtaskqueue_run_locked (1 samples, 0.02%)</title><rect x="1090.4" y="277" width="0.3" height="15.0" fill="rgb(247,125,47)" rx="2" ry="2" />
<text  x="1093.43" y="287.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="1090.0" y="213" width="0.2" height="15.0" fill="rgb(208,180,21)" rx="2" ry="2" />
<text  x="1092.96" y="223.5" ></text>
</g>
<g >
<title>ip_input (2 samples, 0.04%)</title><rect x="26.7" y="165" width="0.5" height="15.0" fill="rgb(252,171,40)" rx="2" ry="2" />
<text  x="29.71" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (18 samples, 0.35%)</title><rect x="565.2" y="181" width="4.2" height="15.0" fill="rgb(234,69,14)" rx="2" ry="2" />
<text  x="568.18" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (31 samples, 0.61%)</title><rect x="820.7" y="165" width="7.2" height="15.0" fill="rgb(238,186,4)" rx="2" ry="2" />
<text  x="823.73" y="175.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (2 samples, 0.04%)</title><rect x="420.6" y="37" width="0.5" height="15.0" fill="rgb(233,115,21)" rx="2" ry="2" />
<text  x="423.59" y="47.5" ></text>
</g>
<g >
<title>uma_small_alloc (4 samples, 0.08%)</title><rect x="563.3" y="117" width="1.0" height="15.0" fill="rgb(209,109,9)" rx="2" ry="2" />
<text  x="566.33" y="127.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.02%)</title><rect x="564.3" y="101" width="0.2" height="15.0" fill="rgb(231,89,31)" rx="2" ry="2" />
<text  x="567.26" y="111.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.02%)</title><rect x="1090.4" y="69" width="0.3" height="15.0" fill="rgb(221,228,0)" rx="2" ry="2" />
<text  x="1093.43" y="79.5" ></text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.02%)</title><rect x="564.3" y="117" width="0.2" height="15.0" fill="rgb(225,179,54)" rx="2" ry="2" />
<text  x="567.26" y="127.5" ></text>
</g>
<g >
<title>pmap_kextract (4 samples, 0.08%)</title><rect x="1011.7" y="149" width="1.0" height="15.0" fill="rgb(208,189,26)" rx="2" ry="2" />
<text  x="1014.75" y="159.5" ></text>
</g>
<g >
<title>wakeup_any (2 samples, 0.04%)</title><rect x="26.7" y="69" width="0.5" height="15.0" fill="rgb(210,205,26)" rx="2" ry="2" />
<text  x="29.71" y="79.5" ></text>
</g>
<g >
<title>ether_output (142 samples, 2.79%)</title><rect x="1090.7" y="101" width="32.9" height="15.0" fill="rgb(222,221,53)" rx="2" ry="2" />
<text  x="1093.66" y="111.5" >et..</text>
</g>
<g >
<title>spinlock_exit (20 samples, 0.39%)</title><rect x="1083.2" y="229" width="4.7" height="15.0" fill="rgb(243,63,40)" rx="2" ry="2" />
<text  x="1086.23" y="239.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,455 samples, 28.62%)</title><rect x="736.5" y="197" width="337.7" height="15.0" fill="rgb(238,92,24)" rx="2" ry="2" />
<text  x="739.48" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.02%)</title><rect x="1090.4" y="101" width="0.3" height="15.0" fill="rgb(218,121,26)" rx="2" ry="2" />
<text  x="1093.43" y="111.5" ></text>
</g>
<g >
<title>ip_tryforward (2 samples, 0.04%)</title><rect x="26.7" y="149" width="0.5" height="15.0" fill="rgb(248,10,33)" rx="2" ry="2" />
<text  x="29.71" y="159.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.12%)</title><rect x="1160.8" y="197" width="1.3" height="15.0" fill="rgb(215,220,31)" rx="2" ry="2" />
<text  x="1163.76" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.10%)</title><rect x="1161.0" y="181" width="1.1" height="15.0" fill="rgb(224,26,9)" rx="2" ry="2" />
<text  x="1163.99" y="191.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.04%)</title><rect x="1189.1" y="229" width="0.4" height="15.0" fill="rgb(211,201,3)" rx="2" ry="2" />
<text  x="1192.07" y="239.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (1 samples, 0.02%)</title><rect x="1079.8" y="229" width="0.2" height="15.0" fill="rgb(208,123,37)" rx="2" ry="2" />
<text  x="1082.75" y="239.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (8 samples, 0.16%)</title><rect x="724.4" y="197" width="1.9" height="15.0" fill="rgb(237,57,14)" rx="2" ry="2" />
<text  x="727.41" y="207.5" ></text>
</g>
<g >
<title>loadtimer (1 samples, 0.02%)</title><rect x="1189.5" y="229" width="0.3" height="15.0" fill="rgb(236,33,28)" rx="2" ry="2" />
<text  x="1192.54" y="239.5" ></text>
</g>
<g >
<title>zone_import (7 samples, 0.14%)</title><rect x="562.9" y="149" width="1.6" height="15.0" fill="rgb(207,206,36)" rx="2" ry="2" />
<text  x="565.86" y="159.5" ></text>
</g>
<g >
<title>fork_exit (4,570 samples, 89.89%)</title><rect x="29.7" y="277" width="1060.7" height="15.0" fill="rgb(224,151,34)" rx="2" ry="2" />
<text  x="32.73" y="287.5" >fork_exit</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (9 samples, 0.18%)</title><rect x="1163.1" y="229" width="2.1" height="15.0" fill="rgb(230,151,39)" rx="2" ry="2" />
<text  x="1166.08" y="239.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (5 samples, 0.10%)</title><rect x="735.3" y="197" width="1.2" height="15.0" fill="rgb(236,144,6)" rx="2" ry="2" />
<text  x="738.31" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (58 samples, 1.14%)</title><rect x="1092.3" y="37" width="13.4" height="15.0" fill="rgb(238,71,15)" rx="2" ry="2" />
<text  x="1095.29" y="47.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,517 samples, 29.84%)</title><rect x="727.7" y="229" width="352.1" height="15.0" fill="rgb(254,8,32)" rx="2" ry="2" />
<text  x="730.66" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.04%)</title><rect x="1090.7" y="37" width="0.4" height="15.0" fill="rgb(219,36,29)" rx="2" ry="2" />
<text  x="1093.66" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (31 samples, 0.61%)</title><rect x="10.0" y="277" width="7.2" height="15.0" fill="rgb(207,223,21)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.02%)</title><rect x="1188.1" y="181" width="0.3" height="15.0" fill="rgb(225,173,47)" rx="2" ry="2" />
<text  x="1191.14" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.04%)</title><rect x="26.7" y="117" width="0.5" height="15.0" fill="rgb(239,150,33)" rx="2" ry="2" />
<text  x="29.71" y="127.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (38 samples, 0.75%)</title><rect x="17.2" y="277" width="8.8" height="15.0" fill="rgb(225,33,6)" rx="2" ry="2" />
<text  x="20.20" y="287.5" ></text>
</g>
<g >
<title>if_getsoftc (19 samples, 0.37%)</title><rect x="422.7" y="37" width="4.4" height="15.0" fill="rgb(221,113,38)" rx="2" ry="2" />
<text  x="425.68" y="47.5" ></text>
</g>
<g >
<title>binuptime (1 samples, 0.02%)</title><rect x="1186.1" y="245" width="0.2" height="15.0" fill="rgb(245,220,37)" rx="2" ry="2" />
<text  x="1189.05" y="255.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (20 samples, 0.39%)</title><rect x="589.6" y="165" width="4.6" height="15.0" fill="rgb(227,138,51)" rx="2" ry="2" />
<text  x="592.56" y="175.5" ></text>
</g>
<g >
<title>uma_zfree_arg (99 samples, 1.95%)</title><rect x="843.7" y="133" width="23.0" height="15.0" fill="rgb(216,205,12)" rx="2" ry="2" />
<text  x="846.71" y="143.5" >u..</text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="1090.2" y="245" width="0.2" height="15.0" fill="rgb(211,206,8)" rx="2" ry="2" />
<text  x="1093.20" y="255.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.02%)</title><rect x="1090.4" y="181" width="0.3" height="15.0" fill="rgb(242,228,36)" rx="2" ry="2" />
<text  x="1093.43" y="191.5" ></text>
</g>
<g >
<title>intr_event_handle (211 samples, 4.15%)</title><rect x="1132.7" y="261" width="48.9" height="15.0" fill="rgb(239,55,34)" rx="2" ry="2" />
<text  x="1135.67" y="271.5" >intr..</text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1078.8" y="197" width="0.3" height="15.0" fill="rgb(214,30,14)" rx="2" ry="2" />
<text  x="1081.82" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="1090.4" y="37" width="0.3" height="15.0" fill="rgb(211,89,9)" rx="2" ry="2" />
<text  x="1093.43" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (142 samples, 2.79%)</title><rect x="1090.7" y="277" width="32.9" height="15.0" fill="rgb(207,171,13)" rx="2" ry="2" />
<text  x="1093.66" y="287.5" >gt..</text>
</g>
<g >
<title>ip_input (142 samples, 2.79%)</title><rect x="1090.7" y="133" width="32.9" height="15.0" fill="rgb(209,86,48)" rx="2" ry="2" />
<text  x="1093.66" y="143.5" >ip..</text>
</g>
<g >
<title>_epoch_exit_preempt (4 samples, 0.08%)</title><rect x="41.1" y="229" width="0.9" height="15.0" fill="rgb(227,202,5)" rx="2" ry="2" />
<text  x="44.10" y="239.5" ></text>
</g>
<g >
<title>memcmp (16 samples, 0.31%)</title><rect x="530.8" y="149" width="3.7" height="15.0" fill="rgb(216,60,19)" rx="2" ry="2" />
<text  x="533.83" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1090.4" y="165" width="0.3" height="15.0" fill="rgb(223,100,5)" rx="2" ry="2" />
<text  x="1093.43" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="1179.8" y="213" width="0.7" height="15.0" fill="rgb(234,215,37)" rx="2" ry="2" />
<text  x="1182.79" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (142 samples, 2.79%)</title><rect x="1090.7" y="85" width="32.9" height="15.0" fill="rgb(250,13,27)" rx="2" ry="2" />
<text  x="1093.66" y="95.5" >et..</text>
</g>
<g >
<title>m_pkthdr_init (35 samples, 0.69%)</title><rect x="627.2" y="197" width="8.1" height="15.0" fill="rgb(214,195,36)" rx="2" ry="2" />
<text  x="630.16" y="207.5" ></text>
</g>
<g >
<title>handleevents (16 samples, 0.31%)</title><rect x="1186.3" y="245" width="3.7" height="15.0" fill="rgb(247,229,16)" rx="2" ry="2" />
<text  x="1189.29" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="1188.6" y="197" width="0.2" height="15.0" fill="rgb(254,197,25)" rx="2" ry="2" />
<text  x="1191.61" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (44 samples, 0.87%)</title><rect x="1165.2" y="229" width="10.2" height="15.0" fill="rgb(254,144,38)" rx="2" ry="2" />
<text  x="1168.17" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (1 samples, 0.02%)</title><rect x="1090.4" y="133" width="0.3" height="15.0" fill="rgb(249,154,52)" rx="2" ry="2" />
<text  x="1093.43" y="143.5" ></text>
</g>
<g >
<title>ether_demux (142 samples, 2.79%)</title><rect x="1090.7" y="165" width="32.9" height="15.0" fill="rgb(247,221,38)" rx="2" ry="2" />
<text  x="1093.66" y="175.5" >et..</text>
</g>
<g >
<title>ether_output (2 samples, 0.04%)</title><rect x="26.7" y="133" width="0.5" height="15.0" fill="rgb(248,98,2)" rx="2" ry="2" />
<text  x="29.71" y="143.5" ></text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="1090.4" y="53" width="0.3" height="15.0" fill="rgb(246,106,4)" rx="2" ry="2" />
<text  x="1093.43" y="63.5" ></text>
</g>
<g >
<title>Xtimerint_pti (2 samples, 0.04%)</title><rect x="26.2" y="277" width="0.5" height="15.0" fill="rgb(207,99,4)" rx="2" ry="2" />
<text  x="29.25" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (10 samples, 0.20%)</title><rect x="1068.1" y="165" width="2.4" height="15.0" fill="rgb(207,220,11)" rx="2" ry="2" />
<text  x="1071.15" y="175.5" ></text>
</g>
<g >
<title>sleepq_signal (5 samples, 0.10%)</title><rect x="1091.1" y="37" width="1.2" height="15.0" fill="rgb(236,13,26)" rx="2" ry="2" />
<text  x="1094.13" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,547 samples, 30.43%)</title><rect x="171.8" y="133" width="359.0" height="15.0" fill="rgb(251,186,1)" rx="2" ry="2" />
<text  x="174.77" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>grouptaskqueue_enqueue (142 samples, 2.79%)</title><rect x="1090.7" y="53" width="32.9" height="15.0" fill="rgb(214,22,41)" rx="2" ry="2" />
<text  x="1093.66" y="63.5" >gr..</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="1079.1" y="197" width="0.7" height="15.0" fill="rgb(211,123,19)" rx="2" ry="2" />
<text  x="1082.06" y="207.5" ></text>
</g>
<g >
<title>hardclock (11 samples, 0.22%)</title><rect x="1186.5" y="229" width="2.6" height="15.0" fill="rgb(217,210,21)" rx="2" ry="2" />
<text  x="1189.52" y="239.5" ></text>
</g>
<g >
<title>ether_output (1 samples, 0.02%)</title><rect x="1090.4" y="117" width="0.3" height="15.0" fill="rgb(229,223,29)" rx="2" ry="2" />
<text  x="1093.43" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (135 samples, 2.66%)</title><rect x="1012.7" y="165" width="31.3" height="15.0" fill="rgb(233,172,27)" rx="2" ry="2" />
<text  x="1015.68" y="175.5" >ix..</text>
</g>
<g >
<title>tc_windup (1 samples, 0.02%)</title><rect x="1188.8" y="197" width="0.3" height="15.0" fill="rgb(248,181,4)" rx="2" ry="2" />
<text  x="1191.84" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.10%)</title><rect x="1178.4" y="213" width="1.2" height="15.0" fill="rgb(211,207,48)" rx="2" ry="2" />
<text  x="1181.39" y="223.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.02%)</title><rect x="1187.7" y="181" width="0.2" height="15.0" fill="rgb(242,111,5)" rx="2" ry="2" />
<text  x="1190.68" y="191.5" ></text>
</g>
<g >
<title>arpresolve (135 samples, 2.66%)</title><rect x="321.9" y="69" width="31.4" height="15.0" fill="rgb(247,128,7)" rx="2" ry="2" />
<text  x="324.94" y="79.5" >ar..</text>
</g>
<g >
<title>cache_alloc (7 samples, 0.14%)</title><rect x="562.9" y="165" width="1.6" height="15.0" fill="rgb(224,198,23)" rx="2" ry="2" />
<text  x="565.86" y="175.5" ></text>
</g>
<g >
<title>ether_output (830 samples, 16.33%)</title><rect x="277.4" y="85" width="192.6" height="15.0" fill="rgb(242,30,12)" rx="2" ry="2" />
<text  x="280.38" y="95.5" >ether_output</text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1090.4" y="213" width="0.3" height="15.0" fill="rgb(208,227,8)" rx="2" ry="2" />
<text  x="1093.43" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (142 samples, 2.79%)</title><rect x="1090.7" y="245" width="32.9" height="15.0" fill="rgb(213,42,10)" rx="2" ry="2" />
<text  x="1093.66" y="255.5" >_t..</text>
</g>
<g >
<title>ifmp_ring_enqueue (170 samples, 3.34%)</title><rect x="427.1" y="37" width="39.4" height="15.0" fill="rgb(244,158,21)" rx="2" ry="2" />
<text  x="430.08" y="47.5" >ifm..</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (3 samples, 0.06%)</title><rect x="46.2" y="197" width="0.7" height="15.0" fill="rgb(220,47,20)" rx="2" ry="2" />
<text  x="49.21" y="207.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (155 samples, 3.05%)</title><rect x="976.7" y="165" width="36.0" height="15.0" fill="rgb(254,148,47)" rx="2" ry="2" />
<text  x="979.70" y="175.5" >bus..</text>
</g>
<g >
<title>spinlock_exit (77 samples, 1.51%)</title><rect x="1105.7" y="37" width="17.9" height="15.0" fill="rgb(236,223,29)" rx="2" ry="2" />
<text  x="1108.75" y="47.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,482 samples, 29.15%)</title><rect x="730.2" y="213" width="344.0" height="15.0" fill="rgb(236,44,38)" rx="2" ry="2" />
<text  x="733.21" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>m_free (154 samples, 3.03%)</title><rect x="830.9" y="149" width="35.8" height="15.0" fill="rgb(223,91,52)" rx="2" ry="2" />
<text  x="833.94" y="159.5" >m_f..</text>
</g>
<g >
<title>pagezero_erms (4 samples, 0.08%)</title><rect x="563.3" y="85" width="1.0" height="15.0" fill="rgb(235,216,12)" rx="2" ry="2" />
<text  x="566.33" y="95.5" ></text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.04%)</title><rect x="26.7" y="53" width="0.5" height="15.0" fill="rgb(214,116,42)" rx="2" ry="2" />
<text  x="29.71" y="63.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.02%)</title><rect x="1090.4" y="229" width="0.3" height="15.0" fill="rgb(236,171,5)" rx="2" ry="2" />
<text  x="1093.43" y="239.5" ></text>
</g>
<g >
<title>memmove_erms (10 samples, 0.20%)</title><rect x="351.0" y="53" width="2.3" height="15.0" fill="rgb(213,26,2)" rx="2" ry="2" />
<text  x="353.96" y="63.5" ></text>
</g>
<g >
<title>sleepq_release (7 samples, 0.14%)</title><rect x="1080.0" y="229" width="1.6" height="15.0" fill="rgb(239,47,49)" rx="2" ry="2" />
<text  x="1082.98" y="239.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (75 samples, 1.48%)</title><rect x="707.0" y="197" width="17.4" height="15.0" fill="rgb(252,168,50)" rx="2" ry="2" />
<text  x="710.00" y="207.5" ></text>
</g>
<g >
<title>if_getcapenable (5 samples, 0.10%)</title><rect x="1074.2" y="213" width="1.1" height="15.0" fill="rgb(233,170,10)" rx="2" ry="2" />
<text  x="1077.18" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (1,334 samples, 26.24%)</title><rect x="221.2" y="101" width="309.6" height="15.0" fill="rgb(247,92,22)" rx="2" ry="2" />
<text  x="224.21" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>iflib_get_ifp (1 samples, 0.02%)</title><rect x="1179.6" y="213" width="0.2" height="15.0" fill="rgb(235,53,30)" rx="2" ry="2" />
<text  x="1182.56" y="223.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="563.1" y="117" width="0.2" height="15.0" fill="rgb(215,190,8)" rx="2" ry="2" />
<text  x="566.10" y="127.5" ></text>
</g>
<g >
<title>if_getnumadomain (20 samples, 0.39%)</title><rect x="535.2" y="197" width="4.7" height="15.0" fill="rgb(206,166,2)" rx="2" ry="2" />
<text  x="538.24" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.04%)</title><rect x="26.7" y="213" width="0.5" height="15.0" fill="rgb(222,132,46)" rx="2" ry="2" />
<text  x="29.71" y="223.5" ></text>
</g>
<g >
<title>ether_demux (1,619 samples, 31.85%)</title><rect x="155.1" y="149" width="375.7" height="15.0" fill="rgb(211,171,25)" rx="2" ry="2" />
<text  x="158.06" y="159.5" >ether_demux</text>
</g>
<g >
<title>ifmp_ring_check_drainage (6 samples, 0.12%)</title><rect x="1075.3" y="213" width="1.4" height="15.0" fill="rgb(248,71,9)" rx="2" ry="2" />
<text  x="1078.34" y="223.5" ></text>
</g>
<g >
<title>in_lltable_lookup (62 samples, 1.22%)</title><rect x="336.6" y="53" width="14.4" height="15.0" fill="rgb(243,37,16)" rx="2" ry="2" />
<text  x="339.57" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.02%)</title><rect x="1090.4" y="261" width="0.3" height="15.0" fill="rgb(207,150,4)" rx="2" ry="2" />
<text  x="1093.43" y="271.5" ></text>
</g>
<g >
<title>if_inc_counter (4 samples, 0.08%)</title><rect x="539.9" y="197" width="0.9" height="15.0" fill="rgb(212,113,2)" rx="2" ry="2" />
<text  x="542.89" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (142 samples, 2.79%)</title><rect x="1090.7" y="229" width="32.9" height="15.0" fill="rgb(221,69,3)" rx="2" ry="2" />
<text  x="1093.66" y="239.5" >if..</text>
</g>
<g >
<title>iflib_encap (764 samples, 15.03%)</title><rect x="866.7" y="181" width="177.3" height="15.0" fill="rgb(250,228,20)" rx="2" ry="2" />
<text  x="869.68" y="191.5" >iflib_encap</text>
</g>
<g >
<title>ether_bpf_mtap_if (2 samples, 0.04%)</title><rect x="761.1" y="181" width="0.4" height="15.0" fill="rgb(232,22,37)" rx="2" ry="2" />
<text  x="764.08" y="191.5" ></text>
</g>
<g >
<title>intr_event_handle (1 samples, 0.02%)</title><rect x="1186.8" y="213" width="0.2" height="15.0" fill="rgb(211,217,29)" rx="2" ry="2" />
<text  x="1189.75" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (10 samples, 0.20%)</title><rect x="991.1" y="149" width="2.3" height="15.0" fill="rgb(218,106,6)" rx="2" ry="2" />
<text  x="994.09" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.14%)</title><rect x="421.1" y="37" width="1.6" height="15.0" fill="rgb(228,123,30)" rx="2" ry="2" />
<text  x="424.05" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.02%)</title><rect x="1090.4" y="245" width="0.3" height="15.0" fill="rgb(243,200,24)" rx="2" ry="2" />
<text  x="1093.43" y="255.5" ></text>
</g>
<g >
<title>if_getnetmapadapter (1 samples, 0.02%)</title><rect x="727.4" y="197" width="0.3" height="15.0" fill="rgb(228,187,34)" rx="2" ry="2" />
<text  x="730.42" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.04%)</title><rect x="26.7" y="101" width="0.5" height="15.0" fill="rgb(251,111,45)" rx="2" ry="2" />
<text  x="29.71" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="26.7" y="181" width="0.5" height="15.0" fill="rgb(249,217,34)" rx="2" ry="2" />
<text  x="29.71" y="191.5" ></text>
</g>
<g >
<title>lapic_eoi (5 samples, 0.10%)</title><rect x="1180.5" y="245" width="1.1" height="15.0" fill="rgb(240,114,5)" rx="2" ry="2" />
<text  x="1183.48" y="255.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (449 samples, 8.83%)</title><rect x="762.5" y="181" width="104.2" height="15.0" fill="rgb(226,132,24)" rx="2" ry="2" />
<text  x="765.47" y="191.5" >iflib_comple..</text>
</g>
<g >
<title>tscp_get_timecount_low (1 samples, 0.02%)</title><rect x="1186.1" y="229" width="0.2" height="15.0" fill="rgb(223,189,8)" rx="2" ry="2" />
<text  x="1189.05" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (142 samples, 2.79%)</title><rect x="1090.7" y="197" width="32.9" height="15.0" fill="rgb(252,150,35)" rx="2" ry="2" />
<text  x="1093.66" y="207.5" >ne..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (3 samples, 0.06%)</title><rect x="1073.5" y="181" width="0.7" height="15.0" fill="rgb(231,130,42)" rx="2" ry="2" />
<text  x="1076.49" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (69 samples, 1.36%)</title><rect x="404.6" y="37" width="16.0" height="15.0" fill="rgb(228,125,19)" rx="2" ry="2" />
<text  x="407.57" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load (1 samples, 0.02%)</title><rect x="562.6" y="181" width="0.3" height="15.0" fill="rgb(236,172,46)" rx="2" ry="2" />
<text  x="565.63" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (4 samples, 0.08%)</title><rect x="1162.1" y="229" width="1.0" height="15.0" fill="rgb(215,12,14)" rx="2" ry="2" />
<text  x="1165.15" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="26.7" y="37" width="0.5" height="15.0" fill="rgb(234,26,42)" rx="2" ry="2" />
<text  x="29.71" y="47.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (1 samples, 0.02%)</title><rect x="562.6" y="165" width="0.3" height="15.0" fill="rgb(243,59,4)" rx="2" ry="2" />
<text  x="565.63" y="175.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (2 samples, 0.04%)</title><rect x="29.7" y="245" width="0.5" height="15.0" fill="rgb(223,120,3)" rx="2" ry="2" />
<text  x="32.73" y="255.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="52.0" y="213" width="0.2" height="15.0" fill="rgb(246,117,49)" rx="2" ry="2" />
<text  x="55.01" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (30 samples, 0.59%)</title><rect x="45.0" y="213" width="7.0" height="15.0" fill="rgb(247,124,17)" rx="2" ry="2" />
<text  x="48.05" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (6 samples, 0.12%)</title><rect x="1153.3" y="213" width="1.4" height="15.0" fill="rgb(229,51,30)" rx="2" ry="2" />
<text  x="1156.33" y="223.5" ></text>
</g>
<g >
<title>all (5,084 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(237,24,39)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>pmc_process_samples (6 samples, 0.12%)</title><rect x="1187.0" y="197" width="1.4" height="15.0" fill="rgb(223,53,41)" rx="2" ry="2" />
<text  x="1189.98" y="207.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (127 samples, 2.50%)</title><rect x="1044.0" y="181" width="29.5" height="15.0" fill="rgb(243,53,16)" rx="2" ry="2" />
<text  x="1047.01" y="191.5" >if..</text>
</g>
<g >
<title>ether_input (142 samples, 2.79%)</title><rect x="1090.7" y="213" width="32.9" height="15.0" fill="rgb(208,157,51)" rx="2" ry="2" />
<text  x="1093.66" y="223.5" >et..</text>
</g>
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="26.0" y="277" width="0.2" height="15.0" fill="rgb(236,198,52)" rx="2" ry="2" />
<text  x="29.01" y="287.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="534.5" y="197" width="0.3" height="15.0" fill="rgb(230,91,31)" rx="2" ry="2" />
<text  x="537.55" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (6 samples, 0.12%)</title><rect x="50.6" y="197" width="1.4" height="15.0" fill="rgb(214,188,13)" rx="2" ry="2" />
<text  x="53.62" y="207.5" ></text>
</g>
<g >
<title>iflib_fl_refill (230 samples, 4.52%)</title><rect x="540.8" y="197" width="53.4" height="15.0" fill="rgb(235,177,38)" rx="2" ry="2" />
<text  x="543.81" y="207.5" >iflib..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (1 samples, 0.02%)</title><rect x="626.9" y="197" width="0.3" height="15.0" fill="rgb(251,152,35)" rx="2" ry="2" />
<text  x="629.92" y="207.5" ></text>
</g>
<g >
<title>ether_input (1,918 samples, 37.73%)</title><rect x="89.4" y="197" width="445.1" height="15.0" fill="rgb(217,53,11)" rx="2" ry="2" />
<text  x="92.38" y="207.5" >ether_input</text>
</g>
<g >
<title>mb_dtor_mbuf (6 samples, 0.12%)</title><rect x="865.1" y="117" width="1.4" height="15.0" fill="rgb(238,52,19)" rx="2" ry="2" />
<text  x="868.06" y="127.5" ></text>
</g>
<g >
<title>statclock (1 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(220,26,53)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (48 samples, 0.94%)</title><rect x="1151.0" y="229" width="11.1" height="15.0" fill="rgb(219,132,49)" rx="2" ry="2" />
<text  x="1154.01" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,567 samples, 89.83%)</title><rect x="30.2" y="245" width="1060.0" height="15.0" fill="rgb(214,80,54)" rx="2" ry="2" />
<text  x="33.19" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>netmap_rx_irq (6 samples, 0.12%)</title><rect x="726.3" y="213" width="1.4" height="15.0" fill="rgb(214,0,6)" rx="2" ry="2" />
<text  x="729.26" y="223.5" ></text>
</g>
<g >
<title>intr_lookup_source (4 samples, 0.08%)</title><rect x="1181.9" y="277" width="0.9" height="15.0" fill="rgb(239,141,17)" rx="2" ry="2" />
<text  x="1184.88" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (142 samples, 2.79%)</title><rect x="1090.7" y="181" width="32.9" height="15.0" fill="rgb(246,84,30)" rx="2" ry="2" />
<text  x="1093.66" y="191.5" >et..</text>
</g>
<g >
<title>ip_input (1 samples, 0.02%)</title><rect x="1090.4" y="149" width="0.3" height="15.0" fill="rgb(219,76,0)" rx="2" ry="2" />
<text  x="1093.43" y="159.5" ></text>
</g>
<g >
<title>memcpy_erms (15 samples, 0.30%)</title><rect x="466.5" y="69" width="3.5" height="15.0" fill="rgb(224,38,36)" rx="2" ry="2" />
<text  x="469.54" y="79.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.10%)</title><rect x="47.6" y="197" width="1.2" height="15.0" fill="rgb(218,46,39)" rx="2" ry="2" />
<text  x="50.60" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="569.4" y="181" width="0.4" height="15.0" fill="rgb(214,227,4)" rx="2" ry="2" />
<text  x="572.36" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (142 samples, 2.79%)</title><rect x="1090.7" y="149" width="32.9" height="15.0" fill="rgb(242,79,18)" rx="2" ry="2" />
<text  x="1093.66" y="159.5" >ne..</text>
</g>
<g >
<title>wakeup_any (6 samples, 0.12%)</title><rect x="1160.8" y="213" width="1.3" height="15.0" fill="rgb(241,172,7)" rx="2" ry="2" />
<text  x="1163.76" y="223.5" ></text>
</g>
<g >
<title>pmc_hook_handler (6 samples, 0.12%)</title><rect x="1187.0" y="213" width="1.4" height="15.0" fill="rgb(232,181,25)" rx="2" ry="2" />
<text  x="1189.98" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.12%)</title><rect x="50.6" y="181" width="1.4" height="15.0" fill="rgb(216,0,10)" rx="2" ry="2" />
<text  x="53.62" y="191.5" ></text>
</g>
<g >
<title>timercb (17 samples, 0.33%)</title><rect x="1186.1" y="261" width="3.9" height="15.0" fill="rgb(230,210,18)" rx="2" ry="2" />
<text  x="1189.05" y="271.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.02%)</title><rect x="1090.4" y="85" width="0.3" height="15.0" fill="rgb(233,52,45)" rx="2" ry="2" />
<text  x="1093.43" y="95.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.02%)</title><rect x="1090.4" y="197" width="0.3" height="15.0" fill="rgb(222,192,1)" rx="2" ry="2" />
<text  x="1093.43" y="207.5" ></text>
</g>
</g>
</svg>
