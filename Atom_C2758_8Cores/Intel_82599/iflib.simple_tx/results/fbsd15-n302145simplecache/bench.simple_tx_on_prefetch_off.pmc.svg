<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>pmap_kextract (3 samples, 0.07%)</title><rect x="977.5" y="37" width="0.9" height="15.0" fill="rgb(229,62,53)" rx="2" ry="2" />
<text  x="980.55" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (92 samples, 2.24%)</title><rect x="848.0" y="197" width="26.5" height="15.0" fill="rgb(244,130,15)" rx="2" ry="2" />
<text  x="851.00" y="207.5" >i..</text>
</g>
<g >
<title>m_free (71 samples, 1.73%)</title><rect x="25.3" y="53" width="20.4" height="15.0" fill="rgb(207,217,8)" rx="2" ry="2" />
<text  x="28.26" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (61 samples, 1.49%)</title><rect x="879.7" y="197" width="17.5" height="15.0" fill="rgb(230,202,4)" rx="2" ry="2" />
<text  x="882.67" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (39 samples, 0.95%)</title><rect x="1150.0" y="229" width="11.2" height="15.0" fill="rgb(232,214,8)" rx="2" ry="2" />
<text  x="1152.99" y="239.5" ></text>
</g>
<g >
<title>lapic_eoi (4 samples, 0.10%)</title><rect x="1182.5" y="245" width="1.2" height="15.0" fill="rgb(206,22,33)" rx="2" ry="2" />
<text  x="1185.52" y="255.5" ></text>
</g>
<g >
<title>ip_input (101 samples, 2.46%)</title><rect x="949.3" y="149" width="29.1" height="15.0" fill="rgb(230,24,24)" rx="2" ry="2" />
<text  x="952.34" y="159.5" >ip..</text>
</g>
<g >
<title>mb_ctor_mbuf (15 samples, 0.37%)</title><rect x="835.1" y="165" width="4.3" height="15.0" fill="rgb(208,59,17)" rx="2" ry="2" />
<text  x="838.05" y="175.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (3 samples, 0.07%)</title><rect x="956.2" y="37" width="0.9" height="15.0" fill="rgb(253,182,41)" rx="2" ry="2" />
<text  x="959.25" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (4 samples, 0.10%)</title><rect x="1121.5" y="277" width="1.1" height="15.0" fill="rgb(210,5,15)" rx="2" ry="2" />
<text  x="1124.49" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (101 samples, 2.46%)</title><rect x="949.3" y="213" width="29.1" height="15.0" fill="rgb(251,72,11)" rx="2" ry="2" />
<text  x="952.34" y="223.5" >ne..</text>
</g>
<g >
<title>zone_import (1 samples, 0.02%)</title><rect x="812.3" y="101" width="0.3" height="15.0" fill="rgb(206,29,14)" rx="2" ry="2" />
<text  x="815.31" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.10%)</title><rect x="1121.5" y="245" width="1.1" height="15.0" fill="rgb(226,116,6)" rx="2" ry="2" />
<text  x="1124.49" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (71 samples, 1.73%)</title><rect x="25.3" y="229" width="20.4" height="15.0" fill="rgb(254,158,13)" rx="2" ry="2" />
<text  x="28.26" y="239.5" ></text>
</g>
<g >
<title>ether_demux (101 samples, 2.46%)</title><rect x="949.3" y="181" width="29.1" height="15.0" fill="rgb(212,224,5)" rx="2" ry="2" />
<text  x="952.34" y="191.5" >et..</text>
</g>
<g >
<title>iflib_simple_transmit (101 samples, 2.46%)</title><rect x="949.3" y="85" width="29.1" height="15.0" fill="rgb(233,108,8)" rx="2" ry="2" />
<text  x="952.34" y="95.5" >if..</text>
</g>
<g >
<title>lapic_handle_intr (1 samples, 0.02%)</title><rect x="977.3" y="37" width="0.2" height="15.0" fill="rgb(243,133,23)" rx="2" ry="2" />
<text  x="980.26" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.15%)</title><rect x="947.3" y="213" width="1.7" height="15.0" fill="rgb(238,202,2)" rx="2" ry="2" />
<text  x="950.32" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (497 samples, 12.12%)</title><rect x="978.4" y="277" width="143.1" height="15.0" fill="rgb(233,130,27)" rx="2" ry="2" />
<text  x="981.41" y="287.5" >gtaskqueue_thread_..</text>
</g>
<g >
<title>ether_demux (497 samples, 12.12%)</title><rect x="978.4" y="165" width="143.1" height="15.0" fill="rgb(229,114,45)" rx="2" ry="2" />
<text  x="981.41" y="175.5" >ether_demux</text>
</g>
<g >
<title>wakeup (1 samples, 0.02%)</title><rect x="949.0" y="245" width="0.3" height="15.0" fill="rgb(217,148,37)" rx="2" ry="2" />
<text  x="952.05" y="255.5" ></text>
</g>
<g >
<title>pmc_hook_handler (7 samples, 0.17%)</title><rect x="1187.1" y="213" width="2.0" height="15.0" fill="rgb(254,141,21)" rx="2" ry="2" />
<text  x="1190.12" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (18 samples, 0.44%)</title><rect x="812.6" y="181" width="5.2" height="15.0" fill="rgb(240,228,5)" rx="2" ry="2" />
<text  x="815.60" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,099 samples, 75.60%)</title><rect x="50.9" y="229" width="892.1" height="15.0" fill="rgb(215,222,17)" rx="2" ry="2" />
<text  x="53.88" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>if_getnetmapadapter (2 samples, 0.05%)</title><rect x="942.4" y="197" width="0.6" height="15.0" fill="rgb(243,111,53)" rx="2" ry="2" />
<text  x="945.43" y="207.5" ></text>
</g>
<g >
<title>ip_findroute (166 samples, 4.05%)</title><rect x="719.0" y="85" width="47.8" height="15.0" fill="rgb(219,70,24)" rx="2" ry="2" />
<text  x="722.04" y="95.5" >ip_f..</text>
</g>
<g >
<title>ether_demux (2,160 samples, 52.70%)</title><rect x="145.0" y="149" width="621.8" height="15.0" fill="rgb(249,212,10)" rx="2" ry="2" />
<text  x="148.01" y="159.5" >ether_demux</text>
</g>
<g >
<title>fork_exit (3,138 samples, 76.56%)</title><rect x="46.0" y="277" width="903.3" height="15.0" fill="rgb(214,16,52)" rx="2" ry="2" />
<text  x="48.98" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_input (101 samples, 2.46%)</title><rect x="949.3" y="229" width="29.1" height="15.0" fill="rgb(239,228,3)" rx="2" ry="2" />
<text  x="952.34" y="239.5" >et..</text>
</g>
<g >
<title>ether_input (2,341 samples, 57.11%)</title><rect x="94.3" y="197" width="674.0" height="15.0" fill="rgb(208,3,25)" rx="2" ry="2" />
<text  x="97.35" y="207.5" >ether_input</text>
</g>
<g >
<title>sleepq_broadcast (1 samples, 0.02%)</title><rect x="947.0" y="213" width="0.3" height="15.0" fill="rgb(244,68,50)" rx="2" ry="2" />
<text  x="950.03" y="223.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (1,068 samples, 26.06%)</title><rect x="388.6" y="53" width="307.4" height="15.0" fill="rgb(228,179,3)" rx="2" ry="2" />
<text  x="391.56" y="63.5" >iflib_simple_transmit</text>
</g>
<g >
<title>ip_input (2,041 samples, 49.79%)</title><rect x="179.3" y="117" width="587.5" height="15.0" fill="rgb(231,114,23)" rx="2" ry="2" />
<text  x="182.27" y="127.5" >ip_input</text>
</g>
<g >
<title>iflib_encap (77 samples, 1.88%)</title><rect x="956.2" y="69" width="22.2" height="15.0" fill="rgb(223,161,7)" rx="2" ry="2" />
<text  x="959.25" y="79.5" >i..</text>
</g>
<g >
<title>ether_nh_input (497 samples, 12.12%)</title><rect x="978.4" y="181" width="143.1" height="15.0" fill="rgb(250,136,21)" rx="2" ry="2" />
<text  x="981.41" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="811.7" y="117" width="0.3" height="15.0" fill="rgb(224,6,41)" rx="2" ry="2" />
<text  x="814.73" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (497 samples, 12.12%)</title><rect x="978.4" y="197" width="143.1" height="15.0" fill="rgb(226,145,11)" rx="2" ry="2" />
<text  x="981.41" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="1122.3" y="37" width="0.3" height="15.0" fill="rgb(232,91,43)" rx="2" ry="2" />
<text  x="1125.35" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (14 samples, 0.34%)</title><rect x="1165.2" y="229" width="4.1" height="15.0" fill="rgb(231,193,36)" rx="2" ry="2" />
<text  x="1168.24" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,084 samples, 50.84%)</title><rect x="166.9" y="133" width="599.9" height="15.0" fill="rgb(251,227,29)" rx="2" ry="2" />
<text  x="169.89" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>_ck_epoch_addref (2 samples, 0.05%)</title><rect x="50.0" y="213" width="0.6" height="15.0" fill="rgb(234,215,49)" rx="2" ry="2" />
<text  x="53.01" y="223.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (71 samples, 1.73%)</title><rect x="25.3" y="101" width="20.4" height="15.0" fill="rgb(246,93,6)" rx="2" ry="2" />
<text  x="28.26" y="111.5" ></text>
</g>
<g >
<title>lapic_handle_timer (12 samples, 0.29%)</title><rect x="1186.5" y="277" width="3.5" height="15.0" fill="rgb(220,72,37)" rx="2" ry="2" />
<text  x="1189.55" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (7 samples, 0.17%)</title><rect x="1158.0" y="213" width="2.1" height="15.0" fill="rgb(242,104,41)" rx="2" ry="2" />
<text  x="1161.05" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.20%)</title><rect x="428.9" y="37" width="2.3" height="15.0" fill="rgb(237,12,45)" rx="2" ry="2" />
<text  x="431.86" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (18 samples, 0.44%)</title><rect x="696.6" y="69" width="5.2" height="15.0" fill="rgb(217,182,50)" rx="2" ry="2" />
<text  x="699.58" y="79.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (77 samples, 1.88%)</title><rect x="956.2" y="53" width="22.2" height="15.0" fill="rgb(241,181,39)" rx="2" ry="2" />
<text  x="959.25" y="63.5" >b..</text>
</g>
<g >
<title>pagezero_erms (1 samples, 0.02%)</title><rect x="812.0" y="85" width="0.3" height="15.0" fill="rgb(233,134,6)" rx="2" ry="2" />
<text  x="815.02" y="95.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (1 samples, 0.02%)</title><rect x="46.0" y="245" width="0.3" height="15.0" fill="rgb(227,170,26)" rx="2" ry="2" />
<text  x="48.98" y="255.5" ></text>
</g>
<g >
<title>ether_input (71 samples, 1.73%)</title><rect x="25.3" y="245" width="20.4" height="15.0" fill="rgb(246,113,34)" rx="2" ry="2" />
<text  x="28.26" y="255.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (147 samples, 3.59%)</title><rect x="897.8" y="197" width="42.3" height="15.0" fill="rgb(208,34,40)" rx="2" ry="2" />
<text  x="900.81" y="207.5" >rxd..</text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.07%)</title><rect x="944.7" y="229" width="0.9" height="15.0" fill="rgb(245,168,3)" rx="2" ry="2" />
<text  x="947.73" y="239.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (71 samples, 1.73%)</title><rect x="25.3" y="85" width="20.4" height="15.0" fill="rgb(249,220,51)" rx="2" ry="2" />
<text  x="28.26" y="95.5" ></text>
</g>
<g >
<title>ether_output_frame (1,120 samples, 27.32%)</title><rect x="374.2" y="69" width="322.4" height="15.0" fill="rgb(221,219,0)" rx="2" ry="2" />
<text  x="377.16" y="79.5" >ether_output_frame</text>
</g>
<g >
<title>ether_nh_input (71 samples, 1.73%)</title><rect x="25.3" y="213" width="20.4" height="15.0" fill="rgb(253,22,11)" rx="2" ry="2" />
<text  x="28.26" y="223.5" ></text>
</g>
<g >
<title>ip_input (71 samples, 1.73%)</title><rect x="25.3" y="165" width="20.4" height="15.0" fill="rgb(237,168,46)" rx="2" ry="2" />
<text  x="28.26" y="175.5" ></text>
</g>
<g >
<title>iflib_fl_refill (189 samples, 4.61%)</title><rect x="785.0" y="197" width="54.4" height="15.0" fill="rgb(229,149,45)" rx="2" ry="2" />
<text  x="787.96" y="207.5" >iflib..</text>
</g>
<g >
<title>iflib_rxeof (101 samples, 2.46%)</title><rect x="949.3" y="245" width="29.1" height="15.0" fill="rgb(228,59,38)" rx="2" ry="2" />
<text  x="952.34" y="255.5" >if..</text>
</g>
<g >
<title>_task_fn_rx (497 samples, 12.12%)</title><rect x="978.4" y="245" width="143.1" height="15.0" fill="rgb(252,167,27)" rx="2" ry="2" />
<text  x="981.41" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (33 samples, 0.81%)</title><rect x="1169.3" y="229" width="9.5" height="15.0" fill="rgb(221,228,18)" rx="2" ry="2" />
<text  x="1172.27" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (71 samples, 1.73%)</title><rect x="25.3" y="261" width="20.4" height="15.0" fill="rgb(225,80,3)" rx="2" ry="2" />
<text  x="28.26" y="271.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (24 samples, 0.59%)</title><rect x="949.3" y="69" width="6.9" height="15.0" fill="rgb(249,67,25)" rx="2" ry="2" />
<text  x="952.34" y="79.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,070 samples, 74.90%)</title><rect x="56.9" y="213" width="883.8" height="15.0" fill="rgb(230,202,46)" rx="2" ry="2" />
<text  x="59.92" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ether_nh_input (101 samples, 2.46%)</title><rect x="949.3" y="197" width="29.1" height="15.0" fill="rgb(245,81,41)" rx="2" ry="2" />
<text  x="952.34" y="207.5" >et..</text>
</g>
<g >
<title>ip_tryforward (101 samples, 2.46%)</title><rect x="949.3" y="133" width="29.1" height="15.0" fill="rgb(205,131,33)" rx="2" ry="2" />
<text  x="952.34" y="143.5" >ip..</text>
</g>
<g >
<title>ixgbe_write_reg (33 samples, 0.81%)</title><rect x="686.5" y="37" width="9.5" height="15.0" fill="rgb(230,81,39)" rx="2" ry="2" />
<text  x="689.51" y="47.5" ></text>
</g>
<g >
<title>m_freem (17 samples, 0.41%)</title><rect x="1013.5" y="37" width="4.9" height="15.0" fill="rgb(250,139,25)" rx="2" ry="2" />
<text  x="1016.53" y="47.5" ></text>
</g>
<g >
<title>_task_fn_tx (5 samples, 0.12%)</title><rect x="943.0" y="229" width="1.4" height="15.0" fill="rgb(233,42,0)" rx="2" ry="2" />
<text  x="946.00" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="768.0" y="149" width="0.3" height="15.0" fill="rgb(253,208,28)" rx="2" ry="2" />
<text  x="770.98" y="159.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (581 samples, 14.17%)</title><rect x="439.8" y="37" width="167.3" height="15.0" fill="rgb(222,206,46)" rx="2" ry="2" />
<text  x="442.80" y="47.5" >iflib_completed_tx_re..</text>
</g>
<g >
<title>in_localip (60 samples, 1.46%)</title><rect x="701.8" y="85" width="17.2" height="15.0" fill="rgb(233,72,26)" rx="2" ry="2" />
<text  x="704.76" y="95.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (36 samples, 0.88%)</title><rect x="14.6" y="277" width="10.4" height="15.0" fill="rgb(254,141,20)" rx="2" ry="2" />
<text  x="17.61" y="287.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (2 samples, 0.05%)</title><rect x="943.9" y="213" width="0.5" height="15.0" fill="rgb(226,165,30)" rx="2" ry="2" />
<text  x="946.87" y="223.5" ></text>
</g>
<g >
<title>fib4_lookup (50 samples, 1.22%)</title><rect x="752.4" y="69" width="14.4" height="15.0" fill="rgb(209,222,27)" rx="2" ry="2" />
<text  x="755.43" y="79.5" ></text>
</g>
<g >
<title>ether_output (101 samples, 2.46%)</title><rect x="949.3" y="117" width="29.1" height="15.0" fill="rgb(243,44,30)" rx="2" ry="2" />
<text  x="952.34" y="127.5" >et..</text>
</g>
<g >
<title>arpresolve (112 samples, 2.73%)</title><rect x="341.9" y="69" width="32.3" height="15.0" fill="rgb(249,131,30)" rx="2" ry="2" />
<text  x="344.92" y="79.5" >ar..</text>
</g>
<g >
<title>wakeup_any (4 samples, 0.10%)</title><rect x="1160.1" y="213" width="1.1" height="15.0" fill="rgb(242,79,24)" rx="2" ry="2" />
<text  x="1163.06" y="223.5" ></text>
</g>
<g >
<title>wakeup (7 samples, 0.17%)</title><rect x="947.0" y="229" width="2.0" height="15.0" fill="rgb(244,229,52)" rx="2" ry="2" />
<text  x="950.03" y="239.5" ></text>
</g>
<g >
<title>ether_input (4 samples, 0.10%)</title><rect x="1121.5" y="261" width="1.1" height="15.0" fill="rgb(245,150,33)" rx="2" ry="2" />
<text  x="1124.49" y="271.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="948.8" y="197" width="0.2" height="15.0" fill="rgb(212,124,54)" rx="2" ry="2" />
<text  x="951.76" y="207.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (3 samples, 0.07%)</title><rect x="1121.5" y="37" width="0.8" height="15.0" fill="rgb(240,27,16)" rx="2" ry="2" />
<text  x="1124.49" y="47.5" ></text>
</g>
<g >
<title>bsearch4_lookup (6 samples, 0.15%)</title><rect x="765.1" y="53" width="1.7" height="15.0" fill="rgb(206,7,23)" rx="2" ry="2" />
<text  x="768.10" y="63.5" ></text>
</g>
<g >
<title>ether_output_frame (101 samples, 2.46%)</title><rect x="949.3" y="101" width="29.1" height="15.0" fill="rgb(214,9,34)" rx="2" ry="2" />
<text  x="952.34" y="111.5" >et..</text>
</g>
<g >
<title>gtaskqueue_run_locked (497 samples, 12.12%)</title><rect x="978.4" y="261" width="143.1" height="15.0" fill="rgb(223,5,44)" rx="2" ry="2" />
<text  x="981.41" y="271.5" >gtaskqueue_run_loc..</text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.12%)</title><rect x="768.3" y="197" width="1.4" height="15.0" fill="rgb(211,121,24)" rx="2" ry="2" />
<text  x="771.26" y="207.5" ></text>
</g>
<g >
<title>ether_output (4 samples, 0.10%)</title><rect x="1121.5" y="149" width="1.1" height="15.0" fill="rgb(227,28,51)" rx="2" ry="2" />
<text  x="1124.49" y="159.5" ></text>
</g>
<g >
<title>if_getnumadomain (43 samples, 1.05%)</title><rect x="769.7" y="197" width="12.4" height="15.0" fill="rgb(247,222,18)" rx="2" ry="2" />
<text  x="772.70" y="207.5" ></text>
</g>
<g >
<title>m_freem (24 samples, 0.59%)</title><rect x="949.3" y="53" width="6.9" height="15.0" fill="rgb(207,59,20)" rx="2" ry="2" />
<text  x="952.34" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (122 samples, 2.98%)</title><rect x="978.4" y="37" width="35.1" height="15.0" fill="rgb(254,166,40)" rx="2" ry="2" />
<text  x="981.41" y="47.5" >ix..</text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.10%)</title><rect x="1180.5" y="213" width="1.2" height="15.0" fill="rgb(207,20,20)" rx="2" ry="2" />
<text  x="1183.50" y="223.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (72 samples, 1.76%)</title><rect x="818.6" y="181" width="20.8" height="15.0" fill="rgb(247,20,12)" rx="2" ry="2" />
<text  x="821.64" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (71 samples, 1.73%)</title><rect x="25.3" y="117" width="20.4" height="15.0" fill="rgb(231,104,37)" rx="2" ry="2" />
<text  x="28.26" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.10%)</title><rect x="1121.5" y="197" width="1.1" height="15.0" fill="rgb(254,46,42)" rx="2" ry="2" />
<text  x="1124.49" y="207.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (1 samples, 0.02%)</title><rect x="812.0" y="101" width="0.3" height="15.0" fill="rgb(205,78,17)" rx="2" ry="2" />
<text  x="815.02" y="111.5" ></text>
</g>
<g >
<title>ether_demux (4 samples, 0.10%)</title><rect x="1121.5" y="213" width="1.1" height="15.0" fill="rgb(210,20,36)" rx="2" ry="2" />
<text  x="1124.49" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (304 samples, 7.42%)</title><rect x="1034.0" y="37" width="87.5" height="15.0" fill="rgb(211,180,40)" rx="2" ry="2" />
<text  x="1036.97" y="47.5" >ixgbe_isc_..</text>
</g>
<g >
<title>ether_nh_input (4 samples, 0.10%)</title><rect x="1121.5" y="229" width="1.1" height="15.0" fill="rgb(224,205,9)" rx="2" ry="2" />
<text  x="1124.49" y="239.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (13 samples, 0.32%)</title><rect x="1178.8" y="229" width="3.7" height="15.0" fill="rgb(214,27,37)" rx="2" ry="2" />
<text  x="1181.77" y="239.5" ></text>
</g>
<g >
<title>m_pkthdr_init (17 samples, 0.41%)</title><rect x="874.8" y="197" width="4.9" height="15.0" fill="rgb(249,167,38)" rx="2" ry="2" />
<text  x="877.78" y="207.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (4 samples, 0.10%)</title><rect x="1121.5" y="101" width="1.1" height="15.0" fill="rgb(233,20,42)" rx="2" ry="2" />
<text  x="1124.49" y="111.5" ></text>
</g>
<g >
<title>ip_tryforward (497 samples, 12.12%)</title><rect x="978.4" y="117" width="143.1" height="15.0" fill="rgb(206,150,26)" rx="2" ry="2" />
<text  x="981.41" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.02%)</title><rect x="1188.8" y="181" width="0.3" height="15.0" fill="rgb(220,14,1)" rx="2" ry="2" />
<text  x="1191.85" y="191.5" ></text>
</g>
<g >
<title>m_free (4 samples, 0.10%)</title><rect x="1121.5" y="69" width="1.1" height="15.0" fill="rgb(252,18,43)" rx="2" ry="2" />
<text  x="1124.49" y="79.5" ></text>
</g>
<g >
<title>in_lltable_lookup (40 samples, 0.98%)</title><rect x="360.6" y="53" width="11.5" height="15.0" fill="rgb(209,53,19)" rx="2" ry="2" />
<text  x="363.63" y="63.5" ></text>
</g>
<g >
<title>if_getsoftc (12 samples, 0.29%)</title><rect x="431.2" y="37" width="3.4" height="15.0" fill="rgb(240,5,44)" rx="2" ry="2" />
<text  x="434.16" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.10%)</title><rect x="1160.1" y="197" width="1.1" height="15.0" fill="rgb(213,148,23)" rx="2" ry="2" />
<text  x="1163.06" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.05%)</title><rect x="897.2" y="197" width="0.6" height="15.0" fill="rgb(246,68,33)" rx="2" ry="2" />
<text  x="900.23" y="207.5" ></text>
</g>
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="25.0" y="277" width="0.3" height="15.0" fill="rgb(208,182,25)" rx="2" ry="2" />
<text  x="27.97" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (10 samples, 0.24%)</title><rect x="1162.4" y="213" width="2.8" height="15.0" fill="rgb(205,67,4)" rx="2" ry="2" />
<text  x="1165.36" y="223.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (497 samples, 12.12%)</title><rect x="978.4" y="69" width="143.1" height="15.0" fill="rgb(253,52,18)" rx="2" ry="2" />
<text  x="981.41" y="79.5" >iflib_simple_trans..</text>
</g>
<g >
<title>m_freem (71 samples, 1.73%)</title><rect x="25.3" y="69" width="20.4" height="15.0" fill="rgb(211,107,7)" rx="2" ry="2" />
<text  x="28.26" y="79.5" ></text>
</g>
<g >
<title>memmove_erms (7 samples, 0.17%)</title><rect x="372.1" y="53" width="2.1" height="15.0" fill="rgb(243,75,43)" rx="2" ry="2" />
<text  x="375.15" y="63.5" ></text>
</g>
<g >
<title>netmap_rx_irq (8 samples, 0.20%)</title><rect x="940.7" y="213" width="2.3" height="15.0" fill="rgb(223,32,26)" rx="2" ry="2" />
<text  x="943.70" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (2,253 samples, 54.96%)</title><rect x="119.7" y="165" width="648.6" height="15.0" fill="rgb(248,24,28)" rx="2" ry="2" />
<text  x="122.68" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>m_free (24 samples, 0.59%)</title><rect x="949.3" y="37" width="6.9" height="15.0" fill="rgb(252,167,19)" rx="2" ry="2" />
<text  x="952.34" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (16 samples, 0.39%)</title><rect x="10.0" y="277" width="4.6" height="15.0" fill="rgb(247,183,30)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1162.1" y="213" width="0.3" height="15.0" fill="rgb(218,203,16)" rx="2" ry="2" />
<text  x="1165.08" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (54 samples, 1.32%)</title><rect x="1018.4" y="37" width="15.6" height="15.0" fill="rgb(232,218,15)" rx="2" ry="2" />
<text  x="1021.43" y="47.5" ></text>
</g>
<g >
<title>ether_output (1,414 samples, 34.50%)</title><rect x="294.7" y="85" width="407.1" height="15.0" fill="rgb(213,48,35)" rx="2" ry="2" />
<text  x="297.71" y="95.5" >ether_output</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="817.8" y="181" width="0.8" height="15.0" fill="rgb(232,193,51)" rx="2" ry="2" />
<text  x="820.78" y="191.5" ></text>
</g>
<g >
<title>ip_input (4 samples, 0.10%)</title><rect x="1121.5" y="181" width="1.1" height="15.0" fill="rgb(230,151,21)" rx="2" ry="2" />
<text  x="1124.49" y="191.5" ></text>
</g>
<g >
<title>doreti (1 samples, 0.02%)</title><rect x="45.7" y="277" width="0.3" height="15.0" fill="rgb(254,181,9)" rx="2" ry="2" />
<text  x="48.70" y="287.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (70 samples, 1.71%)</title><rect x="957.1" y="37" width="20.2" height="15.0" fill="rgb(224,205,25)" rx="2" ry="2" />
<text  x="960.11" y="47.5" ></text>
</g>
<g >
<title>pmc_process_samples (5 samples, 0.12%)</title><rect x="1187.7" y="197" width="1.4" height="15.0" fill="rgb(233,89,8)" rx="2" ry="2" />
<text  x="1190.70" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (7 samples, 0.17%)</title><rect x="103.3" y="181" width="2.0" height="15.0" fill="rgb(219,81,7)" rx="2" ry="2" />
<text  x="106.27" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (497 samples, 12.12%)</title><rect x="978.4" y="85" width="143.1" height="15.0" fill="rgb(227,61,35)" rx="2" ry="2" />
<text  x="981.41" y="95.5" >ether_output_frame</text>
</g>
<g >
<title>iflib_rxeof (497 samples, 12.12%)</title><rect x="978.4" y="229" width="143.1" height="15.0" fill="rgb(212,34,10)" rx="2" ry="2" />
<text  x="981.41" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>spinlock_enter (6 samples, 0.15%)</title><rect x="54.0" y="197" width="1.8" height="15.0" fill="rgb(239,66,34)" rx="2" ry="2" />
<text  x="57.04" y="207.5" ></text>
</g>
<g >
<title>cache_alloc_retry (4 samples, 0.10%)</title><rect x="811.4" y="181" width="1.2" height="15.0" fill="rgb(240,224,29)" rx="2" ry="2" />
<text  x="814.44" y="191.5" ></text>
</g>
<g >
<title>ether_output (71 samples, 1.73%)</title><rect x="25.3" y="133" width="20.4" height="15.0" fill="rgb(244,97,3)" rx="2" ry="2" />
<text  x="28.26" y="143.5" ></text>
</g>
<g >
<title>uma_small_alloc (1 samples, 0.02%)</title><rect x="812.0" y="117" width="0.3" height="15.0" fill="rgb(242,35,20)" rx="2" ry="2" />
<text  x="815.02" y="127.5" ></text>
</g>
<g >
<title>_task_fn_rx (71 samples, 1.73%)</title><rect x="25.3" y="277" width="20.4" height="15.0" fill="rgb(228,198,7)" rx="2" ry="2" />
<text  x="28.26" y="287.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.10%)</title><rect x="1154.0" y="213" width="1.2" height="15.0" fill="rgb(208,64,34)" rx="2" ry="2" />
<text  x="1157.02" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.05%)</title><rect x="696.0" y="53" width="0.6" height="15.0" fill="rgb(220,9,38)" rx="2" ry="2" />
<text  x="699.01" y="63.5" ></text>
</g>
<g >
<title>ether_output_frame (4 samples, 0.10%)</title><rect x="1121.5" y="133" width="1.1" height="15.0" fill="rgb(241,133,52)" rx="2" ry="2" />
<text  x="1124.49" y="143.5" ></text>
</g>
<g >
<title>if_getvnet (4 samples, 0.10%)</title><rect x="782.1" y="197" width="1.1" height="15.0" fill="rgb(205,126,51)" rx="2" ry="2" />
<text  x="785.08" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (5 samples, 0.12%)</title><rect x="945.6" y="229" width="1.4" height="15.0" fill="rgb(238,115,46)" rx="2" ry="2" />
<text  x="948.59" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (1 samples, 0.02%)</title><rect x="874.5" y="197" width="0.3" height="15.0" fill="rgb(241,40,11)" rx="2" ry="2" />
<text  x="877.49" y="207.5" ></text>
</g>
<g >
<title>ether_input (497 samples, 12.12%)</title><rect x="978.4" y="213" width="143.1" height="15.0" fill="rgb(250,90,19)" rx="2" ry="2" />
<text  x="981.41" y="223.5" >ether_input</text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.24%)</title><rect x="1155.2" y="213" width="2.8" height="15.0" fill="rgb(226,1,5)" rx="2" ry="2" />
<text  x="1158.17" y="223.5" ></text>
</g>
<g >
<title>iflib_encap (358 samples, 8.73%)</title><rect x="1018.4" y="53" width="103.1" height="15.0" fill="rgb(238,165,34)" rx="2" ry="2" />
<text  x="1021.43" y="63.5" >iflib_encap</text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.02%)</title><rect x="1189.1" y="213" width="0.3" height="15.0" fill="rgb(242,189,35)" rx="2" ry="2" />
<text  x="1192.14" y="223.5" ></text>
</g>
<g >
<title>m_adj (18 samples, 0.44%)</title><rect x="159.7" y="133" width="5.2" height="15.0" fill="rgb(231,8,45)" rx="2" ry="2" />
<text  x="162.70" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.10%)</title><rect x="1152.9" y="213" width="1.1" height="15.0" fill="rgb(221,124,32)" rx="2" ry="2" />
<text  x="1155.86" y="223.5" ></text>
</g>
<g >
<title>ip_input (497 samples, 12.12%)</title><rect x="978.4" y="133" width="143.1" height="15.0" fill="rgb(232,113,48)" rx="2" ry="2" />
<text  x="981.41" y="143.5" >ip_input</text>
</g>
<g >
<title>ifmp_ring_check_drainage (1 samples, 0.02%)</title><rect x="943.6" y="213" width="0.3" height="15.0" fill="rgb(226,117,35)" rx="2" ry="2" />
<text  x="946.58" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (7 samples, 0.17%)</title><rect x="164.9" y="133" width="2.0" height="15.0" fill="rgb(245,172,38)" rx="2" ry="2" />
<text  x="167.88" y="143.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (139 samples, 3.39%)</title><rect x="978.4" y="53" width="40.0" height="15.0" fill="rgb(229,187,54)" rx="2" ry="2" />
<text  x="981.41" y="63.5" >ifl..</text>
</g>
<g >
<title>uma_zfree_arg (68 samples, 1.66%)</title><rect x="26.1" y="37" width="19.6" height="15.0" fill="rgb(227,178,31)" rx="2" ry="2" />
<text  x="29.12" y="47.5" ></text>
</g>
<g >
<title>intr_execute_handlers (213 samples, 5.20%)</title><rect x="1122.6" y="277" width="61.4" height="15.0" fill="rgb(220,28,11)" rx="2" ry="2" />
<text  x="1125.64" y="287.5" >intr_e..</text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="944.4" y="229" width="0.3" height="15.0" fill="rgb(244,78,36)" rx="2" ry="2" />
<text  x="947.44" y="239.5" ></text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.02%)</title><rect x="812.3" y="117" width="0.3" height="15.0" fill="rgb(242,23,48)" rx="2" ry="2" />
<text  x="815.31" y="127.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="1181.7" y="213" width="0.8" height="15.0" fill="rgb(231,105,21)" rx="2" ry="2" />
<text  x="1184.65" y="223.5" ></text>
</g>
<g >
<title>ether_demux (71 samples, 1.73%)</title><rect x="25.3" y="197" width="20.4" height="15.0" fill="rgb(238,101,37)" rx="2" ry="2" />
<text  x="28.26" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (4 samples, 0.10%)</title><rect x="55.8" y="197" width="1.1" height="15.0" fill="rgb(220,210,17)" rx="2" ry="2" />
<text  x="58.77" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (4 samples, 0.10%)</title><rect x="811.4" y="133" width="1.2" height="15.0" fill="rgb(229,168,39)" rx="2" ry="2" />
<text  x="814.44" y="143.5" ></text>
</g>
<g >
<title>hardclock (9 samples, 0.22%)</title><rect x="1186.8" y="229" width="2.6" height="15.0" fill="rgb(217,48,49)" rx="2" ry="2" />
<text  x="1189.83" y="239.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (137 samples, 3.34%)</title><rect x="1143.1" y="245" width="39.4" height="15.0" fill="rgb(222,86,23)" rx="2" ry="2" />
<text  x="1146.08" y="255.5" >ifl..</text>
</g>
<g >
<title>msi_vector (1 samples, 0.02%)</title><rect x="1183.7" y="261" width="0.3" height="15.0" fill="rgb(243,104,3)" rx="2" ry="2" />
<text  x="1186.67" y="271.5" ></text>
</g>
<g >
<title>tc_windup (1 samples, 0.02%)</title><rect x="1189.1" y="197" width="0.3" height="15.0" fill="rgb(241,78,34)" rx="2" ry="2" />
<text  x="1192.14" y="207.5" ></text>
</g>
<g >
<title>timercb (12 samples, 0.29%)</title><rect x="1186.5" y="261" width="3.5" height="15.0" fill="rgb(222,63,21)" rx="2" ry="2" />
<text  x="1189.55" y="271.5" ></text>
</g>
<g >
<title>_task_fn_rx (101 samples, 2.46%)</title><rect x="949.3" y="261" width="29.1" height="15.0" fill="rgb(223,126,9)" rx="2" ry="2" />
<text  x="952.34" y="271.5" >_t..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (30 samples, 0.73%)</title><rect x="839.4" y="197" width="8.6" height="15.0" fill="rgb(227,182,30)" rx="2" ry="2" />
<text  x="842.37" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (6 samples, 0.15%)</title><rect x="1184.8" y="261" width="1.7" height="15.0" fill="rgb(205,206,32)" rx="2" ry="2" />
<text  x="1187.82" y="271.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (2 samples, 0.05%)</title><rect x="940.1" y="197" width="0.6" height="15.0" fill="rgb(254,126,36)" rx="2" ry="2" />
<text  x="943.12" y="207.5" ></text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.02%)</title><rect x="1188.6" y="181" width="0.2" height="15.0" fill="rgb(249,197,0)" rx="2" ry="2" />
<text  x="1191.56" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.07%)</title><rect x="25.3" y="37" width="0.8" height="15.0" fill="rgb(246,64,27)" rx="2" ry="2" />
<text  x="28.26" y="47.5" ></text>
</g>
<g >
<title>if_inc_counter (18 samples, 0.44%)</title><rect x="434.6" y="37" width="5.2" height="15.0" fill="rgb(239,110,3)" rx="2" ry="2" />
<text  x="437.62" y="47.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (4 samples, 0.10%)</title><rect x="1121.5" y="117" width="1.1" height="15.0" fill="rgb(247,161,44)" rx="2" ry="2" />
<text  x="1124.49" y="127.5" ></text>
</g>
<g >
<title>zone_import (4 samples, 0.10%)</title><rect x="811.4" y="149" width="1.2" height="15.0" fill="rgb(211,74,8)" rx="2" ry="2" />
<text  x="814.44" y="159.5" ></text>
</g>
<g >
<title>memcmp (4 samples, 0.10%)</title><rect x="766.8" y="149" width="1.2" height="15.0" fill="rgb(237,200,0)" rx="2" ry="2" />
<text  x="769.82" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(230,32,45)" rx="2" ry="2" />
<text  x="1192.42" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (6 samples, 0.15%)</title><rect x="48.9" y="229" width="1.7" height="15.0" fill="rgb(245,140,6)" rx="2" ry="2" />
<text  x="51.86" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,138 samples, 76.56%)</title><rect x="46.0" y="261" width="903.3" height="15.0" fill="rgb(249,176,15)" rx="2" ry="2" />
<text  x="48.98" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ip_tryforward (4 samples, 0.10%)</title><rect x="1121.5" y="165" width="1.1" height="15.0" fill="rgb(205,74,46)" rx="2" ry="2" />
<text  x="1124.49" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (497 samples, 12.12%)</title><rect x="978.4" y="149" width="143.1" height="15.0" fill="rgb(216,225,48)" rx="2" ry="2" />
<text  x="981.41" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>bsearch4_lookup (99 samples, 2.42%)</title><rect x="723.9" y="69" width="28.5" height="15.0" fill="rgb(234,0,10)" rx="2" ry="2" />
<text  x="726.93" y="79.5" >bs..</text>
</g>
<g >
<title>netisr_dispatch_src (2,303 samples, 56.18%)</title><rect x="105.3" y="181" width="663.0" height="15.0" fill="rgb(252,115,33)" rx="2" ry="2" />
<text  x="108.29" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>m_freem (4 samples, 0.10%)</title><rect x="1121.5" y="85" width="1.1" height="15.0" fill="rgb(249,122,29)" rx="2" ry="2" />
<text  x="1124.49" y="95.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (3,136 samples, 76.51%)</title><rect x="46.3" y="245" width="902.7" height="15.0" fill="rgb(215,62,3)" rx="2" ry="2" />
<text  x="49.27" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>netisr_dispatch_src (101 samples, 2.46%)</title><rect x="949.3" y="165" width="29.1" height="15.0" fill="rgb(248,190,54)" rx="2" ry="2" />
<text  x="952.34" y="175.5" >ne..</text>
</g>
<g >
<title>ip_tryforward (1,899 samples, 46.33%)</title><rect x="220.1" y="101" width="546.7" height="15.0" fill="rgb(205,169,11)" rx="2" ry="2" />
<text  x="223.15" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>lapic_handle_intr (9 samples, 0.22%)</title><rect x="1184.0" y="277" width="2.5" height="15.0" fill="rgb(241,108,25)" rx="2" ry="2" />
<text  x="1186.95" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (101 samples, 2.46%)</title><rect x="949.3" y="277" width="29.1" height="15.0" fill="rgb(254,35,32)" rx="2" ry="2" />
<text  x="952.34" y="287.5" >gt..</text>
</g>
<g >
<title>cache_alloc (4 samples, 0.10%)</title><rect x="811.4" y="165" width="1.2" height="15.0" fill="rgb(223,80,37)" rx="2" ry="2" />
<text  x="814.44" y="175.5" ></text>
</g>
<g >
<title>handleevents (12 samples, 0.29%)</title><rect x="1186.5" y="245" width="3.5" height="15.0" fill="rgb(234,87,15)" rx="2" ry="2" />
<text  x="1189.55" y="255.5" ></text>
</g>
<g >
<title>uma_zfree_arg (4 samples, 0.10%)</title><rect x="1121.5" y="53" width="1.1" height="15.0" fill="rgb(205,4,18)" rx="2" ry="2" />
<text  x="1124.49" y="63.5" ></text>
</g>
<g >
<title>ether_output (497 samples, 12.12%)</title><rect x="978.4" y="101" width="143.1" height="15.0" fill="rgb(250,69,28)" rx="2" ry="2" />
<text  x="981.41" y="111.5" >ether_output</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (14 samples, 0.34%)</title><rect x="1161.2" y="229" width="4.0" height="15.0" fill="rgb(230,173,47)" rx="2" ry="2" />
<text  x="1164.21" y="239.5" ></text>
</g>
<g >
<title>iflib_encap (262 samples, 6.39%)</title><rect x="607.1" y="37" width="75.4" height="15.0" fill="rgb(245,88,43)" rx="2" ry="2" />
<text  x="610.05" y="47.5" >iflib_en..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (14 samples, 0.34%)</title><rect x="682.5" y="37" width="4.0" height="15.0" fill="rgb(248,179,14)" rx="2" ry="2" />
<text  x="685.48" y="47.5" ></text>
</g>
<g >
<title>intr_event_handle (169 samples, 4.12%)</title><rect x="1135.0" y="261" width="48.7" height="15.0" fill="rgb(212,11,37)" rx="2" ry="2" />
<text  x="1138.02" y="271.5" >intr..</text>
</g>
<g >
<title>netisr_dispatch_src (71 samples, 1.73%)</title><rect x="25.3" y="181" width="20.4" height="15.0" fill="rgb(252,10,36)" rx="2" ry="2" />
<text  x="28.26" y="191.5" ></text>
</g>
<g >
<title>ip_tryforward (71 samples, 1.73%)</title><rect x="25.3" y="149" width="20.4" height="15.0" fill="rgb(206,112,14)" rx="2" ry="2" />
<text  x="28.26" y="159.5" ></text>
</g>
<g >
<title>if_inc_counter (6 samples, 0.15%)</title><rect x="783.2" y="197" width="1.8" height="15.0" fill="rgb(223,137,36)" rx="2" ry="2" />
<text  x="786.23" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.05%)</title><rect x="1160.6" y="181" width="0.6" height="15.0" fill="rgb(206,140,41)" rx="2" ry="2" />
<text  x="1163.64" y="191.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (1 samples, 0.02%)</title><rect x="50.6" y="229" width="0.3" height="15.0" fill="rgb(247,209,40)" rx="2" ry="2" />
<text  x="53.59" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (13 samples, 0.32%)</title><rect x="53.2" y="213" width="3.7" height="15.0" fill="rgb(254,156,41)" rx="2" ry="2" />
<text  x="56.18" y="223.5" ></text>
</g>
<g >
<title>all (4,099 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(215,164,0)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
</g>
</svg>
