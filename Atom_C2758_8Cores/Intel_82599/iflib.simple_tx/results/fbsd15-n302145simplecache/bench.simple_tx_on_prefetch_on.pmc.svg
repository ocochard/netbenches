<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>lapic_handle_intr (1 samples, 0.02%)</title><rect x="785.9" y="181" width="0.3" height="15.0" fill="rgb(214,111,28)" rx="2" ry="2" />
<text  x="788.89" y="191.5" ></text>
</g>
<g >
<title>bsearch4_lookup (12 samples, 0.29%)</title><rect x="735.7" y="53" width="3.4" height="15.0" fill="rgb(239,102,24)" rx="2" ry="2" />
<text  x="738.70" y="63.5" ></text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.05%)</title><rect x="1184.3" y="261" width="0.6" height="15.0" fill="rgb(249,92,35)" rx="2" ry="2" />
<text  x="1187.33" y="271.5" ></text>
</g>
<g >
<title>m_pkthdr_init (31 samples, 0.75%)</title><rect x="836.7" y="197" width="8.7" height="15.0" fill="rgb(212,11,50)" rx="2" ry="2" />
<text  x="839.65" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (1,802 samples, 43.31%)</title><rect x="228.1" y="101" width="511.0" height="15.0" fill="rgb(248,117,37)" rx="2" ry="2" />
<text  x="231.08" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.02%)</title><rect x="1189.1" y="181" width="0.3" height="15.0" fill="rgb(228,154,1)" rx="2" ry="2" />
<text  x="1192.15" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (12 samples, 0.29%)</title><rect x="1186.0" y="197" width="3.4" height="15.0" fill="rgb(253,49,2)" rx="2" ry="2" />
<text  x="1189.03" y="207.5" ></text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.02%)</title><rect x="779.4" y="117" width="0.3" height="15.0" fill="rgb(223,88,0)" rx="2" ry="2" />
<text  x="782.37" y="127.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (9 samples, 0.22%)</title><rect x="1120.8" y="37" width="2.6" height="15.0" fill="rgb(250,203,39)" rx="2" ry="2" />
<text  x="1123.81" y="47.5" ></text>
</g>
<g >
<title>ether_input (90 samples, 2.16%)</title><rect x="23.9" y="245" width="25.5" height="15.0" fill="rgb(241,135,50)" rx="2" ry="2" />
<text  x="26.90" y="255.5" >e..</text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="63.9" y="213" width="0.3" height="15.0" fill="rgb(214,92,54)" rx="2" ry="2" />
<text  x="66.88" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (2 samples, 0.05%)</title><rect x="940.7" y="213" width="0.6" height="15.0" fill="rgb(225,131,14)" rx="2" ry="2" />
<text  x="943.73" y="223.5" ></text>
</g>
<g >
<title>ether_demux (117 samples, 2.81%)</title><rect x="951.8" y="181" width="33.2" height="15.0" fill="rgb(210,106,30)" rx="2" ry="2" />
<text  x="954.79" y="191.5" >et..</text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (84 samples, 2.02%)</title><rect x="812.5" y="197" width="23.9" height="15.0" fill="rgb(242,114,28)" rx="2" ry="2" />
<text  x="815.55" y="207.5" >i..</text>
</g>
<g >
<title>pmap_kextract (7 samples, 0.17%)</title><rect x="23.9" y="37" width="2.0" height="15.0" fill="rgb(237,80,31)" rx="2" ry="2" />
<text  x="26.90" y="47.5" ></text>
</g>
<g >
<title>m_freem (90 samples, 2.16%)</title><rect x="23.9" y="69" width="25.5" height="15.0" fill="rgb(220,163,54)" rx="2" ry="2" />
<text  x="26.90" y="79.5" >m..</text>
</g>
<g >
<title>m_freem (9 samples, 0.22%)</title><rect x="1120.8" y="85" width="2.6" height="15.0" fill="rgb(214,184,32)" rx="2" ry="2" />
<text  x="1123.81" y="95.5" ></text>
</g>
<g >
<title>ether_demux (9 samples, 0.22%)</title><rect x="1120.8" y="213" width="2.6" height="15.0" fill="rgb(208,10,47)" rx="2" ry="2" />
<text  x="1123.81" y="223.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="951.5" y="245" width="0.3" height="15.0" fill="rgb(220,67,52)" rx="2" ry="2" />
<text  x="954.50" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="744.5" y="149" width="0.3" height="15.0" fill="rgb(235,199,39)" rx="2" ry="2" />
<text  x="747.49" y="159.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (11 samples, 0.26%)</title><rect x="962.0" y="37" width="3.1" height="15.0" fill="rgb(254,211,26)" rx="2" ry="2" />
<text  x="965.00" y="47.5" ></text>
</g>
<g >
<title>ether_input (479 samples, 11.51%)</title><rect x="985.0" y="213" width="135.8" height="15.0" fill="rgb(246,202,6)" rx="2" ry="2" />
<text  x="987.97" y="223.5" >ether_input</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (17 samples, 0.41%)</title><rect x="1161.9" y="229" width="4.8" height="15.0" fill="rgb(208,228,46)" rx="2" ry="2" />
<text  x="1164.93" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (6 samples, 0.14%)</title><rect x="1160.2" y="181" width="1.7" height="15.0" fill="rgb(253,100,22)" rx="2" ry="2" />
<text  x="1163.22" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (33 samples, 0.79%)</title><rect x="803.2" y="197" width="9.3" height="15.0" fill="rgb(210,179,42)" rx="2" ry="2" />
<text  x="806.19" y="207.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (978 samples, 23.50%)</title><rect x="386.0" y="53" width="277.4" height="15.0" fill="rgb(227,199,17)" rx="2" ry="2" />
<text  x="389.03" y="63.5" >iflib_simple_transmit</text>
</g>
<g >
<title>netisr_dispatch_src (1,969 samples, 47.32%)</title><rect x="180.7" y="133" width="558.4" height="15.0" fill="rgb(215,58,0)" rx="2" ry="2" />
<text  x="183.72" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sleepq_broadcast (3 samples, 0.07%)</title><rect x="948.4" y="213" width="0.8" height="15.0" fill="rgb(249,127,1)" rx="2" ry="2" />
<text  x="951.39" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (33 samples, 0.79%)</title><rect x="1168.4" y="229" width="9.4" height="15.0" fill="rgb(233,61,8)" rx="2" ry="2" />
<text  x="1171.45" y="239.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.05%)</title><rect x="750.7" y="197" width="0.6" height="15.0" fill="rgb(221,84,45)" rx="2" ry="2" />
<text  x="753.73" y="207.5" ></text>
</g>
<g >
<title>ether_input (2,248 samples, 54.03%)</title><rect x="107.3" y="197" width="637.5" height="15.0" fill="rgb(241,10,6)" rx="2" ry="2" />
<text  x="110.27" y="207.5" >ether_input</text>
</g>
<g >
<title>ixgbe_write_reg (12 samples, 0.29%)</title><rect x="1163.3" y="213" width="3.4" height="15.0" fill="rgb(248,85,34)" rx="2" ry="2" />
<text  x="1166.34" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (479 samples, 11.51%)</title><rect x="985.0" y="229" width="135.8" height="15.0" fill="rgb(209,214,11)" rx="2" ry="2" />
<text  x="987.97" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.07%)</title><rect x="1152.0" y="213" width="0.9" height="15.0" fill="rgb(207,46,31)" rx="2" ry="2" />
<text  x="1155.00" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (248 samples, 5.96%)</title><rect x="845.4" y="197" width="70.4" height="15.0" fill="rgb(239,163,14)" rx="2" ry="2" />
<text  x="848.44" y="207.5" >memcpy_..</text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,173 samples, 76.26%)</title><rect x="52.0" y="261" width="899.8" height="15.0" fill="rgb(213,43,53)" rx="2" ry="2" />
<text  x="54.97" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>_epoch_enter_preempt (4 samples, 0.10%)</title><rect x="57.4" y="229" width="1.1" height="15.0" fill="rgb(214,115,2)" rx="2" ry="2" />
<text  x="60.36" y="239.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (45 samples, 1.08%)</title><rect x="1017.9" y="37" width="12.7" height="15.0" fill="rgb(238,229,22)" rx="2" ry="2" />
<text  x="1020.86" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (117 samples, 2.81%)</title><rect x="951.8" y="197" width="33.2" height="15.0" fill="rgb(234,207,4)" rx="2" ry="2" />
<text  x="954.79" y="207.5" >et..</text>
</g>
<g >
<title>gtaskqueue_thread_loop (479 samples, 11.51%)</title><rect x="985.0" y="277" width="135.8" height="15.0" fill="rgb(206,130,12)" rx="2" ry="2" />
<text  x="987.97" y="287.5" >gtaskqueue_thread..</text>
</g>
<g >
<title>ether_demux (2,029 samples, 48.76%)</title><rect x="163.7" y="149" width="575.4" height="15.0" fill="rgb(236,208,2)" rx="2" ry="2" />
<text  x="166.70" y="159.5" >ether_demux</text>
</g>
<g >
<title>ether_output_frame (117 samples, 2.81%)</title><rect x="951.8" y="101" width="33.2" height="15.0" fill="rgb(252,173,54)" rx="2" ry="2" />
<text  x="954.79" y="111.5" >et..</text>
</g>
<g >
<title>uma_zfree_arg (9 samples, 0.22%)</title><rect x="1120.8" y="53" width="2.6" height="15.0" fill="rgb(240,224,15)" rx="2" ry="2" />
<text  x="1123.81" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.07%)</title><rect x="179.9" y="133" width="0.8" height="15.0" fill="rgb(218,12,30)" rx="2" ry="2" />
<text  x="182.87" y="143.5" ></text>
</g>
<g >
<title>iflib_encap (81 samples, 1.95%)</title><rect x="962.0" y="69" width="23.0" height="15.0" fill="rgb(208,136,50)" rx="2" ry="2" />
<text  x="965.00" y="79.5" >i..</text>
</g>
<g >
<title>uma_zalloc_arg (60 samples, 1.44%)</title><rect x="786.2" y="181" width="17.0" height="15.0" fill="rgb(217,152,41)" rx="2" ry="2" />
<text  x="789.17" y="191.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.05%)</title><rect x="941.3" y="229" width="0.6" height="15.0" fill="rgb(235,103,0)" rx="2" ry="2" />
<text  x="944.30" y="239.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="779.4" y="85" width="0.3" height="15.0" fill="rgb(240,154,26)" rx="2" ry="2" />
<text  x="782.37" y="95.5" ></text>
</g>
<g >
<title>timercb (18 samples, 0.43%)</title><rect x="1184.9" y="261" width="5.1" height="15.0" fill="rgb(210,13,28)" rx="2" ry="2" />
<text  x="1187.90" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (8 samples, 0.19%)</title><rect x="949.2" y="213" width="2.3" height="15.0" fill="rgb(219,60,12)" rx="2" ry="2" />
<text  x="952.24" y="223.5" ></text>
</g>
<g >
<title>intr_lookup_source (1 samples, 0.02%)</title><rect x="1182.6" y="277" width="0.3" height="15.0" fill="rgb(248,26,45)" rx="2" ry="2" />
<text  x="1185.63" y="287.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="751.3" y="197" width="0.3" height="15.0" fill="rgb(211,115,36)" rx="2" ry="2" />
<text  x="754.29" y="207.5" ></text>
</g>
<g >
<title>m_adj (12 samples, 0.29%)</title><rect x="176.5" y="133" width="3.4" height="15.0" fill="rgb(218,129,42)" rx="2" ry="2" />
<text  x="179.46" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (117 samples, 2.81%)</title><rect x="951.8" y="213" width="33.2" height="15.0" fill="rgb(215,123,51)" rx="2" ry="2" />
<text  x="954.79" y="223.5" >ne..</text>
</g>
<g >
<title>ip_tryforward (479 samples, 11.51%)</title><rect x="985.0" y="117" width="135.8" height="15.0" fill="rgb(214,50,5)" rx="2" ry="2" />
<text  x="987.97" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>ether_nh_input (9 samples, 0.22%)</title><rect x="1120.8" y="229" width="2.6" height="15.0" fill="rgb(225,142,40)" rx="2" ry="2" />
<text  x="1123.81" y="239.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.02%)</title><rect x="779.4" y="101" width="0.3" height="15.0" fill="rgb(210,107,27)" rx="2" ry="2" />
<text  x="782.37" y="111.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.05%)</title><rect x="1179.8" y="213" width="0.6" height="15.0" fill="rgb(224,171,13)" rx="2" ry="2" />
<text  x="1182.79" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_intr (7 samples, 0.17%)</title><rect x="1182.9" y="277" width="2.0" height="15.0" fill="rgb(243,72,16)" rx="2" ry="2" />
<text  x="1185.91" y="287.5" ></text>
</g>
<g >
<title>memcpy_erms (18 samples, 0.43%)</title><rect x="663.9" y="69" width="5.2" height="15.0" fill="rgb(246,84,37)" rx="2" ry="2" />
<text  x="666.95" y="79.5" ></text>
</g>
<g >
<title>_task_fn_rx (90 samples, 2.16%)</title><rect x="23.9" y="277" width="25.5" height="15.0" fill="rgb(210,226,34)" rx="2" ry="2" />
<text  x="26.90" y="287.5" >_..</text>
</g>
<g >
<title>m_free (90 samples, 2.16%)</title><rect x="23.9" y="53" width="25.5" height="15.0" fill="rgb(207,50,44)" rx="2" ry="2" />
<text  x="26.90" y="63.5" >m..</text>
</g>
<g >
<title>wakeup (14 samples, 0.34%)</title><rect x="947.5" y="229" width="4.0" height="15.0" fill="rgb(225,87,0)" rx="2" ry="2" />
<text  x="950.53" y="239.5" ></text>
</g>
<g >
<title>if_getnumadomain (15 samples, 0.36%)</title><rect x="746.5" y="197" width="4.2" height="15.0" fill="rgb(208,167,2)" rx="2" ry="2" />
<text  x="749.47" y="207.5" ></text>
</g>
<g >
<title>ip_input (1,930 samples, 46.38%)</title><rect x="191.8" y="117" width="547.3" height="15.0" fill="rgb(211,35,1)" rx="2" ry="2" />
<text  x="194.78" y="127.5" >ip_input</text>
</g>
<g >
<title>gtaskqueue_run_locked (117 samples, 2.81%)</title><rect x="951.8" y="277" width="33.2" height="15.0" fill="rgb(209,71,3)" rx="2" ry="2" />
<text  x="954.79" y="287.5" >gt..</text>
</g>
<g >
<title>ether_output (117 samples, 2.81%)</title><rect x="951.8" y="117" width="33.2" height="15.0" fill="rgb(217,75,12)" rx="2" ry="2" />
<text  x="954.79" y="127.5" >et..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (318 samples, 7.64%)</title><rect x="1030.6" y="37" width="90.2" height="15.0" fill="rgb(234,8,15)" rx="2" ry="2" />
<text  x="1033.62" y="47.5" >ixgbe_isc_..</text>
</g>
<g >
<title>ether_output (1,360 samples, 32.68%)</title><rect x="283.4" y="85" width="385.7" height="15.0" fill="rgb(211,147,9)" rx="2" ry="2" />
<text  x="286.38" y="95.5" >ether_output</text>
</g>
<g >
<title>ether_output_frame (9 samples, 0.22%)</title><rect x="1120.8" y="133" width="2.6" height="15.0" fill="rgb(253,221,35)" rx="2" ry="2" />
<text  x="1123.81" y="143.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (117 samples, 2.81%)</title><rect x="951.8" y="85" width="33.2" height="15.0" fill="rgb(238,49,1)" rx="2" ry="2" />
<text  x="954.79" y="95.5" >if..</text>
</g>
<g >
<title>in_localip (59 samples, 1.42%)</title><rect x="669.1" y="85" width="16.7" height="15.0" fill="rgb(228,143,31)" rx="2" ry="2" />
<text  x="672.05" y="95.5" ></text>
</g>
<g >
<title>m_freem (14 samples, 0.34%)</title><rect x="1013.9" y="37" width="4.0" height="15.0" fill="rgb(227,9,7)" rx="2" ry="2" />
<text  x="1016.89" y="47.5" ></text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.19%)</title><rect x="777.4" y="181" width="2.3" height="15.0" fill="rgb(243,21,16)" rx="2" ry="2" />
<text  x="780.38" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (13 samples, 0.31%)</title><rect x="941.9" y="229" width="3.6" height="15.0" fill="rgb(251,108,20)" rx="2" ry="2" />
<text  x="944.86" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (9 samples, 0.22%)</title><rect x="61.3" y="213" width="2.6" height="15.0" fill="rgb(214,202,14)" rx="2" ry="2" />
<text  x="64.33" y="223.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.02%)</title><rect x="1188.9" y="181" width="0.2" height="15.0" fill="rgb(207,66,18)" rx="2" ry="2" />
<text  x="1191.87" y="191.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (116 samples, 2.79%)</title><rect x="985.0" y="53" width="32.9" height="15.0" fill="rgb(213,88,13)" rx="2" ry="2" />
<text  x="987.97" y="63.5" >if..</text>
</g>
<g >
<title>intr_event_handle (166 samples, 3.99%)</title><rect x="1134.7" y="261" width="47.1" height="15.0" fill="rgb(226,165,22)" rx="2" ry="2" />
<text  x="1137.70" y="271.5" >intr..</text>
</g>
<g >
<title>gtaskqueue_run_locked (3,171 samples, 76.21%)</title><rect x="52.3" y="245" width="899.2" height="15.0" fill="rgb(251,78,3)" rx="2" ry="2" />
<text  x="55.25" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>pmc_hook_handler (12 samples, 0.29%)</title><rect x="1186.0" y="213" width="3.4" height="15.0" fill="rgb(205,77,43)" rx="2" ry="2" />
<text  x="1189.03" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (102 samples, 2.45%)</title><rect x="985.0" y="37" width="28.9" height="15.0" fill="rgb(214,34,34)" rx="2" ry="2" />
<text  x="987.97" y="47.5" >ix..</text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.05%)</title><rect x="62.7" y="197" width="0.6" height="15.0" fill="rgb(251,8,27)" rx="2" ry="2" />
<text  x="65.75" y="207.5" ></text>
</g>
<g >
<title>m_adj (4 samples, 0.10%)</title><rect x="739.1" y="149" width="1.1" height="15.0" fill="rgb(211,125,31)" rx="2" ry="2" />
<text  x="742.10" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (30 samples, 0.72%)</title><rect x="654.9" y="37" width="8.5" height="15.0" fill="rgb(231,13,18)" rx="2" ry="2" />
<text  x="657.87" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.05%)</title><rect x="63.3" y="197" width="0.6" height="15.0" fill="rgb(221,189,33)" rx="2" ry="2" />
<text  x="66.31" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (17 samples, 0.41%)</title><rect x="779.9" y="181" width="4.9" height="15.0" fill="rgb(216,221,3)" rx="2" ry="2" />
<text  x="782.94" y="191.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.02%)</title><rect x="52.0" y="245" width="0.3" height="15.0" fill="rgb(226,6,34)" rx="2" ry="2" />
<text  x="54.97" y="255.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.10%)</title><rect x="784.8" y="181" width="1.1" height="15.0" fill="rgb(238,104,9)" rx="2" ry="2" />
<text  x="787.76" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (9 samples, 0.22%)</title><rect x="982.4" y="37" width="2.6" height="15.0" fill="rgb(216,14,52)" rx="2" ry="2" />
<text  x="985.42" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (90 samples, 2.16%)</title><rect x="23.9" y="149" width="25.5" height="15.0" fill="rgb(207,141,11)" rx="2" ry="2" />
<text  x="26.90" y="159.5" >i..</text>
</g>
<g >
<title>ether_output_frame (90 samples, 2.16%)</title><rect x="23.9" y="117" width="25.5" height="15.0" fill="rgb(216,77,26)" rx="2" ry="2" />
<text  x="26.90" y="127.5" >e..</text>
</g>
<g >
<title>ether_output (90 samples, 2.16%)</title><rect x="23.9" y="133" width="25.5" height="15.0" fill="rgb(247,132,20)" rx="2" ry="2" />
<text  x="26.90" y="143.5" >e..</text>
</g>
<g >
<title>if_inc_counter (23 samples, 0.55%)</title><rect x="429.1" y="37" width="6.6" height="15.0" fill="rgb(243,185,6)" rx="2" ry="2" />
<text  x="432.14" y="47.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (90 samples, 2.16%)</title><rect x="23.9" y="101" width="25.5" height="15.0" fill="rgb(242,141,26)" rx="2" ry="2" />
<text  x="26.90" y="111.5" >i..</text>
</g>
<g >
<title>zone_import (8 samples, 0.19%)</title><rect x="777.4" y="149" width="2.3" height="15.0" fill="rgb(240,46,43)" rx="2" ry="2" />
<text  x="780.38" y="159.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (2 samples, 0.05%)</title><rect x="57.9" y="213" width="0.6" height="15.0" fill="rgb(242,84,45)" rx="2" ry="2" />
<text  x="60.93" y="223.5" ></text>
</g>
<g >
<title>all (4,161 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(238,113,50)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (6 samples, 0.14%)</title><rect x="1166.7" y="229" width="1.7" height="15.0" fill="rgb(251,60,23)" rx="2" ry="2" />
<text  x="1169.75" y="239.5" ></text>
</g>
<g >
<title>iflib_encap (210 samples, 5.05%)</title><rect x="589.6" y="37" width="59.6" height="15.0" fill="rgb(230,104,47)" rx="2" ry="2" />
<text  x="592.65" y="47.5" >iflib_..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (543 samples, 13.05%)</title><rect x="435.7" y="37" width="153.9" height="15.0" fill="rgb(206,214,15)" rx="2" ry="2" />
<text  x="438.66" y="47.5" >iflib_completed_tx_..</text>
</g>
<g >
<title>netisr_dispatch_src (90 samples, 2.16%)</title><rect x="23.9" y="229" width="25.5" height="15.0" fill="rgb(222,13,11)" rx="2" ry="2" />
<text  x="26.90" y="239.5" >n..</text>
</g>
<g >
<title>memcmp (15 samples, 0.36%)</title><rect x="740.2" y="149" width="4.3" height="15.0" fill="rgb(220,228,42)" rx="2" ry="2" />
<text  x="743.23" y="159.5" ></text>
</g>
<g >
<title>intr_execute_handlers (209 samples, 5.02%)</title><rect x="1123.4" y="277" width="59.2" height="15.0" fill="rgb(254,99,11)" rx="2" ry="2" />
<text  x="1126.36" y="287.5" >intr_e..</text>
</g>
<g >
<title>sleepq_lock (9 samples, 0.22%)</title><rect x="1159.4" y="197" width="2.5" height="15.0" fill="rgb(209,14,6)" rx="2" ry="2" />
<text  x="1162.37" y="207.5" ></text>
</g>
<g >
<title>ether_output (479 samples, 11.51%)</title><rect x="985.0" y="101" width="135.8" height="15.0" fill="rgb(211,225,16)" rx="2" ry="2" />
<text  x="987.97" y="111.5" >ether_output</text>
</g>
<g >
<title>rxd_frag_to_sd (65 samples, 1.56%)</title><rect x="916.3" y="197" width="18.5" height="15.0" fill="rgb(250,17,53)" rx="2" ry="2" />
<text  x="919.34" y="207.5" ></text>
</g>
<g >
<title>iflib_encap (363 samples, 8.72%)</title><rect x="1017.9" y="53" width="102.9" height="15.0" fill="rgb(236,70,48)" rx="2" ry="2" />
<text  x="1020.86" y="63.5" >iflib_encap</text>
</g>
<g >
<title>grouptaskqueue_enqueue (51 samples, 1.23%)</title><rect x="1147.5" y="229" width="14.4" height="15.0" fill="rgb(219,145,32)" rx="2" ry="2" />
<text  x="1150.46" y="239.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (4 samples, 0.10%)</title><rect x="934.8" y="197" width="1.1" height="15.0" fill="rgb(244,211,11)" rx="2" ry="2" />
<text  x="937.77" y="207.5" ></text>
</g>
<g >
<title>iflib_get_ifp (1 samples, 0.02%)</title><rect x="1180.4" y="213" width="0.2" height="15.0" fill="rgb(240,212,25)" rx="2" ry="2" />
<text  x="1183.36" y="223.5" ></text>
</g>
<g >
<title>fork_exit (3,173 samples, 76.26%)</title><rect x="52.0" y="277" width="899.8" height="15.0" fill="rgb(211,72,54)" rx="2" ry="2" />
<text  x="54.97" y="287.5" >fork_exit</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (1 samples, 0.02%)</title><rect x="779.7" y="181" width="0.2" height="15.0" fill="rgb(243,0,45)" rx="2" ry="2" />
<text  x="782.65" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,203 samples, 52.94%)</title><rect x="120.0" y="181" width="624.8" height="15.0" fill="rgb(251,12,32)" rx="2" ry="2" />
<text  x="123.03" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.02%)</title><rect x="23.6" y="277" width="0.3" height="15.0" fill="rgb(210,218,19)" rx="2" ry="2" />
<text  x="26.61" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.05%)</title><rect x="663.4" y="53" width="0.5" height="15.0" fill="rgb(227,45,8)" rx="2" ry="2" />
<text  x="666.38" y="63.5" ></text>
</g>
<g >
<title>ip_findroute (188 samples, 4.52%)</title><rect x="685.8" y="85" width="53.3" height="15.0" fill="rgb(241,36,39)" rx="2" ry="2" />
<text  x="688.78" y="95.5" >ip_fi..</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="1180.6" y="213" width="0.9" height="15.0" fill="rgb(207,50,31)" rx="2" ry="2" />
<text  x="1183.64" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (9 samples, 0.22%)</title><rect x="1120.8" y="197" width="2.6" height="15.0" fill="rgb(251,59,27)" rx="2" ry="2" />
<text  x="1123.81" y="207.5" ></text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.05%)</title><rect x="939.0" y="213" width="0.6" height="15.0" fill="rgb(219,85,46)" rx="2" ry="2" />
<text  x="942.03" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (14 samples, 0.34%)</title><rect x="1155.1" y="213" width="4.0" height="15.0" fill="rgb(241,158,4)" rx="2" ry="2" />
<text  x="1158.12" y="223.5" ></text>
</g>
<g >
<title>hardclock (12 samples, 0.29%)</title><rect x="1186.0" y="229" width="3.4" height="15.0" fill="rgb(217,199,44)" rx="2" ry="2" />
<text  x="1189.03" y="239.5" ></text>
</g>
<g >
<title>binuptime (2 samples, 0.05%)</title><rect x="1185.5" y="245" width="0.5" height="15.0" fill="rgb(230,1,20)" rx="2" ry="2" />
<text  x="1188.46" y="255.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(223,223,20)" rx="2" ry="2" />
<text  x="1192.43" y="239.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (2 samples, 0.05%)</title><rect x="778.8" y="101" width="0.6" height="15.0" fill="rgb(245,30,35)" rx="2" ry="2" />
<text  x="781.80" y="111.5" ></text>
</g>
<g >
<title>ether_input (9 samples, 0.22%)</title><rect x="1120.8" y="261" width="2.6" height="15.0" fill="rgb(205,47,43)" rx="2" ry="2" />
<text  x="1123.81" y="271.5" ></text>
</g>
<g >
<title>ether_output (9 samples, 0.22%)</title><rect x="1120.8" y="149" width="2.6" height="15.0" fill="rgb(217,222,16)" rx="2" ry="2" />
<text  x="1123.81" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.12%)</title><rect x="745.1" y="197" width="1.4" height="15.0" fill="rgb(224,56,42)" rx="2" ry="2" />
<text  x="748.05" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="941.0" y="197" width="0.3" height="15.0" fill="rgb(209,33,26)" rx="2" ry="2" />
<text  x="944.01" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (8 samples, 0.19%)</title><rect x="777.4" y="133" width="2.3" height="15.0" fill="rgb(223,125,48)" rx="2" ry="2" />
<text  x="780.38" y="143.5" ></text>
</g>
<g >
<title>in_lltable_lookup (88 samples, 2.11%)</title><rect x="341.8" y="53" width="25.0" height="15.0" fill="rgb(225,54,1)" rx="2" ry="2" />
<text  x="344.80" y="63.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (20 samples, 0.48%)</title><rect x="649.2" y="37" width="5.7" height="15.0" fill="rgb(244,221,11)" rx="2" ry="2" />
<text  x="652.20" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (117 samples, 2.81%)</title><rect x="951.8" y="133" width="33.2" height="15.0" fill="rgb(205,28,2)" rx="2" ry="2" />
<text  x="954.79" y="143.5" >ip..</text>
</g>
<g >
<title>Xapic_isr1 (23 samples, 0.55%)</title><rect x="10.0" y="277" width="6.5" height="15.0" fill="rgb(252,163,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch (7 samples, 0.17%)</title><rect x="118.0" y="181" width="2.0" height="15.0" fill="rgb(235,58,52)" rx="2" ry="2" />
<text  x="121.05" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (7 samples, 0.17%)</title><rect x="945.5" y="229" width="2.0" height="15.0" fill="rgb(208,171,25)" rx="2" ry="2" />
<text  x="948.55" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.05%)</title><rect x="950.9" y="197" width="0.6" height="15.0" fill="rgb(228,172,22)" rx="2" ry="2" />
<text  x="953.94" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_timer (18 samples, 0.43%)</title><rect x="1184.9" y="277" width="5.1" height="15.0" fill="rgb(241,193,3)" rx="2" ry="2" />
<text  x="1187.90" y="287.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (11 samples, 0.26%)</title><rect x="800.1" y="165" width="3.1" height="15.0" fill="rgb(250,147,39)" rx="2" ry="2" />
<text  x="803.07" y="175.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (140 samples, 3.36%)</title><rect x="1142.1" y="245" width="39.7" height="15.0" fill="rgb(248,97,50)" rx="2" ry="2" />
<text  x="1145.07" y="255.5" >ifl..</text>
</g>
<g >
<title>_epoch_exit_preempt (1 samples, 0.02%)</title><rect x="58.5" y="229" width="0.3" height="15.0" fill="rgb(222,196,26)" rx="2" ry="2" />
<text  x="61.49" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (1 samples, 0.02%)</title><rect x="836.4" y="197" width="0.3" height="15.0" fill="rgb(214,49,41)" rx="2" ry="2" />
<text  x="839.37" y="207.5" ></text>
</g>
<g >
<title>msi_vector (3 samples, 0.07%)</title><rect x="1181.8" y="261" width="0.8" height="15.0" fill="rgb(223,227,14)" rx="2" ry="2" />
<text  x="1184.78" y="271.5" ></text>
</g>
<g >
<title>netmap_rx_irq (6 samples, 0.14%)</title><rect x="935.9" y="213" width="1.7" height="15.0" fill="rgb(219,8,42)" rx="2" ry="2" />
<text  x="938.91" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (117 samples, 2.81%)</title><rect x="951.8" y="261" width="33.2" height="15.0" fill="rgb(244,215,33)" rx="2" ry="2" />
<text  x="954.79" y="271.5" >_t..</text>
</g>
<g >
<title>uma_zfree_arg (83 samples, 1.99%)</title><rect x="25.9" y="37" width="23.5" height="15.0" fill="rgb(224,178,40)" rx="2" ry="2" />
<text  x="28.88" y="47.5" >u..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (36 samples, 0.87%)</title><rect x="951.8" y="69" width="10.2" height="15.0" fill="rgb(242,7,36)" rx="2" ry="2" />
<text  x="954.79" y="79.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.19%)</title><rect x="777.4" y="165" width="2.3" height="15.0" fill="rgb(243,50,33)" rx="2" ry="2" />
<text  x="780.38" y="175.5" ></text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.02%)</title><rect x="1188.6" y="181" width="0.3" height="15.0" fill="rgb(243,20,42)" rx="2" ry="2" />
<text  x="1191.58" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.05%)</title><rect x="915.8" y="197" width="0.5" height="15.0" fill="rgb(207,71,30)" rx="2" ry="2" />
<text  x="918.77" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (479 samples, 11.51%)</title><rect x="985.0" y="245" width="135.8" height="15.0" fill="rgb(219,70,44)" rx="2" ry="2" />
<text  x="987.97" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>bsearch4_lookup (63 samples, 1.51%)</title><rect x="696.8" y="69" width="17.9" height="15.0" fill="rgb(252,217,43)" rx="2" ry="2" />
<text  x="699.84" y="79.5" ></text>
</g>
<g >
<title>ip_input (9 samples, 0.22%)</title><rect x="1120.8" y="181" width="2.6" height="15.0" fill="rgb(234,103,40)" rx="2" ry="2" />
<text  x="1123.81" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (479 samples, 11.51%)</title><rect x="985.0" y="197" width="135.8" height="15.0" fill="rgb(227,128,11)" rx="2" ry="2" />
<text  x="987.97" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>if_getsoftc (15 samples, 0.36%)</title><rect x="424.9" y="37" width="4.2" height="15.0" fill="rgb(249,105,36)" rx="2" ry="2" />
<text  x="427.89" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (9 samples, 0.22%)</title><rect x="1120.8" y="277" width="2.6" height="15.0" fill="rgb(207,7,21)" rx="2" ry="2" />
<text  x="1123.81" y="287.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (90 samples, 2.16%)</title><rect x="23.9" y="85" width="25.5" height="15.0" fill="rgb(220,136,42)" rx="2" ry="2" />
<text  x="26.90" y="95.5" >i..</text>
</g>
<g >
<title>iflib_simple_transmit (9 samples, 0.22%)</title><rect x="1120.8" y="117" width="2.6" height="15.0" fill="rgb(239,215,22)" rx="2" ry="2" />
<text  x="1123.81" y="127.5" ></text>
</g>
<g >
<title>memmove_erms (8 samples, 0.19%)</title><rect x="366.8" y="53" width="2.2" height="15.0" fill="rgb(218,13,16)" rx="2" ry="2" />
<text  x="369.75" y="63.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (479 samples, 11.51%)</title><rect x="985.0" y="69" width="135.8" height="15.0" fill="rgb(208,186,46)" rx="2" ry="2" />
<text  x="987.97" y="79.5" >iflib_simple_tran..</text>
</g>
<g >
<title>m_free (9 samples, 0.22%)</title><rect x="1120.8" y="69" width="2.6" height="15.0" fill="rgb(207,63,20)" rx="2" ry="2" />
<text  x="1123.81" y="79.5" ></text>
</g>
<g >
<title>doreti (9 samples, 0.22%)</title><rect x="49.4" y="277" width="2.6" height="15.0" fill="rgb(237,84,10)" rx="2" ry="2" />
<text  x="52.42" y="287.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="939.6" y="213" width="0.3" height="15.0" fill="rgb(235,213,8)" rx="2" ry="2" />
<text  x="942.59" y="223.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="778.2" y="117" width="0.3" height="15.0" fill="rgb(216,136,22)" rx="2" ry="2" />
<text  x="781.23" y="127.5" ></text>
</g>
<g >
<title>arpresolve (151 samples, 3.63%)</title><rect x="326.2" y="69" width="42.8" height="15.0" fill="rgb(254,134,27)" rx="2" ry="2" />
<text  x="329.20" y="79.5" >arpr..</text>
</g>
<g >
<title>m_freem (36 samples, 0.87%)</title><rect x="951.8" y="53" width="10.2" height="15.0" fill="rgb(252,111,28)" rx="2" ry="2" />
<text  x="954.79" y="63.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (479 samples, 11.51%)</title><rect x="985.0" y="261" width="135.8" height="15.0" fill="rgb(243,57,31)" rx="2" ry="2" />
<text  x="987.97" y="271.5" >gtaskqueue_run_lo..</text>
</g>
<g >
<title>ip_input (90 samples, 2.16%)</title><rect x="23.9" y="165" width="25.5" height="15.0" fill="rgb(236,180,25)" rx="2" ry="2" />
<text  x="26.90" y="175.5" >i..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (9 samples, 0.22%)</title><rect x="1120.8" y="101" width="2.6" height="15.0" fill="rgb(213,7,38)" rx="2" ry="2" />
<text  x="1123.81" y="111.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (81 samples, 1.95%)</title><rect x="962.0" y="53" width="23.0" height="15.0" fill="rgb(211,85,45)" rx="2" ry="2" />
<text  x="965.00" y="63.5" >b..</text>
</g>
<g >
<title>wakeup_any (10 samples, 0.24%)</title><rect x="1159.1" y="213" width="2.8" height="15.0" fill="rgb(237,203,14)" rx="2" ry="2" />
<text  x="1162.09" y="223.5" ></text>
</g>
<g >
<title>ether_input (117 samples, 2.81%)</title><rect x="951.8" y="229" width="33.2" height="15.0" fill="rgb(246,140,52)" rx="2" ry="2" />
<text  x="954.79" y="239.5" >et..</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (3 samples, 0.07%)</title><rect x="1151.1" y="213" width="0.9" height="15.0" fill="rgb(247,139,13)" rx="2" ry="2" />
<text  x="1154.15" y="223.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (3 samples, 0.07%)</title><rect x="939.9" y="213" width="0.8" height="15.0" fill="rgb(230,18,1)" rx="2" ry="2" />
<text  x="942.88" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (117 samples, 2.81%)</title><rect x="951.8" y="245" width="33.2" height="15.0" fill="rgb(243,54,43)" rx="2" ry="2" />
<text  x="954.79" y="255.5" >if..</text>
</g>
<g >
<title>uma_small_alloc (3 samples, 0.07%)</title><rect x="778.5" y="117" width="0.9" height="15.0" fill="rgb(209,97,34)" rx="2" ry="2" />
<text  x="781.52" y="127.5" ></text>
</g>
<g >
<title>ether_output_frame (479 samples, 11.51%)</title><rect x="985.0" y="85" width="135.8" height="15.0" fill="rgb(254,95,6)" rx="2" ry="2" />
<text  x="987.97" y="95.5" >ether_output_frame</text>
</g>
<g >
<title>fib4_lookup (86 samples, 2.07%)</title><rect x="714.7" y="69" width="24.4" height="15.0" fill="rgb(245,187,46)" rx="2" ry="2" />
<text  x="717.71" y="79.5" >f..</text>
</g>
<g >
<title>ip_input (117 samples, 2.81%)</title><rect x="951.8" y="149" width="33.2" height="15.0" fill="rgb(211,141,0)" rx="2" ry="2" />
<text  x="954.79" y="159.5" >ip..</text>
</g>
<g >
<title>_task_fn_tx (13 samples, 0.31%)</title><rect x="937.6" y="229" width="3.7" height="15.0" fill="rgb(241,17,33)" rx="2" ry="2" />
<text  x="940.61" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (2,147 samples, 51.60%)</title><rect x="135.9" y="165" width="608.9" height="15.0" fill="rgb(252,45,9)" rx="2" ry="2" />
<text  x="138.91" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>iflib_fl_refill (182 samples, 4.37%)</title><rect x="751.6" y="197" width="51.6" height="15.0" fill="rgb(244,81,47)" rx="2" ry="2" />
<text  x="754.58" y="207.5" >iflib..</text>
</g>
<g >
<title>ether_demux (479 samples, 11.51%)</title><rect x="985.0" y="165" width="135.8" height="15.0" fill="rgb(243,29,8)" rx="2" ry="2" />
<text  x="987.97" y="175.5" >ether_demux</text>
</g>
<g >
<title>handleevents (14 samples, 0.34%)</title><rect x="1186.0" y="245" width="4.0" height="15.0" fill="rgb(220,179,5)" rx="2" ry="2" />
<text  x="1189.03" y="255.5" ></text>
</g>
<g >
<title>ether_demux (90 samples, 2.16%)</title><rect x="23.9" y="197" width="25.5" height="15.0" fill="rgb(239,104,11)" rx="2" ry="2" />
<text  x="26.90" y="207.5" >e..</text>
</g>
<g >
<title>ether_nh_input (479 samples, 11.51%)</title><rect x="985.0" y="181" width="135.8" height="15.0" fill="rgb(216,6,34)" rx="2" ry="2" />
<text  x="987.97" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (61 samples, 1.47%)</title><rect x="965.1" y="37" width="17.3" height="15.0" fill="rgb(240,70,36)" rx="2" ry="2" />
<text  x="968.12" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (9 samples, 0.22%)</title><rect x="1120.8" y="165" width="2.6" height="15.0" fill="rgb(247,95,52)" rx="2" ry="2" />
<text  x="1123.81" y="175.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="744.8" y="197" width="0.3" height="15.0" fill="rgb(237,167,15)" rx="2" ry="2" />
<text  x="747.77" y="207.5" ></text>
</g>
<g >
<title>m_free (36 samples, 0.87%)</title><rect x="951.8" y="37" width="10.2" height="15.0" fill="rgb(250,44,53)" rx="2" ry="2" />
<text  x="954.79" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (90 samples, 2.16%)</title><rect x="23.9" y="213" width="25.5" height="15.0" fill="rgb(215,40,48)" rx="2" ry="2" />
<text  x="26.90" y="223.5" >e..</text>
</g>
<g >
<title>netisr_dispatch_src (9 samples, 0.22%)</title><rect x="1120.8" y="245" width="2.6" height="15.0" fill="rgb(230,170,39)" rx="2" ry="2" />
<text  x="1123.81" y="255.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (25 samples, 0.60%)</title><rect x="16.5" y="277" width="7.1" height="15.0" fill="rgb(248,131,21)" rx="2" ry="2" />
<text  x="19.52" y="287.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="1181.5" y="229" width="0.3" height="15.0" fill="rgb(219,191,11)" rx="2" ry="2" />
<text  x="1184.49" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.10%)</title><rect x="423.8" y="37" width="1.1" height="15.0" fill="rgb(215,71,32)" rx="2" ry="2" />
<text  x="426.75" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,099 samples, 74.48%)</title><rect x="58.8" y="229" width="878.8" height="15.0" fill="rgb(206,147,51)" rx="2" ry="2" />
<text  x="61.78" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ixgbe_msix_que (13 samples, 0.31%)</title><rect x="1177.8" y="229" width="3.7" height="15.0" fill="rgb(213,139,23)" rx="2" ry="2" />
<text  x="1180.81" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (1,040 samples, 24.99%)</title><rect x="369.0" y="69" width="294.9" height="15.0" fill="rgb(208,71,45)" rx="2" ry="2" />
<text  x="372.02" y="79.5" >ether_output_frame</text>
</g>
<g >
<title>pagezero_erms (2 samples, 0.05%)</title><rect x="778.8" y="85" width="0.6" height="15.0" fill="rgb(219,133,54)" rx="2" ry="2" />
<text  x="781.80" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.19%)</title><rect x="1152.9" y="213" width="2.2" height="15.0" fill="rgb(230,85,0)" rx="2" ry="2" />
<text  x="1155.85" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (479 samples, 11.51%)</title><rect x="985.0" y="149" width="135.8" height="15.0" fill="rgb(217,227,51)" rx="2" ry="2" />
<text  x="987.97" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ip_input (479 samples, 11.51%)</title><rect x="985.0" y="133" width="135.8" height="15.0" fill="rgb(227,229,22)" rx="2" ry="2" />
<text  x="987.97" y="143.5" >ip_input</text>
</g>
<g >
<title>iflib_rxeof (3,074 samples, 73.88%)</title><rect x="64.2" y="213" width="871.7" height="15.0" fill="rgb(213,129,21)" rx="2" ry="2" />
<text  x="67.16" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_rxeof (90 samples, 2.16%)</title><rect x="23.9" y="261" width="25.5" height="15.0" fill="rgb(215,52,0)" rx="2" ry="2" />
<text  x="26.90" y="271.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (90 samples, 2.16%)</title><rect x="23.9" y="181" width="25.5" height="15.0" fill="rgb(244,124,42)" rx="2" ry="2" />
<text  x="26.90" y="191.5" >n..</text>
</g>
<g >
<title>netisr_dispatch_src (117 samples, 2.81%)</title><rect x="951.8" y="165" width="33.2" height="15.0" fill="rgb(243,194,41)" rx="2" ry="2" />
<text  x="954.79" y="175.5" >ne..</text>
</g>
</g>
</svg>
