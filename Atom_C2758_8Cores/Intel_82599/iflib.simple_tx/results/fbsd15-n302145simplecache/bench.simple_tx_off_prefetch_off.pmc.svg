<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>gtaskqueue_run_locked (3 samples, 0.06%)</title><rect x="1088.5" y="277" width="0.7" height="15.0" fill="rgb(209,191,12)" rx="2" ry="2" />
<text  x="1091.53" y="287.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.02%)</title><rect x="572.6" y="101" width="0.2" height="15.0" fill="rgb(251,49,41)" rx="2" ry="2" />
<text  x="575.60" y="111.5" ></text>
</g>
<g >
<title>pmap_kextract (2 samples, 0.04%)</title><rect x="1008.0" y="133" width="0.4" height="15.0" fill="rgb(246,150,53)" rx="2" ry="2" />
<text  x="1010.96" y="143.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.04%)</title><rect x="742.6" y="181" width="0.4" height="15.0" fill="rgb(245,154,44)" rx="2" ry="2" />
<text  x="745.57" y="191.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(225,178,20)" rx="2" ry="2" />
<text  x="1192.77" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.04%)</title><rect x="29.3" y="53" width="0.4" height="15.0" fill="rgb(231,174,24)" rx="2" ry="2" />
<text  x="32.27" y="63.5" ></text>
</g>
<g >
<title>uma_zfree_arg (81 samples, 1.59%)</title><rect x="842.2" y="133" width="18.8" height="15.0" fill="rgb(243,198,35)" rx="2" ry="2" />
<text  x="845.18" y="143.5" ></text>
</g>
<g >
<title>arpresolve (157 samples, 3.09%)</title><rect x="315.3" y="69" width="36.5" height="15.0" fill="rgb(217,150,31)" rx="2" ry="2" />
<text  x="318.33" y="79.5" >arp..</text>
</g>
<g >
<title>in_localip (38 samples, 0.75%)</title><rect x="464.6" y="85" width="8.9" height="15.0" fill="rgb(210,77,8)" rx="2" ry="2" />
<text  x="467.63" y="95.5" ></text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.06%)</title><rect x="1090.6" y="37" width="0.7" height="15.0" fill="rgb(232,6,35)" rx="2" ry="2" />
<text  x="1093.62" y="47.5" ></text>
</g>
<g >
<title>ether_demux (138 samples, 2.72%)</title><rect x="1089.2" y="165" width="32.1" height="15.0" fill="rgb(237,142,33)" rx="2" ry="2" />
<text  x="1092.23" y="175.5" >et..</text>
</g>
<g >
<title>ether_nh_input (138 samples, 2.72%)</title><rect x="1089.2" y="181" width="32.1" height="15.0" fill="rgb(213,111,54)" rx="2" ry="2" />
<text  x="1092.23" y="191.5" >et..</text>
</g>
<g >
<title>gtaskqueue_run_locked (4,550 samples, 89.53%)</title><rect x="32.1" y="245" width="1056.4" height="15.0" fill="rgb(214,27,32)" rx="2" ry="2" />
<text  x="35.06" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ifmp_ring_enqueue (158 samples, 3.11%)</title><rect x="420.3" y="37" width="36.7" height="15.0" fill="rgb(219,123,44)" rx="2" ry="2" />
<text  x="423.28" y="47.5" >ifm..</text>
</g>
<g >
<title>pmclog_process_callchain (3 samples, 0.06%)</title><rect x="1188.1" y="181" width="0.7" height="15.0" fill="rgb(228,207,3)" rx="2" ry="2" />
<text  x="1191.14" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.16%)</title><rect x="1079.5" y="229" width="1.8" height="15.0" fill="rgb(235,22,27)" rx="2" ry="2" />
<text  x="1082.48" y="239.5" ></text>
</g>
<g >
<title>lapic_eoi (2 samples, 0.04%)</title><rect x="1181.9" y="245" width="0.4" height="15.0" fill="rgb(253,45,35)" rx="2" ry="2" />
<text  x="1184.87" y="255.5" ></text>
</g>
<g >
<title>ether_input (138 samples, 2.72%)</title><rect x="1089.2" y="213" width="32.1" height="15.0" fill="rgb(251,122,39)" rx="2" ry="2" />
<text  x="1092.23" y="223.5" >et..</text>
</g>
<g >
<title>_task_fn_rx (2,844 samples, 55.96%)</title><rect x="42.3" y="229" width="660.3" height="15.0" fill="rgb(218,40,21)" rx="2" ry="2" />
<text  x="45.27" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_demux (2 samples, 0.04%)</title><rect x="29.3" y="197" width="0.4" height="15.0" fill="rgb(223,65,33)" rx="2" ry="2" />
<text  x="32.27" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="528.9" y="149" width="0.5" height="15.0" fill="rgb(223,213,45)" rx="2" ry="2" />
<text  x="531.95" y="159.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (3 samples, 0.06%)</title><rect x="412.4" y="37" width="0.7" height="15.0" fill="rgb(251,29,39)" rx="2" ry="2" />
<text  x="415.39" y="47.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.06%)</title><rect x="31.4" y="245" width="0.7" height="15.0" fill="rgb(230,170,14)" rx="2" ry="2" />
<text  x="34.36" y="255.5" ></text>
</g>
<g >
<title>iflib_rxeof (2 samples, 0.04%)</title><rect x="29.3" y="261" width="0.4" height="15.0" fill="rgb(226,55,53)" rx="2" ry="2" />
<text  x="32.27" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3 samples, 0.06%)</title><rect x="1088.5" y="69" width="0.7" height="15.0" fill="rgb(251,136,51)" rx="2" ry="2" />
<text  x="1091.53" y="79.5" ></text>
</g>
<g >
<title>spinlock_exit (4 samples, 0.08%)</title><rect x="47.4" y="197" width="0.9" height="15.0" fill="rgb(238,79,21)" rx="2" ry="2" />
<text  x="50.38" y="207.5" ></text>
</g>
<g >
<title>ether_input (2 samples, 0.04%)</title><rect x="29.3" y="245" width="0.4" height="15.0" fill="rgb(237,223,6)" rx="2" ry="2" />
<text  x="32.27" y="255.5" ></text>
</g>
<g >
<title>ether_output_frame (453 samples, 8.91%)</title><rect x="351.8" y="69" width="105.2" height="15.0" fill="rgb(213,144,36)" rx="2" ry="2" />
<text  x="354.79" y="79.5" >ether_output..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (138 samples, 2.72%)</title><rect x="1089.2" y="53" width="32.1" height="15.0" fill="rgb(231,116,25)" rx="2" ry="2" />
<text  x="1092.23" y="63.5" >gr..</text>
</g>
<g >
<title>ixgbe_write_reg (5 samples, 0.10%)</title><rect x="1180.7" y="213" width="1.2" height="15.0" fill="rgb(233,96,21)" rx="2" ry="2" />
<text  x="1183.71" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,549 samples, 30.48%)</title><rect x="166.3" y="133" width="359.6" height="15.0" fill="rgb(244,109,49)" rx="2" ry="2" />
<text  x="169.27" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.04%)</title><rect x="29.3" y="101" width="0.4" height="15.0" fill="rgb(248,52,34)" rx="2" ry="2" />
<text  x="32.27" y="111.5" ></text>
</g>
<g >
<title>pmc_process_samples (6 samples, 0.12%)</title><rect x="1187.7" y="197" width="1.4" height="15.0" fill="rgb(223,49,28)" rx="2" ry="2" />
<text  x="1190.68" y="207.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,603 samples, 31.54%)</title><rect x="705.2" y="213" width="372.2" height="15.0" fill="rgb(208,176,10)" rx="2" ry="2" />
<text  x="708.18" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ether_nh_input (3 samples, 0.06%)</title><rect x="1088.5" y="197" width="0.7" height="15.0" fill="rgb(251,137,38)" rx="2" ry="2" />
<text  x="1091.53" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (6 samples, 0.12%)</title><rect x="40.9" y="229" width="1.4" height="15.0" fill="rgb(240,98,0)" rx="2" ry="2" />
<text  x="43.88" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1 (34 samples, 0.67%)</title><rect x="10.0" y="277" width="7.9" height="15.0" fill="rgb(222,85,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (176 samples, 3.46%)</title><rect x="1141.0" y="245" width="40.9" height="15.0" fill="rgb(243,42,20)" rx="2" ry="2" />
<text  x="1144.01" y="255.5" >ifl..</text>
</g>
<g >
<title>Xapic_isr1_pti (46 samples, 0.91%)</title><rect x="17.9" y="277" width="10.7" height="15.0" fill="rgb(246,229,28)" rx="2" ry="2" />
<text  x="20.89" y="287.5" ></text>
</g>
<g >
<title>intr_execute_handlers (265 samples, 5.21%)</title><rect x="1121.3" y="277" width="61.5" height="15.0" fill="rgb(248,15,12)" rx="2" ry="2" />
<text  x="1124.27" y="287.5" >intr_e..</text>
</g>
<g >
<title>memmove_erms (17 samples, 0.33%)</title><rect x="347.8" y="53" width="4.0" height="15.0" fill="rgb(228,166,35)" rx="2" ry="2" />
<text  x="350.84" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.10%)</title><rect x="46.2" y="197" width="1.2" height="15.0" fill="rgb(239,190,4)" rx="2" ry="2" />
<text  x="49.22" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (3 samples, 0.06%)</title><rect x="1088.5" y="101" width="0.7" height="15.0" fill="rgb(229,28,5)" rx="2" ry="2" />
<text  x="1091.53" y="111.5" ></text>
</g>
<g >
<title>all (5,082 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(236,126,21)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (49 samples, 0.96%)</title><rect x="401.0" y="37" width="11.4" height="15.0" fill="rgb(228,95,52)" rx="2" ry="2" />
<text  x="404.01" y="47.5" ></text>
</g>
<g >
<title>if_inc_counter (5 samples, 0.10%)</title><rect x="543.1" y="197" width="1.2" height="15.0" fill="rgb(240,217,41)" rx="2" ry="2" />
<text  x="546.11" y="207.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (138 samples, 2.72%)</title><rect x="1045.1" y="181" width="32.1" height="15.0" fill="rgb(223,53,52)" rx="2" ry="2" />
<text  x="1048.11" y="191.5" >if..</text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="1088.5" y="165" width="0.7" height="15.0" fill="rgb(226,147,22)" rx="2" ry="2" />
<text  x="1091.53" y="175.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (7 samples, 0.14%)</title><rect x="699.4" y="197" width="1.6" height="15.0" fill="rgb(224,25,30)" rx="2" ry="2" />
<text  x="702.38" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.04%)</title><rect x="29.3" y="85" width="0.4" height="15.0" fill="rgb(234,30,4)" rx="2" ry="2" />
<text  x="32.27" y="95.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (54 samples, 1.06%)</title><rect x="1150.1" y="229" width="12.5" height="15.0" fill="rgb(247,133,7)" rx="2" ry="2" />
<text  x="1153.06" y="239.5" ></text>
</g>
<g >
<title>doreti (5 samples, 0.10%)</title><rect x="29.7" y="277" width="1.2" height="15.0" fill="rgb(244,163,50)" rx="2" ry="2" />
<text  x="32.74" y="287.5" ></text>
</g>
<g >
<title>memcmp (12 samples, 0.24%)</title><rect x="526.2" y="149" width="2.7" height="15.0" fill="rgb(220,134,7)" rx="2" ry="2" />
<text  x="529.16" y="159.5" ></text>
</g>
<g >
<title>m_freem (125 samples, 2.46%)</title><rect x="832.0" y="165" width="29.0" height="15.0" fill="rgb(242,143,52)" rx="2" ry="2" />
<text  x="834.96" y="175.5" >m_..</text>
</g>
<g >
<title>uma_small_alloc (2 samples, 0.04%)</title><rect x="572.1" y="117" width="0.5" height="15.0" fill="rgb(232,75,27)" rx="2" ry="2" />
<text  x="575.14" y="127.5" ></text>
</g>
<g >
<title>lapic_handle_intr (1 samples, 0.02%)</title><rect x="1044.9" y="165" width="0.2" height="15.0" fill="rgb(212,188,19)" rx="2" ry="2" />
<text  x="1047.88" y="175.5" ></text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.02%)</title><rect x="1188.8" y="181" width="0.3" height="15.0" fill="rgb(250,143,51)" rx="2" ry="2" />
<text  x="1191.84" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (7 samples, 0.14%)</title><rect x="1164.5" y="229" width="1.6" height="15.0" fill="rgb(252,43,12)" rx="2" ry="2" />
<text  x="1167.46" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (56 samples, 1.10%)</title><rect x="819.0" y="165" width="13.0" height="15.0" fill="rgb(216,167,32)" rx="2" ry="2" />
<text  x="821.96" y="175.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="572.6" y="85" width="0.2" height="15.0" fill="rgb(242,36,10)" rx="2" ry="2" />
<text  x="575.60" y="95.5" ></text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="48.3" y="197" width="0.2" height="15.0" fill="rgb(210,159,8)" rx="2" ry="2" />
<text  x="51.31" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (3 samples, 0.06%)</title><rect x="1088.5" y="245" width="0.7" height="15.0" fill="rgb(237,149,41)" rx="2" ry="2" />
<text  x="1091.53" y="255.5" ></text>
</g>
<g >
<title>if_getnumadomain (49 samples, 0.96%)</title><rect x="531.5" y="197" width="11.4" height="15.0" fill="rgb(246,87,54)" rx="2" ry="2" />
<text  x="534.50" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (75 samples, 1.48%)</title><rect x="1103.9" y="37" width="17.4" height="15.0" fill="rgb(239,163,8)" rx="2" ry="2" />
<text  x="1106.86" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (1 samples, 0.02%)</title><rect x="45.8" y="197" width="0.2" height="15.0" fill="rgb(211,165,18)" rx="2" ry="2" />
<text  x="48.76" y="207.5" ></text>
</g>
<g >
<title>ether_output (2 samples, 0.04%)</title><rect x="29.3" y="133" width="0.4" height="15.0" fill="rgb(248,20,17)" rx="2" ry="2" />
<text  x="32.27" y="143.5" ></text>
</g>
<g >
<title>m_pkthdr_init (22 samples, 0.43%)</title><rect x="627.6" y="197" width="5.1" height="15.0" fill="rgb(243,139,12)" rx="2" ry="2" />
<text  x="630.63" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (5 samples, 0.10%)</title><rect x="991.0" y="149" width="1.2" height="15.0" fill="rgb(244,185,17)" rx="2" ry="2" />
<text  x="994.01" y="159.5" ></text>
</g>
<g >
<title>fork_exit (4,555 samples, 89.63%)</title><rect x="30.9" y="277" width="1057.6" height="15.0" fill="rgb(217,32,44)" rx="2" ry="2" />
<text  x="33.90" y="287.5" >fork_exit</text>
</g>
<g >
<title>ip_tryforward (1,342 samples, 26.41%)</title><rect x="214.3" y="101" width="311.6" height="15.0" fill="rgb(210,214,15)" rx="2" ry="2" />
<text  x="217.33" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (5 samples, 0.10%)</title><rect x="1152.4" y="213" width="1.1" height="15.0" fill="rgb(247,99,22)" rx="2" ry="2" />
<text  x="1155.38" y="223.5" ></text>
</g>
<g >
<title>intr_event_handle (219 samples, 4.31%)</title><rect x="1131.5" y="261" width="50.8" height="15.0" fill="rgb(208,114,53)" rx="2" ry="2" />
<text  x="1134.49" y="271.5" >intr_..</text>
</g>
<g >
<title>_epoch_enter_preempt (8 samples, 0.16%)</title><rect x="39.0" y="229" width="1.9" height="15.0" fill="rgb(208,104,27)" rx="2" ry="2" />
<text  x="42.02" y="239.5" ></text>
</g>
<g >
<title>ether_output (138 samples, 2.72%)</title><rect x="1089.2" y="101" width="32.1" height="15.0" fill="rgb(233,8,47)" rx="2" ry="2" />
<text  x="1092.23" y="111.5" >et..</text>
</g>
<g >
<title>pmc_hook_handler (9 samples, 0.18%)</title><rect x="1187.0" y="213" width="2.1" height="15.0" fill="rgb(239,104,2)" rx="2" ry="2" />
<text  x="1189.98" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (138 samples, 2.72%)</title><rect x="1089.2" y="149" width="32.1" height="15.0" fill="rgb(213,97,46)" rx="2" ry="2" />
<text  x="1092.23" y="159.5" >ne..</text>
</g>
<g >
<title>_task_fn_tx (1,621 samples, 31.90%)</title><rect x="702.6" y="229" width="376.4" height="15.0" fill="rgb(222,113,15)" rx="2" ry="2" />
<text  x="705.63" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>sleepq_lock (9 samples, 0.18%)</title><rect x="1086.4" y="213" width="2.1" height="15.0" fill="rgb(210,9,41)" rx="2" ry="2" />
<text  x="1089.44" y="223.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (24 samples, 0.47%)</title><rect x="1176.3" y="229" width="5.6" height="15.0" fill="rgb(221,75,12)" rx="2" ry="2" />
<text  x="1179.30" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (2 samples, 0.04%)</title><rect x="29.3" y="277" width="0.4" height="15.0" fill="rgb(211,52,43)" rx="2" ry="2" />
<text  x="32.27" y="287.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (3 samples, 0.06%)</title><rect x="40.2" y="213" width="0.7" height="15.0" fill="rgb(211,12,32)" rx="2" ry="2" />
<text  x="43.18" y="223.5" ></text>
</g>
<g >
<title>iflib_get_ifp (2 samples, 0.04%)</title><rect x="1180.2" y="213" width="0.5" height="15.0" fill="rgb(215,137,51)" rx="2" ry="2" />
<text  x="1183.25" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (138 samples, 2.72%)</title><rect x="1089.2" y="245" width="32.1" height="15.0" fill="rgb(233,165,7)" rx="2" ry="2" />
<text  x="1092.23" y="255.5" >_t..</text>
</g>
<g >
<title>sleepq_broadcast (4 samples, 0.08%)</title><rect x="1085.5" y="213" width="0.9" height="15.0" fill="rgb(254,111,22)" rx="2" ry="2" />
<text  x="1088.51" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="1078.8" y="197" width="0.2" height="15.0" fill="rgb(254,111,18)" rx="2" ry="2" />
<text  x="1081.78" y="207.5" ></text>
</g>
<g >
<title>ether_output (866 samples, 17.04%)</title><rect x="263.6" y="85" width="201.0" height="15.0" fill="rgb(218,178,10)" rx="2" ry="2" />
<text  x="266.55" y="95.5" >ether_output</text>
</g>
<g >
<title>spinlock_exit (16 samples, 0.31%)</title><rect x="1081.3" y="229" width="3.7" height="15.0" fill="rgb(245,19,1)" rx="2" ry="2" />
<text  x="1084.33" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,861 samples, 36.62%)</title><rect x="97.3" y="181" width="432.1" height="15.0" fill="rgb(215,203,21)" rx="2" ry="2" />
<text  x="100.30" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_bpf_mtap_if (8 samples, 0.16%)</title><rect x="711.0" y="197" width="1.8" height="15.0" fill="rgb(229,184,31)" rx="2" ry="2" />
<text  x="713.99" y="207.5" ></text>
</g>
<g >
<title>if_getvnet (1 samples, 0.02%)</title><rect x="542.9" y="197" width="0.2" height="15.0" fill="rgb(212,94,25)" rx="2" ry="2" />
<text  x="545.88" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.02%)</title><rect x="1077.2" y="181" width="0.2" height="15.0" fill="rgb(235,178,8)" rx="2" ry="2" />
<text  x="1080.15" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (44 samples, 0.87%)</title><rect x="1166.1" y="229" width="10.2" height="15.0" fill="rgb(206,191,28)" rx="2" ry="2" />
<text  x="1169.08" y="239.5" ></text>
</g>
<g >
<title>timercb (22 samples, 0.43%)</title><rect x="1184.9" y="261" width="5.1" height="15.0" fill="rgb(249,95,53)" rx="2" ry="2" />
<text  x="1187.89" y="271.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (220 samples, 4.33%)</title><rect x="648.3" y="197" width="51.1" height="15.0" fill="rgb(230,146,43)" rx="2" ry="2" />
<text  x="651.30" y="207.5" >rxd_f..</text>
</g>
<g >
<title>if_input (2 samples, 0.04%)</title><rect x="544.3" y="197" width="0.4" height="15.0" fill="rgb(224,35,53)" rx="2" ry="2" />
<text  x="547.27" y="207.5" ></text>
</g>
<g >
<title>ip_findroute (226 samples, 4.45%)</title><rect x="473.5" y="85" width="52.4" height="15.0" fill="rgb(219,200,16)" rx="2" ry="2" />
<text  x="476.46" y="95.5" >ip_fi..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (3 samples, 0.06%)</title><rect x="1078.3" y="213" width="0.7" height="15.0" fill="rgb(245,15,0)" rx="2" ry="2" />
<text  x="1081.32" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,570 samples, 30.89%)</title><rect x="712.8" y="197" width="364.6" height="15.0" fill="rgb(217,130,21)" rx="2" ry="2" />
<text  x="715.85" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (2 samples, 0.04%)</title><rect x="627.2" y="197" width="0.4" height="15.0" fill="rgb(244,55,15)" rx="2" ry="2" />
<text  x="630.17" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="48.3" y="181" width="0.2" height="15.0" fill="rgb(244,222,2)" rx="2" ry="2" />
<text  x="51.31" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="1088.5" y="213" width="0.7" height="15.0" fill="rgb(231,52,33)" rx="2" ry="2" />
<text  x="1091.53" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_intr (9 samples, 0.18%)</title><rect x="1182.8" y="277" width="2.1" height="15.0" fill="rgb(212,124,48)" rx="2" ry="2" />
<text  x="1185.80" y="287.5" ></text>
</g>
<g >
<title>handleevents (18 samples, 0.35%)</title><rect x="1185.8" y="245" width="4.2" height="15.0" fill="rgb(228,4,15)" rx="2" ry="2" />
<text  x="1188.82" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (8 samples, 0.16%)</title><rect x="1157.3" y="213" width="1.8" height="15.0" fill="rgb(248,124,2)" rx="2" ry="2" />
<text  x="1160.26" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (70 samples, 1.38%)</title><rect x="992.2" y="149" width="16.2" height="15.0" fill="rgb(250,48,13)" rx="2" ry="2" />
<text  x="995.17" y="159.5" ></text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.04%)</title><rect x="29.3" y="117" width="0.4" height="15.0" fill="rgb(251,12,47)" rx="2" ry="2" />
<text  x="32.27" y="127.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (13 samples, 0.26%)</title><rect x="591.4" y="165" width="3.0" height="15.0" fill="rgb(224,91,5)" rx="2" ry="2" />
<text  x="594.41" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (138 samples, 2.72%)</title><rect x="1089.2" y="229" width="32.1" height="15.0" fill="rgb(243,30,50)" rx="2" ry="2" />
<text  x="1092.23" y="239.5" >if..</text>
</g>
<g >
<title>msi_vector (1 samples, 0.02%)</title><rect x="1182.6" y="261" width="0.2" height="15.0" fill="rgb(239,58,39)" rx="2" ry="2" />
<text  x="1185.57" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="29.3" y="229" width="0.4" height="15.0" fill="rgb(225,166,41)" rx="2" ry="2" />
<text  x="32.27" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (149 samples, 2.93%)</title><rect x="1010.3" y="165" width="34.6" height="15.0" fill="rgb(238,61,54)" rx="2" ry="2" />
<text  x="1013.28" y="175.5" >ix..</text>
</g>
<g >
<title>pagezero_erms (2 samples, 0.04%)</title><rect x="572.1" y="85" width="0.5" height="15.0" fill="rgb(244,203,0)" rx="2" ry="2" />
<text  x="575.14" y="95.5" ></text>
</g>
<g >
<title>ether_output_frame (138 samples, 2.72%)</title><rect x="1089.2" y="85" width="32.1" height="15.0" fill="rgb(209,55,6)" rx="2" ry="2" />
<text  x="1092.23" y="95.5" >et..</text>
</g>
<g >
<title>fib4_lookup (85 samples, 1.67%)</title><rect x="506.2" y="69" width="19.7" height="15.0" fill="rgb(253,40,53)" rx="2" ry="2" />
<text  x="509.19" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (13 samples, 0.26%)</title><rect x="45.5" y="213" width="3.0" height="15.0" fill="rgb(234,143,17)" rx="2" ry="2" />
<text  x="48.53" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (16 samples, 0.31%)</title><rect x="1068.3" y="165" width="3.7" height="15.0" fill="rgb(238,128,7)" rx="2" ry="2" />
<text  x="1071.33" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (15 samples, 0.30%)</title><rect x="1159.1" y="213" width="3.5" height="15.0" fill="rgb(254,82,5)" rx="2" ry="2" />
<text  x="1162.12" y="223.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (2 samples, 0.04%)</title><rect x="572.1" y="101" width="0.5" height="15.0" fill="rgb(226,190,28)" rx="2" ry="2" />
<text  x="575.14" y="111.5" ></text>
</g>
<g >
<title>memcpy_erms (67 samples, 1.32%)</title><rect x="632.7" y="197" width="15.6" height="15.0" fill="rgb(225,35,50)" rx="2" ry="2" />
<text  x="635.74" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="1153.5" y="213" width="0.3" height="15.0" fill="rgb(220,190,30)" rx="2" ry="2" />
<text  x="1156.55" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (138 samples, 2.72%)</title><rect x="1089.2" y="261" width="32.1" height="15.0" fill="rgb(252,78,0)" rx="2" ry="2" />
<text  x="1092.23" y="271.5" >gt..</text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.10%)</title><rect x="841.0" y="133" width="1.2" height="15.0" fill="rgb(222,73,37)" rx="2" ry="2" />
<text  x="844.02" y="143.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,809 samples, 55.27%)</title><rect x="48.8" y="213" width="652.2" height="15.0" fill="rgb(239,38,2)" rx="2" ry="2" />
<text  x="51.78" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>uma_zalloc_arg (67 samples, 1.32%)</title><rect x="578.9" y="181" width="15.5" height="15.0" fill="rgb(253,87,39)" rx="2" ry="2" />
<text  x="581.87" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (1,790 samples, 35.22%)</title><rect x="113.8" y="165" width="415.6" height="15.0" fill="rgb(209,97,27)" rx="2" ry="2" />
<text  x="116.79" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ether_output (3 samples, 0.06%)</title><rect x="1088.5" y="117" width="0.7" height="15.0" fill="rgb(240,191,28)" rx="2" ry="2" />
<text  x="1091.53" y="127.5" ></text>
</g>
<g >
<title>ip_input (138 samples, 2.72%)</title><rect x="1089.2" y="133" width="32.1" height="15.0" fill="rgb(231,98,16)" rx="2" ry="2" />
<text  x="1092.23" y="143.5" >ip..</text>
</g>
<g >
<title>wakeup_any (2 samples, 0.04%)</title><rect x="29.3" y="69" width="0.4" height="15.0" fill="rgb(248,132,37)" rx="2" ry="2" />
<text  x="32.27" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="1163.8" y="213" width="0.7" height="15.0" fill="rgb(241,2,45)" rx="2" ry="2" />
<text  x="1166.76" y="223.5" ></text>
</g>
<g >
<title>m_adj (31 samples, 0.61%)</title><rect x="158.6" y="133" width="7.2" height="15.0" fill="rgb(245,29,4)" rx="2" ry="2" />
<text  x="161.60" y="143.5" ></text>
</g>
<g >
<title>ether_input (1,913 samples, 37.64%)</title><rect x="85.2" y="197" width="444.2" height="15.0" fill="rgb(229,219,16)" rx="2" ry="2" />
<text  x="88.23" y="207.5" >ether_input</text>
</g>
<g >
<title>wakeup (15 samples, 0.30%)</title><rect x="1085.0" y="229" width="3.5" height="15.0" fill="rgb(236,145,2)" rx="2" ry="2" />
<text  x="1088.05" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (6 samples, 0.12%)</title><rect x="1089.2" y="37" width="1.4" height="15.0" fill="rgb(235,49,18)" rx="2" ry="2" />
<text  x="1092.23" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.06%)</title><rect x="1088.5" y="37" width="0.7" height="15.0" fill="rgb(234,211,51)" rx="2" ry="2" />
<text  x="1091.53" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (22 samples, 0.43%)</title><rect x="1072.0" y="165" width="5.2" height="15.0" fill="rgb(253,222,16)" rx="2" ry="2" />
<text  x="1075.05" y="175.5" ></text>
</g>
<g >
<title>if_getdrvflags (6 samples, 0.12%)</title><rect x="530.1" y="197" width="1.4" height="15.0" fill="rgb(253,137,3)" rx="2" ry="2" />
<text  x="533.11" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (9 samples, 0.18%)</title><rect x="1160.5" y="181" width="2.1" height="15.0" fill="rgb(224,86,36)" rx="2" ry="2" />
<text  x="1163.51" y="191.5" ></text>
</g>
<g >
<title>hardclock (14 samples, 0.28%)</title><rect x="1186.1" y="229" width="3.2" height="15.0" fill="rgb(214,180,13)" rx="2" ry="2" />
<text  x="1189.05" y="239.5" ></text>
</g>
<g >
<title>statclock (3 samples, 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(232,135,16)" rx="2" ry="2" />
<text  x="1192.30" y="239.5" ></text>
</g>
<g >
<title>bsearch4_lookup (5 samples, 0.10%)</title><rect x="524.8" y="53" width="1.1" height="15.0" fill="rgb(235,107,19)" rx="2" ry="2" />
<text  x="527.77" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (360 samples, 7.08%)</title><rect x="373.4" y="53" width="83.6" height="15.0" fill="rgb(247,97,20)" rx="2" ry="2" />
<text  x="376.38" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>if_getsoftc (24 samples, 0.47%)</title><rect x="414.7" y="37" width="5.6" height="15.0" fill="rgb(212,7,10)" rx="2" ry="2" />
<text  x="417.71" y="47.5" ></text>
</g>
<g >
<title>ip_input (3 samples, 0.06%)</title><rect x="1088.5" y="149" width="0.7" height="15.0" fill="rgb(240,106,12)" rx="2" ry="2" />
<text  x="1091.53" y="159.5" ></text>
</g>
<g >
<title>tc_windup (1 samples, 0.02%)</title><rect x="1189.1" y="197" width="0.2" height="15.0" fill="rgb(236,105,49)" rx="2" ry="2" />
<text  x="1192.07" y="207.5" ></text>
</g>
<g >
<title>m_free (113 samples, 2.22%)</title><rect x="834.7" y="149" width="26.3" height="15.0" fill="rgb(254,16,49)" rx="2" ry="2" />
<text  x="837.75" y="159.5" >m..</text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.02%)</title><rect x="572.6" y="117" width="0.2" height="15.0" fill="rgb(241,228,28)" rx="2" ry="2" />
<text  x="575.60" y="127.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (508 samples, 10.00%)</title><rect x="743.0" y="181" width="118.0" height="15.0" fill="rgb(223,184,51)" rx="2" ry="2" />
<text  x="746.03" y="191.5" >iflib_complete..</text>
</g>
<g >
<title>_epoch_enter_preempt (2 samples, 0.04%)</title><rect x="30.9" y="245" width="0.5" height="15.0" fill="rgb(243,89,45)" rx="2" ry="2" />
<text  x="33.90" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="1088.3" y="197" width="0.2" height="15.0" fill="rgb(210,25,17)" rx="2" ry="2" />
<text  x="1091.30" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.14%)</title><rect x="740.9" y="181" width="1.7" height="15.0" fill="rgb(250,129,52)" rx="2" ry="2" />
<text  x="743.94" y="191.5" ></text>
</g>
<g >
<title>iflib_fl_refill (214 samples, 4.21%)</title><rect x="544.7" y="197" width="49.7" height="15.0" fill="rgb(225,6,17)" rx="2" ry="2" />
<text  x="547.74" y="207.5" >iflib..</text>
</g>
<g >
<title>ifmp_ring_check_drainage (3 samples, 0.06%)</title><rect x="1077.6" y="213" width="0.7" height="15.0" fill="rgb(220,127,2)" rx="2" ry="2" />
<text  x="1080.62" y="223.5" ></text>
</g>
<g >
<title>m_adj (1 samples, 0.02%)</title><rect x="525.9" y="149" width="0.3" height="15.0" fill="rgb(211,103,33)" rx="2" ry="2" />
<text  x="528.93" y="159.5" ></text>
</g>
<g >
<title>ip_input (1,498 samples, 29.48%)</title><rect x="178.1" y="117" width="347.8" height="15.0" fill="rgb(216,228,15)" rx="2" ry="2" />
<text  x="181.11" y="127.5" >ip_input</text>
</g>
<g >
<title>sleepq_release (2 samples, 0.04%)</title><rect x="1079.0" y="229" width="0.5" height="15.0" fill="rgb(218,56,16)" rx="2" ry="2" />
<text  x="1082.01" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="48.5" y="213" width="0.3" height="15.0" fill="rgb(231,170,10)" rx="2" ry="2" />
<text  x="51.54" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (34 samples, 0.67%)</title><rect x="594.4" y="197" width="7.9" height="15.0" fill="rgb(225,229,18)" rx="2" ry="2" />
<text  x="597.43" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_timer (22 samples, 0.43%)</title><rect x="1184.9" y="277" width="5.1" height="15.0" fill="rgb(212,127,14)" rx="2" ry="2" />
<text  x="1187.89" y="287.5" ></text>
</g>
<g >
<title>cache_alloc (4 samples, 0.08%)</title><rect x="571.9" y="165" width="0.9" height="15.0" fill="rgb(245,94,47)" rx="2" ry="2" />
<text  x="574.90" y="175.5" ></text>
</g>
<g >
<title>bsearch4_lookup (108 samples, 2.13%)</title><rect x="481.1" y="69" width="25.1" height="15.0" fill="rgb(221,29,2)" rx="2" ry="2" />
<text  x="484.12" y="79.5" >b..</text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.04%)</title><rect x="29.3" y="213" width="0.4" height="15.0" fill="rgb(209,45,23)" rx="2" ry="2" />
<text  x="32.27" y="223.5" ></text>
</g>
<g >
<title>in_lltable_lookup (60 samples, 1.18%)</title><rect x="333.9" y="53" width="13.9" height="15.0" fill="rgb(250,46,12)" rx="2" ry="2" />
<text  x="336.91" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="48.3" y="165" width="0.2" height="15.0" fill="rgb(222,82,6)" rx="2" ry="2" />
<text  x="51.31" y="175.5" ></text>
</g>
<g >
<title>iflib_encap (793 samples, 15.60%)</title><rect x="861.0" y="181" width="184.1" height="15.0" fill="rgb(237,229,4)" rx="2" ry="2" />
<text  x="863.98" y="191.5" >iflib_encap</text>
</g>
<g >
<title>iflib_if_transmit (138 samples, 2.72%)</title><rect x="1089.2" y="69" width="32.1" height="15.0" fill="rgb(243,226,0)" rx="2" ry="2" />
<text  x="1092.23" y="79.5" >if..</text>
</g>
<g >
<title>keg_alloc_slab (4 samples, 0.08%)</title><rect x="571.9" y="133" width="0.9" height="15.0" fill="rgb(207,124,52)" rx="2" ry="2" />
<text  x="574.90" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (138 samples, 2.72%)</title><rect x="1089.2" y="197" width="32.1" height="15.0" fill="rgb(230,212,23)" rx="2" ry="2" />
<text  x="1092.23" y="207.5" >ne..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (25 samples, 0.49%)</title><rect x="572.8" y="181" width="5.8" height="15.0" fill="rgb(250,106,32)" rx="2" ry="2" />
<text  x="575.83" y="191.5" ></text>
</g>
<g >
<title>if_getcapenable (3 samples, 0.06%)</title><rect x="529.4" y="197" width="0.7" height="15.0" fill="rgb(241,38,43)" rx="2" ry="2" />
<text  x="532.41" y="207.5" ></text>
</g>
<g >
<title>ether_demux (3 samples, 0.06%)</title><rect x="1088.5" y="181" width="0.7" height="15.0" fill="rgb(232,191,4)" rx="2" ry="2" />
<text  x="1091.53" y="191.5" ></text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.02%)</title><rect x="29.0" y="277" width="0.3" height="15.0" fill="rgb(223,166,4)" rx="2" ry="2" />
<text  x="32.04" y="287.5" ></text>
</g>
<g >
<title>ether_demux (1,644 samples, 32.35%)</title><rect x="144.2" y="149" width="381.7" height="15.0" fill="rgb(254,101,8)" rx="2" ry="2" />
<text  x="147.21" y="159.5" >ether_demux</text>
</g>
<g >
<title>wakeup_any (3 samples, 0.06%)</title><rect x="1088.5" y="53" width="0.7" height="15.0" fill="rgb(226,192,40)" rx="2" ry="2" />
<text  x="1091.53" y="63.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,555 samples, 89.63%)</title><rect x="30.9" y="261" width="1057.6" height="15.0" fill="rgb(205,69,18)" rx="2" ry="2" />
<text  x="33.90" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ip_tryforward (138 samples, 2.72%)</title><rect x="1089.2" y="117" width="32.1" height="15.0" fill="rgb(249,213,10)" rx="2" ry="2" />
<text  x="1092.23" y="127.5" >ip..</text>
</g>
<g >
<title>netisr_dispatch (6 samples, 0.12%)</title><rect x="95.9" y="181" width="1.4" height="15.0" fill="rgb(209,38,9)" rx="2" ry="2" />
<text  x="98.91" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (8 samples, 0.16%)</title><rect x="1162.6" y="229" width="1.9" height="15.0" fill="rgb(213,7,42)" rx="2" ry="2" />
<text  x="1165.60" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="29.3" y="181" width="0.4" height="15.0" fill="rgb(235,73,48)" rx="2" ry="2" />
<text  x="32.27" y="191.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (2 samples, 0.04%)</title><rect x="38.6" y="229" width="0.4" height="15.0" fill="rgb(208,25,1)" rx="2" ry="2" />
<text  x="41.56" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="578.6" y="181" width="0.3" height="15.0" fill="rgb(238,12,46)" rx="2" ry="2" />
<text  x="581.64" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.14%)</title><rect x="413.1" y="37" width="1.6" height="15.0" fill="rgb(238,101,33)" rx="2" ry="2" />
<text  x="416.09" y="47.5" ></text>
</g>
<g >
<title>ether_input (3 samples, 0.06%)</title><rect x="1088.5" y="229" width="0.7" height="15.0" fill="rgb(211,200,43)" rx="2" ry="2" />
<text  x="1091.53" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (138 samples, 2.72%)</title><rect x="1089.2" y="277" width="32.1" height="15.0" fill="rgb(205,49,31)" rx="2" ry="2" />
<text  x="1092.23" y="287.5" >gt..</text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.02%)</title><rect x="1182.3" y="261" width="0.3" height="15.0" fill="rgb(226,149,34)" rx="2" ry="2" />
<text  x="1185.34" y="271.5" ></text>
</g>
<g >
<title>Xtimerint (2 samples, 0.04%)</title><rect x="28.6" y="277" width="0.4" height="15.0" fill="rgb(217,113,12)" rx="2" ry="2" />
<text  x="31.58" y="287.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="46.0" y="197" width="0.2" height="15.0" fill="rgb(244,107,20)" rx="2" ry="2" />
<text  x="48.99" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (3 samples, 0.06%)</title><rect x="1088.5" y="85" width="0.7" height="15.0" fill="rgb(238,209,1)" rx="2" ry="2" />
<text  x="1091.53" y="95.5" ></text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.02%)</title><rect x="1189.1" y="213" width="0.2" height="15.0" fill="rgb(248,212,45)" rx="2" ry="2" />
<text  x="1192.07" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (2 samples, 0.04%)</title><rect x="29.3" y="149" width="0.4" height="15.0" fill="rgb(243,216,12)" rx="2" ry="2" />
<text  x="32.27" y="159.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (8 samples, 0.16%)</title><rect x="859.1" y="117" width="1.9" height="15.0" fill="rgb(249,55,26)" rx="2" ry="2" />
<text  x="862.13" y="127.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1077.4" y="213" width="0.2" height="15.0" fill="rgb(234,37,33)" rx="2" ry="2" />
<text  x="1080.39" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (107 samples, 2.11%)</title><rect x="602.3" y="197" width="24.9" height="15.0" fill="rgb(253,150,13)" rx="2" ry="2" />
<text  x="605.32" y="207.5" >i..</text>
</g>
<g >
<title>memcpy_erms (33 samples, 0.65%)</title><rect x="457.0" y="69" width="7.6" height="15.0" fill="rgb(242,0,1)" rx="2" ry="2" />
<text  x="459.97" y="79.5" ></text>
</g>
<g >
<title>netmap_rx_irq (7 samples, 0.14%)</title><rect x="701.0" y="213" width="1.6" height="15.0" fill="rgb(215,152,30)" rx="2" ry="2" />
<text  x="704.00" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (12 samples, 0.24%)</title><rect x="1159.8" y="197" width="2.8" height="15.0" fill="rgb(214,123,36)" rx="2" ry="2" />
<text  x="1162.82" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (15 samples, 0.30%)</title><rect x="1153.8" y="213" width="3.5" height="15.0" fill="rgb(251,102,23)" rx="2" ry="2" />
<text  x="1156.78" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (135 samples, 2.66%)</title><rect x="978.9" y="165" width="31.4" height="15.0" fill="rgb(252,7,19)" rx="2" ry="2" />
<text  x="981.94" y="175.5" >bu..</text>
</g>
<g >
<title>pmap_kextract (8 samples, 0.16%)</title><rect x="1008.4" y="149" width="1.9" height="15.0" fill="rgb(241,159,53)" rx="2" ry="2" />
<text  x="1011.43" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.06%)</title><rect x="1179.6" y="213" width="0.6" height="15.0" fill="rgb(213,13,22)" rx="2" ry="2" />
<text  x="1182.55" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="29.3" y="37" width="0.4" height="15.0" fill="rgb(231,113,3)" rx="2" ry="2" />
<text  x="32.27" y="47.5" ></text>
</g>
<g >
<title>cache_alloc_retry (4 samples, 0.08%)</title><rect x="571.9" y="181" width="0.9" height="15.0" fill="rgb(246,148,43)" rx="2" ry="2" />
<text  x="574.90" y="191.5" ></text>
</g>
<g >
<title>ip_input (2 samples, 0.04%)</title><rect x="29.3" y="165" width="0.4" height="15.0" fill="rgb(242,220,34)" rx="2" ry="2" />
<text  x="32.27" y="175.5" ></text>
</g>
<g >
<title>ip_tryforward (3 samples, 0.06%)</title><rect x="1088.5" y="133" width="0.7" height="15.0" fill="rgb(252,164,28)" rx="2" ry="2" />
<text  x="1091.53" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="165.8" y="133" width="0.5" height="15.0" fill="rgb(226,228,49)" rx="2" ry="2" />
<text  x="168.80" y="143.5" ></text>
</g>
<g >
<title>_task_fn_rx (3 samples, 0.06%)</title><rect x="1088.5" y="261" width="0.7" height="15.0" fill="rgb(236,7,46)" rx="2" ry="2" />
<text  x="1091.53" y="271.5" ></text>
</g>
<g >
<title>zone_import (4 samples, 0.08%)</title><rect x="571.9" y="149" width="0.9" height="15.0" fill="rgb(222,189,34)" rx="2" ry="2" />
<text  x="574.90" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (54 samples, 1.06%)</title><rect x="1091.3" y="37" width="12.6" height="15.0" fill="rgb(248,100,29)" rx="2" ry="2" />
<text  x="1094.32" y="47.5" ></text>
</g>
<g >
<title>intr_lookup_source (3 samples, 0.06%)</title><rect x="1184.2" y="261" width="0.7" height="15.0" fill="rgb(225,32,48)" rx="2" ry="2" />
<text  x="1187.20" y="271.5" ></text>
</g>
<g >
<title>binuptime (3 samples, 0.06%)</title><rect x="1185.1" y="245" width="0.7" height="15.0" fill="rgb(211,79,32)" rx="2" ry="2" />
<text  x="1188.12" y="255.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1163.5" y="213" width="0.3" height="15.0" fill="rgb(238,105,10)" rx="2" ry="2" />
<text  x="1166.53" y="223.5" ></text>
</g>
</g>
</svg>
