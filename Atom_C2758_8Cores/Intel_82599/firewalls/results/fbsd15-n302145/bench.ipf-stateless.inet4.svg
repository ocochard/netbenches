<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>wakeup (2 samples, 0.05%)</title><rect x="842.9" y="229" width="0.7" height="15.0" fill="rgb(247,103,12)" rx="2" ry="2" />
<text  x="845.92" y="239.5" ></text>
</g>
<g >
<title>intr_event_handle (94 samples, 2.58%)</title><rect x="1154.4" y="261" width="30.4" height="15.0" fill="rgb(241,102,13)" rx="2" ry="2" />
<text  x="1157.42" y="271.5" >in..</text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.08%)</title><rect x="787.3" y="133" width="1.0" height="15.0" fill="rgb(221,154,0)" rx="2" ry="2" />
<text  x="790.29" y="143.5" ></text>
</g>
<g >
<title>ipf_pr_pullup (6 samples, 0.16%)</title><rect x="1067.4" y="37" width="1.9" height="15.0" fill="rgb(210,53,53)" rx="2" ry="2" />
<text  x="1070.41" y="47.5" ></text>
</g>
<g >
<title>ipf_checkv4sum (15 samples, 0.41%)</title><rect x="1062.6" y="37" width="4.8" height="15.0" fill="rgb(252,130,51)" rx="2" ry="2" />
<text  x="1065.55" y="47.5" ></text>
</g>
<g >
<title>m_pkthdr_init (2 samples, 0.05%)</title><rect x="741.7" y="197" width="0.6" height="15.0" fill="rgb(247,165,47)" rx="2" ry="2" />
<text  x="744.68" y="207.5" ></text>
</g>
<g >
<title>lapic_eoi (2 samples, 0.05%)</title><rect x="1184.2" y="245" width="0.6" height="15.0" fill="rgb(246,36,46)" rx="2" ry="2" />
<text  x="1187.18" y="255.5" ></text>
</g>
<g >
<title>in_localip (11 samples, 0.30%)</title><rect x="163.3" y="85" width="3.6" height="15.0" fill="rgb(224,97,44)" rx="2" ry="2" />
<text  x="166.32" y="95.5" ></text>
</g>
<g >
<title>ipf_makefrip (41 samples, 1.12%)</title><rect x="586.7" y="37" width="13.3" height="15.0" fill="rgb(226,189,8)" rx="2" ry="2" />
<text  x="589.74" y="47.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.03%)</title><rect x="1181.9" y="213" width="0.3" height="15.0" fill="rgb(206,113,0)" rx="2" ry="2" />
<text  x="1184.91" y="223.5" ></text>
</g>
<g >
<title>uma_zfree_arg (7 samples, 0.19%)</title><rect x="788.3" y="133" width="2.2" height="15.0" fill="rgb(214,105,35)" rx="2" ry="2" />
<text  x="791.26" y="143.5" ></text>
</g>
<g >
<title>if_getsoftc (3 samples, 0.08%)</title><rect x="146.8" y="37" width="1.0" height="15.0" fill="rgb(208,193,10)" rx="2" ry="2" />
<text  x="149.83" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (3 samples, 0.08%)</title><rect x="838.4" y="165" width="1.0" height="15.0" fill="rgb(220,166,41)" rx="2" ry="2" />
<text  x="841.39" y="175.5" ></text>
</g>
<g >
<title>ipf_state_check (12 samples, 0.33%)</title><rect x="662.4" y="37" width="3.9" height="15.0" fill="rgb(232,190,13)" rx="2" ry="2" />
<text  x="665.43" y="47.5" ></text>
</g>
<g >
<title>ipf_nat_checkin (9 samples, 0.25%)</title><rect x="600.0" y="37" width="2.9" height="15.0" fill="rgb(220,35,38)" rx="2" ry="2" />
<text  x="603.00" y="47.5" ></text>
</g>
<g >
<title>ipf_derefrule (1 samples, 0.03%)</title><rect x="843.6" y="69" width="0.3" height="15.0" fill="rgb(205,144,6)" rx="2" ry="2" />
<text  x="846.57" y="79.5" ></text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.05%)</title><rect x="1186.8" y="261" width="0.6" height="15.0" fill="rgb(231,44,4)" rx="2" ry="2" />
<text  x="1189.77" y="271.5" ></text>
</g>
<g >
<title>ether_nh_input (932 samples, 25.55%)</title><rect x="843.9" y="181" width="301.5" height="15.0" fill="rgb(206,32,23)" rx="2" ry="2" />
<text  x="846.89" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>fork_exit (2,542 samples, 69.68%)</title><rect x="21.3" y="277" width="822.3" height="15.0" fill="rgb(231,112,22)" rx="2" ry="2" />
<text  x="24.32" y="287.5" >fork_exit</text>
</g>
<g >
<title>iflib_txq_drain (260 samples, 7.13%)</title><rect x="756.2" y="197" width="84.1" height="15.0" fill="rgb(208,202,7)" rx="2" ry="2" />
<text  x="759.23" y="207.5" >iflib_txq..</text>
</g>
<g >
<title>ipf_pr_pullup (1 samples, 0.03%)</title><rect x="929.0" y="37" width="0.3" height="15.0" fill="rgb(243,136,43)" rx="2" ry="2" />
<text  x="931.96" y="47.5" ></text>
</g>
<g >
<title>ip_input (932 samples, 25.55%)</title><rect x="843.9" y="133" width="301.5" height="15.0" fill="rgb(207,229,7)" rx="2" ry="2" />
<text  x="846.89" y="143.5" >ip_input</text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.03%)</title><rect x="27.1" y="213" width="0.4" height="15.0" fill="rgb(205,10,25)" rx="2" ry="2" />
<text  x="30.14" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (5 samples, 0.14%)</title><rect x="735.5" y="197" width="1.6" height="15.0" fill="rgb(221,136,2)" rx="2" ry="2" />
<text  x="738.53" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (18 samples, 0.49%)</title><rect x="843.9" y="53" width="5.8" height="15.0" fill="rgb(217,182,13)" rx="2" ry="2" />
<text  x="846.89" y="63.5" ></text>
</g>
<g >
<title>zone_import (17 samples, 0.47%)</title><rect x="721.9" y="149" width="5.5" height="15.0" fill="rgb(211,71,47)" rx="2" ry="2" />
<text  x="724.95" y="159.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.03%)</title><rect x="1188.7" y="181" width="0.3" height="15.0" fill="rgb(217,24,15)" rx="2" ry="2" />
<text  x="1191.71" y="191.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (77 samples, 2.11%)</title><rect x="1069.3" y="37" width="25.0" height="15.0" fill="rgb(254,108,18)" rx="2" ry="2" />
<text  x="1072.35" y="47.5" >_..</text>
</g>
<g >
<title>lock_delay (123 samples, 3.37%)</title><rect x="666.3" y="37" width="39.8" height="15.0" fill="rgb(226,114,17)" rx="2" ry="2" />
<text  x="669.31" y="47.5" >loc..</text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.03%)</title><rect x="843.6" y="245" width="0.3" height="15.0" fill="rgb(244,117,42)" rx="2" ry="2" />
<text  x="846.57" y="255.5" ></text>
</g>
<g >
<title>all (3,648 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(226,68,36)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>memset_erms (18 samples, 0.49%)</title><rect x="432.8" y="37" width="5.8" height="15.0" fill="rgb(213,176,19)" rx="2" ry="2" />
<text  x="435.77" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.03%)</title><rect x="843.6" y="261" width="0.3" height="15.0" fill="rgb(210,18,38)" rx="2" ry="2" />
<text  x="846.57" y="271.5" ></text>
</g>
<g >
<title>ether_demux (2,043 samples, 56.00%)</title><rect x="49.1" y="149" width="660.9" height="15.0" fill="rgb(217,22,54)" rx="2" ry="2" />
<text  x="52.14" y="159.5" >ether_demux</text>
</g>
<g >
<title>_task_fn_rx (932 samples, 25.55%)</title><rect x="843.9" y="245" width="301.5" height="15.0" fill="rgb(216,126,30)" rx="2" ry="2" />
<text  x="846.89" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>__mtx_lock_sleep (71 samples, 1.95%)</title><rect x="503.0" y="37" width="22.9" height="15.0" fill="rgb(231,129,42)" rx="2" ry="2" />
<text  x="505.96" y="47.5" >_..</text>
</g>
<g >
<title>ipf_checkv4sum (13 samples, 0.36%)</title><rect x="924.8" y="37" width="4.2" height="15.0" fill="rgb(244,39,20)" rx="2" ry="2" />
<text  x="927.76" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (30 samples, 0.82%)</title><rect x="817.7" y="165" width="9.7" height="15.0" fill="rgb(223,75,5)" rx="2" ry="2" />
<text  x="820.69" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.11%)</title><rect x="1171.6" y="197" width="1.3" height="15.0" fill="rgb(220,180,14)" rx="2" ry="2" />
<text  x="1174.56" y="207.5" ></text>
</g>
<g >
<title>handleevents (6 samples, 0.16%)</title><rect x="1188.1" y="245" width="1.9" height="15.0" fill="rgb(251,26,43)" rx="2" ry="2" />
<text  x="1191.06" y="255.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.05%)</title><rect x="839.4" y="165" width="0.6" height="15.0" fill="rgb(227,6,6)" rx="2" ry="2" />
<text  x="842.36" y="175.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (839 samples, 23.00%)</title><rect x="438.6" y="85" width="271.4" height="15.0" fill="rgb(253,169,22)" rx="2" ry="2" />
<text  x="441.59" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (1 samples, 0.03%)</title><rect x="1169.3" y="213" width="0.3" height="15.0" fill="rgb(242,163,54)" rx="2" ry="2" />
<text  x="1172.30" y="223.5" ></text>
</g>
<g >
<title>m_adj (3 samples, 0.08%)</title><rect x="55.9" y="133" width="1.0" height="15.0" fill="rgb(230,65,21)" rx="2" ry="2" />
<text  x="58.93" y="143.5" ></text>
</g>
<g >
<title>cache_alloc (1 samples, 0.03%)</title><rect x="723.9" y="69" width="0.3" height="15.0" fill="rgb(216,116,41)" rx="2" ry="2" />
<text  x="726.89" y="79.5" ></text>
</g>
<g >
<title>cache_alloc_retry (1 samples, 0.03%)</title><rect x="723.9" y="85" width="0.3" height="15.0" fill="rgb(219,123,48)" rx="2" ry="2" />
<text  x="726.89" y="95.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (21 samples, 0.58%)</title><rect x="833.2" y="181" width="6.8" height="15.0" fill="rgb(216,6,7)" rx="2" ry="2" />
<text  x="836.22" y="191.5" ></text>
</g>
<g >
<title>in_lltable_lookup (16 samples, 0.44%)</title><rect x="116.7" y="53" width="5.2" height="15.0" fill="rgb(254,149,11)" rx="2" ry="2" />
<text  x="119.74" y="63.5" ></text>
</g>
<g >
<title>ipf_auth_check (3 samples, 0.08%)</title><rect x="556.3" y="37" width="1.0" height="15.0" fill="rgb(214,189,35)" rx="2" ry="2" />
<text  x="559.33" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (3 samples, 0.08%)</title><rect x="121.9" y="53" width="1.0" height="15.0" fill="rgb(234,186,41)" rx="2" ry="2" />
<text  x="124.92" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.27%)</title><rect x="843.9" y="37" width="3.2" height="15.0" fill="rgb(215,77,6)" rx="2" ry="2" />
<text  x="846.89" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (3 samples, 0.08%)</title><rect x="841.0" y="213" width="1.0" height="15.0" fill="rgb(233,24,31)" rx="2" ry="2" />
<text  x="843.98" y="223.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (1 samples, 0.03%)</title><rect x="843.6" y="117" width="0.3" height="15.0" fill="rgb(253,67,38)" rx="2" ry="2" />
<text  x="846.57" y="127.5" ></text>
</g>
<g >
<title>cache_alloc_retry (17 samples, 0.47%)</title><rect x="721.9" y="181" width="5.5" height="15.0" fill="rgb(211,40,47)" rx="2" ry="2" />
<text  x="724.95" y="191.5" ></text>
</g>
<g >
<title>lock_delay (4 samples, 0.11%)</title><rect x="722.6" y="117" width="1.3" height="15.0" fill="rgb(221,184,18)" rx="2" ry="2" />
<text  x="725.59" y="127.5" ></text>
</g>
<g >
<title>iflib_encap (132 samples, 3.62%)</title><rect x="790.5" y="181" width="42.7" height="15.0" fill="rgb(254,129,41)" rx="2" ry="2" />
<text  x="793.52" y="191.5" >ifli..</text>
</g>
<g >
<title>uma_small_alloc (8 samples, 0.22%)</title><rect x="723.9" y="117" width="2.6" height="15.0" fill="rgb(227,138,43)" rx="2" ry="2" />
<text  x="726.89" y="127.5" ></text>
</g>
<g >
<title>fib4_lookup (14 samples, 0.38%)</title><rect x="175.0" y="69" width="4.5" height="15.0" fill="rgb(228,114,40)" rx="2" ry="2" />
<text  x="177.97" y="79.5" ></text>
</g>
<g >
<title>drain_ring_lockless (263 samples, 7.21%)</title><rect x="755.3" y="213" width="85.0" height="15.0" fill="rgb(207,220,35)" rx="2" ry="2" />
<text  x="758.26" y="223.5" >drain_ring..</text>
</g>
<g >
<title>ipf_check (814 samples, 22.31%)</title><rect x="446.7" y="53" width="263.3" height="15.0" fill="rgb(205,67,41)" rx="2" ry="2" />
<text  x="449.68" y="63.5" >ipf_check</text>
</g>
<g >
<title>doreti (4 samples, 0.11%)</title><rect x="20.0" y="277" width="1.3" height="15.0" fill="rgb(249,140,29)" rx="2" ry="2" />
<text  x="23.03" y="287.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (824 samples, 22.59%)</title><rect x="443.4" y="69" width="266.6" height="15.0" fill="rgb(206,226,29)" rx="2" ry="2" />
<text  x="446.44" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.03%)</title><rect x="56.9" y="133" width="0.3" height="15.0" fill="rgb(225,188,18)" rx="2" ry="2" />
<text  x="59.90" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.03%)</title><rect x="1172.5" y="181" width="0.4" height="15.0" fill="rgb(219,226,34)" rx="2" ry="2" />
<text  x="1175.53" y="191.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (89 samples, 2.44%)</title><rect x="849.7" y="37" width="28.8" height="15.0" fill="rgb(233,169,25)" rx="2" ry="2" />
<text  x="852.71" y="47.5" >__..</text>
</g>
<g >
<title>iflib_rxeof (2,247 samples, 61.60%)</title><rect x="27.5" y="213" width="726.8" height="15.0" fill="rgb(242,143,24)" rx="2" ry="2" />
<text  x="30.47" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ipf_derefrule (228 samples, 6.25%)</title><rect x="988.8" y="53" width="73.8" height="15.0" fill="rgb(241,46,53)" rx="2" ry="2" />
<text  x="991.80" y="63.5" >ipf_dere..</text>
</g>
<g >
<title>ipf_scanlist (183 samples, 5.02%)</title><rect x="929.3" y="53" width="59.2" height="15.0" fill="rgb(240,66,15)" rx="2" ry="2" />
<text  x="932.29" y="63.5" >ipf_sc..</text>
</g>
<g >
<title>tc_windup (1 samples, 0.03%)</title><rect x="1189.4" y="197" width="0.3" height="15.0" fill="rgb(254,147,28)" rx="2" ry="2" />
<text  x="1192.35" y="207.5" ></text>
</g>
<g >
<title>ether_input (932 samples, 25.55%)</title><rect x="843.9" y="213" width="301.5" height="15.0" fill="rgb(205,115,25)" rx="2" ry="2" />
<text  x="846.89" y="223.5" >ether_input</text>
</g>
<g >
<title>memcmp (3 samples, 0.08%)</title><rect x="711.3" y="149" width="0.9" height="15.0" fill="rgb(218,45,50)" rx="2" ry="2" />
<text  x="714.27" y="159.5" ></text>
</g>
<g >
<title>iflib_fl_refill (64 samples, 1.75%)</title><rect x="714.8" y="197" width="20.7" height="15.0" fill="rgb(205,195,42)" rx="2" ry="2" />
<text  x="717.83" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (106 samples, 2.91%)</title><rect x="128.1" y="53" width="34.3" height="15.0" fill="rgb(245,18,36)" rx="2" ry="2" />
<text  x="131.06" y="63.5" >if..</text>
</g>
<g >
<title>ether_output (214 samples, 5.87%)</title><rect x="94.1" y="85" width="69.2" height="15.0" fill="rgb(211,16,26)" rx="2" ry="2" />
<text  x="97.10" y="95.5" >ether_o..</text>
</g>
<g >
<title>__mtx_lock_sleep (43 samples, 1.18%)</title><rect x="929.3" y="37" width="13.9" height="15.0" fill="rgb(220,197,40)" rx="2" ry="2" />
<text  x="932.29" y="47.5" ></text>
</g>
<g >
<title>ipf_scanlist (151 samples, 4.14%)</title><rect x="344.1" y="37" width="48.9" height="15.0" fill="rgb(248,162,48)" rx="2" ry="2" />
<text  x="347.14" y="47.5" >ipf_..</text>
</g>
<g >
<title>ipf_check (783 samples, 21.46%)</title><rect x="185.3" y="53" width="253.3" height="15.0" fill="rgb(220,188,44)" rx="2" ry="2" />
<text  x="188.32" y="63.5" >ipf_check</text>
</g>
<g >
<title>_rw_wowned (40 samples, 1.10%)</title><rect x="543.4" y="37" width="12.9" height="15.0" fill="rgb(233,205,50)" rx="2" ry="2" />
<text  x="546.39" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (4 samples, 0.11%)</title><rect x="1171.6" y="213" width="1.3" height="15.0" fill="rgb(245,59,18)" rx="2" ry="2" />
<text  x="1174.56" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (8 samples, 0.22%)</title><rect x="847.1" y="37" width="2.6" height="15.0" fill="rgb(236,41,53)" rx="2" ry="2" />
<text  x="850.13" y="47.5" ></text>
</g>
<g >
<title>pagezero_erms (7 samples, 0.19%)</title><rect x="724.2" y="85" width="2.3" height="15.0" fill="rgb(210,187,26)" rx="2" ry="2" />
<text  x="727.21" y="95.5" ></text>
</g>
<g >
<title>arpresolve (46 samples, 1.26%)</title><rect x="108.0" y="69" width="14.9" height="15.0" fill="rgb(232,105,14)" rx="2" ry="2" />
<text  x="111.01" y="79.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (20 samples, 0.55%)</title><rect x="729.1" y="181" width="6.4" height="15.0" fill="rgb(226,143,7)" rx="2" ry="2" />
<text  x="732.06" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.03%)</title><rect x="843.6" y="165" width="0.3" height="15.0" fill="rgb(232,90,12)" rx="2" ry="2" />
<text  x="846.57" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (932 samples, 25.55%)</title><rect x="843.9" y="197" width="301.5" height="15.0" fill="rgb(242,208,16)" rx="2" ry="2" />
<text  x="846.89" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (5 samples, 0.14%)</title><rect x="727.4" y="181" width="1.7" height="15.0" fill="rgb(249,152,46)" rx="2" ry="2" />
<text  x="730.45" y="191.5" ></text>
</g>
<g >
<title>lock_delay (140 samples, 3.84%)</title><rect x="943.2" y="37" width="45.3" height="15.0" fill="rgb(215,77,25)" rx="2" ry="2" />
<text  x="946.20" y="47.5" >lock..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (1 samples, 0.03%)</title><rect x="741.4" y="197" width="0.3" height="15.0" fill="rgb(217,45,23)" rx="2" ry="2" />
<text  x="744.35" y="207.5" ></text>
</g>
<g >
<title>m_free (17 samples, 0.47%)</title><rect x="785.0" y="149" width="5.5" height="15.0" fill="rgb(238,49,36)" rx="2" ry="2" />
<text  x="788.02" y="159.5" ></text>
</g>
<g >
<title>__rw_rlock_int (50 samples, 1.37%)</title><rect x="269.4" y="37" width="16.2" height="15.0" fill="rgb(212,158,23)" rx="2" ry="2" />
<text  x="272.42" y="47.5" ></text>
</g>
<g >
<title>zone_import (3 samples, 0.08%)</title><rect x="726.5" y="101" width="0.9" height="15.0" fill="rgb(207,6,39)" rx="2" ry="2" />
<text  x="729.47" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,018 samples, 55.32%)</title><rect x="57.2" y="133" width="652.8" height="15.0" fill="rgb(210,207,11)" rx="2" ry="2" />
<text  x="60.23" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>m_freem (21 samples, 0.58%)</title><rect x="783.7" y="165" width="6.8" height="15.0" fill="rgb(250,223,8)" rx="2" ry="2" />
<text  x="786.73" y="175.5" ></text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.03%)</title><rect x="1189.0" y="181" width="0.4" height="15.0" fill="rgb(235,174,6)" rx="2" ry="2" />
<text  x="1192.03" y="191.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (63 samples, 1.73%)</title><rect x="988.8" y="37" width="20.4" height="15.0" fill="rgb(245,6,2)" rx="2" ry="2" />
<text  x="991.80" y="47.5" ></text>
</g>
<g >
<title>if_getnumadomain (7 samples, 0.19%)</title><rect x="712.6" y="197" width="2.2" height="15.0" fill="rgb(249,68,54)" rx="2" ry="2" />
<text  x="715.57" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (2,541 samples, 69.65%)</title><rect x="21.6" y="245" width="822.0" height="15.0" fill="rgb(245,222,12)" rx="2" ry="2" />
<text  x="24.64" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>keg_alloc_slab (16 samples, 0.44%)</title><rect x="722.3" y="133" width="5.1" height="15.0" fill="rgb(230,177,36)" rx="2" ry="2" />
<text  x="725.27" y="143.5" ></text>
</g>
<g >
<title>lock_delay (143 samples, 3.92%)</title><rect x="878.5" y="37" width="46.3" height="15.0" fill="rgb(219,94,46)" rx="2" ry="2" />
<text  x="881.50" y="47.5" >lock..</text>
</g>
<g >
<title>__mtx_lock_sleep (54 samples, 1.48%)</title><rect x="252.0" y="37" width="17.4" height="15.0" fill="rgb(207,9,19)" rx="2" ry="2" />
<text  x="254.95" y="47.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.03%)</title><rect x="843.6" y="229" width="0.3" height="15.0" fill="rgb(208,126,31)" rx="2" ry="2" />
<text  x="846.57" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (18 samples, 0.49%)</title><rect x="843.9" y="85" width="5.8" height="15.0" fill="rgb(247,101,45)" rx="2" ry="2" />
<text  x="846.89" y="95.5" ></text>
</g>
<g >
<title>ip_tryforward (1,973 samples, 54.08%)</title><rect x="71.8" y="101" width="638.2" height="15.0" fill="rgb(227,48,35)" rx="2" ry="2" />
<text  x="74.78" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>if_altq_is_enabled (6 samples, 0.16%)</title><rect x="144.9" y="37" width="1.9" height="15.0" fill="rgb(210,143,1)" rx="2" ry="2" />
<text  x="147.88" y="47.5" ></text>
</g>
<g >
<title>_rw_wowned (45 samples, 1.23%)</title><rect x="288.5" y="37" width="14.6" height="15.0" fill="rgb(248,217,48)" rx="2" ry="2" />
<text  x="291.50" y="47.5" ></text>
</g>
<g >
<title>ipf_scanlist (184 samples, 5.04%)</title><rect x="602.9" y="37" width="59.5" height="15.0" fill="rgb(214,26,44)" rx="2" ry="2" />
<text  x="605.91" y="47.5" >ipf_sc..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (77 samples, 2.11%)</title><rect x="765.6" y="181" width="24.9" height="15.0" fill="rgb(227,141,41)" rx="2" ry="2" />
<text  x="768.61" y="191.5" >i..</text>
</g>
<g >
<title>pmc_process_samples (4 samples, 0.11%)</title><rect x="1188.1" y="197" width="1.3" height="15.0" fill="rgb(236,159,53)" rx="2" ry="2" />
<text  x="1191.06" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (4 samples, 0.11%)</title><rect x="178.2" y="53" width="1.3" height="15.0" fill="rgb(220,220,27)" rx="2" ry="2" />
<text  x="181.20" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,251 samples, 61.71%)</title><rect x="26.8" y="229" width="728.1" height="15.0" fill="rgb(249,185,47)" rx="2" ry="2" />
<text  x="29.82" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.03%)</title><rect x="21.3" y="245" width="0.3" height="15.0" fill="rgb(228,20,11)" rx="2" ry="2" />
<text  x="24.32" y="255.5" ></text>
</g>
<g >
<title>intr_execute_handlers (125 samples, 3.43%)</title><rect x="1145.4" y="277" width="40.4" height="15.0" fill="rgb(242,55,29)" rx="2" ry="2" />
<text  x="1148.36" y="287.5" >int..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (16 samples, 0.44%)</title><rect x="821.9" y="149" width="5.2" height="15.0" fill="rgb(244,34,32)" rx="2" ry="2" />
<text  x="824.90" y="159.5" ></text>
</g>
<g >
<title>ipf_auth_check (9 samples, 0.25%)</title><rect x="303.1" y="37" width="2.9" height="15.0" fill="rgb(236,86,18)" rx="2" ry="2" />
<text  x="306.06" y="47.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.03%)</title><rect x="840.7" y="213" width="0.3" height="15.0" fill="rgb(217,13,54)" rx="2" ry="2" />
<text  x="843.66" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.03%)</title><rect x="843.2" y="213" width="0.4" height="15.0" fill="rgb(208,80,6)" rx="2" ry="2" />
<text  x="846.25" y="223.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (1 samples, 0.03%)</title><rect x="843.6" y="101" width="0.3" height="15.0" fill="rgb(217,122,14)" rx="2" ry="2" />
<text  x="846.57" y="111.5" ></text>
</g>
<g >
<title>ipf_derefrule (232 samples, 6.36%)</title><rect x="849.7" y="53" width="75.1" height="15.0" fill="rgb(252,9,12)" rx="2" ry="2" />
<text  x="852.71" y="63.5" >ipf_dere..</text>
</g>
<g >
<title>ether_output_frame (122 samples, 3.34%)</title><rect x="122.9" y="69" width="39.5" height="15.0" fill="rgb(245,43,28)" rx="2" ry="2" />
<text  x="125.89" y="79.5" >eth..</text>
</g>
<g >
<title>bsearch4_lookup (19 samples, 0.52%)</title><rect x="168.8" y="69" width="6.2" height="15.0" fill="rgb(250,108,1)" rx="2" ry="2" />
<text  x="171.82" y="79.5" ></text>
</g>
<g >
<title>ether_output (18 samples, 0.49%)</title><rect x="843.9" y="101" width="5.8" height="15.0" fill="rgb(205,18,42)" rx="2" ry="2" />
<text  x="846.89" y="111.5" ></text>
</g>
<g >
<title>ipf_scanlist (235 samples, 6.44%)</title><rect x="1069.3" y="53" width="76.1" height="15.0" fill="rgb(224,16,13)" rx="2" ry="2" />
<text  x="1072.35" y="63.5" >ipf_scan..</text>
</g>
<g >
<title>iflib_if_transmit (18 samples, 0.49%)</title><rect x="843.9" y="69" width="5.8" height="15.0" fill="rgb(230,169,38)" rx="2" ry="2" />
<text  x="846.89" y="79.5" ></text>
</g>
<g >
<title>lock_delay (158 samples, 4.33%)</title><rect x="1094.3" y="37" width="51.1" height="15.0" fill="rgb(229,185,0)" rx="2" ry="2" />
<text  x="1097.25" y="47.5" >lock_..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (16 samples, 0.44%)</title><rect x="1175.8" y="229" width="5.1" height="15.0" fill="rgb(207,153,19)" rx="2" ry="2" />
<text  x="1178.77" y="239.5" ></text>
</g>
<g >
<title>ether_demux (932 samples, 25.55%)</title><rect x="843.9" y="165" width="301.5" height="15.0" fill="rgb(249,223,5)" rx="2" ry="2" />
<text  x="846.89" y="175.5" >ether_demux</text>
</g>
<g >
<title>grouptaskqueue_enqueue (14 samples, 0.38%)</title><rect x="1168.3" y="229" width="4.6" height="15.0" fill="rgb(240,37,36)" rx="2" ry="2" />
<text  x="1171.33" y="239.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.03%)</title><rect x="843.6" y="37" width="0.3" height="15.0" fill="rgb(238,171,14)" rx="2" ry="2" />
<text  x="846.57" y="47.5" ></text>
</g>
<g >
<title>ipf_check (1 samples, 0.03%)</title><rect x="843.6" y="85" width="0.3" height="15.0" fill="rgb(214,52,6)" rx="2" ry="2" />
<text  x="846.57" y="95.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (932 samples, 25.55%)</title><rect x="843.9" y="277" width="301.5" height="15.0" fill="rgb(245,44,51)" rx="2" ry="2" />
<text  x="846.89" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ip_tryforward (932 samples, 25.55%)</title><rect x="843.9" y="117" width="301.5" height="15.0" fill="rgb(218,170,46)" rx="2" ry="2" />
<text  x="846.89" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>_epoch_exit_preempt (9 samples, 0.25%)</title><rect x="23.9" y="229" width="2.9" height="15.0" fill="rgb(226,90,16)" rx="2" ry="2" />
<text  x="26.91" y="239.5" ></text>
</g>
<g >
<title>ip_input (1 samples, 0.03%)</title><rect x="843.6" y="149" width="0.3" height="15.0" fill="rgb(227,180,30)" rx="2" ry="2" />
<text  x="846.57" y="159.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (10 samples, 0.27%)</title><rect x="1180.9" y="229" width="3.3" height="15.0" fill="rgb(232,17,52)" rx="2" ry="2" />
<text  x="1183.94" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.03%)</title><rect x="843.6" y="53" width="0.3" height="15.0" fill="rgb(210,200,49)" rx="2" ry="2" />
<text  x="846.57" y="63.5" ></text>
</g>
<g >
<title>pmc_hook_handler (4 samples, 0.11%)</title><rect x="1188.1" y="213" width="1.3" height="15.0" fill="rgb(240,138,4)" rx="2" ry="2" />
<text  x="1191.06" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_intr (5 samples, 0.14%)</title><rect x="1185.8" y="277" width="1.6" height="15.0" fill="rgb(219,41,26)" rx="2" ry="2" />
<text  x="1188.79" y="287.5" ></text>
</g>
<g >
<title>ipf_state_check (5 samples, 0.14%)</title><rect x="393.0" y="37" width="1.6" height="15.0" fill="rgb(250,78,9)" rx="2" ry="2" />
<text  x="395.98" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (18 samples, 0.49%)</title><rect x="827.4" y="165" width="5.8" height="15.0" fill="rgb(229,102,38)" rx="2" ry="2" />
<text  x="830.40" y="175.5" ></text>
</g>
<g >
<title>ipf_makefrip (22 samples, 0.60%)</title><rect x="332.5" y="37" width="7.1" height="15.0" fill="rgb(245,226,4)" rx="2" ry="2" />
<text  x="335.49" y="47.5" ></text>
</g>
<g >
<title>ipf_makefrip (14 samples, 0.38%)</title><rect x="924.8" y="53" width="4.5" height="15.0" fill="rgb(217,214,42)" rx="2" ry="2" />
<text  x="927.76" y="63.5" ></text>
</g>
<g >
<title>ipf_derefrule (82 samples, 2.25%)</title><rect x="306.0" y="37" width="26.5" height="15.0" fill="rgb(244,158,38)" rx="2" ry="2" />
<text  x="308.97" y="47.5" >i..</text>
</g>
<g >
<title>memset_erms (12 samples, 0.33%)</title><rect x="706.1" y="37" width="3.9" height="15.0" fill="rgb(227,227,47)" rx="2" ry="2" />
<text  x="709.10" y="47.5" ></text>
</g>
<g >
<title>cache_alloc (17 samples, 0.47%)</title><rect x="721.9" y="165" width="5.5" height="15.0" fill="rgb(243,8,21)" rx="2" ry="2" />
<text  x="724.95" y="175.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.03%)</title><rect x="842.0" y="229" width="0.3" height="15.0" fill="rgb(223,197,42)" rx="2" ry="2" />
<text  x="844.95" y="239.5" ></text>
</g>
<g >
<title>ipf_makefrip (21 samples, 0.58%)</title><rect x="1062.6" y="53" width="6.7" height="15.0" fill="rgb(233,25,49)" rx="2" ry="2" />
<text  x="1065.55" y="63.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (1 samples, 0.03%)</title><rect x="754.0" y="197" width="0.3" height="15.0" fill="rgb(252,156,45)" rx="2" ry="2" />
<text  x="756.97" y="207.5" ></text>
</g>
<g >
<title>iflib_get_softc (2 samples, 0.05%)</title><rect x="841.3" y="197" width="0.7" height="15.0" fill="rgb(243,109,46)" rx="2" ry="2" />
<text  x="844.30" y="207.5" ></text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.03%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(240,75,51)" rx="2" ry="2" />
<text  x="1192.68" y="239.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (429 samples, 11.76%)</title><rect x="849.7" y="101" width="138.8" height="15.0" fill="rgb(207,189,53)" rx="2" ry="2" />
<text  x="852.71" y="111.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.03%)</title><rect x="840.3" y="213" width="0.4" height="15.0" fill="rgb(207,27,36)" rx="2" ry="2" />
<text  x="843.33" y="223.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (74 samples, 2.03%)</title><rect x="1160.2" y="245" width="24.0" height="15.0" fill="rgb(224,58,6)" rx="2" ry="2" />
<text  x="1163.24" y="255.5" >i..</text>
</g>
<g >
<title>_rw_runlock_cookie_int (9 samples, 0.25%)</title><rect x="285.6" y="37" width="2.9" height="15.0" fill="rgb(254,118,33)" rx="2" ry="2" />
<text  x="288.59" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (6 samples, 0.16%)</title><rect x="1172.9" y="229" width="1.9" height="15.0" fill="rgb(220,0,5)" rx="2" ry="2" />
<text  x="1175.86" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (3 samples, 0.08%)</title><rect x="162.4" y="69" width="0.9" height="15.0" fill="rgb(228,159,46)" rx="2" ry="2" />
<text  x="165.35" y="79.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (485 samples, 13.29%)</title><rect x="988.5" y="101" width="156.9" height="15.0" fill="rgb(235,14,33)" rx="2" ry="2" />
<text  x="991.48" y="111.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ipf_derefrule (91 samples, 2.49%)</title><rect x="557.3" y="37" width="29.4" height="15.0" fill="rgb(213,46,42)" rx="2" ry="2" />
<text  x="560.30" y="47.5" >ip..</text>
</g>
<g >
<title>lock_delay (1 samples, 0.03%)</title><rect x="727.1" y="69" width="0.3" height="15.0" fill="rgb(250,2,11)" rx="2" ry="2" />
<text  x="730.12" y="79.5" ></text>
</g>
<g >
<title>ip_tryforward (1 samples, 0.03%)</title><rect x="843.6" y="133" width="0.3" height="15.0" fill="rgb(233,213,49)" rx="2" ry="2" />
<text  x="846.57" y="143.5" ></text>
</g>
<g >
<title>ip_findroute (39 samples, 1.07%)</title><rect x="166.9" y="85" width="12.6" height="15.0" fill="rgb(225,43,14)" rx="2" ry="2" />
<text  x="169.88" y="95.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (2,542 samples, 69.68%)</title><rect x="21.3" y="261" width="822.3" height="15.0" fill="rgb(244,168,54)" rx="2" ry="2" />
<text  x="24.32" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>_ck_epoch_delref (2 samples, 0.05%)</title><rect x="23.3" y="229" width="0.6" height="15.0" fill="rgb(211,102,36)" rx="2" ry="2" />
<text  x="26.26" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (19 samples, 0.52%)</title><rect x="138.7" y="37" width="6.2" height="15.0" fill="rgb(246,175,25)" rx="2" ry="2" />
<text  x="141.74" y="47.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (8 samples, 0.22%)</title><rect x="723.9" y="101" width="2.6" height="15.0" fill="rgb(234,176,9)" rx="2" ry="2" />
<text  x="726.89" y="111.5" ></text>
</g>
<g >
<title>vm_phys_alloc_npages (1 samples, 0.03%)</title><rect x="723.9" y="37" width="0.3" height="15.0" fill="rgb(221,96,5)" rx="2" ry="2" />
<text  x="726.89" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (932 samples, 25.55%)</title><rect x="843.9" y="229" width="301.5" height="15.0" fill="rgb(251,68,13)" rx="2" ry="2" />
<text  x="846.89" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>ipf_check_wrapper (485 samples, 13.29%)</title><rect x="988.5" y="85" width="156.9" height="15.0" fill="rgb(216,119,19)" rx="2" ry="2" />
<text  x="991.48" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>lock_delay (165 samples, 4.52%)</title><rect x="1009.2" y="37" width="53.4" height="15.0" fill="rgb(231,170,15)" rx="2" ry="2" />
<text  x="1012.18" y="47.5" >lock_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (932 samples, 25.55%)</title><rect x="843.9" y="261" width="301.5" height="15.0" fill="rgb(225,11,41)" rx="2" ry="2" />
<text  x="846.89" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (13 samples, 0.36%)</title><rect x="737.1" y="197" width="4.3" height="15.0" fill="rgb(211,70,8)" rx="2" ry="2" />
<text  x="740.15" y="207.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.03%)</title><rect x="988.5" y="53" width="0.3" height="15.0" fill="rgb(243,168,52)" rx="2" ry="2" />
<text  x="991.48" y="63.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.11%)</title><rect x="1173.5" y="213" width="1.3" height="15.0" fill="rgb(253,211,39)" rx="2" ry="2" />
<text  x="1176.50" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.03%)</title><rect x="843.6" y="213" width="0.3" height="15.0" fill="rgb(222,169,16)" rx="2" ry="2" />
<text  x="846.57" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (3 samples, 0.08%)</title><rect x="1174.8" y="229" width="1.0" height="15.0" fill="rgb(219,144,54)" rx="2" ry="2" />
<text  x="1177.80" y="239.5" ></text>
</g>
<g >
<title>netmap_rx_irq (2 samples, 0.05%)</title><rect x="754.3" y="213" width="0.6" height="15.0" fill="rgb(254,206,5)" rx="2" ry="2" />
<text  x="757.29" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_timer (8 samples, 0.22%)</title><rect x="1187.4" y="277" width="2.6" height="15.0" fill="rgb(235,124,39)" rx="2" ry="2" />
<text  x="1190.41" y="287.5" ></text>
</g>
<g >
<title>ipf_check (485 samples, 13.29%)</title><rect x="988.5" y="69" width="156.9" height="15.0" fill="rgb(231,216,11)" rx="2" ry="2" />
<text  x="991.48" y="79.5" >ipf_check</text>
</g>
<g >
<title>__rw_rlock_int (45 samples, 1.23%)</title><rect x="525.9" y="37" width="14.6" height="15.0" fill="rgb(244,169,41)" rx="2" ry="2" />
<text  x="528.93" y="47.5" ></text>
</g>
<g >
<title>vm_page_zone_import (1 samples, 0.03%)</title><rect x="723.9" y="53" width="0.3" height="15.0" fill="rgb(220,172,1)" rx="2" ry="2" />
<text  x="726.89" y="63.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (791 samples, 21.68%)</title><rect x="182.7" y="69" width="255.9" height="15.0" fill="rgb(208,61,29)" rx="2" ry="2" />
<text  x="185.73" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>pfil_mbuf_fwd (801 samples, 21.96%)</title><rect x="179.5" y="85" width="259.1" height="15.0" fill="rgb(244,26,41)" rx="2" ry="2" />
<text  x="182.50" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>_task_fn_tx (269 samples, 7.37%)</title><rect x="754.9" y="229" width="87.1" height="15.0" fill="rgb(210,226,12)" rx="2" ry="2" />
<text  x="757.94" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.03%)</title><rect x="1189.4" y="213" width="0.3" height="15.0" fill="rgb(253,180,31)" rx="2" ry="2" />
<text  x="1192.35" y="223.5" ></text>
</g>
<g >
<title>hardclock (5 samples, 0.14%)</title><rect x="1188.1" y="229" width="1.6" height="15.0" fill="rgb(242,108,34)" rx="2" ry="2" />
<text  x="1191.06" y="239.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (429 samples, 11.76%)</title><rect x="849.7" y="85" width="138.8" height="15.0" fill="rgb(222,198,25)" rx="2" ry="2" />
<text  x="852.71" y="95.5" >ipf_check_wrapper</text>
</g>
<g >
<title>lock_delay (118 samples, 3.23%)</title><rect x="394.6" y="37" width="38.2" height="15.0" fill="rgb(245,33,31)" rx="2" ry="2" />
<text  x="397.60" y="47.5" >loc..</text>
</g>
<g >
<title>ifmp_ring_enqueue (45 samples, 1.23%)</title><rect x="147.8" y="37" width="14.6" height="15.0" fill="rgb(227,212,52)" rx="2" ry="2" />
<text  x="150.80" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (1 samples, 0.03%)</title><rect x="843.6" y="277" width="0.3" height="15.0" fill="rgb(234,44,48)" rx="2" ry="2" />
<text  x="846.57" y="287.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.03%)</title><rect x="988.5" y="37" width="0.3" height="15.0" fill="rgb(213,107,32)" rx="2" ry="2" />
<text  x="991.48" y="47.5" ></text>
</g>
<g >
<title>ipf_check (429 samples, 11.76%)</title><rect x="849.7" y="69" width="138.8" height="15.0" fill="rgb(219,173,9)" rx="2" ry="2" />
<text  x="852.71" y="79.5" >ipf_check</text>
</g>
<g >
<title>timekeep_push_vdso (1 samples, 0.03%)</title><rect x="1189.4" y="181" width="0.3" height="15.0" fill="rgb(226,169,52)" rx="2" ry="2" />
<text  x="1192.35" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.05%)</title><rect x="842.3" y="229" width="0.6" height="15.0" fill="rgb(231,159,43)" rx="2" ry="2" />
<text  x="845.28" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.03%)</title><rect x="840.0" y="181" width="0.3" height="15.0" fill="rgb(216,72,33)" rx="2" ry="2" />
<text  x="843.01" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.16%)</title><rect x="1182.2" y="213" width="2.0" height="15.0" fill="rgb(232,199,52)" rx="2" ry="2" />
<text  x="1185.24" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.03%)</title><rect x="712.2" y="197" width="0.4" height="15.0" fill="rgb(227,96,33)" rx="2" ry="2" />
<text  x="715.24" y="207.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.03%)</title><rect x="843.6" y="181" width="0.3" height="15.0" fill="rgb(225,36,23)" rx="2" ry="2" />
<text  x="846.57" y="191.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (2 samples, 0.05%)</title><rect x="726.8" y="85" width="0.6" height="15.0" fill="rgb(222,2,50)" rx="2" ry="2" />
<text  x="729.80" y="95.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.05%)</title><rect x="765.0" y="181" width="0.6" height="15.0" fill="rgb(246,40,28)" rx="2" ry="2" />
<text  x="767.97" y="191.5" ></text>
</g>
<g >
<title>ether_input (2,087 samples, 57.21%)</title><rect x="37.2" y="197" width="675.0" height="15.0" fill="rgb(233,211,42)" rx="2" ry="2" />
<text  x="40.17" y="207.5" >ether_input</text>
</g>
<g >
<title>Xapic_isr1 (9 samples, 0.25%)</title><rect x="10.0" y="277" width="2.9" height="15.0" fill="rgb(207,210,40)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ipf_nat_checkout (14 samples, 0.38%)</title><rect x="339.6" y="37" width="4.5" height="15.0" fill="rgb(210,121,30)" rx="2" ry="2" />
<text  x="342.61" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,079 samples, 56.99%)</title><rect x="39.8" y="181" width="672.4" height="15.0" fill="rgb(239,26,21)" rx="2" ry="2" />
<text  x="42.76" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.05%)</title><rect x="1170.9" y="213" width="0.7" height="15.0" fill="rgb(231,219,52)" rx="2" ry="2" />
<text  x="1173.92" y="223.5" ></text>
</g>
<g >
<title>msi_vector (3 samples, 0.08%)</title><rect x="1184.8" y="261" width="1.0" height="15.0" fill="rgb(215,30,47)" rx="2" ry="2" />
<text  x="1187.82" y="271.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (1 samples, 0.03%)</title><rect x="790.2" y="117" width="0.3" height="15.0" fill="rgb(220,212,42)" rx="2" ry="2" />
<text  x="793.20" y="127.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.03%)</title><rect x="843.6" y="197" width="0.3" height="15.0" fill="rgb(229,10,25)" rx="2" ry="2" />
<text  x="846.57" y="207.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (3 samples, 0.08%)</title><rect x="734.6" y="165" width="0.9" height="15.0" fill="rgb(227,89,22)" rx="2" ry="2" />
<text  x="737.56" y="175.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (9 samples, 0.25%)</title><rect x="540.5" y="37" width="2.9" height="15.0" fill="rgb(227,229,53)" rx="2" ry="2" />
<text  x="543.48" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.03%)</title><rect x="827.1" y="149" width="0.3" height="15.0" fill="rgb(205,2,27)" rx="2" ry="2" />
<text  x="830.07" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (932 samples, 25.55%)</title><rect x="843.9" y="149" width="301.5" height="15.0" fill="rgb(254,166,17)" rx="2" ry="2" />
<text  x="846.89" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_nh_input (2,071 samples, 56.77%)</title><rect x="42.3" y="165" width="669.9" height="15.0" fill="rgb(219,102,14)" rx="2" ry="2" />
<text  x="45.35" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>timercb (7 samples, 0.19%)</title><rect x="1187.7" y="261" width="2.3" height="15.0" fill="rgb(207,223,3)" rx="2" ry="2" />
<text  x="1190.74" y="271.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (22 samples, 0.60%)</title><rect x="746.9" y="197" width="7.1" height="15.0" fill="rgb(222,53,49)" rx="2" ry="2" />
<text  x="749.85" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (6 samples, 0.16%)</title><rect x="781.8" y="165" width="1.9" height="15.0" fill="rgb(250,73,31)" rx="2" ry="2" />
<text  x="784.79" y="175.5" ></text>
</g>
<g >
<title>m_adj (4 samples, 0.11%)</title><rect x="710.0" y="149" width="1.3" height="15.0" fill="rgb(234,33,28)" rx="2" ry="2" />
<text  x="712.98" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.11%)</title><rect x="1169.6" y="213" width="1.3" height="15.0" fill="rgb(254,134,47)" rx="2" ry="2" />
<text  x="1172.62" y="223.5" ></text>
</g>
<g >
<title>zone_alloc_item (3 samples, 0.08%)</title><rect x="726.5" y="117" width="0.9" height="15.0" fill="rgb(215,50,37)" rx="2" ry="2" />
<text  x="729.47" y="127.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (22 samples, 0.60%)</title><rect x="12.9" y="277" width="7.1" height="15.0" fill="rgb(239,144,11)" rx="2" ry="2" />
<text  x="15.91" y="287.5" ></text>
</g>
<g >
<title>ip_input (2,009 samples, 55.07%)</title><rect x="60.1" y="117" width="649.9" height="15.0" fill="rgb(216,192,40)" rx="2" ry="2" />
<text  x="63.14" y="127.5" >ip_input</text>
</g>
<g >
<title>memcpy_erms (14 samples, 0.38%)</title><rect x="742.3" y="197" width="4.6" height="15.0" fill="rgb(235,3,22)" rx="2" ry="2" />
<text  x="745.32" y="207.5" ></text>
</g>
</g>
</svg>
