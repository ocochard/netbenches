<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>pfil_mbuf_fwd (320 samples, 8.03%)</title><rect x="936.6" y="101" width="94.7" height="15.0" fill="rgb(239,49,48)" rx="2" ry="2" />
<text  x="939.59" y="111.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>ifmp_ring_enqueue (71 samples, 1.78%)</title><rect x="252.7" y="37" width="21.1" height="15.0" fill="rgb(205,0,45)" rx="2" ry="2" />
<text  x="255.75" y="47.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.03%)</title><rect x="858.7" y="229" width="0.3" height="15.0" fill="rgb(219,52,31)" rx="2" ry="2" />
<text  x="861.74" y="239.5" ></text>
</g>
<g >
<title>pf_test_state (31 samples, 0.78%)</title><rect x="422.1" y="37" width="9.2" height="15.0" fill="rgb(239,153,31)" rx="2" ry="2" />
<text  x="425.08" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (16 samples, 0.40%)</title><rect x="10.0" y="277" width="4.7" height="15.0" fill="rgb(227,224,46)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (726 samples, 18.21%)</title><rect x="919.1" y="181" width="214.9" height="15.0" fill="rgb(253,35,4)" rx="2" ry="2" />
<text  x="922.13" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>pmc_process_samples (12 samples, 0.30%)</title><rect x="1186.2" y="197" width="3.5" height="15.0" fill="rgb(234,45,49)" rx="2" ry="2" />
<text  x="1189.15" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.05%)</title><rect x="1167.5" y="213" width="0.6" height="15.0" fill="rgb(233,181,51)" rx="2" ry="2" />
<text  x="1170.50" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.03%)</title><rect x="858.4" y="197" width="0.3" height="15.0" fill="rgb(206,120,8)" rx="2" ry="2" />
<text  x="861.44" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (186 samples, 4.67%)</title><rect x="864.1" y="277" width="55.0" height="15.0" fill="rgb(252,86,5)" rx="2" ry="2" />
<text  x="867.06" y="287.5" >gtask..</text>
</g>
<g >
<title>doreti (18 samples, 0.45%)</title><rect x="21.8" y="277" width="5.4" height="15.0" fill="rgb(239,224,51)" rx="2" ry="2" />
<text  x="24.84" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (2,827 samples, 70.92%)</title><rect x="27.2" y="261" width="836.9" height="15.0" fill="rgb(216,139,9)" rx="2" ry="2" />
<text  x="30.17" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>wakeup_any (3 samples, 0.08%)</title><rect x="1164.8" y="213" width="0.9" height="15.0" fill="rgb(240,43,2)" rx="2" ry="2" />
<text  x="1167.84" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (59 samples, 1.48%)</title><rect x="919.1" y="85" width="17.5" height="15.0" fill="rgb(236,28,5)" rx="2" ry="2" />
<text  x="922.13" y="95.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (1 samples, 0.03%)</title><rect x="682.0" y="197" width="0.3" height="15.0" fill="rgb(243,210,11)" rx="2" ry="2" />
<text  x="685.00" y="207.5" ></text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.05%)</title><rect x="856.1" y="213" width="0.6" height="15.0" fill="rgb(214,164,29)" rx="2" ry="2" />
<text  x="859.07" y="223.5" ></text>
</g>
<g >
<title>pf_normalize_ip (30 samples, 0.75%)</title><rect x="410.2" y="37" width="8.9" height="15.0" fill="rgb(254,19,35)" rx="2" ry="2" />
<text  x="413.24" y="47.5" ></text>
</g>
<g >
<title>pf_test_state (310 samples, 7.78%)</title><rect x="939.6" y="53" width="91.7" height="15.0" fill="rgb(225,57,9)" rx="2" ry="2" />
<text  x="942.55" y="63.5" >pf_test_st..</text>
</g>
<g >
<title>ip_tryforward (1,677 samples, 42.07%)</title><rect x="126.9" y="101" width="496.5" height="15.0" fill="rgb(222,158,15)" rx="2" ry="2" />
<text  x="129.93" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>grouptaskqueue_enqueue (9 samples, 0.23%)</title><rect x="34.6" y="213" width="2.6" height="15.0" fill="rgb(209,71,22)" rx="2" ry="2" />
<text  x="37.57" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (5 samples, 0.13%)</title><rect x="853.4" y="165" width="1.5" height="15.0" fill="rgb(216,150,1)" rx="2" ry="2" />
<text  x="856.41" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (1,882 samples, 47.22%)</title><rect x="69.8" y="165" width="557.1" height="15.0" fill="rgb(230,124,46)" rx="2" ry="2" />
<text  x="72.80" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ifmp_ring_check_drainage (2 samples, 0.05%)</title><rect x="856.7" y="213" width="0.6" height="15.0" fill="rgb(236,8,32)" rx="2" ry="2" />
<text  x="859.66" y="223.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (429 samples, 10.76%)</title><rect x="308.7" y="85" width="127.0" height="15.0" fill="rgb(231,202,6)" rx="2" ry="2" />
<text  x="311.70" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>iflib_txq_drain (459 samples, 11.52%)</title><rect x="720.2" y="197" width="135.9" height="15.0" fill="rgb(208,114,41)" rx="2" ry="2" />
<text  x="723.19" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.03%)</title><rect x="36.9" y="165" width="0.3" height="15.0" fill="rgb(222,208,3)" rx="2" ry="2" />
<text  x="39.94" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (186 samples, 4.67%)</title><rect x="864.1" y="245" width="55.0" height="15.0" fill="rgb(207,84,8)" rx="2" ry="2" />
<text  x="867.06" y="255.5" >iflib..</text>
</g>
<g >
<title>cache_alloc (14 samples, 0.35%)</title><rect x="648.0" y="165" width="4.1" height="15.0" fill="rgb(243,58,35)" rx="2" ry="2" />
<text  x="650.96" y="175.5" ></text>
</g>
<g >
<title>lock_delay (5 samples, 0.13%)</title><rect x="650.6" y="117" width="1.5" height="15.0" fill="rgb(206,9,43)" rx="2" ry="2" />
<text  x="653.62" y="127.5" ></text>
</g>
<g >
<title>m_pkthdr_init (5 samples, 0.13%)</title><rect x="682.3" y="197" width="1.5" height="15.0" fill="rgb(246,187,43)" rx="2" ry="2" />
<text  x="685.30" y="207.5" ></text>
</g>
<g >
<title>pf_find_state (60 samples, 1.51%)</title><rect x="874.4" y="53" width="17.8" height="15.0" fill="rgb(244,89,13)" rx="2" ry="2" />
<text  x="877.43" y="63.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (33 samples, 0.83%)</title><rect x="909.4" y="37" width="9.7" height="15.0" fill="rgb(219,70,35)" rx="2" ry="2" />
<text  x="912.36" y="47.5" ></text>
</g>
<g >
<title>iflib_get_ifp (2 samples, 0.05%)</title><rect x="1179.6" y="213" width="0.6" height="15.0" fill="rgb(206,50,34)" rx="2" ry="2" />
<text  x="1182.64" y="223.5" ></text>
</g>
<g >
<title>fib4_lookup (34 samples, 0.85%)</title><rect x="298.6" y="69" width="10.1" height="15.0" fill="rgb(206,146,46)" rx="2" ry="2" />
<text  x="301.64" y="79.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (26 samples, 0.65%)</title><rect x="824.7" y="149" width="7.7" height="15.0" fill="rgb(217,133,3)" rx="2" ry="2" />
<text  x="827.69" y="159.5" ></text>
</g>
<g >
<title>pf_pull_hdr (7 samples, 0.18%)</title><rect x="892.2" y="69" width="2.1" height="15.0" fill="rgb(232,216,3)" rx="2" ry="2" />
<text  x="895.19" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,912 samples, 47.97%)</title><rect x="60.9" y="181" width="566.0" height="15.0" fill="rgb(214,191,5)" rx="2" ry="2" />
<text  x="63.92" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.03%)</title><rect x="832.4" y="149" width="0.3" height="15.0" fill="rgb(208,153,16)" rx="2" ry="2" />
<text  x="835.39" y="159.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (91 samples, 2.28%)</title><rect x="892.2" y="117" width="26.9" height="15.0" fill="rgb(238,79,31)" rx="2" ry="2" />
<text  x="895.19" y="127.5" >p..</text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.13%)</title><rect x="763.4" y="133" width="1.5" height="15.0" fill="rgb(246,223,27)" rx="2" ry="2" />
<text  x="766.41" y="143.5" ></text>
</g>
<g >
<title>if_getnetmapadapter (1 samples, 0.03%)</title><rect x="713.4" y="197" width="0.3" height="15.0" fill="rgb(205,68,13)" rx="2" ry="2" />
<text  x="716.38" y="207.5" ></text>
</g>
<g >
<title>lapic_eoi (4 samples, 0.10%)</title><rect x="1180.5" y="245" width="1.2" height="15.0" fill="rgb(248,163,46)" rx="2" ry="2" />
<text  x="1183.53" y="255.5" ></text>
</g>
<g >
<title>_task_fn_tx (489 samples, 12.27%)</title><rect x="714.0" y="229" width="144.7" height="15.0" fill="rgb(218,6,1)" rx="2" ry="2" />
<text  x="716.97" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.08%)</title><rect x="35.5" y="197" width="0.8" height="15.0" fill="rgb(221,33,5)" rx="2" ry="2" />
<text  x="38.46" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.08%)</title><rect x="1164.8" y="197" width="0.9" height="15.0" fill="rgb(245,65,25)" rx="2" ry="2" />
<text  x="1167.84" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.15%)</title><rect x="1163.1" y="213" width="1.7" height="15.0" fill="rgb(249,85,2)" rx="2" ry="2" />
<text  x="1166.06" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (34 samples, 0.85%)</title><rect x="926.5" y="37" width="10.1" height="15.0" fill="rgb(250,142,22)" rx="2" ry="2" />
<text  x="929.53" y="47.5" ></text>
</g>
<g >
<title>iflib_fl_refill (104 samples, 2.61%)</title><rect x="635.2" y="197" width="30.8" height="15.0" fill="rgb(244,229,18)" rx="2" ry="2" />
<text  x="638.23" y="207.5" >if..</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.03%)</title><rect x="627.8" y="197" width="0.3" height="15.0" fill="rgb(219,229,15)" rx="2" ry="2" />
<text  x="630.83" y="207.5" ></text>
</g>
<g >
<title>memcmp (37 samples, 0.93%)</title><rect x="874.4" y="37" width="11.0" height="15.0" fill="rgb(241,25,2)" rx="2" ry="2" />
<text  x="877.43" y="47.5" ></text>
</g>
<g >
<title>ip_input (186 samples, 4.67%)</title><rect x="864.1" y="149" width="55.0" height="15.0" fill="rgb(235,17,31)" rx="2" ry="2" />
<text  x="867.06" y="159.5" >ip_in..</text>
</g>
<g >
<title>tsc_get_config (2 samples, 0.05%)</title><rect x="1189.1" y="181" width="0.6" height="15.0" fill="rgb(225,102,33)" rx="2" ry="2" />
<text  x="1192.11" y="191.5" ></text>
</g>
<g >
<title>uma_small_alloc (1 samples, 0.03%)</title><rect x="650.0" y="69" width="0.3" height="15.0" fill="rgb(241,203,28)" rx="2" ry="2" />
<text  x="653.03" y="79.5" ></text>
</g>
<g >
<title>pf_test_state (316 samples, 7.93%)</title><rect x="1040.5" y="53" width="93.5" height="15.0" fill="rgb(223,192,11)" rx="2" ry="2" />
<text  x="1043.50" y="63.5" >pf_test_state</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (17 samples, 0.43%)</title><rect x="666.0" y="197" width="5.0" height="15.0" fill="rgb(218,227,7)" rx="2" ry="2" />
<text  x="669.02" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_intr (6 samples, 0.15%)</title><rect x="1182.9" y="277" width="1.8" height="15.0" fill="rgb(212,209,35)" rx="2" ry="2" />
<text  x="1185.90" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (12 samples, 0.30%)</title><rect x="1159.5" y="213" width="3.6" height="15.0" fill="rgb(228,9,18)" rx="2" ry="2" />
<text  x="1162.51" y="223.5" ></text>
</g>
<g >
<title>in_localip (12 samples, 0.30%)</title><rect x="277.9" y="85" width="3.6" height="15.0" fill="rgb(240,182,41)" rx="2" ry="2" />
<text  x="280.91" y="95.5" ></text>
</g>
<g >
<title>pf_create_state (1 samples, 0.03%)</title><rect x="894.3" y="53" width="0.3" height="15.0" fill="rgb(243,121,23)" rx="2" ry="2" />
<text  x="897.26" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.08%)</title><rect x="859.0" y="229" width="0.9" height="15.0" fill="rgb(244,134,24)" rx="2" ry="2" />
<text  x="862.03" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (726 samples, 18.21%)</title><rect x="919.1" y="229" width="214.9" height="15.0" fill="rgb(241,207,47)" rx="2" ry="2" />
<text  x="922.13" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>m_freem (63 samples, 1.58%)</title><rect x="757.2" y="165" width="18.6" height="15.0" fill="rgb(242,26,35)" rx="2" ry="2" />
<text  x="760.20" y="175.5" ></text>
</g>
<g >
<title>ether_output (377 samples, 9.46%)</title><rect x="166.3" y="85" width="111.6" height="15.0" fill="rgb(226,122,37)" rx="2" ry="2" />
<text  x="169.31" y="95.5" >ether_output</text>
</g>
<g >
<title>grouptaskqueue_enqueue (27 samples, 0.68%)</title><rect x="1157.7" y="229" width="8.0" height="15.0" fill="rgb(207,14,18)" rx="2" ry="2" />
<text  x="1160.73" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (40 samples, 1.00%)</title><rect x="832.7" y="165" width="11.8" height="15.0" fill="rgb(236,186,48)" rx="2" ry="2" />
<text  x="835.68" y="175.5" ></text>
</g>
<g >
<title>_task_fn_rx (186 samples, 4.67%)</title><rect x="864.1" y="261" width="55.0" height="15.0" fill="rgb(212,56,11)" rx="2" ry="2" />
<text  x="867.06" y="271.5" >_task..</text>
</g>
<g >
<title>pf_test_rule (1 samples, 0.03%)</title><rect x="894.3" y="69" width="0.3" height="15.0" fill="rgb(240,51,44)" rx="2" ry="2" />
<text  x="897.26" y="79.5" ></text>
</g>
<g >
<title>m_adj (13 samples, 0.33%)</title><rect x="94.1" y="133" width="3.8" height="15.0" fill="rgb(208,56,0)" rx="2" ry="2" />
<text  x="97.07" y="143.5" ></text>
</g>
<g >
<title>memcmp (8 samples, 0.20%)</title><rect x="624.3" y="149" width="2.3" height="15.0" fill="rgb(242,218,23)" rx="2" ry="2" />
<text  x="627.27" y="159.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (634 samples, 15.91%)</title><rect x="435.7" y="85" width="187.7" height="15.0" fill="rgb(241,177,9)" rx="2" ry="2" />
<text  x="438.70" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>pfil_mbuf_fwd (95 samples, 2.38%)</title><rect x="864.1" y="117" width="28.1" height="15.0" fill="rgb(230,36,0)" rx="2" ry="2" />
<text  x="867.06" y="127.5" >p..</text>
</g>
<g >
<title>zone_import (1 samples, 0.03%)</title><rect x="650.0" y="101" width="0.3" height="15.0" fill="rgb(229,140,42)" rx="2" ry="2" />
<text  x="653.03" y="111.5" ></text>
</g>
<g >
<title>pf_test (95 samples, 2.38%)</title><rect x="864.1" y="85" width="28.1" height="15.0" fill="rgb(230,9,17)" rx="2" ry="2" />
<text  x="867.06" y="95.5" >p..</text>
</g>
<g >
<title>iap_get_config (1 samples, 0.03%)</title><rect x="1188.2" y="181" width="0.3" height="15.0" fill="rgb(206,215,15)" rx="2" ry="2" />
<text  x="1191.22" y="191.5" ></text>
</g>
<g >
<title>pmc_hook_handler (12 samples, 0.30%)</title><rect x="1186.2" y="213" width="3.5" height="15.0" fill="rgb(219,228,12)" rx="2" ry="2" />
<text  x="1189.15" y="223.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (2 samples, 0.05%)</title><rect x="719.6" y="197" width="0.6" height="15.0" fill="rgb(242,208,40)" rx="2" ry="2" />
<text  x="722.60" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (726 samples, 18.21%)</title><rect x="919.1" y="149" width="214.9" height="15.0" fill="rgb(216,72,39)" rx="2" ry="2" />
<text  x="922.13" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pf_test (91 samples, 2.28%)</title><rect x="892.2" y="85" width="26.9" height="15.0" fill="rgb(228,108,37)" rx="2" ry="2" />
<text  x="895.19" y="95.5" >p..</text>
</g>
<g >
<title>m_copydata (7 samples, 0.18%)</title><rect x="892.2" y="53" width="2.1" height="15.0" fill="rgb(247,5,22)" rx="2" ry="2" />
<text  x="895.19" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (8 samples, 0.20%)</title><rect x="1168.1" y="229" width="2.4" height="15.0" fill="rgb(215,104,32)" rx="2" ry="2" />
<text  x="1171.09" y="239.5" ></text>
</g>
<g >
<title>intr_event_handle (144 samples, 3.61%)</title><rect x="1139.1" y="261" width="42.6" height="15.0" fill="rgb(231,151,47)" rx="2" ry="2" />
<text  x="1142.08" y="271.5" >intr..</text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.08%)</title><rect x="859.9" y="229" width="0.9" height="15.0" fill="rgb(242,108,3)" rx="2" ry="2" />
<text  x="862.92" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (186 samples, 4.67%)</title><rect x="864.1" y="197" width="55.0" height="15.0" fill="rgb(248,155,30)" rx="2" ry="2" />
<text  x="867.06" y="207.5" >ether..</text>
</g>
<g >
<title>in_lltable_lookup (10 samples, 0.25%)</title><rect x="208.3" y="53" width="3.0" height="15.0" fill="rgb(247,79,12)" rx="2" ry="2" />
<text  x="211.34" y="63.5" ></text>
</g>
<g >
<title>pf_find_state (268 samples, 6.72%)</title><rect x="1054.7" y="37" width="79.3" height="15.0" fill="rgb(234,168,9)" rx="2" ry="2" />
<text  x="1057.71" y="47.5" >pf_find_s..</text>
</g>
<g >
<title>fork_exit (2,827 samples, 70.92%)</title><rect x="27.2" y="277" width="836.9" height="15.0" fill="rgb(233,223,5)" rx="2" ry="2" />
<text  x="30.17" y="287.5" >fork_exit</text>
</g>
<g >
<title>ip_findroute (92 samples, 2.31%)</title><rect x="281.5" y="85" width="27.2" height="15.0" fill="rgb(231,91,52)" rx="2" ry="2" />
<text  x="284.47" y="95.5" >i..</text>
</g>
<g >
<title>iflib_if_transmit (169 samples, 4.24%)</title><rect x="223.7" y="53" width="50.1" height="15.0" fill="rgb(243,113,41)" rx="2" ry="2" />
<text  x="226.74" y="63.5" >iflib..</text>
</g>
<g >
<title>iflib_encap (232 samples, 5.82%)</title><rect x="775.8" y="181" width="68.7" height="15.0" fill="rgb(240,219,27)" rx="2" ry="2" />
<text  x="778.85" y="191.5" >iflib_e..</text>
</g>
<g >
<title>_task_fn_rx (726 samples, 18.21%)</title><rect x="919.1" y="245" width="214.9" height="15.0" fill="rgb(242,45,0)" rx="2" ry="2" />
<text  x="922.13" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>microuptime (26 samples, 0.65%)</title><rect x="866.7" y="53" width="7.7" height="15.0" fill="rgb(244,207,7)" rx="2" ry="2" />
<text  x="869.73" y="63.5" ></text>
</g>
<g >
<title>all (3,986 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(242,219,36)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.05%)</title><rect x="1158.6" y="213" width="0.6" height="15.0" fill="rgb(239,135,48)" rx="2" ry="2" />
<text  x="1161.62" y="223.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.05%)</title><rect x="648.3" y="117" width="0.5" height="15.0" fill="rgb(223,224,52)" rx="2" ry="2" />
<text  x="651.25" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (726 samples, 18.21%)</title><rect x="919.1" y="277" width="214.9" height="15.0" fill="rgb(243,110,49)" rx="2" ry="2" />
<text  x="922.13" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (13 samples, 0.33%)</title><rect x="753.3" y="165" width="3.9" height="15.0" fill="rgb(207,52,30)" rx="2" ry="2" />
<text  x="756.35" y="175.5" ></text>
</g>
<g >
<title>netmap_rx_irq (3 samples, 0.08%)</title><rect x="712.8" y="213" width="0.9" height="15.0" fill="rgb(244,205,32)" rx="2" ry="2" />
<text  x="715.79" y="223.5" ></text>
</g>
<g >
<title>if_getsoftc (7 samples, 0.18%)</title><rect x="250.7" y="37" width="2.0" height="15.0" fill="rgb(248,118,49)" rx="2" ry="2" />
<text  x="253.68" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (6 samples, 0.15%)</title><rect x="97.9" y="133" width="1.8" height="15.0" fill="rgb(251,92,52)" rx="2" ry="2" />
<text  x="100.92" y="143.5" ></text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.03%)</title><rect x="650.0" y="117" width="0.3" height="15.0" fill="rgb(209,160,37)" rx="2" ry="2" />
<text  x="653.03" y="127.5" ></text>
</g>
<g >
<title>ether_input (186 samples, 4.67%)</title><rect x="864.1" y="229" width="55.0" height="15.0" fill="rgb(218,174,3)" rx="2" ry="2" />
<text  x="867.06" y="239.5" >ether..</text>
</g>
<g >
<title>pf_test_state (86 samples, 2.16%)</title><rect x="866.7" y="69" width="25.5" height="15.0" fill="rgb(245,62,40)" rx="2" ry="2" />
<text  x="869.73" y="79.5" >p..</text>
</g>
<g >
<title>lapic_handle_intr (1 samples, 0.03%)</title><rect x="447.2" y="53" width="0.3" height="15.0" fill="rgb(234,118,6)" rx="2" ry="2" />
<text  x="450.25" y="63.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.10%)</title><rect x="854.9" y="165" width="1.2" height="15.0" fill="rgb(238,113,43)" rx="2" ry="2" />
<text  x="857.89" y="175.5" ></text>
</g>
<g >
<title>lapic_handle_timer (18 samples, 0.45%)</title><rect x="1184.7" y="277" width="5.3" height="15.0" fill="rgb(236,72,28)" rx="2" ry="2" />
<text  x="1187.67" y="287.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.05%)</title><rect x="250.1" y="37" width="0.6" height="15.0" fill="rgb(236,45,36)" rx="2" ry="2" />
<text  x="253.09" y="47.5" ></text>
</g>
<g >
<title>_rm_runlock (9 samples, 0.23%)</title><rect x="391.0" y="37" width="2.7" height="15.0" fill="rgb(223,116,1)" rx="2" ry="2" />
<text  x="394.00" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.03%)</title><rect x="626.6" y="149" width="0.3" height="15.0" fill="rgb(253,189,43)" rx="2" ry="2" />
<text  x="629.64" y="159.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (52 samples, 1.30%)</title><rect x="817.3" y="165" width="15.4" height="15.0" fill="rgb(241,33,42)" rx="2" ry="2" />
<text  x="820.29" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (37 samples, 0.93%)</title><rect x="671.0" y="197" width="11.0" height="15.0" fill="rgb(226,7,52)" rx="2" ry="2" />
<text  x="674.05" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (21 samples, 0.53%)</title><rect x="1170.5" y="229" width="6.2" height="15.0" fill="rgb(229,93,38)" rx="2" ry="2" />
<text  x="1173.46" y="239.5" ></text>
</g>
<g >
<title>if_getnumadomain (21 samples, 0.53%)</title><rect x="628.1" y="197" width="6.2" height="15.0" fill="rgb(207,56,36)" rx="2" ry="2" />
<text  x="631.12" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.03%)</title><rect x="729.1" y="181" width="0.3" height="15.0" fill="rgb(250,193,13)" rx="2" ry="2" />
<text  x="732.07" y="191.5" ></text>
</g>
<g >
<title>wakeup (11 samples, 0.28%)</title><rect x="860.8" y="229" width="3.3" height="15.0" fill="rgb(209,170,1)" rx="2" ry="2" />
<text  x="863.81" y="239.5" ></text>
</g>
<g >
<title>sleepq_broadcast (6 samples, 0.15%)</title><rect x="860.8" y="213" width="1.8" height="15.0" fill="rgb(223,129,26)" rx="2" ry="2" />
<text  x="863.81" y="223.5" ></text>
</g>
<g >
<title>ether_output (59 samples, 1.48%)</title><rect x="919.1" y="101" width="17.5" height="15.0" fill="rgb(207,184,36)" rx="2" ry="2" />
<text  x="922.13" y="111.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.03%)</title><rect x="1159.2" y="213" width="0.3" height="15.0" fill="rgb(230,138,18)" rx="2" ry="2" />
<text  x="1162.21" y="223.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (1 samples, 0.03%)</title><rect x="650.0" y="53" width="0.3" height="15.0" fill="rgb(214,74,14)" rx="2" ry="2" />
<text  x="653.03" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.03%)</title><rect x="863.8" y="197" width="0.3" height="15.0" fill="rgb(241,183,48)" rx="2" ry="2" />
<text  x="866.77" y="207.5" ></text>
</g>
<g >
<title>pf_check_in (347 samples, 8.71%)</title><rect x="1031.3" y="85" width="102.7" height="15.0" fill="rgb(205,17,6)" rx="2" ry="2" />
<text  x="1034.32" y="95.5" >pf_check_in</text>
</g>
<g >
<title>keg_fetch_free_slab (6 samples, 0.15%)</title><rect x="650.3" y="133" width="1.8" height="15.0" fill="rgb(231,161,49)" rx="2" ry="2" />
<text  x="653.33" y="143.5" ></text>
</g>
<g >
<title>if_getcapenable (3 samples, 0.08%)</title><rect x="626.9" y="197" width="0.9" height="15.0" fill="rgb(250,5,13)" rx="2" ry="2" />
<text  x="629.94" y="207.5" ></text>
</g>
<g >
<title>pf_check_out (95 samples, 2.38%)</title><rect x="864.1" y="101" width="28.1" height="15.0" fill="rgb(245,176,17)" rx="2" ry="2" />
<text  x="867.06" y="111.5" >p..</text>
</g>
<g >
<title>pf_dummynet_route (14 samples, 0.35%)</title><rect x="406.1" y="37" width="4.1" height="15.0" fill="rgb(209,202,49)" rx="2" ry="2" />
<text  x="409.10" y="47.5" ></text>
</g>
<g >
<title>zone_import (14 samples, 0.35%)</title><rect x="648.0" y="149" width="4.1" height="15.0" fill="rgb(226,45,5)" rx="2" ry="2" />
<text  x="650.96" y="159.5" ></text>
</g>
<g >
<title>pf_check_out (320 samples, 8.03%)</title><rect x="936.6" y="85" width="94.7" height="15.0" fill="rgb(224,95,7)" rx="2" ry="2" />
<text  x="939.59" y="95.5" >pf_check_out</text>
</g>
<g >
<title>microuptime (16 samples, 0.40%)</title><rect x="894.6" y="53" width="4.7" height="15.0" fill="rgb(243,102,30)" rx="2" ry="2" />
<text  x="897.56" y="63.5" ></text>
</g>
<g >
<title>keg_alloc_slab (1 samples, 0.03%)</title><rect x="650.0" y="85" width="0.3" height="15.0" fill="rgb(249,151,15)" rx="2" ry="2" />
<text  x="653.03" y="95.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (13 samples, 0.33%)</title><rect x="1176.7" y="229" width="3.8" height="15.0" fill="rgb(231,38,23)" rx="2" ry="2" />
<text  x="1179.68" y="239.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (4 samples, 0.10%)</title><rect x="774.7" y="117" width="1.1" height="15.0" fill="rgb(208,91,2)" rx="2" ry="2" />
<text  x="777.66" y="127.5" ></text>
</g>
<g >
<title>pf_find_state (270 samples, 6.77%)</title><rect x="951.4" y="37" width="79.9" height="15.0" fill="rgb(250,228,8)" rx="2" ry="2" />
<text  x="954.39" y="47.5" >pf_find_s..</text>
</g>
<g >
<title>netisr_dispatch_src (186 samples, 4.67%)</title><rect x="864.1" y="213" width="55.0" height="15.0" fill="rgb(225,168,36)" rx="2" ry="2" />
<text  x="867.06" y="223.5" >netis..</text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.08%)</title><rect x="36.3" y="181" width="0.9" height="15.0" fill="rgb(237,198,20)" rx="2" ry="2" />
<text  x="39.35" y="191.5" ></text>
</g>
<g >
<title>_rm_rlock (29 samples, 0.73%)</title><rect x="540.2" y="37" width="8.6" height="15.0" fill="rgb(209,18,46)" rx="2" ry="2" />
<text  x="543.20" y="47.5" ></text>
</g>
<g >
<title>hardclock (15 samples, 0.38%)</title><rect x="1185.3" y="229" width="4.4" height="15.0" fill="rgb(246,89,36)" rx="2" ry="2" />
<text  x="1188.26" y="239.5" ></text>
</g>
<g >
<title>pf_normalize_ip (32 samples, 0.80%)</title><rect x="575.1" y="37" width="9.5" height="15.0" fill="rgb(248,215,39)" rx="2" ry="2" />
<text  x="578.13" y="47.5" ></text>
</g>
<g >
<title>pf_walk_header (15 samples, 0.38%)</title><rect x="431.3" y="37" width="4.4" height="15.0" fill="rgb(235,29,52)" rx="2" ry="2" />
<text  x="434.26" y="47.5" ></text>
</g>
<g >
<title>pf_test_state (66 samples, 1.66%)</title><rect x="595.3" y="37" width="19.5" height="15.0" fill="rgb(222,198,16)" rx="2" ry="2" />
<text  x="598.26" y="47.5" ></text>
</g>
<g >
<title>m_adj (3 samples, 0.08%)</title><rect x="623.4" y="149" width="0.9" height="15.0" fill="rgb(238,190,7)" rx="2" ry="2" />
<text  x="626.39" y="159.5" ></text>
</g>
<g >
<title>pf_pull_hdr (7 samples, 0.18%)</title><rect x="419.1" y="37" width="2.1" height="15.0" fill="rgb(230,75,48)" rx="2" ry="2" />
<text  x="422.12" y="47.5" ></text>
</g>
<g >
<title>m_free (50 samples, 1.25%)</title><rect x="761.0" y="149" width="14.8" height="15.0" fill="rgb(223,50,16)" rx="2" ry="2" />
<text  x="764.04" y="159.5" ></text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.03%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(222,123,3)" rx="2" ry="2" />
<text  x="1192.70" y="239.5" ></text>
</g>
<g >
<title>pf_check_out (399 samples, 10.01%)</title><rect x="317.6" y="69" width="118.1" height="15.0" fill="rgb(225,29,18)" rx="2" ry="2" />
<text  x="320.58" y="79.5" >pf_check_out</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.03%)</title><rect x="713.7" y="213" width="0.3" height="15.0" fill="rgb(244,16,8)" rx="2" ry="2" />
<text  x="716.68" y="223.5" ></text>
</g>
<g >
<title>keg_alloc_slab (8 samples, 0.20%)</title><rect x="648.0" y="133" width="2.3" height="15.0" fill="rgb(210,59,28)" rx="2" ry="2" />
<text  x="650.96" y="143.5" ></text>
</g>
<g >
<title>iflib_if_transmit (59 samples, 1.48%)</title><rect x="919.1" y="69" width="17.5" height="15.0" fill="rgb(244,221,7)" rx="2" ry="2" />
<text  x="922.13" y="79.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (12 samples, 0.30%)</title><rect x="652.7" y="181" width="3.5" height="15.0" fill="rgb(229,12,38)" rx="2" ry="2" />
<text  x="655.69" y="191.5" ></text>
</g>
<g >
<title>pagezero_erms (2 samples, 0.05%)</title><rect x="649.4" y="85" width="0.6" height="15.0" fill="rgb(241,196,39)" rx="2" ry="2" />
<text  x="652.44" y="95.5" ></text>
</g>
<g >
<title>timercb (17 samples, 0.43%)</title><rect x="1185.0" y="261" width="5.0" height="15.0" fill="rgb(211,183,22)" rx="2" ry="2" />
<text  x="1187.97" y="271.5" ></text>
</g>
<g >
<title>ip_input (726 samples, 18.21%)</title><rect x="919.1" y="133" width="214.9" height="15.0" fill="rgb(244,128,8)" rx="2" ry="2" />
<text  x="922.13" y="143.5" >ip_input</text>
</g>
<g >
<title>_rm_runlock (13 samples, 0.33%)</title><rect x="548.8" y="37" width="3.8" height="15.0" fill="rgb(250,188,36)" rx="2" ry="2" />
<text  x="551.79" y="47.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (3 samples, 0.08%)</title><rect x="823.8" y="149" width="0.9" height="15.0" fill="rgb(227,84,45)" rx="2" ry="2" />
<text  x="826.80" y="159.5" ></text>
</g>
<g >
<title>cache_alloc_retry (14 samples, 0.35%)</title><rect x="648.0" y="181" width="4.1" height="15.0" fill="rgb(254,113,5)" rx="2" ry="2" />
<text  x="650.96" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.13%)</title><rect x="862.6" y="213" width="1.5" height="15.0" fill="rgb(254,163,20)" rx="2" ry="2" />
<text  x="865.58" y="223.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (7 samples, 0.18%)</title><rect x="663.9" y="165" width="2.1" height="15.0" fill="rgb(214,106,26)" rx="2" ry="2" />
<text  x="666.94" y="175.5" ></text>
</g>
<g >
<title>memcmp (34 samples, 0.85%)</title><rect x="899.3" y="37" width="10.1" height="15.0" fill="rgb(248,187,45)" rx="2" ry="2" />
<text  x="902.29" y="47.5" ></text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.08%)</title><rect x="634.3" y="197" width="0.9" height="15.0" fill="rgb(242,24,29)" rx="2" ry="2" />
<text  x="637.34" y="207.5" ></text>
</g>
<g >
<title>uma_zfree_arg (37 samples, 0.93%)</title><rect x="764.9" y="133" width="10.9" height="15.0" fill="rgb(231,18,34)" rx="2" ry="2" />
<text  x="767.89" y="143.5" ></text>
</g>
<g >
<title>ip_tryforward (726 samples, 18.21%)</title><rect x="919.1" y="117" width="214.9" height="15.0" fill="rgb(239,224,30)" rx="2" ry="2" />
<text  x="922.13" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (5 samples, 0.13%)</title><rect x="857.3" y="213" width="1.4" height="15.0" fill="rgb(236,92,20)" rx="2" ry="2" />
<text  x="860.26" y="223.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (157 samples, 3.94%)</title><rect x="729.4" y="181" width="46.4" height="15.0" fill="rgb(224,221,11)" rx="2" ry="2" />
<text  x="732.37" y="191.5" >ifli..</text>
</g>
<g >
<title>pf_check_in (604 samples, 15.15%)</title><rect x="444.6" y="69" width="178.8" height="15.0" fill="rgb(213,29,40)" rx="2" ry="2" />
<text  x="447.58" y="79.5" >pf_check_in</text>
</g>
<g >
<title>_rm_rlock (29 samples, 0.73%)</title><rect x="382.4" y="37" width="8.6" height="15.0" fill="rgb(220,178,9)" rx="2" ry="2" />
<text  x="385.41" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.05%)</title><rect x="1165.1" y="181" width="0.6" height="15.0" fill="rgb(251,0,9)" rx="2" ry="2" />
<text  x="1168.13" y="191.5" ></text>
</g>
<g >
<title>tscp_get_timecount_low (16 samples, 0.40%)</title><rect x="894.6" y="37" width="4.7" height="15.0" fill="rgb(226,216,41)" rx="2" ry="2" />
<text  x="897.56" y="47.5" ></text>
</g>
<g >
<title>ether_input (726 samples, 18.21%)</title><rect x="919.1" y="213" width="214.9" height="15.0" fill="rgb(251,98,43)" rx="2" ry="2" />
<text  x="922.13" y="223.5" >ether_input</text>
</g>
<g >
<title>netisr_dispatch_src (186 samples, 4.67%)</title><rect x="864.1" y="165" width="55.0" height="15.0" fill="rgb(239,217,3)" rx="2" ry="2" />
<text  x="867.06" y="175.5" >netis..</text>
</g>
<g >
<title>pf_test (391 samples, 9.81%)</title><rect x="319.9" y="53" width="115.8" height="15.0" fill="rgb(216,100,23)" rx="2" ry="2" />
<text  x="322.95" y="63.5" >pf_test</text>
</g>
<g >
<title>ether_demux (1,812 samples, 45.46%)</title><rect x="87.0" y="149" width="536.4" height="15.0" fill="rgb(216,17,40)" rx="2" ry="2" />
<text  x="89.97" y="159.5" >ether_demux</text>
</g>
<g >
<title>msi_vector (2 samples, 0.05%)</title><rect x="1181.7" y="261" width="0.6" height="15.0" fill="rgb(224,177,12)" rx="2" ry="2" />
<text  x="1184.71" y="271.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,281 samples, 57.23%)</title><rect x="37.5" y="213" width="675.3" height="15.0" fill="rgb(218,1,20)" rx="2" ry="2" />
<text  x="40.53" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>pf_pull_hdr (10 samples, 0.25%)</title><rect x="936.6" y="53" width="3.0" height="15.0" fill="rgb(237,195,36)" rx="2" ry="2" />
<text  x="939.59" y="63.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (8 samples, 0.20%)</title><rect x="949.0" y="37" width="2.4" height="15.0" fill="rgb(211,196,3)" rx="2" ry="2" />
<text  x="952.03" y="47.5" ></text>
</g>
<g >
<title>pagezero_erms (1 samples, 0.03%)</title><rect x="650.0" y="37" width="0.3" height="15.0" fill="rgb(233,118,41)" rx="2" ry="2" />
<text  x="653.03" y="47.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.05%)</title><rect x="34.9" y="197" width="0.6" height="15.0" fill="rgb(208,212,26)" rx="2" ry="2" />
<text  x="37.87" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.03%)</title><rect x="1179.3" y="213" width="0.3" height="15.0" fill="rgb(247,180,13)" rx="2" ry="2" />
<text  x="1182.34" y="223.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (9 samples, 0.23%)</title><rect x="247.4" y="37" width="2.7" height="15.0" fill="rgb(219,106,27)" rx="2" ry="2" />
<text  x="250.42" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (726 samples, 18.21%)</title><rect x="919.1" y="261" width="214.9" height="15.0" fill="rgb(250,17,14)" rx="2" ry="2" />
<text  x="922.13" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_fast_intr_rxtx (117 samples, 2.94%)</title><rect x="1145.9" y="245" width="34.6" height="15.0" fill="rgb(254,125,2)" rx="2" ry="2" />
<text  x="1148.89" y="255.5" >if..</text>
</g>
<g >
<title>ip_input (1,740 samples, 43.65%)</title><rect x="108.3" y="117" width="515.1" height="15.0" fill="rgb(238,212,32)" rx="2" ry="2" />
<text  x="111.28" y="127.5" >ip_input</text>
</g>
<g >
<title>pf_test_state (83 samples, 2.08%)</title><rect x="894.6" y="69" width="24.5" height="15.0" fill="rgb(225,41,15)" rx="2" ry="2" />
<text  x="897.56" y="79.5" >p..</text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.03%)</title><rect x="832.1" y="133" width="0.3" height="15.0" fill="rgb(229,46,15)" rx="2" ry="2" />
<text  x="835.09" y="143.5" ></text>
</g>
<g >
<title>uma_small_alloc (4 samples, 0.10%)</title><rect x="648.8" y="117" width="1.2" height="15.0" fill="rgb(254,200,48)" rx="2" ry="2" />
<text  x="651.85" y="127.5" ></text>
</g>
<g >
<title>pf_pull_hdr (9 samples, 0.23%)</title><rect x="864.1" y="69" width="2.6" height="15.0" fill="rgb(244,118,18)" rx="2" ry="2" />
<text  x="867.06" y="79.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (1 samples, 0.03%)</title><rect x="33.1" y="229" width="0.3" height="15.0" fill="rgb(216,103,50)" rx="2" ry="2" />
<text  x="36.09" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.03%)</title><rect x="1180.2" y="213" width="0.3" height="15.0" fill="rgb(249,89,42)" rx="2" ry="2" />
<text  x="1183.23" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.03%)</title><rect x="650.3" y="117" width="0.3" height="15.0" fill="rgb(233,143,54)" rx="2" ry="2" />
<text  x="653.33" y="127.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (8 samples, 0.20%)</title><rect x="1165.7" y="229" width="2.4" height="15.0" fill="rgb(216,10,19)" rx="2" ry="2" />
<text  x="1168.73" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (23 samples, 0.58%)</title><rect x="14.7" y="277" width="6.8" height="15.0" fill="rgb(220,220,8)" rx="2" ry="2" />
<text  x="17.74" y="287.5" ></text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.05%)</title><rect x="1182.3" y="277" width="0.6" height="15.0" fill="rgb(226,109,42)" rx="2" ry="2" />
<text  x="1185.30" y="287.5" ></text>
</g>
<g >
<title>ether_output_frame (200 samples, 5.02%)</title><rect x="214.6" y="69" width="59.2" height="15.0" fill="rgb(218,45,32)" rx="2" ry="2" />
<text  x="217.56" y="79.5" >ether_..</text>
</g>
<g >
<title>memmove_erms (9 samples, 0.23%)</title><rect x="864.1" y="37" width="2.6" height="15.0" fill="rgb(225,19,30)" rx="2" ry="2" />
<text  x="867.06" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (4 samples, 0.10%)</title><rect x="59.7" y="181" width="1.2" height="15.0" fill="rgb(225,23,1)" rx="2" ry="2" />
<text  x="62.73" y="191.5" ></text>
</g>
<g >
<title>ether_demux (726 samples, 18.21%)</title><rect x="919.1" y="165" width="214.9" height="15.0" fill="rgb(236,25,34)" rx="2" ry="2" />
<text  x="922.13" y="175.5" >ether_demux</text>
</g>
<g >
<title>pf_test (594 samples, 14.90%)</title><rect x="447.5" y="53" width="175.9" height="15.0" fill="rgb(206,175,36)" rx="2" ry="2" />
<text  x="450.54" y="63.5" >pf_test</text>
</g>
<g >
<title>rxd_frag_to_sd (66 samples, 1.66%)</title><rect x="692.1" y="197" width="19.5" height="15.0" fill="rgb(211,27,35)" rx="2" ry="2" />
<text  x="695.07" y="207.5" ></text>
</g>
<g >
<title>memmove_erms (11 samples, 0.28%)</title><rect x="211.3" y="53" width="3.3" height="15.0" fill="rgb(229,2,3)" rx="2" ry="2" />
<text  x="214.30" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (25 samples, 0.63%)</title><rect x="919.1" y="37" width="7.4" height="15.0" fill="rgb(207,28,11)" rx="2" ry="2" />
<text  x="922.13" y="47.5" ></text>
</g>
<g >
<title>pf_state_insert (1 samples, 0.03%)</title><rect x="894.3" y="37" width="0.3" height="15.0" fill="rgb(222,141,12)" rx="2" ry="2" />
<text  x="897.26" y="47.5" ></text>
</g>
<g >
<title>microuptime (32 samples, 0.80%)</title><rect x="939.6" y="37" width="9.4" height="15.0" fill="rgb(249,175,23)" rx="2" ry="2" />
<text  x="942.55" y="47.5" ></text>
</g>
<g >
<title>pf_pull_hdr (31 samples, 0.78%)</title><rect x="1031.3" y="53" width="9.2" height="15.0" fill="rgb(242,79,49)" rx="2" ry="2" />
<text  x="1034.32" y="63.5" ></text>
</g>
<g >
<title>pf_test (320 samples, 8.03%)</title><rect x="936.6" y="69" width="94.7" height="15.0" fill="rgb(216,152,16)" rx="2" ry="2" />
<text  x="939.59" y="79.5" >pf_test</text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.03%)</title><rect x="1187.9" y="181" width="0.3" height="15.0" fill="rgb(206,15,52)" rx="2" ry="2" />
<text  x="1190.93" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (726 samples, 18.21%)</title><rect x="919.1" y="197" width="214.9" height="15.0" fill="rgb(241,106,8)" rx="2" ry="2" />
<text  x="922.13" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pfil_mbuf_in (347 samples, 8.71%)</title><rect x="1031.3" y="101" width="102.7" height="15.0" fill="rgb(226,183,10)" rx="2" ry="2" />
<text  x="1034.32" y="111.5" >pfil_mbuf_in</text>
</g>
<g >
<title>intr_execute_handlers (163 samples, 4.09%)</title><rect x="1134.0" y="277" width="48.3" height="15.0" fill="rgb(251,47,41)" rx="2" ry="2" />
<text  x="1137.05" y="287.5" >intr..</text>
</g>
<g >
<title>soft_get_config (1 samples, 0.03%)</title><rect x="1188.8" y="181" width="0.3" height="15.0" fill="rgb(252,0,17)" rx="2" ry="2" />
<text  x="1191.82" y="191.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (33 samples, 0.83%)</title><rect x="656.2" y="181" width="9.8" height="15.0" fill="rgb(217,201,12)" rx="2" ry="2" />
<text  x="659.25" y="191.5" ></text>
</g>
<g >
<title>ether_demux (186 samples, 4.67%)</title><rect x="864.1" y="181" width="55.0" height="15.0" fill="rgb(227,111,45)" rx="2" ry="2" />
<text  x="867.06" y="191.5" >ether..</text>
</g>
<g >
<title>arpresolve (74 samples, 1.86%)</title><rect x="192.7" y="69" width="21.9" height="15.0" fill="rgb(216,183,47)" rx="2" ry="2" />
<text  x="195.65" y="79.5" >a..</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (2 samples, 0.05%)</title><rect x="652.1" y="181" width="0.6" height="15.0" fill="rgb(235,50,4)" rx="2" ry="2" />
<text  x="655.10" y="191.5" ></text>
</g>
<g >
<title>bsearch4_lookup (2 samples, 0.05%)</title><rect x="308.1" y="53" width="0.6" height="15.0" fill="rgb(241,126,7)" rx="2" ry="2" />
<text  x="311.11" y="63.5" ></text>
</g>
<g >
<title>bsearch4_lookup (46 samples, 1.15%)</title><rect x="285.0" y="69" width="13.6" height="15.0" fill="rgb(224,1,52)" rx="2" ry="2" />
<text  x="288.02" y="79.5" ></text>
</g>
<g >
<title>m_copydata (10 samples, 0.25%)</title><rect x="936.6" y="37" width="3.0" height="15.0" fill="rgb(236,221,25)" rx="2" ry="2" />
<text  x="939.59" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (32 samples, 0.80%)</title><rect x="237.9" y="37" width="9.5" height="15.0" fill="rgb(248,121,7)" rx="2" ry="2" />
<text  x="240.95" y="47.5" ></text>
</g>
<g >
<title>memset_erms (42 samples, 1.05%)</title><rect x="393.7" y="37" width="12.4" height="15.0" fill="rgb(251,133,11)" rx="2" ry="2" />
<text  x="396.66" y="47.5" ></text>
</g>
<g >
<title>m_copydata (31 samples, 0.78%)</title><rect x="1031.3" y="37" width="9.2" height="15.0" fill="rgb(236,69,28)" rx="2" ry="2" />
<text  x="1034.32" y="47.5" ></text>
</g>
<g >
<title>pf_check_in (91 samples, 2.28%)</title><rect x="892.2" y="101" width="26.9" height="15.0" fill="rgb(241,5,40)" rx="2" ry="2" />
<text  x="895.19" y="111.5" >p..</text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.03%)</title><rect x="1188.5" y="181" width="0.3" height="15.0" fill="rgb(245,32,30)" rx="2" ry="2" />
<text  x="1191.52" y="191.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (2 samples, 0.05%)</title><rect x="27.2" y="245" width="0.6" height="15.0" fill="rgb(240,122,0)" rx="2" ry="2" />
<text  x="30.17" y="255.5" ></text>
</g>
<g >
<title>pf_walk_header (29 samples, 0.73%)</title><rect x="614.8" y="37" width="8.6" height="15.0" fill="rgb(236,164,25)" rx="2" ry="2" />
<text  x="617.80" y="47.5" ></text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.03%)</title><rect x="21.5" y="277" width="0.3" height="15.0" fill="rgb(230,88,26)" rx="2" ry="2" />
<text  x="24.55" y="287.5" ></text>
</g>
<g >
<title>pf_pull_hdr (18 samples, 0.45%)</title><rect x="584.6" y="37" width="5.3" height="15.0" fill="rgb(233,172,50)" rx="2" ry="2" />
<text  x="587.61" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (7 samples, 0.18%)</title><rect x="892.2" y="37" width="2.1" height="15.0" fill="rgb(224,209,17)" rx="2" ry="2" />
<text  x="895.19" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (186 samples, 4.67%)</title><rect x="864.1" y="133" width="55.0" height="15.0" fill="rgb(249,42,29)" rx="2" ry="2" />
<text  x="867.06" y="143.5" >ip_tr..</text>
</g>
<g >
<title>pf_scrub (3 samples, 0.08%)</title><rect x="421.2" y="37" width="0.9" height="15.0" fill="rgb(213,38,54)" rx="2" ry="2" />
<text  x="424.19" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,769 samples, 44.38%)</title><rect x="99.7" y="133" width="523.7" height="15.0" fill="rgb(241,30,8)" rx="2" ry="2" />
<text  x="102.70" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>drain_ring_lockless (468 samples, 11.74%)</title><rect x="717.5" y="213" width="138.6" height="15.0" fill="rgb(243,167,27)" rx="2" ry="2" />
<text  x="720.53" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>tscp_get_timecount_low (26 samples, 0.65%)</title><rect x="866.7" y="37" width="7.7" height="15.0" fill="rgb(248,158,47)" rx="2" ry="2" />
<text  x="869.73" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (3 samples, 0.08%)</title><rect x="36.3" y="197" width="0.9" height="15.0" fill="rgb(239,82,40)" rx="2" ry="2" />
<text  x="39.35" y="207.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (2 samples, 0.05%)</title><rect x="649.4" y="101" width="0.6" height="15.0" fill="rgb(226,171,54)" rx="2" ry="2" />
<text  x="652.44" y="111.5" ></text>
</g>
<g >
<title>pf_scrub (18 samples, 0.45%)</title><rect x="589.9" y="37" width="5.4" height="15.0" fill="rgb(221,40,31)" rx="2" ry="2" />
<text  x="592.93" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (28 samples, 0.70%)</title><rect x="683.8" y="197" width="8.3" height="15.0" fill="rgb(207,20,4)" rx="2" ry="2" />
<text  x="686.78" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (3 samples, 0.08%)</title><rect x="1183.8" y="261" width="0.9" height="15.0" fill="rgb(231,99,46)" rx="2" ry="2" />
<text  x="1186.78" y="271.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (39 samples, 0.98%)</title><rect x="844.5" y="181" width="11.6" height="15.0" fill="rgb(221,141,27)" rx="2" ry="2" />
<text  x="847.53" y="191.5" ></text>
</g>
<g >
<title>pf_find_state (67 samples, 1.68%)</title><rect x="899.3" y="53" width="19.8" height="15.0" fill="rgb(209,76,41)" rx="2" ry="2" />
<text  x="902.29" y="63.5" ></text>
</g>
<g >
<title>m_copydata (9 samples, 0.23%)</title><rect x="864.1" y="53" width="2.6" height="15.0" fill="rgb(228,142,34)" rx="2" ry="2" />
<text  x="867.06" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (14 samples, 0.35%)</title><rect x="273.8" y="69" width="4.1" height="15.0" fill="rgb(223,27,35)" rx="2" ry="2" />
<text  x="276.77" y="79.5" ></text>
</g>
<g >
<title>ether_input (1,930 samples, 48.42%)</title><rect x="55.6" y="197" width="571.3" height="15.0" fill="rgb(205,146,7)" rx="2" ry="2" />
<text  x="58.59" y="207.5" >ether_input</text>
</g>
<g >
<title>grouptaskqueue_enqueue (59 samples, 1.48%)</title><rect x="919.1" y="53" width="17.5" height="15.0" fill="rgb(215,97,43)" rx="2" ry="2" />
<text  x="922.13" y="63.5" ></text>
</g>
<g >
<title>pf_test (347 samples, 8.71%)</title><rect x="1031.3" y="69" width="102.7" height="15.0" fill="rgb(251,168,49)" rx="2" ry="2" />
<text  x="1034.32" y="79.5" >pf_test</text>
</g>
<g >
<title>memset_erms (50 samples, 1.25%)</title><rect x="552.6" y="37" width="14.8" height="15.0" fill="rgb(220,147,50)" rx="2" ry="2" />
<text  x="555.63" y="47.5" ></text>
</g>
<g >
<title>handleevents (16 samples, 0.40%)</title><rect x="1185.3" y="245" width="4.7" height="15.0" fill="rgb(237,17,28)" rx="2" ry="2" />
<text  x="1188.26" y="255.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (2,825 samples, 70.87%)</title><rect x="27.8" y="245" width="836.3" height="15.0" fill="rgb(249,46,36)" rx="2" ry="2" />
<text  x="30.76" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>tcp_lro_flush_all (4 samples, 0.10%)</title><rect x="711.6" y="197" width="1.2" height="15.0" fill="rgb(207,93,45)" rx="2" ry="2" />
<text  x="714.61" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,299 samples, 57.68%)</title><rect x="33.4" y="229" width="680.6" height="15.0" fill="rgb(248,94,40)" rx="2" ry="2" />
<text  x="36.39" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>microuptime (40 samples, 1.00%)</title><rect x="1040.5" y="37" width="11.8" height="15.0" fill="rgb(235,55,10)" rx="2" ry="2" />
<text  x="1043.50" y="47.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (23 samples, 0.58%)</title><rect x="885.4" y="37" width="6.8" height="15.0" fill="rgb(233,180,37)" rx="2" ry="2" />
<text  x="888.38" y="47.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.03%)</title><rect x="37.2" y="213" width="0.3" height="15.0" fill="rgb(241,69,51)" rx="2" ry="2" />
<text  x="40.24" y="223.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (8 samples, 0.20%)</title><rect x="1052.3" y="37" width="2.4" height="15.0" fill="rgb(253,17,44)" rx="2" ry="2" />
<text  x="1055.34" y="47.5" ></text>
</g>
<g >
<title>pf_dummynet_route (26 samples, 0.65%)</title><rect x="567.4" y="37" width="7.7" height="15.0" fill="rgb(235,67,13)" rx="2" ry="2" />
<text  x="570.44" y="47.5" ></text>
</g>
</g>
</svg>
