<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="975.0" y="197" width="0.3" height="15.0" fill="rgb(252,93,53)" rx="2" ry="2" />
<text  x="978.03" y="207.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (6 samples, 0.15%)</title><rect x="826.2" y="197" width="1.7" height="15.0" fill="rgb(252,112,50)" rx="2" ry="2" />
<text  x="829.18" y="207.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.05%)</title><rect x="1177.2" y="261" width="0.6" height="15.0" fill="rgb(226,108,17)" rx="2" ry="2" />
<text  x="1180.18" y="271.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (2 samples, 0.05%)</title><rect x="762.1" y="101" width="0.6" height="15.0" fill="rgb(246,168,23)" rx="2" ry="2" />
<text  x="765.10" y="111.5" ></text>
</g>
<g >
<title>memcmp (8 samples, 0.20%)</title><rect x="738.2" y="149" width="2.3" height="15.0" fill="rgb(243,225,7)" rx="2" ry="2" />
<text  x="741.22" y="159.5" ></text>
</g>
<g >
<title>pmc_process_samples (6 samples, 0.15%)</title><rect x="1186.8" y="197" width="1.7" height="15.0" fill="rgb(239,100,46)" rx="2" ry="2" />
<text  x="1189.80" y="207.5" ></text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.02%)</title><rect x="1187.1" y="181" width="0.3" height="15.0" fill="rgb(213,143,53)" rx="2" ry="2" />
<text  x="1190.09" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (38 samples, 0.94%)</title><rect x="1016.4" y="85" width="11.1" height="15.0" fill="rgb(248,13,40)" rx="2" ry="2" />
<text  x="1019.39" y="95.5" ></text>
</g>
<g >
<title>sleepq_release (6 samples, 0.15%)</title><rect x="975.3" y="229" width="1.8" height="15.0" fill="rgb(207,36,52)" rx="2" ry="2" />
<text  x="978.32" y="239.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (67 samples, 1.65%)</title><rect x="980.3" y="117" width="19.5" height="15.0" fill="rgb(214,135,13)" rx="2" ry="2" />
<text  x="983.27" y="127.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="973.6" y="213" width="0.3" height="15.0" fill="rgb(245,177,16)" rx="2" ry="2" />
<text  x="976.57" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.02%)</title><rect x="1188.5" y="213" width="0.3" height="15.0" fill="rgb(221,101,35)" rx="2" ry="2" />
<text  x="1191.54" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (1 samples, 0.02%)</title><rect x="975.0" y="213" width="0.3" height="15.0" fill="rgb(248,223,54)" rx="2" ry="2" />
<text  x="978.03" y="223.5" ></text>
</g>
<g >
<title>ip6_input (1 samples, 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(254,193,34)" rx="2" ry="2" />
<text  x="1192.71" y="223.5" ></text>
</g>
<g >
<title>m_adj (3 samples, 0.07%)</title><rect x="737.3" y="149" width="0.9" height="15.0" fill="rgb(244,226,30)" rx="2" ry="2" />
<text  x="740.34" y="159.5" ></text>
</g>
<g >
<title>pagezero_erms (2 samples, 0.05%)</title><rect x="762.1" y="85" width="0.6" height="15.0" fill="rgb(244,63,16)" rx="2" ry="2" />
<text  x="765.10" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.10%)</title><rect x="1152.1" y="213" width="1.2" height="15.0" fill="rgb(228,124,40)" rx="2" ry="2" />
<text  x="1155.13" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (18 samples, 0.44%)</title><rect x="1016.4" y="37" width="5.2" height="15.0" fill="rgb(243,97,51)" rx="2" ry="2" />
<text  x="1019.39" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="767.6" y="181" width="0.3" height="15.0" fill="rgb(240,152,21)" rx="2" ry="2" />
<text  x="770.64" y="191.5" ></text>
</g>
<g >
<title>ipfw_dyn_install_state (1 samples, 0.02%)</title><rect x="1189.7" y="133" width="0.3" height="15.0" fill="rgb(229,203,17)" rx="2" ry="2" />
<text  x="1192.71" y="143.5" ></text>
</g>
<g >
<title>ip6_tryforward (124 samples, 3.06%)</title><rect x="980.3" y="133" width="36.1" height="15.0" fill="rgb(243,60,14)" rx="2" ry="2" />
<text  x="983.27" y="143.5" >ip6..</text>
</g>
<g >
<title>hash_packet (18 samples, 0.44%)</title><rect x="1084.0" y="37" width="5.2" height="15.0" fill="rgb(228,169,16)" rx="2" ry="2" />
<text  x="1086.97" y="47.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (20 samples, 0.49%)</title><rect x="767.9" y="181" width="5.9" height="15.0" fill="rgb(250,128,6)" rx="2" ry="2" />
<text  x="770.93" y="191.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (78 samples, 1.93%)</title><rect x="797.6" y="197" width="22.8" height="15.0" fill="rgb(223,153,38)" rx="2" ry="2" />
<text  x="800.64" y="207.5" >r..</text>
</g>
<g >
<title>iflib_if_transmit (38 samples, 0.94%)</title><rect x="1016.4" y="69" width="11.1" height="15.0" fill="rgb(212,59,49)" rx="2" ry="2" />
<text  x="1019.39" y="79.5" ></text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.12%)</title><rect x="225.0" y="37" width="1.4" height="15.0" fill="rgb(240,2,22)" rx="2" ry="2" />
<text  x="227.97" y="47.5" ></text>
</g>
<g >
<title>m_tag_locate (3 samples, 0.07%)</title><rect x="567.5" y="53" width="0.9" height="15.0" fill="rgb(232,60,48)" rx="2" ry="2" />
<text  x="570.52" y="63.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (253 samples, 6.25%)</title><rect x="662.8" y="37" width="73.7" height="15.0" fill="rgb(213,53,30)" rx="2" ry="2" />
<text  x="665.77" y="47.5" >ipfw_dyn..</text>
</g>
<g >
<title>iflib_get_softc (3 samples, 0.07%)</title><rect x="1159.7" y="213" width="0.9" height="15.0" fill="rgb(229,51,23)" rx="2" ry="2" />
<text  x="1162.71" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (500 samples, 12.34%)</title><rect x="827.9" y="197" width="145.7" height="15.0" fill="rgb(244,147,25)" rx="2" ry="2" />
<text  x="830.93" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ether_demux (2,246 samples, 55.44%)</title><rect x="83.1" y="149" width="654.2" height="15.0" fill="rgb(207,84,29)" rx="2" ry="2" />
<text  x="86.11" y="159.5" >ether_demux</text>
</g>
<g >
<title>ipfw_check_packet (566 samples, 13.97%)</title><rect x="572.5" y="69" width="164.8" height="15.0" fill="rgb(244,122,49)" rx="2" ry="2" />
<text  x="575.47" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(227,35,33)" rx="2" ry="2" />
<text  x="1192.71" y="287.5" ></text>
</g>
<g >
<title>wakeup_any (8 samples, 0.20%)</title><rect x="1156.8" y="213" width="2.3" height="15.0" fill="rgb(240,213,22)" rx="2" ry="2" />
<text  x="1159.79" y="223.5" ></text>
</g>
<g >
<title>_rm_rlock (27 samples, 0.67%)</title><rect x="282.6" y="69" width="7.9" height="15.0" fill="rgb(249,205,43)" rx="2" ry="2" />
<text  x="285.64" y="79.5" ></text>
</g>
<g >
<title>ipfw_check_packet (67 samples, 1.65%)</title><rect x="980.3" y="101" width="19.5" height="15.0" fill="rgb(237,78,9)" rx="2" ry="2" />
<text  x="983.27" y="111.5" ></text>
</g>
<g >
<title>if_getafdata (3 samples, 0.07%)</title><rect x="127.7" y="101" width="0.9" height="15.0" fill="rgb(213,31,40)" rx="2" ry="2" />
<text  x="130.68" y="111.5" ></text>
</g>
<g >
<title>_rm_rlock (35 samples, 0.86%)</title><rect x="649.1" y="37" width="10.2" height="15.0" fill="rgb(227,70,32)" rx="2" ry="2" />
<text  x="652.08" y="47.5" ></text>
</g>
<g >
<title>ip6_input (2,172 samples, 53.62%)</title><rect x="104.7" y="117" width="632.6" height="15.0" fill="rgb(238,220,37)" rx="2" ry="2" />
<text  x="107.67" y="127.5" >ip6_input</text>
</g>
<g >
<title>ether_nh_input (2,310 samples, 57.02%)</title><rect x="67.7" y="165" width="672.8" height="15.0" fill="rgb(209,68,52)" rx="2" ry="2" />
<text  x="70.67" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="740.5" y="197" width="0.3" height="15.0" fill="rgb(223,81,40)" rx="2" ry="2" />
<text  x="743.55" y="207.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (125 samples, 3.09%)</title><rect x="1139.6" y="245" width="36.4" height="15.0" fill="rgb(208,12,22)" rx="2" ry="2" />
<text  x="1142.61" y="255.5" >ifl..</text>
</g>
<g >
<title>sleepq_lock (7 samples, 0.17%)</title><rect x="1157.1" y="197" width="2.0" height="15.0" fill="rgb(248,144,29)" rx="2" ry="2" />
<text  x="1160.08" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (1 samples, 0.02%)</title><rect x="1189.7" y="69" width="0.3" height="15.0" fill="rgb(249,132,5)" rx="2" ry="2" />
<text  x="1192.71" y="79.5" ></text>
</g>
<g >
<title>ipfw_chk (541 samples, 13.35%)</title><rect x="578.9" y="53" width="157.6" height="15.0" fill="rgb(243,39,17)" rx="2" ry="2" />
<text  x="581.88" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(210,191,21)" rx="2" ry="2" />
<text  x="1192.71" y="239.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (18 samples, 0.44%)</title><rect x="1170.8" y="229" width="5.2" height="15.0" fill="rgb(225,187,1)" rx="2" ry="2" />
<text  x="1173.78" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (22 samples, 0.54%)</title><rect x="866.1" y="165" width="6.4" height="15.0" fill="rgb(236,93,22)" rx="2" ry="2" />
<text  x="869.09" y="175.5" ></text>
</g>
<g >
<title>pfil_mbuf_out (165 samples, 4.07%)</title><rect x="1077.0" y="101" width="48.0" height="15.0" fill="rgb(237,132,38)" rx="2" ry="2" />
<text  x="1079.98" y="111.5" >pfil..</text>
</g>
<g >
<title>netisr_dispatch_src (124 samples, 3.06%)</title><rect x="980.3" y="213" width="36.1" height="15.0" fill="rgb(226,75,35)" rx="2" ry="2" />
<text  x="983.27" y="223.5" >net..</text>
</g>
<g >
<title>ether_demux (124 samples, 3.06%)</title><rect x="980.3" y="181" width="36.1" height="15.0" fill="rgb(249,17,23)" rx="2" ry="2" />
<text  x="983.27" y="191.5" >eth..</text>
</g>
<g >
<title>pmc_hook_handler (6 samples, 0.15%)</title><rect x="1186.8" y="213" width="1.7" height="15.0" fill="rgb(208,42,32)" rx="2" ry="2" />
<text  x="1189.80" y="223.5" ></text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.15%)</title><rect x="761.2" y="133" width="1.8" height="15.0" fill="rgb(244,34,37)" rx="2" ry="2" />
<text  x="764.23" y="143.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.02%)</title><rect x="762.7" y="101" width="0.3" height="15.0" fill="rgb(219,209,3)" rx="2" ry="2" />
<text  x="765.68" y="111.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (1 samples, 0.02%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(211,214,6)" rx="2" ry="2" />
<text  x="1192.71" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.10%)</title><rect x="1158.0" y="181" width="1.1" height="15.0" fill="rgb(251,127,35)" rx="2" ry="2" />
<text  x="1160.96" y="191.5" ></text>
</g>
<g >
<title>ipfw_check_packet (727 samples, 17.95%)</title><rect x="356.6" y="69" width="211.8" height="15.0" fill="rgb(238,68,2)" rx="2" ry="2" />
<text  x="359.63" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>nd6_resolve (83 samples, 2.05%)</title><rect x="247.7" y="69" width="24.2" height="15.0" fill="rgb(226,65,34)" rx="2" ry="2" />
<text  x="250.69" y="79.5" >n..</text>
</g>
<g >
<title>memcmp (2 samples, 0.05%)</title><rect x="270.1" y="37" width="0.6" height="15.0" fill="rgb(210,147,49)" rx="2" ry="2" />
<text  x="273.12" y="47.5" ></text>
</g>
<g >
<title>ipfw_dyn_install_state (2 samples, 0.05%)</title><rect x="465.9" y="37" width="0.5" height="15.0" fill="rgb(253,174,8)" rx="2" ry="2" />
<text  x="468.86" y="47.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (2 samples, 0.05%)</title><rect x="1187.4" y="181" width="0.6" height="15.0" fill="rgb(238,161,53)" rx="2" ry="2" />
<text  x="1190.38" y="191.5" ></text>
</g>
<g >
<title>hash_packet (57 samples, 1.41%)</title><rect x="999.8" y="53" width="16.6" height="15.0" fill="rgb(211,162,5)" rx="2" ry="2" />
<text  x="1002.79" y="63.5" ></text>
</g>
<g >
<title>ip6_tryforward (373 samples, 9.21%)</title><rect x="1016.4" y="117" width="108.6" height="15.0" fill="rgb(249,40,26)" rx="2" ry="2" />
<text  x="1019.39" y="127.5" >ip6_tryforward</text>
</g>
<g >
<title>iflib_get_ifp (5 samples, 0.12%)</title><rect x="1172.8" y="213" width="1.5" height="15.0" fill="rgb(234,69,16)" rx="2" ry="2" />
<text  x="1175.81" y="223.5" ></text>
</g>
<g >
<title>jenkins_hash32 (57 samples, 1.41%)</title><rect x="980.3" y="37" width="16.6" height="15.0" fill="rgb(220,35,1)" rx="2" ry="2" />
<text  x="983.27" y="47.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.02%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(232,27,32)" rx="2" ry="2" />
<text  x="1192.71" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,337 samples, 57.69%)</title><rect x="59.8" y="181" width="680.7" height="15.0" fill="rgb(249,199,41)" rx="2" ry="2" />
<text  x="62.81" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>_rm_runlock (7 samples, 0.17%)</title><rect x="290.5" y="69" width="2.0" height="15.0" fill="rgb(213,71,43)" rx="2" ry="2" />
<text  x="293.51" y="79.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (57 samples, 1.41%)</title><rect x="999.8" y="69" width="16.6" height="15.0" fill="rgb(231,129,9)" rx="2" ry="2" />
<text  x="1002.79" y="79.5" ></text>
</g>
<g >
<title>memcmp (115 samples, 2.84%)</title><rect x="1043.5" y="37" width="33.5" height="15.0" fill="rgb(236,213,4)" rx="2" ry="2" />
<text  x="1046.48" y="47.5" >me..</text>
</g>
<g >
<title>ether_nh_input (373 samples, 9.21%)</title><rect x="1016.4" y="181" width="108.6" height="15.0" fill="rgb(210,45,4)" rx="2" ry="2" />
<text  x="1019.39" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>cache_alloc_retry (6 samples, 0.15%)</title><rect x="761.2" y="181" width="1.8" height="15.0" fill="rgb(229,125,38)" rx="2" ry="2" />
<text  x="764.23" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (124 samples, 3.06%)</title><rect x="980.3" y="245" width="36.1" height="15.0" fill="rgb(225,8,26)" rx="2" ry="2" />
<text  x="983.27" y="255.5" >ifl..</text>
</g>
<g >
<title>in6_lltable_lookup (32 samples, 0.79%)</title><rect x="261.4" y="53" width="9.3" height="15.0" fill="rgb(237,217,44)" rx="2" ry="2" />
<text  x="264.38" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.05%)</title><rect x="977.1" y="229" width="0.6" height="15.0" fill="rgb(222,86,4)" rx="2" ry="2" />
<text  x="980.07" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_timer (17 samples, 0.42%)</title><rect x="1184.8" y="277" width="4.9" height="15.0" fill="rgb(243,170,12)" rx="2" ry="2" />
<text  x="1187.76" y="287.5" ></text>
</g>
<g >
<title>ipfw_check_packet (57 samples, 1.41%)</title><rect x="999.8" y="101" width="16.6" height="15.0" fill="rgb(215,1,14)" rx="2" ry="2" />
<text  x="1002.79" y="111.5" ></text>
</g>
<g >
<title>m_freem (38 samples, 0.94%)</title><rect x="872.5" y="165" width="11.1" height="15.0" fill="rgb(205,57,45)" rx="2" ry="2" />
<text  x="875.50" y="175.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="748.1" y="197" width="0.3" height="15.0" fill="rgb(212,101,47)" rx="2" ry="2" />
<text  x="751.12" y="207.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (3 samples, 0.07%)</title><rect x="31.6" y="229" width="0.8" height="15.0" fill="rgb(221,29,8)" rx="2" ry="2" />
<text  x="34.56" y="239.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.07%)</title><rect x="32.4" y="229" width="0.9" height="15.0" fill="rgb(207,145,40)" rx="2" ry="2" />
<text  x="35.43" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (124 samples, 3.06%)</title><rect x="980.3" y="277" width="36.1" height="15.0" fill="rgb(225,214,25)" rx="2" ry="2" />
<text  x="983.27" y="287.5" >gta..</text>
</g>
<g >
<title>ip6_findroute (192 samples, 4.74%)</title><rect x="292.5" y="85" width="56.0" height="15.0" fill="rgb(229,31,43)" rx="2" ry="2" />
<text  x="295.55" y="95.5" >ip6_f..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (6 samples, 0.15%)</title><rect x="34.2" y="213" width="1.7" height="15.0" fill="rgb(246,39,19)" rx="2" ry="2" />
<text  x="37.18" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (5 samples, 0.12%)</title><rect x="970.7" y="165" width="1.4" height="15.0" fill="rgb(248,206,37)" rx="2" ry="2" />
<text  x="973.66" y="175.5" ></text>
</g>
<g >
<title>ipfw_chk (1 samples, 0.02%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(222,115,22)" rx="2" ry="2" />
<text  x="1192.71" y="159.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (147 samples, 3.63%)</title><rect x="840.7" y="181" width="42.9" height="15.0" fill="rgb(245,205,42)" rx="2" ry="2" />
<text  x="843.75" y="191.5" >ifli..</text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.02%)</title><rect x="1188.8" y="213" width="0.3" height="15.0" fill="rgb(226,20,35)" rx="2" ry="2" />
<text  x="1191.83" y="223.5" ></text>
</g>
<g >
<title>ether_input (373 samples, 9.21%)</title><rect x="1016.4" y="213" width="108.6" height="15.0" fill="rgb(210,117,54)" rx="2" ry="2" />
<text  x="1019.39" y="223.5" >ether_input</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (2 samples, 0.05%)</title><rect x="934.0" y="149" width="0.5" height="15.0" fill="rgb(229,49,43)" rx="2" ry="2" />
<text  x="936.96" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (38 samples, 0.94%)</title><rect x="1016.4" y="53" width="11.1" height="15.0" fill="rgb(217,170,14)" rx="2" ry="2" />
<text  x="1019.39" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (16 samples, 0.39%)</title><rect x="763.0" y="181" width="4.6" height="15.0" fill="rgb(218,80,42)" rx="2" ry="2" />
<text  x="765.97" y="191.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (7 samples, 0.17%)</title><rect x="222.9" y="37" width="2.1" height="15.0" fill="rgb(229,109,37)" rx="2" ry="2" />
<text  x="225.93" y="47.5" ></text>
</g>
<g >
<title>uma_small_alloc (3 samples, 0.07%)</title><rect x="761.8" y="117" width="0.9" height="15.0" fill="rgb(235,206,17)" rx="2" ry="2" />
<text  x="764.81" y="127.5" ></text>
</g>
<g >
<title>ether_input (124 samples, 3.06%)</title><rect x="980.3" y="229" width="36.1" height="15.0" fill="rgb(212,1,51)" rx="2" ry="2" />
<text  x="983.27" y="239.5" >eth..</text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,267 samples, 80.65%)</title><rect x="28.6" y="261" width="951.7" height="15.0" fill="rgb(237,105,49)" rx="2" ry="2" />
<text  x="31.64" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>netisr_dispatch_src (373 samples, 9.21%)</title><rect x="1016.4" y="197" width="108.6" height="15.0" fill="rgb(222,142,24)" rx="2" ry="2" />
<text  x="1019.39" y="207.5" >netisr_dispat..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (23 samples, 0.57%)</title><rect x="1164.1" y="229" width="6.7" height="15.0" fill="rgb(254,166,50)" rx="2" ry="2" />
<text  x="1167.08" y="239.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.02%)</title><rect x="1189.7" y="85" width="0.3" height="15.0" fill="rgb(206,103,30)" rx="2" ry="2" />
<text  x="1192.71" y="95.5" ></text>
</g>
<g >
<title>ipfw_check_packet (170 samples, 4.20%)</title><rect x="1027.5" y="85" width="49.5" height="15.0" fill="rgb(205,215,29)" rx="2" ry="2" />
<text  x="1030.46" y="95.5" >ipfw..</text>
</g>
<g >
<title>zone_import (6 samples, 0.15%)</title><rect x="761.2" y="149" width="1.8" height="15.0" fill="rgb(205,222,21)" rx="2" ry="2" />
<text  x="764.23" y="159.5" ></text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.07%)</title><rect x="942.4" y="149" width="0.9" height="15.0" fill="rgb(239,191,20)" rx="2" ry="2" />
<text  x="945.41" y="159.5" ></text>
</g>
<g >
<title>wakeup (7 samples, 0.17%)</title><rect x="978.2" y="229" width="2.1" height="15.0" fill="rgb(236,46,5)" rx="2" ry="2" />
<text  x="981.24" y="239.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="762.7" y="69" width="0.3" height="15.0" fill="rgb(254,104,45)" rx="2" ry="2" />
<text  x="765.68" y="79.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.10%)</title><rect x="979.1" y="213" width="1.2" height="15.0" fill="rgb(242,210,45)" rx="2" ry="2" />
<text  x="982.11" y="223.5" ></text>
</g>
<g >
<title>dyn_update_proto_state (24 samples, 0.59%)</title><rect x="1077.0" y="37" width="7.0" height="15.0" fill="rgb(241,60,10)" rx="2" ry="2" />
<text  x="1079.98" y="47.5" ></text>
</g>
<g >
<title>ip6_tryforward (2,090 samples, 51.59%)</title><rect x="128.6" y="101" width="608.7" height="15.0" fill="rgb(234,155,41)" rx="2" ry="2" />
<text  x="131.55" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>_task_fn_rx (124 samples, 3.06%)</title><rect x="980.3" y="261" width="36.1" height="15.0" fill="rgb(238,186,10)" rx="2" ry="2" />
<text  x="983.27" y="271.5" >_ta..</text>
</g>
<g >
<title>cache_alloc_retry (1 samples, 0.02%)</title><rect x="1189.7" y="117" width="0.3" height="15.0" fill="rgb(240,47,26)" rx="2" ry="2" />
<text  x="1192.71" y="127.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.07%)</title><rect x="740.8" y="197" width="0.9" height="15.0" fill="rgb(239,16,41)" rx="2" ry="2" />
<text  x="743.84" y="207.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (752 samples, 18.56%)</title><rect x="349.3" y="85" width="219.1" height="15.0" fill="rgb(234,16,26)" rx="2" ry="2" />
<text  x="352.35" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ipfw_dyn_lookup_state (170 samples, 4.20%)</title><rect x="1027.5" y="53" width="49.5" height="15.0" fill="rgb(222,227,47)" rx="2" ry="2" />
<text  x="1030.46" y="63.5" >ipfw..</text>
</g>
<g >
<title>ipfw_check_packet (165 samples, 4.07%)</title><rect x="1077.0" y="85" width="48.0" height="15.0" fill="rgb(241,220,1)" rx="2" ry="2" />
<text  x="1079.98" y="95.5" >ipfw..</text>
</g>
<g >
<title>intr_execute_handlers (187 samples, 4.62%)</title><rect x="1125.0" y="277" width="54.5" height="15.0" fill="rgb(248,205,12)" rx="2" ry="2" />
<text  x="1128.04" y="287.5" >intr_..</text>
</g>
<g >
<title>rn_match (122 samples, 3.01%)</title><rect x="312.9" y="37" width="35.6" height="15.0" fill="rgb(221,150,38)" rx="2" ry="2" />
<text  x="315.94" y="47.5" >rn_..</text>
</g>
<g >
<title>memcpy_erms (31 samples, 0.77%)</title><rect x="788.6" y="197" width="9.0" height="15.0" fill="rgb(231,191,21)" rx="2" ry="2" />
<text  x="791.61" y="207.5" ></text>
</g>
<g >
<title>ip6_tryforward (1 samples, 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(235,193,50)" rx="2" ry="2" />
<text  x="1192.71" y="207.5" ></text>
</g>
<g >
<title>ipfw_chk (67 samples, 1.65%)</title><rect x="980.3" y="85" width="19.5" height="15.0" fill="rgb(222,92,15)" rx="2" ry="2" />
<text  x="983.27" y="95.5" ></text>
</g>
<g >
<title>ether_output_frame (206 samples, 5.09%)</title><rect x="185.1" y="69" width="60.0" height="15.0" fill="rgb(234,81,14)" rx="2" ry="2" />
<text  x="188.06" y="79.5" >ether_..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (53 samples, 1.31%)</title><rect x="943.3" y="165" width="15.4" height="15.0" fill="rgb(210,30,4)" rx="2" ry="2" />
<text  x="946.28" y="175.5" ></text>
</g>
<g >
<title>memcmp (3 samples, 0.07%)</title><rect x="348.5" y="85" width="0.8" height="15.0" fill="rgb(210,149,51)" rx="2" ry="2" />
<text  x="351.47" y="95.5" ></text>
</g>
<g >
<title>doreti (8 samples, 0.20%)</title><rect x="26.3" y="277" width="2.3" height="15.0" fill="rgb(225,198,26)" rx="2" ry="2" />
<text  x="29.31" y="287.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (35 samples, 0.86%)</title><rect x="16.1" y="277" width="10.2" height="15.0" fill="rgb(234,179,7)" rx="2" ry="2" />
<text  x="19.12" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,203 samples, 54.38%)</title><rect x="95.6" y="133" width="641.7" height="15.0" fill="rgb(251,114,47)" rx="2" ry="2" />
<text  x="98.64" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.07%)</title><rect x="839.9" y="181" width="0.8" height="15.0" fill="rgb(210,37,4)" rx="2" ry="2" />
<text  x="842.87" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (373 samples, 9.21%)</title><rect x="1016.4" y="277" width="108.6" height="15.0" fill="rgb(245,88,31)" rx="2" ry="2" />
<text  x="1019.39" y="287.5" >gtaskqueue_th..</text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.02%)</title><rect x="762.7" y="117" width="0.3" height="15.0" fill="rgb(215,93,43)" rx="2" ry="2" />
<text  x="765.68" y="127.5" ></text>
</g>
<g >
<title>hash_packet (13 samples, 0.32%)</title><rect x="1039.7" y="37" width="3.8" height="15.0" fill="rgb(219,179,32)" rx="2" ry="2" />
<text  x="1042.70" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (51 samples, 1.26%)</title><rect x="928.4" y="165" width="14.9" height="15.0" fill="rgb(249,199,46)" rx="2" ry="2" />
<text  x="931.43" y="175.5" ></text>
</g>
<g >
<title>Xapic_isr1 (21 samples, 0.52%)</title><rect x="10.0" y="277" width="6.1" height="15.0" fill="rgb(254,53,13)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (124 samples, 3.06%)</title><rect x="980.3" y="165" width="36.1" height="15.0" fill="rgb(209,34,30)" rx="2" ry="2" />
<text  x="983.27" y="175.5" >net..</text>
</g>
<g >
<title>ifmp_ring_check_drainage (4 samples, 0.10%)</title><rect x="973.9" y="213" width="1.1" height="15.0" fill="rgb(217,207,44)" rx="2" ry="2" />
<text  x="976.87" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.12%)</title><rect x="94.2" y="133" width="1.4" height="15.0" fill="rgb(224,128,25)" rx="2" ry="2" />
<text  x="97.18" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (3,265 samples, 80.60%)</title><rect x="29.2" y="245" width="951.1" height="15.0" fill="rgb(207,53,36)" rx="2" ry="2" />
<text  x="32.22" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ether_demux (373 samples, 9.21%)</title><rect x="1016.4" y="165" width="108.6" height="15.0" fill="rgb(210,168,9)" rx="2" ry="2" />
<text  x="1019.39" y="175.5" >ether_demux</text>
</g>
<g >
<title>ether_input (2,357 samples, 58.18%)</title><rect x="54.0" y="197" width="686.5" height="15.0" fill="rgb(224,66,3)" rx="2" ry="2" />
<text  x="56.98" y="207.5" >ether_input</text>
</g>
<g >
<title>pfil_mbuf_out (580 samples, 14.32%)</title><rect x="568.4" y="85" width="168.9" height="15.0" fill="rgb(250,102,28)" rx="2" ry="2" />
<text  x="571.40" y="95.5" >pfil_mbuf_out</text>
</g>
<g >
<title>lapic_handle_intr (18 samples, 0.44%)</title><rect x="1179.5" y="277" width="5.3" height="15.0" fill="rgb(235,187,40)" rx="2" ry="2" />
<text  x="1182.51" y="287.5" ></text>
</g>
<g >
<title>_rm_runlock (12 samples, 0.30%)</title><rect x="659.3" y="37" width="3.5" height="15.0" fill="rgb(244,140,8)" rx="2" ry="2" />
<text  x="662.28" y="47.5" ></text>
</g>
<g >
<title>iflib_fl_refill (87 samples, 2.15%)</title><rect x="748.4" y="197" width="25.4" height="15.0" fill="rgb(245,54,46)" rx="2" ry="2" />
<text  x="751.41" y="207.5" >i..</text>
</g>
<g >
<title>hash_packet (67 samples, 1.65%)</title><rect x="980.3" y="53" width="19.5" height="15.0" fill="rgb(248,91,22)" rx="2" ry="2" />
<text  x="983.27" y="63.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (170 samples, 4.20%)</title><rect x="1027.5" y="101" width="49.5" height="15.0" fill="rgb(235,163,29)" rx="2" ry="2" />
<text  x="1030.46" y="111.5" >pfil..</text>
</g>
<g >
<title>_task_fn_rx (373 samples, 9.21%)</title><rect x="1016.4" y="245" width="108.6" height="15.0" fill="rgb(222,188,27)" rx="2" ry="2" />
<text  x="1019.39" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="1160.6" y="213" width="0.9" height="15.0" fill="rgb(239,34,52)" rx="2" ry="2" />
<text  x="1163.58" y="223.5" ></text>
</g>
<g >
<title>lradix6_lookup (139 samples, 3.43%)</title><rect x="308.0" y="53" width="40.5" height="15.0" fill="rgb(212,10,0)" rx="2" ry="2" />
<text  x="310.99" y="63.5" >lra..</text>
</g>
<g >
<title>intr_event_handle (154 samples, 3.80%)</title><rect x="1132.3" y="261" width="44.9" height="15.0" fill="rgb(230,17,29)" rx="2" ry="2" />
<text  x="1135.33" y="271.5" >intr..</text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.07%)</title><rect x="34.5" y="197" width="0.8" height="15.0" fill="rgb(239,108,1)" rx="2" ry="2" />
<text  x="37.47" y="207.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (1 samples, 0.02%)</title><rect x="883.3" y="117" width="0.3" height="15.0" fill="rgb(226,113,38)" rx="2" ry="2" />
<text  x="886.28" y="127.5" ></text>
</g>
<g >
<title>ipfw_check_packet (1 samples, 0.02%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(228,124,3)" rx="2" ry="2" />
<text  x="1192.71" y="175.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (2 samples, 0.05%)</title><rect x="773.2" y="165" width="0.6" height="15.0" fill="rgb(233,83,33)" rx="2" ry="2" />
<text  x="776.17" y="175.5" ></text>
</g>
<g >
<title>if_getsoftc (4 samples, 0.10%)</title><rect x="226.4" y="37" width="1.2" height="15.0" fill="rgb(209,35,10)" rx="2" ry="2" />
<text  x="229.43" y="47.5" ></text>
</g>
<g >
<title>memcmp (4 samples, 0.10%)</title><rect x="1015.2" y="37" width="1.2" height="15.0" fill="rgb(236,198,30)" rx="2" ry="2" />
<text  x="1018.23" y="47.5" ></text>
</g>
<g >
<title>pfil_mbuf_out (57 samples, 1.41%)</title><rect x="999.8" y="117" width="16.6" height="15.0" fill="rgb(224,126,5)" rx="2" ry="2" />
<text  x="1002.79" y="127.5" ></text>
</g>
<g >
<title>fork_exit (3,267 samples, 80.65%)</title><rect x="28.6" y="277" width="951.7" height="15.0" fill="rgb(210,85,3)" rx="2" ry="2" />
<text  x="31.64" y="287.5" >fork_exit</text>
</g>
<g >
<title>spinlock_exit (12 samples, 0.30%)</title><rect x="1153.3" y="213" width="3.5" height="15.0" fill="rgb(239,189,37)" rx="2" ry="2" />
<text  x="1156.30" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (124 samples, 3.06%)</title><rect x="980.3" y="197" width="36.1" height="15.0" fill="rgb(207,159,39)" rx="2" ry="2" />
<text  x="983.27" y="207.5" >eth..</text>
</g>
<g >
<title>in6_localip (71 samples, 1.75%)</title><rect x="271.9" y="85" width="20.6" height="15.0" fill="rgb(246,224,28)" rx="2" ry="2" />
<text  x="274.87" y="95.5" ></text>
</g>
<g >
<title>memcmp (123 samples, 3.04%)</title><rect x="1089.2" y="37" width="35.8" height="15.0" fill="rgb(225,121,33)" rx="2" ry="2" />
<text  x="1092.22" y="47.5" >mem..</text>
</g>
<g >
<title>ipfw_dyn_lookup_state (67 samples, 1.65%)</title><rect x="980.3" y="69" width="19.5" height="15.0" fill="rgb(205,14,41)" rx="2" ry="2" />
<text  x="983.27" y="79.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,695 samples, 66.53%)</title><rect x="35.9" y="213" width="785.0" height="15.0" fill="rgb(246,69,51)" rx="2" ry="2" />
<text  x="38.92" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ip6_input (124 samples, 3.06%)</title><rect x="980.3" y="149" width="36.1" height="15.0" fill="rgb(236,40,25)" rx="2" ry="2" />
<text  x="983.27" y="159.5" >ip6..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (12 samples, 0.30%)</title><rect x="773.8" y="197" width="3.4" height="15.0" fill="rgb(213,225,38)" rx="2" ry="2" />
<text  x="776.75" y="207.5" ></text>
</g>
<g >
<title>m_tag_locate (3 samples, 0.07%)</title><rect x="736.5" y="53" width="0.8" height="15.0" fill="rgb(245,42,48)" rx="2" ry="2" />
<text  x="739.47" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.05%)</title><rect x="977.7" y="229" width="0.5" height="15.0" fill="rgb(242,39,23)" rx="2" ry="2" />
<text  x="980.65" y="239.5" ></text>
</g>
<g >
<title>ipfw_chk (57 samples, 1.41%)</title><rect x="999.8" y="85" width="16.6" height="15.0" fill="rgb(250,214,36)" rx="2" ry="2" />
<text  x="1002.79" y="95.5" ></text>
</g>
<g >
<title>iflib_encap (258 samples, 6.37%)</title><rect x="883.6" y="181" width="75.1" height="15.0" fill="rgb(246,50,49)" rx="2" ry="2" />
<text  x="886.57" y="191.5" >iflib_en..</text>
</g>
<g >
<title>iflib_txd_db_check (50 samples, 1.23%)</title><rect x="958.7" y="181" width="14.6" height="15.0" fill="rgb(218,129,49)" rx="2" ry="2" />
<text  x="961.72" y="191.5" ></text>
</g>
<g >
<title>ipfw_chk (165 samples, 4.07%)</title><rect x="1077.0" y="69" width="48.0" height="15.0" fill="rgb(241,123,38)" rx="2" ry="2" />
<text  x="1079.98" y="79.5" >ipfw..</text>
</g>
<g >
<title>tc_windup (1 samples, 0.02%)</title><rect x="1188.8" y="197" width="0.3" height="15.0" fill="rgb(242,227,15)" rx="2" ry="2" />
<text  x="1191.83" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (60 samples, 1.48%)</title><rect x="227.6" y="37" width="17.5" height="15.0" fill="rgb(212,96,29)" rx="2" ry="2" />
<text  x="230.59" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.10%)</title><rect x="972.1" y="165" width="1.2" height="15.0" fill="rgb(227,202,30)" rx="2" ry="2" />
<text  x="975.12" y="175.5" ></text>
</g>
<g >
<title>lapic_eoi (3 samples, 0.07%)</title><rect x="1176.0" y="245" width="0.9" height="15.0" fill="rgb(244,118,51)" rx="2" ry="2" />
<text  x="1179.02" y="255.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (373 samples, 9.21%)</title><rect x="1016.4" y="261" width="108.6" height="15.0" fill="rgb(208,90,38)" rx="2" ry="2" />
<text  x="1019.39" y="271.5" >gtaskqueue_ru..</text>
</g>
<g >
<title>if_getafdata (4 samples, 0.10%)</title><rect x="260.2" y="53" width="1.2" height="15.0" fill="rgb(210,46,23)" rx="2" ry="2" />
<text  x="263.21" y="63.5" ></text>
</g>
<g >
<title>_rm_runlock (7 samples, 0.17%)</title><rect x="463.8" y="37" width="2.1" height="15.0" fill="rgb(218,223,6)" rx="2" ry="2" />
<text  x="466.82" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.15%)</title><rect x="1174.3" y="213" width="1.7" height="15.0" fill="rgb(245,223,10)" rx="2" ry="2" />
<text  x="1177.27" y="223.5" ></text>
</g>
<g >
<title>tc_fill_vdso_timehands (1 samples, 0.02%)</title><rect x="1188.8" y="181" width="0.3" height="15.0" fill="rgb(253,123,50)" rx="2" ry="2" />
<text  x="1191.83" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.05%)</title><rect x="1151.0" y="213" width="0.6" height="15.0" fill="rgb(207,184,53)" rx="2" ry="2" />
<text  x="1153.97" y="223.5" ></text>
</g>
<g >
<title>memmove_erms (4 samples, 0.10%)</title><rect x="270.7" y="53" width="1.2" height="15.0" fill="rgb(230,76,38)" rx="2" ry="2" />
<text  x="273.70" y="63.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (165 samples, 4.07%)</title><rect x="1077.0" y="53" width="48.0" height="15.0" fill="rgb(232,209,29)" rx="2" ry="2" />
<text  x="1079.98" y="63.5" >ipfw..</text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.02%)</title><rect x="28.6" y="245" width="0.3" height="15.0" fill="rgb(252,100,19)" rx="2" ry="2" />
<text  x="31.64" y="255.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (2 samples, 0.05%)</title><rect x="820.4" y="197" width="0.5" height="15.0" fill="rgb(247,123,40)" rx="2" ry="2" />
<text  x="823.36" y="207.5" ></text>
</g>
<g >
<title>cache_alloc (1 samples, 0.02%)</title><rect x="1189.7" y="101" width="0.3" height="15.0" fill="rgb(216,162,38)" rx="2" ry="2" />
<text  x="1192.71" y="111.5" ></text>
</g>
<g >
<title>all (4,051 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(223,222,45)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>hardclock (9 samples, 0.22%)</title><rect x="1186.5" y="229" width="2.6" height="15.0" fill="rgb(235,54,52)" rx="2" ry="2" />
<text  x="1189.50" y="239.5" ></text>
</g>
<g >
<title>timercb (16 samples, 0.39%)</title><rect x="1185.0" y="261" width="4.7" height="15.0" fill="rgb(239,32,41)" rx="2" ry="2" />
<text  x="1188.05" y="271.5" ></text>
</g>
<g >
<title>ipfw_chk (698 samples, 17.23%)</title><rect x="364.2" y="53" width="203.3" height="15.0" fill="rgb(241,14,27)" rx="2" ry="2" />
<text  x="367.20" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>iflib_rxeof (373 samples, 9.21%)</title><rect x="1016.4" y="229" width="108.6" height="15.0" fill="rgb(220,76,42)" rx="2" ry="2" />
<text  x="1019.39" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>memcpy_erms (9 samples, 0.22%)</title><rect x="245.1" y="69" width="2.6" height="15.0" fill="rgb(232,164,15)" rx="2" ry="2" />
<text  x="248.07" y="79.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (347 samples, 8.57%)</title><rect x="466.4" y="37" width="101.1" height="15.0" fill="rgb(207,26,22)" rx="2" ry="2" />
<text  x="469.45" y="47.5" >ipfw_dyn_loo..</text>
</g>
<g >
<title>_task_fn_tx (528 samples, 13.03%)</title><rect x="821.5" y="229" width="153.8" height="15.0" fill="rgb(217,19,46)" rx="2" ry="2" />
<text  x="824.52" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>netisr_dispatch_src (373 samples, 9.21%)</title><rect x="1016.4" y="149" width="108.6" height="15.0" fill="rgb(214,160,7)" rx="2" ry="2" />
<text  x="1019.39" y="159.5" >netisr_dispat..</text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.05%)</title><rect x="1151.6" y="213" width="0.5" height="15.0" fill="rgb(232,138,44)" rx="2" ry="2" />
<text  x="1154.55" y="223.5" ></text>
</g>
<g >
<title>ipfw_chk (170 samples, 4.20%)</title><rect x="1027.5" y="69" width="49.5" height="15.0" fill="rgb(215,7,19)" rx="2" ry="2" />
<text  x="1030.46" y="79.5" >ipfw..</text>
</g>
<g >
<title>uma_zfree_arg (19 samples, 0.47%)</title><rect x="878.0" y="133" width="5.6" height="15.0" fill="rgb(224,190,1)" rx="2" ry="2" />
<text  x="881.03" y="143.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.05%)</title><rect x="35.3" y="197" width="0.6" height="15.0" fill="rgb(224,163,16)" rx="2" ry="2" />
<text  x="38.34" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (31 samples, 0.77%)</title><rect x="213.9" y="37" width="9.0" height="15.0" fill="rgb(249,76,39)" rx="2" ry="2" />
<text  x="216.90" y="47.5" ></text>
</g>
<g >
<title>if_getnumadomain (19 samples, 0.47%)</title><rect x="741.7" y="197" width="5.5" height="15.0" fill="rgb(231,2,37)" rx="2" ry="2" />
<text  x="744.71" y="207.5" ></text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.02%)</title><rect x="1176.9" y="245" width="0.3" height="15.0" fill="rgb(248,124,51)" rx="2" ry="2" />
<text  x="1179.89" y="255.5" ></text>
</g>
<g >
<title>jenkins_hash32 (53 samples, 1.31%)</title><rect x="999.8" y="37" width="15.4" height="15.0" fill="rgb(237,10,24)" rx="2" ry="2" />
<text  x="1002.79" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (20 samples, 0.49%)</title><rect x="1021.6" y="37" width="5.9" height="15.0" fill="rgb(226,187,46)" rx="2" ry="2" />
<text  x="1024.64" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="942.1" y="133" width="0.3" height="15.0" fill="rgb(233,87,51)" rx="2" ry="2" />
<text  x="945.12" y="143.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (1 samples, 0.02%)</title><rect x="28.9" y="245" width="0.3" height="15.0" fill="rgb(208,221,9)" rx="2" ry="2" />
<text  x="31.93" y="255.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (1 samples, 0.02%)</title><rect x="1189.7" y="37" width="0.3" height="15.0" fill="rgb(242,196,19)" rx="2" ry="2" />
<text  x="1192.71" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (8 samples, 0.20%)</title><rect x="1159.1" y="229" width="2.4" height="15.0" fill="rgb(250,170,20)" rx="2" ry="2" />
<text  x="1162.12" y="239.5" ></text>
</g>
<g >
<title>dyn_update_proto_state (42 samples, 1.04%)</title><rect x="1027.5" y="37" width="12.2" height="15.0" fill="rgb(211,194,50)" rx="2" ry="2" />
<text  x="1030.46" y="47.5" ></text>
</g>
<g >
<title>m_pkthdr_init (7 samples, 0.17%)</title><rect x="786.6" y="197" width="2.0" height="15.0" fill="rgb(227,25,12)" rx="2" ry="2" />
<text  x="789.57" y="207.5" ></text>
</g>
<g >
<title>cache_alloc (6 samples, 0.15%)</title><rect x="761.2" y="165" width="1.8" height="15.0" fill="rgb(220,123,16)" rx="2" ry="2" />
<text  x="764.23" y="175.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (27 samples, 0.67%)</title><rect x="934.5" y="149" width="7.9" height="15.0" fill="rgb(234,201,47)" rx="2" ry="2" />
<text  x="937.54" y="159.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.02%)</title><rect x="973.3" y="181" width="0.3" height="15.0" fill="rgb(254,167,1)" rx="2" ry="2" />
<text  x="976.28" y="191.5" ></text>
</g>
<g >
<title>m_free (29 samples, 0.72%)</title><rect x="875.1" y="149" width="8.5" height="15.0" fill="rgb(208,134,52)" rx="2" ry="2" />
<text  x="878.12" y="159.5" ></text>
</g>
<g >
<title>handleevents (13 samples, 0.32%)</title><rect x="1185.9" y="245" width="3.8" height="15.0" fill="rgb(228,5,31)" rx="2" ry="2" />
<text  x="1188.92" y="255.5" ></text>
</g>
<g >
<title>soft_get_config (2 samples, 0.05%)</title><rect x="1188.0" y="181" width="0.5" height="15.0" fill="rgb(230,152,11)" rx="2" ry="2" />
<text  x="1190.96" y="191.5" ></text>
</g>
<g >
<title>fib6_lookup (188 samples, 4.64%)</title><rect x="293.7" y="69" width="54.8" height="15.0" fill="rgb(224,192,33)" rx="2" ry="2" />
<text  x="296.71" y="79.5" >fib6_..</text>
</g>
<g >
<title>ether_output (38 samples, 0.94%)</title><rect x="1016.4" y="101" width="11.1" height="15.0" fill="rgb(208,94,20)" rx="2" ry="2" />
<text  x="1019.39" y="111.5" ></text>
</g>
<g >
<title>iflib_if_transmit (172 samples, 4.25%)</title><rect x="195.0" y="53" width="50.1" height="15.0" fill="rgb(229,20,31)" rx="2" ry="2" />
<text  x="197.97" y="63.5" >iflib..</text>
</g>
<g >
<title>_task_fn_rx (2,706 samples, 66.80%)</title><rect x="33.3" y="229" width="788.2" height="15.0" fill="rgb(226,157,23)" rx="2" ry="2" />
<text  x="36.30" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.07%)</title><rect x="747.2" y="197" width="0.9" height="15.0" fill="rgb(233,223,49)" rx="2" ry="2" />
<text  x="750.25" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (6 samples, 0.15%)</title><rect x="1183.0" y="261" width="1.8" height="15.0" fill="rgb(227,170,4)" rx="2" ry="2" />
<text  x="1186.01" y="271.5" ></text>
</g>
<g >
<title>netmap_rx_irq (2 samples, 0.05%)</title><rect x="820.9" y="213" width="0.6" height="15.0" fill="rgb(224,123,45)" rx="2" ry="2" />
<text  x="823.94" y="223.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.05%)</title><rect x="1189.1" y="229" width="0.6" height="15.0" fill="rgb(251,183,20)" rx="2" ry="2" />
<text  x="1192.13" y="239.5" ></text>
</g>
<g >
<title>uma_small_alloc (1 samples, 0.02%)</title><rect x="1189.7" y="53" width="0.3" height="15.0" fill="rgb(220,175,47)" rx="2" ry="2" />
<text  x="1192.71" y="63.5" ></text>
</g>
<g >
<title>ether_output (380 samples, 9.38%)</title><rect x="161.2" y="85" width="110.7" height="15.0" fill="rgb(223,201,16)" rx="2" ry="2" />
<text  x="164.18" y="95.5" >ether_output</text>
</g>
<g >
<title>drain_ring_lockless (516 samples, 12.74%)</title><rect x="823.3" y="213" width="150.3" height="15.0" fill="rgb(253,65,4)" rx="2" ry="2" />
<text  x="826.27" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>netisr_dispatch (4 samples, 0.10%)</title><rect x="58.6" y="181" width="1.2" height="15.0" fill="rgb(240,75,2)" rx="2" ry="2" />
<text  x="61.64" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (36 samples, 0.89%)</title><rect x="1148.6" y="229" width="10.5" height="15.0" fill="rgb(207,99,3)" rx="2" ry="2" />
<text  x="1151.64" y="239.5" ></text>
</g>
<g >
<title>memcmp (10 samples, 0.25%)</title><rect x="996.9" y="37" width="2.9" height="15.0" fill="rgb(213,72,52)" rx="2" ry="2" />
<text  x="999.88" y="47.5" ></text>
</g>
<g >
<title>m_adj (9 samples, 0.22%)</title><rect x="91.6" y="133" width="2.6" height="15.0" fill="rgb(205,139,2)" rx="2" ry="2" />
<text  x="94.56" y="143.5" ></text>
</g>
<g >
<title>ip6_input (373 samples, 9.21%)</title><rect x="1016.4" y="133" width="108.6" height="15.0" fill="rgb(239,208,8)" rx="2" ry="2" />
<text  x="1019.39" y="143.5" >ip6_input</text>
</g>
<g >
<title>_rm_rlock (19 samples, 0.47%)</title><rect x="458.3" y="37" width="5.5" height="15.0" fill="rgb(216,181,51)" rx="2" ry="2" />
<text  x="461.29" y="47.5" ></text>
</g>
<g >
<title>msi_vector (6 samples, 0.15%)</title><rect x="1177.8" y="261" width="1.7" height="15.0" fill="rgb(228,56,23)" rx="2" ry="2" />
<text  x="1180.77" y="271.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.02%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(236,43,12)" rx="2" ry="2" />
<text  x="1192.71" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (32 samples, 0.79%)</title><rect x="777.2" y="197" width="9.4" height="15.0" fill="rgb(232,104,36)" rx="2" ry="2" />
<text  x="780.25" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (9 samples, 0.22%)</title><rect x="1161.5" y="229" width="2.6" height="15.0" fill="rgb(222,160,0)" rx="2" ry="2" />
<text  x="1164.45" y="239.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="762.7" y="85" width="0.3" height="15.0" fill="rgb(209,169,10)" rx="2" ry="2" />
<text  x="765.68" y="95.5" ></text>
</g>
</g>
</svg>
