<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>msi_eoi_source (3 samples, 0.07%)</title><rect x="1179.2" y="245" width="0.8" height="15.0" fill="rgb(206,127,49)" rx="2" ry="2" />
<text  x="1182.18" y="255.5" ></text>
</g>
<g >
<title>ether_output_frame (318 samples, 6.94%)</title><rect x="259.1" y="69" width="82.0" height="15.0" fill="rgb(248,147,3)" rx="2" ry="2" />
<text  x="262.14" y="79.5" >ether_out..</text>
</g>
<g >
<title>sched_priority (1 samples, 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(233,133,41)" rx="2" ry="2" />
<text  x="1192.74" y="207.5" ></text>
</g>
<g >
<title>memmove_erms (6 samples, 0.13%)</title><rect x="369.2" y="53" width="1.5" height="15.0" fill="rgb(240,5,21)" rx="2" ry="2" />
<text  x="372.15" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (86 samples, 1.88%)</title><rect x="1102.1" y="245" width="22.2" height="15.0" fill="rgb(244,23,54)" rx="2" ry="2" />
<text  x="1105.14" y="255.5" >_..</text>
</g>
<g >
<title>intr_event_handle (175 samples, 3.82%)</title><rect x="1134.9" y="261" width="45.1" height="15.0" fill="rgb(221,49,13)" rx="2" ry="2" />
<text  x="1137.86" y="271.5" >intr..</text>
</g>
<g >
<title>iap_get_config (2 samples, 0.04%)</title><rect x="1187.4" y="181" width="0.5" height="15.0" fill="rgb(244,125,10)" rx="2" ry="2" />
<text  x="1190.42" y="191.5" ></text>
</g>
<g >
<title>m_adj (4 samples, 0.09%)</title><rect x="694.6" y="149" width="1.0" height="15.0" fill="rgb(249,181,19)" rx="2" ry="2" />
<text  x="697.55" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1089.0" y="213" width="0.3" height="15.0" fill="rgb(249,195,41)" rx="2" ry="2" />
<text  x="1092.00" y="223.5" ></text>
</g>
<g >
<title>in6_localip (123 samples, 2.69%)</title><rect x="370.7" y="85" width="31.7" height="15.0" fill="rgb(240,191,50)" rx="2" ry="2" />
<text  x="373.70" y="95.5" >in..</text>
</g>
<g >
<title>hardclock (16 samples, 0.35%)</title><rect x="1185.4" y="229" width="4.1" height="15.0" fill="rgb(206,108,54)" rx="2" ry="2" />
<text  x="1188.36" y="239.5" ></text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.07%)</title><rect x="1160.9" y="197" width="0.8" height="15.0" fill="rgb(243,217,52)" rx="2" ry="2" />
<text  x="1163.89" y="207.5" ></text>
</g>
<g >
<title>sleepq_broadcast (5 samples, 0.11%)</title><rect x="1099.1" y="213" width="1.2" height="15.0" fill="rgb(206,196,25)" rx="2" ry="2" />
<text  x="1102.05" y="223.5" ></text>
</g>
<g >
<title>m_free (91 samples, 1.99%)</title><rect x="917.2" y="149" width="23.4" height="15.0" fill="rgb(212,51,52)" rx="2" ry="2" />
<text  x="920.16" y="159.5" >m..</text>
</g>
<g >
<title>ether_nh_input (2,375 samples, 51.86%)</title><rect x="85.7" y="165" width="611.9" height="15.0" fill="rgb(245,23,19)" rx="2" ry="2" />
<text  x="88.75" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>iflib_rxeof (86 samples, 1.88%)</title><rect x="1102.1" y="229" width="22.2" height="15.0" fill="rgb(205,96,13)" rx="2" ry="2" />
<text  x="1105.14" y="239.5" >i..</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="1102.4" y="37" width="0.3" height="15.0" fill="rgb(223,51,41)" rx="2" ry="2" />
<text  x="1105.40" y="47.5" ></text>
</g>
<g >
<title>ether_output (544 samples, 11.88%)</title><rect x="230.5" y="85" width="140.2" height="15.0" fill="rgb(214,162,31)" rx="2" ry="2" />
<text  x="233.54" y="95.5" >ether_output</text>
</g>
<g >
<title>ether_demux (2,276 samples, 49.69%)</title><rect x="108.2" y="149" width="586.4" height="15.0" fill="rgb(220,28,34)" rx="2" ry="2" />
<text  x="111.16" y="159.5" >ether_demux</text>
</g>
<g >
<title>ixgbe_msix_que (31 samples, 0.68%)</title><rect x="1169.6" y="229" width="8.0" height="15.0" fill="rgb(246,73,17)" rx="2" ry="2" />
<text  x="1172.65" y="239.5" ></text>
</g>
<g >
<title>keg_alloc_slab (15 samples, 0.33%)</title><rect x="730.1" y="133" width="3.9" height="15.0" fill="rgb(241,79,21)" rx="2" ry="2" />
<text  x="733.11" y="143.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (3 samples, 0.07%)</title><rect x="830.8" y="197" width="0.8" height="15.0" fill="rgb(250,206,53)" rx="2" ry="2" />
<text  x="833.85" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (49 samples, 1.07%)</title><rect x="1111.7" y="37" width="12.6" height="15.0" fill="rgb(237,59,54)" rx="2" ry="2" />
<text  x="1114.68" y="47.5" ></text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.02%)</title><rect x="1189.5" y="229" width="0.2" height="15.0" fill="rgb(247,56,9)" rx="2" ry="2" />
<text  x="1192.48" y="239.5" ></text>
</g>
<g >
<title>ether_demux (86 samples, 1.88%)</title><rect x="1102.1" y="165" width="22.2" height="15.0" fill="rgb(243,189,26)" rx="2" ry="2" />
<text  x="1105.14" y="175.5" >e..</text>
</g>
<g >
<title>Xapic_isr1 (31 samples, 0.68%)</title><rect x="10.0" y="277" width="8.0" height="15.0" fill="rgb(224,81,49)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>m_pkthdr_init (12 samples, 0.26%)</title><rect x="779.8" y="197" width="3.1" height="15.0" fill="rgb(241,227,27)" rx="2" ry="2" />
<text  x="782.83" y="207.5" ></text>
</g>
<g >
<title>m_tag_locate (9 samples, 0.20%)</title><rect x="692.2" y="53" width="2.4" height="15.0" fill="rgb(221,45,50)" rx="2" ry="2" />
<text  x="695.24" y="63.5" ></text>
</g>
<g >
<title>fork_exit (4,171 samples, 91.07%)</title><rect x="27.5" y="277" width="1074.6" height="15.0" fill="rgb(205,151,21)" rx="2" ry="2" />
<text  x="30.52" y="287.5" >fork_exit</text>
</g>
<g >
<title>rxd_frag_to_sd (95 samples, 2.07%)</title><rect x="795.0" y="197" width="24.5" height="15.0" fill="rgb(224,25,21)" rx="2" ry="2" />
<text  x="798.03" y="207.5" >r..</text>
</g>
<g >
<title>et_start (2 samples, 0.04%)</title><rect x="1184.8" y="229" width="0.6" height="15.0" fill="rgb(252,179,44)" rx="2" ry="2" />
<text  x="1187.85" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (86 samples, 1.88%)</title><rect x="1102.1" y="149" width="22.2" height="15.0" fill="rgb(254,162,8)" rx="2" ry="2" />
<text  x="1105.14" y="159.5" >n..</text>
</g>
<g >
<title>ether_output (86 samples, 1.88%)</title><rect x="1102.1" y="101" width="22.2" height="15.0" fill="rgb(245,139,32)" rx="2" ry="2" />
<text  x="1105.14" y="111.5" >e..</text>
</g>
<g >
<title>iflib_txq_drain (997 samples, 21.77%)</title><rect x="831.6" y="197" width="256.9" height="15.0" fill="rgb(233,20,0)" rx="2" ry="2" />
<text  x="834.62" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>if_getdrvflags (6 samples, 0.13%)</title><rect x="698.2" y="197" width="1.5" height="15.0" fill="rgb(218,131,53)" rx="2" ry="2" />
<text  x="701.16" y="207.5" ></text>
</g>
<g >
<title>ip6_tryforward (1,970 samples, 43.01%)</title><rect x="187.0" y="101" width="507.6" height="15.0" fill="rgb(229,35,23)" rx="2" ry="2" />
<text  x="190.00" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>_ck_epoch_addref (3 samples, 0.07%)</title><rect x="35.8" y="213" width="0.7" height="15.0" fill="rgb(209,85,6)" rx="2" ry="2" />
<text  x="38.76" y="223.5" ></text>
</g>
<g >
<title>memcmp (5 samples, 0.11%)</title><rect x="367.9" y="37" width="1.3" height="15.0" fill="rgb(240,141,0)" rx="2" ry="2" />
<text  x="370.86" y="47.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (63 samples, 1.38%)</title><rect x="1027.4" y="149" width="16.3" height="15.0" fill="rgb(240,60,53)" rx="2" ry="2" />
<text  x="1030.43" y="159.5" ></text>
</g>
<g >
<title>lapic_handle_timer (22 samples, 0.48%)</title><rect x="1184.3" y="277" width="5.7" height="15.0" fill="rgb(233,80,44)" rx="2" ry="2" />
<text  x="1187.33" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (13 samples, 0.28%)</title><rect x="1085.1" y="165" width="3.4" height="15.0" fill="rgb(211,32,45)" rx="2" ry="2" />
<text  x="1088.14" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.15%)</title><rect x="1093.9" y="229" width="1.8" height="15.0" fill="rgb(240,49,20)" rx="2" ry="2" />
<text  x="1096.90" y="239.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.02%)</title><rect x="733.7" y="101" width="0.3" height="15.0" fill="rgb(237,47,51)" rx="2" ry="2" />
<text  x="736.72" y="111.5" ></text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.04%)</title><rect x="1088.5" y="213" width="0.5" height="15.0" fill="rgb(226,214,14)" rx="2" ry="2" />
<text  x="1091.49" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="34.2" y="229" width="0.3" height="15.0" fill="rgb(253,197,21)" rx="2" ry="2" />
<text  x="37.22" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="1092.1" y="197" width="0.8" height="15.0" fill="rgb(217,69,50)" rx="2" ry="2" />
<text  x="1095.10" y="207.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="733.7" y="85" width="0.3" height="15.0" fill="rgb(240,95,9)" rx="2" ry="2" />
<text  x="736.72" y="95.5" ></text>
</g>
<g >
<title>lradix6_lookup (263 samples, 5.74%)</title><rect x="420.7" y="53" width="67.7" height="15.0" fill="rgb(246,153,17)" rx="2" ry="2" />
<text  x="423.68" y="63.5" >lradix6..</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="1177.6" y="229" width="0.3" height="15.0" fill="rgb(213,200,22)" rx="2" ry="2" />
<text  x="1180.63" y="239.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.07%)</title><rect x="27.5" y="245" width="0.8" height="15.0" fill="rgb(248,15,27)" rx="2" ry="2" />
<text  x="30.52" y="255.5" ></text>
</g>
<g >
<title>binuptime (1 samples, 0.02%)</title><rect x="1184.3" y="245" width="0.3" height="15.0" fill="rgb(232,78,0)" rx="2" ry="2" />
<text  x="1187.33" y="255.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (449 samples, 9.80%)</title><rect x="489.5" y="85" width="115.7" height="15.0" fill="rgb(241,213,9)" rx="2" ry="2" />
<text  x="492.47" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (3 samples, 0.07%)</title><rect x="1161.9" y="229" width="0.8" height="15.0" fill="rgb(228,142,14)" rx="2" ry="2" />
<text  x="1164.92" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (86 samples, 1.88%)</title><rect x="1102.1" y="197" width="22.2" height="15.0" fill="rgb(218,195,11)" rx="2" ry="2" />
<text  x="1105.14" y="207.5" >n..</text>
</g>
<g >
<title>netisr_dispatch_src (2,415 samples, 52.73%)</title><rect x="75.4" y="181" width="622.2" height="15.0" fill="rgb(236,170,51)" rx="2" ry="2" />
<text  x="78.44" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pfil_mbuf_out (347 samples, 7.58%)</title><rect x="605.2" y="85" width="89.4" height="15.0" fill="rgb(247,125,50)" rx="2" ry="2" />
<text  x="608.15" y="95.5" >pfil_mbuf_..</text>
</g>
<g >
<title>_rm_runlock (16 samples, 0.35%)</title><rect x="597.9" y="37" width="4.2" height="15.0" fill="rgb(240,107,54)" rx="2" ry="2" />
<text  x="600.94" y="47.5" ></text>
</g>
<g >
<title>_rm_rlock (28 samples, 0.61%)</title><rect x="680.9" y="37" width="7.2" height="15.0" fill="rgb(245,8,34)" rx="2" ry="2" />
<text  x="683.90" y="47.5" ></text>
</g>
<g >
<title>ip6_input (86 samples, 1.88%)</title><rect x="1102.1" y="133" width="22.2" height="15.0" fill="rgb(211,123,32)" rx="2" ry="2" />
<text  x="1105.14" y="143.5" >i..</text>
</g>
<g >
<title>wakeup_any (3 samples, 0.07%)</title><rect x="1160.9" y="213" width="0.8" height="15.0" fill="rgb(206,220,41)" rx="2" ry="2" />
<text  x="1163.89" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.15%)</title><rect x="857.6" y="181" width="1.8" height="15.0" fill="rgb(207,45,52)" rx="2" ry="2" />
<text  x="860.64" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.07%)</title><rect x="40.7" y="197" width="0.7" height="15.0" fill="rgb(233,59,21)" rx="2" ry="2" />
<text  x="43.66" y="207.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (7 samples, 0.15%)</title><rect x="819.5" y="197" width="1.8" height="15.0" fill="rgb(245,67,25)" rx="2" ry="2" />
<text  x="822.51" y="207.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (3 samples, 0.07%)</title><rect x="312.2" y="37" width="0.8" height="15.0" fill="rgb(212,81,25)" rx="2" ry="2" />
<text  x="315.21" y="47.5" ></text>
</g>
<g >
<title>m_freem (97 samples, 2.12%)</title><rect x="915.6" y="165" width="25.0" height="15.0" fill="rgb(210,141,12)" rx="2" ry="2" />
<text  x="918.61" y="175.5" >m..</text>
</g>
<g >
<title>iflib_get_softc (2 samples, 0.04%)</title><rect x="1091.6" y="197" width="0.5" height="15.0" fill="rgb(206,107,24)" rx="2" ry="2" />
<text  x="1094.58" y="207.5" ></text>
</g>
<g >
<title>_rm_runlock (16 samples, 0.35%)</title><rect x="688.1" y="37" width="4.1" height="15.0" fill="rgb(234,187,22)" rx="2" ry="2" />
<text  x="691.11" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (3 samples, 0.07%)</title><rect x="1162.7" y="229" width="0.8" height="15.0" fill="rgb(245,220,34)" rx="2" ry="2" />
<text  x="1165.69" y="239.5" ></text>
</g>
<g >
<title>handleevents (21 samples, 0.46%)</title><rect x="1184.6" y="245" width="5.4" height="15.0" fill="rgb(224,133,2)" rx="2" ry="2" />
<text  x="1187.59" y="255.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (8 samples, 0.17%)</title><rect x="34.5" y="229" width="2.0" height="15.0" fill="rgb(219,183,9)" rx="2" ry="2" />
<text  x="37.48" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (1 samples, 0.02%)</title><rect x="1102.1" y="37" width="0.3" height="15.0" fill="rgb(209,40,27)" rx="2" ry="2" />
<text  x="1105.14" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (86 samples, 1.88%)</title><rect x="1102.1" y="261" width="22.2" height="15.0" fill="rgb(221,21,22)" rx="2" ry="2" />
<text  x="1105.14" y="271.5" >g..</text>
</g>
<g >
<title>uma_zfree_arg (68 samples, 1.48%)</title><rect x="923.1" y="133" width="17.5" height="15.0" fill="rgb(251,192,33)" rx="2" ry="2" />
<text  x="926.08" y="143.5" ></text>
</g>
<g >
<title>memcpy_erms (11 samples, 0.24%)</title><rect x="341.1" y="69" width="2.8" height="15.0" fill="rgb(247,203,50)" rx="2" ry="2" />
<text  x="344.07" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="794.5" y="197" width="0.5" height="15.0" fill="rgb(215,188,34)" rx="2" ry="2" />
<text  x="797.52" y="207.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1189.0" y="181" width="0.2" height="15.0" fill="rgb(247,61,39)" rx="2" ry="2" />
<text  x="1191.97" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (86 samples, 1.88%)</title><rect x="1102.1" y="181" width="22.2" height="15.0" fill="rgb(219,209,40)" rx="2" ry="2" />
<text  x="1105.14" y="191.5" >e..</text>
</g>
<g >
<title>gtaskqueue_run_locked (4,168 samples, 91.00%)</title><rect x="28.3" y="245" width="1073.8" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="31.29" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.02%)</title><rect x="733.7" y="117" width="0.3" height="15.0" fill="rgb(228,96,12)" rx="2" ry="2" />
<text  x="736.72" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.04%)</title><rect x="1156.5" y="213" width="0.5" height="15.0" fill="rgb(235,2,43)" rx="2" ry="2" />
<text  x="1159.51" y="223.5" ></text>
</g>
<g >
<title>pmap_zero_page (1 samples, 0.02%)</title><rect x="733.5" y="85" width="0.2" height="15.0" fill="rgb(250,216,46)" rx="2" ry="2" />
<text  x="736.46" y="95.5" ></text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.07%)</title><rect x="1043.7" y="149" width="0.7" height="15.0" fill="rgb(229,101,2)" rx="2" ry="2" />
<text  x="1046.66" y="159.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (30 samples, 0.66%)</title><rect x="18.0" y="277" width="7.7" height="15.0" fill="rgb(207,136,10)" rx="2" ry="2" />
<text  x="20.99" y="287.5" ></text>
</g>
<g >
<title>memcpy_erms (45 samples, 0.98%)</title><rect x="782.9" y="197" width="11.6" height="15.0" fill="rgb(240,6,4)" rx="2" ry="2" />
<text  x="785.93" y="207.5" ></text>
</g>
<g >
<title>timercb (22 samples, 0.48%)</title><rect x="1184.3" y="261" width="5.7" height="15.0" fill="rgb(235,22,52)" rx="2" ry="2" />
<text  x="1187.33" y="271.5" ></text>
</g>
<g >
<title>netmap_rx_irq (4 samples, 0.09%)</title><rect x="821.3" y="213" width="1.0" height="15.0" fill="rgb(246,63,12)" rx="2" ry="2" />
<text  x="824.31" y="223.5" ></text>
</g>
<g >
<title>memcmp (4 samples, 0.09%)</title><rect x="488.4" y="85" width="1.1" height="15.0" fill="rgb(250,200,13)" rx="2" ry="2" />
<text  x="491.44" y="95.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,047 samples, 66.53%)</title><rect x="37.3" y="229" width="785.0" height="15.0" fill="rgb(241,4,0)" rx="2" ry="2" />
<text  x="40.31" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.07%)</title><rect x="1157.0" y="213" width="0.8" height="15.0" fill="rgb(226,67,40)" rx="2" ry="2" />
<text  x="1160.02" y="223.5" ></text>
</g>
<g >
<title>if_getsoftc (15 samples, 0.33%)</title><rect x="313.2" y="37" width="3.9" height="15.0" fill="rgb(214,73,52)" rx="2" ry="2" />
<text  x="316.24" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (8 samples, 0.17%)</title><rect x="1089.3" y="213" width="2.0" height="15.0" fill="rgb(209,134,17)" rx="2" ry="2" />
<text  x="1092.26" y="223.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.07%)</title><rect x="36.5" y="229" width="0.8" height="15.0" fill="rgb(249,223,5)" rx="2" ry="2" />
<text  x="39.54" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,171 samples, 91.07%)</title><rect x="27.5" y="261" width="1074.6" height="15.0" fill="rgb(216,92,15)" rx="2" ry="2" />
<text  x="30.52" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>if_inc_counter (6 samples, 0.13%)</title><rect x="706.9" y="197" width="1.6" height="15.0" fill="rgb(220,156,33)" rx="2" ry="2" />
<text  x="709.92" y="207.5" ></text>
</g>
<g >
<title>ip6_findroute (334 samples, 7.29%)</title><rect x="402.4" y="85" width="86.0" height="15.0" fill="rgb(242,109,35)" rx="2" ry="2" />
<text  x="405.39" y="95.5" >ip6_findro..</text>
</g>
<g >
<title>spinlock_exit (11 samples, 0.24%)</title><rect x="1095.7" y="229" width="2.8" height="15.0" fill="rgb(220,228,54)" rx="2" ry="2" />
<text  x="1098.70" y="239.5" ></text>
</g>
<g >
<title>iflib_fl_refill (164 samples, 3.58%)</title><rect x="708.5" y="197" width="42.2" height="15.0" fill="rgb(233,170,7)" rx="2" ry="2" />
<text  x="711.47" y="207.5" >ifl..</text>
</g>
<g >
<title>ether_output_frame (86 samples, 1.88%)</title><rect x="1102.1" y="85" width="22.2" height="15.0" fill="rgb(249,83,6)" rx="2" ry="2" />
<text  x="1105.14" y="95.5" >e..</text>
</g>
<g >
<title>msi_vector (3 samples, 0.07%)</title><rect x="1180.0" y="261" width="0.7" height="15.0" fill="rgb(243,160,44)" rx="2" ry="2" />
<text  x="1182.95" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (24 samples, 0.52%)</title><rect x="1163.5" y="229" width="6.1" height="15.0" fill="rgb(231,56,0)" rx="2" ry="2" />
<text  x="1166.46" y="239.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (315 samples, 6.88%)</title><rect x="859.4" y="181" width="81.2" height="15.0" fill="rgb(251,28,54)" rx="2" ry="2" />
<text  x="862.45" y="191.5" >iflib_com..</text>
</g>
<g >
<title>ether_input (86 samples, 1.88%)</title><rect x="1102.1" y="213" width="22.2" height="15.0" fill="rgb(254,169,25)" rx="2" ry="2" />
<text  x="1105.14" y="223.5" >e..</text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.07%)</title><rect x="39.9" y="197" width="0.8" height="15.0" fill="rgb(233,87,38)" rx="2" ry="2" />
<text  x="42.89" y="207.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,050 samples, 22.93%)</title><rect x="822.3" y="229" width="270.6" height="15.0" fill="rgb(207,144,14)" rx="2" ry="2" />
<text  x="825.34" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>drain_ring_lockless (1,016 samples, 22.18%)</title><rect x="826.7" y="213" width="261.8" height="15.0" fill="rgb(208,211,33)" rx="2" ry="2" />
<text  x="829.72" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.04%)</title><rect x="697.6" y="197" width="0.6" height="15.0" fill="rgb(207,35,12)" rx="2" ry="2" />
<text  x="700.65" y="207.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="730.6" y="117" width="0.3" height="15.0" fill="rgb(228,1,51)" rx="2" ry="2" />
<text  x="733.62" y="127.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (4 samples, 0.09%)</title><rect x="1026.4" y="149" width="1.0" height="15.0" fill="rgb(245,135,10)" rx="2" ry="2" />
<text  x="1029.40" y="159.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (133 samples, 2.90%)</title><rect x="1143.6" y="245" width="34.3" height="15.0" fill="rgb(243,113,53)" rx="2" ry="2" />
<text  x="1146.62" y="255.5" >if..</text>
</g>
<g >
<title>if_getafdata (5 samples, 0.11%)</title><rect x="355.5" y="53" width="1.3" height="15.0" fill="rgb(244,164,9)" rx="2" ry="2" />
<text  x="358.50" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (29 samples, 0.63%)</title><rect x="908.1" y="165" width="7.5" height="15.0" fill="rgb(244,5,19)" rx="2" ry="2" />
<text  x="911.14" y="175.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(227,222,54)" rx="2" ry="2" />
<text  x="1192.74" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (86 samples, 1.88%)</title><rect x="1102.1" y="69" width="22.2" height="15.0" fill="rgb(247,178,21)" rx="2" ry="2" />
<text  x="1105.14" y="79.5" >i..</text>
</g>
<g >
<title>in6_lltable_lookup (48 samples, 1.05%)</title><rect x="356.8" y="53" width="12.4" height="15.0" fill="rgb(246,161,2)" rx="2" ry="2" />
<text  x="359.79" y="63.5" ></text>
</g>
<g >
<title>memcmp (8 samples, 0.17%)</title><rect x="695.6" y="149" width="2.0" height="15.0" fill="rgb(224,213,33)" rx="2" ry="2" />
<text  x="698.59" y="159.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (47 samples, 1.03%)</title><rect x="738.6" y="181" width="12.1" height="15.0" fill="rgb(205,37,0)" rx="2" ry="2" />
<text  x="741.61" y="191.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (83 samples, 1.81%)</title><rect x="1067.1" y="181" width="21.4" height="15.0" fill="rgb(242,105,51)" rx="2" ry="2" />
<text  x="1070.10" y="191.5" >i..</text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (8 samples, 0.17%)</title><rect x="731.7" y="101" width="2.0" height="15.0" fill="rgb(246,65,42)" rx="2" ry="2" />
<text  x="734.66" y="111.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (10 samples, 0.22%)</title><rect x="38.9" y="213" width="2.5" height="15.0" fill="rgb(221,49,24)" rx="2" ry="2" />
<text  x="41.86" y="223.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (8 samples, 0.17%)</title><rect x="748.7" y="165" width="2.0" height="15.0" fill="rgb(228,2,54)" rx="2" ry="2" />
<text  x="751.66" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (16 samples, 0.35%)</title><rect x="734.2" y="181" width="4.2" height="15.0" fill="rgb(211,115,43)" rx="2" ry="2" />
<text  x="737.23" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (1 samples, 0.02%)</title><rect x="424.0" y="37" width="0.3" height="15.0" fill="rgb(238,198,54)" rx="2" ry="2" />
<text  x="427.03" y="47.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="313.0" y="37" width="0.2" height="15.0" fill="rgb(240,66,33)" rx="2" ry="2" />
<text  x="315.99" y="47.5" ></text>
</g>
<g >
<title>fib6_lookup (317 samples, 6.92%)</title><rect x="406.8" y="69" width="81.6" height="15.0" fill="rgb(213,123,27)" rx="2" ry="2" />
<text  x="409.77" y="79.5" >fib6_lookup</text>
</g>
<g >
<title>iflib_encap (491 samples, 10.72%)</title><rect x="940.6" y="181" width="126.5" height="15.0" fill="rgb(248,71,11)" rx="2" ry="2" />
<text  x="943.60" y="191.5" >iflib_encap</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (6 samples, 0.13%)</title><rect x="1091.3" y="213" width="1.6" height="15.0" fill="rgb(225,207,34)" rx="2" ry="2" />
<text  x="1094.32" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (39 samples, 0.85%)</title><rect x="750.7" y="197" width="10.1" height="15.0" fill="rgb(250,225,49)" rx="2" ry="2" />
<text  x="753.72" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_intr (14 samples, 0.31%)</title><rect x="1180.7" y="277" width="3.6" height="15.0" fill="rgb(214,208,30)" rx="2" ry="2" />
<text  x="1183.72" y="287.5" ></text>
</g>
<g >
<title>sleepq_release (3 samples, 0.07%)</title><rect x="1093.1" y="229" width="0.8" height="15.0" fill="rgb(209,132,24)" rx="2" ry="2" />
<text  x="1096.13" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (6 samples, 0.13%)</title><rect x="1157.8" y="213" width="1.5" height="15.0" fill="rgb(218,172,29)" rx="2" ry="2" />
<text  x="1160.79" y="223.5" ></text>
</g>
<g >
<title>nd6_resolve (104 samples, 2.27%)</title><rect x="343.9" y="69" width="26.8" height="15.0" fill="rgb(225,201,28)" rx="2" ry="2" />
<text  x="346.90" y="79.5" >n..</text>
</g>
<g >
<title>cache_alloc (15 samples, 0.33%)</title><rect x="730.1" y="165" width="3.9" height="15.0" fill="rgb(231,61,30)" rx="2" ry="2" />
<text  x="733.11" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (86 samples, 1.88%)</title><rect x="1102.1" y="277" width="22.2" height="15.0" fill="rgb(223,46,22)" rx="2" ry="2" />
<text  x="1105.14" y="287.5" >g..</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (1 samples, 0.02%)</title><rect x="734.0" y="181" width="0.2" height="15.0" fill="rgb(240,146,2)" rx="2" ry="2" />
<text  x="736.97" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="1162.4" y="213" width="0.3" height="15.0" fill="rgb(248,164,32)" rx="2" ry="2" />
<text  x="1165.43" y="223.5" ></text>
</g>
<g >
<title>_rm_rlock (28 samples, 0.61%)</title><rect x="590.7" y="37" width="7.2" height="15.0" fill="rgb(209,56,14)" rx="2" ry="2" />
<text  x="593.72" y="47.5" ></text>
</g>
<g >
<title>ipfw_check_packet (332 samples, 7.25%)</title><rect x="609.0" y="69" width="85.6" height="15.0" fill="rgb(209,101,25)" rx="2" ry="2" />
<text  x="612.02" y="79.5" >ipfw_check..</text>
</g>
<g >
<title>statclock (1 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(243,163,36)" rx="2" ry="2" />
<text  x="1192.74" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="74.9" y="181" width="0.5" height="15.0" fill="rgb(221,160,0)" rx="2" ry="2" />
<text  x="77.93" y="191.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (100 samples, 2.18%)</title><rect x="1018.7" y="165" width="25.7" height="15.0" fill="rgb(217,44,3)" rx="2" ry="2" />
<text  x="1021.67" y="175.5" >b..</text>
</g>
<g >
<title>intr_lookup_source (4 samples, 0.09%)</title><rect x="1183.3" y="261" width="1.0" height="15.0" fill="rgb(209,69,22)" rx="2" ry="2" />
<text  x="1186.30" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (86 samples, 1.88%)</title><rect x="1102.1" y="53" width="22.2" height="15.0" fill="rgb(210,35,53)" rx="2" ry="2" />
<text  x="1105.14" y="63.5" >g..</text>
</g>
<g >
<title>zone_import (15 samples, 0.33%)</title><rect x="730.1" y="149" width="3.9" height="15.0" fill="rgb(242,198,7)" rx="2" ry="2" />
<text  x="733.11" y="159.5" ></text>
</g>
<g >
<title>_rm_rlock (35 samples, 0.76%)</title><rect x="388.2" y="69" width="9.0" height="15.0" fill="rgb(231,168,7)" rx="2" ry="2" />
<text  x="391.22" y="79.5" ></text>
</g>
<g >
<title>if_getafdata (3 samples, 0.07%)</title><rect x="186.2" y="101" width="0.8" height="15.0" fill="rgb(226,67,33)" rx="2" ry="2" />
<text  x="189.23" y="111.5" ></text>
</g>
<g >
<title>ipfw_chk (368 samples, 8.03%)</title><rect x="507.2" y="53" width="94.9" height="15.0" fill="rgb(218,111,21)" rx="2" ry="2" />
<text  x="510.25" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>ip6_input (2,157 samples, 47.10%)</title><rect x="138.8" y="117" width="555.8" height="15.0" fill="rgb(246,55,44)" rx="2" ry="2" />
<text  x="141.82" y="127.5" >ip6_input</text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="738.4" y="181" width="0.2" height="15.0" fill="rgb(205,55,50)" rx="2" ry="2" />
<text  x="741.35" y="191.5" ></text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.09%)</title><rect x="1174.0" y="213" width="1.1" height="15.0" fill="rgb(209,208,40)" rx="2" ry="2" />
<text  x="1177.03" y="223.5" ></text>
</g>
<g >
<title>pmc_hook_handler (14 samples, 0.31%)</title><rect x="1185.9" y="213" width="3.6" height="15.0" fill="rgb(206,92,53)" rx="2" ry="2" />
<text  x="1188.88" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="125.4" y="133" width="0.5" height="15.0" fill="rgb(207,17,54)" rx="2" ry="2" />
<text  x="128.42" y="143.5" ></text>
</g>
<g >
<title>lapic_eoi (5 samples, 0.11%)</title><rect x="1177.9" y="245" width="1.3" height="15.0" fill="rgb(210,57,29)" rx="2" ry="2" />
<text  x="1180.89" y="255.5" ></text>
</g>
<g >
<title>ether_input (2,442 samples, 53.32%)</title><rect x="68.5" y="197" width="629.1" height="15.0" fill="rgb(205,154,16)" rx="2" ry="2" />
<text  x="71.48" y="207.5" >ether_input</text>
</g>
<g >
<title>ipfw_check_packet (428 samples, 9.34%)</title><rect x="494.9" y="69" width="110.3" height="15.0" fill="rgb(250,222,1)" rx="2" ry="2" />
<text  x="497.88" y="79.5" >ipfw_check_pa..</text>
</g>
<g >
<title>all (4,580 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(228,108,0)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (88 samples, 1.92%)</title><rect x="1044.4" y="165" width="22.7" height="15.0" fill="rgb(251,3,10)" rx="2" ry="2" />
<text  x="1047.43" y="175.5" >i..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (34 samples, 0.74%)</title><rect x="303.5" y="37" width="8.7" height="15.0" fill="rgb(216,197,25)" rx="2" ry="2" />
<text  x="306.45" y="47.5" ></text>
</g>
<g >
<title>uma_small_alloc (11 samples, 0.24%)</title><rect x="730.9" y="117" width="2.8" height="15.0" fill="rgb(248,49,37)" rx="2" ry="2" />
<text  x="733.88" y="127.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (1 samples, 0.02%)</title><rect x="1092.9" y="229" width="0.2" height="15.0" fill="rgb(219,95,12)" rx="2" ry="2" />
<text  x="1095.87" y="239.5" ></text>
</g>
<g >
<title>Xtimerint_pti (2 samples, 0.04%)</title><rect x="25.7" y="277" width="0.5" height="15.0" fill="rgb(206,159,22)" rx="2" ry="2" />
<text  x="28.72" y="287.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (4 samples, 0.09%)</title><rect x="1187.9" y="181" width="1.1" height="15.0" fill="rgb(243,223,32)" rx="2" ry="2" />
<text  x="1190.94" y="191.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (8 samples, 0.17%)</title><rect x="938.5" y="117" width="2.1" height="15.0" fill="rgb(206,5,40)" rx="2" ry="2" />
<text  x="941.54" y="127.5" ></text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.11%)</title><rect x="921.8" y="133" width="1.3" height="15.0" fill="rgb(227,119,6)" rx="2" ry="2" />
<text  x="924.79" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="1101.9" y="197" width="0.2" height="15.0" fill="rgb(253,141,24)" rx="2" ry="2" />
<text  x="1104.89" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (74 samples, 1.62%)</title><rect x="760.8" y="197" width="19.0" height="15.0" fill="rgb(235,161,52)" rx="2" ry="2" />
<text  x="763.77" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (7 samples, 0.15%)</title><rect x="1083.3" y="165" width="1.8" height="15.0" fill="rgb(211,34,8)" rx="2" ry="2" />
<text  x="1086.34" y="175.5" ></text>
</g>
<g >
<title>pagezero_erms (7 samples, 0.15%)</title><rect x="731.7" y="85" width="1.8" height="15.0" fill="rgb(251,185,51)" rx="2" ry="2" />
<text  x="734.66" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,207 samples, 48.19%)</title><rect x="125.9" y="133" width="568.7" height="15.0" fill="rgb(234,115,32)" rx="2" ry="2" />
<text  x="128.94" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.02%)</title><rect x="1189.2" y="181" width="0.3" height="15.0" fill="rgb(241,154,49)" rx="2" ry="2" />
<text  x="1192.23" y="191.5" ></text>
</g>
<g >
<title>iaf_get_config (2 samples, 0.04%)</title><rect x="1186.9" y="181" width="0.5" height="15.0" fill="rgb(211,186,46)" rx="2" ry="2" />
<text  x="1189.91" y="191.5" ></text>
</g>
<g >
<title>if_getnumadomain (27 samples, 0.59%)</title><rect x="699.7" y="197" width="7.0" height="15.0" fill="rgb(220,59,17)" rx="2" ry="2" />
<text  x="702.71" y="207.5" ></text>
</g>
<g >
<title>cache_alloc_retry (15 samples, 0.33%)</title><rect x="730.1" y="181" width="3.9" height="15.0" fill="rgb(252,106,23)" rx="2" ry="2" />
<text  x="733.11" y="191.5" ></text>
</g>
<g >
<title>iflib_if_transmit (246 samples, 5.37%)</title><rect x="277.7" y="53" width="63.4" height="15.0" fill="rgb(231,121,33)" rx="2" ry="2" />
<text  x="280.69" y="63.5" >iflib_..</text>
</g>
<g >
<title>spinlock_enter (35 samples, 0.76%)</title><rect x="1102.7" y="37" width="9.0" height="15.0" fill="rgb(224,155,52)" rx="2" ry="2" />
<text  x="1105.66" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (10 samples, 0.22%)</title><rect x="1175.1" y="213" width="2.5" height="15.0" fill="rgb(250,123,16)" rx="2" ry="2" />
<text  x="1178.06" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,027 samples, 66.09%)</title><rect x="41.4" y="213" width="779.9" height="15.0" fill="rgb(208,174,34)" rx="2" ry="2" />
<text  x="44.43" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>m_tag_locate (12 samples, 0.26%)</title><rect x="602.1" y="53" width="3.1" height="15.0" fill="rgb(212,201,1)" rx="2" ry="2" />
<text  x="605.06" y="63.5" ></text>
</g>
<g >
<title>ip6_tryforward (86 samples, 1.88%)</title><rect x="1102.1" y="117" width="22.2" height="15.0" fill="rgb(222,100,13)" rx="2" ry="2" />
<text  x="1105.14" y="127.5" >i..</text>
</g>
<g >
<title>pmc_process_samples (12 samples, 0.26%)</title><rect x="1186.4" y="197" width="3.1" height="15.0" fill="rgb(239,32,3)" rx="2" ry="2" />
<text  x="1189.39" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (1 samples, 0.02%)</title><rect x="1161.7" y="229" width="0.2" height="15.0" fill="rgb(221,161,48)" rx="2" ry="2" />
<text  x="1164.66" y="239.5" ></text>
</g>
<g >
<title>if_getvnet (1 samples, 0.02%)</title><rect x="706.7" y="197" width="0.2" height="15.0" fill="rgb(244,195,30)" rx="2" ry="2" />
<text  x="709.66" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.13%)</title><rect x="1159.3" y="213" width="1.6" height="15.0" fill="rgb(249,28,30)" rx="2" ry="2" />
<text  x="1162.34" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (30 samples, 0.66%)</title><rect x="1153.9" y="229" width="7.8" height="15.0" fill="rgb(241,32,23)" rx="2" ry="2" />
<text  x="1156.93" y="239.5" ></text>
</g>
<g >
<title>m_adj (23 samples, 0.50%)</title><rect x="119.5" y="133" width="5.9" height="15.0" fill="rgb(248,5,10)" rx="2" ry="2" />
<text  x="122.50" y="143.5" ></text>
</g>
<g >
<title>_rm_runlock (20 samples, 0.44%)</title><rect x="397.2" y="69" width="5.2" height="15.0" fill="rgb(205,204,43)" rx="2" ry="2" />
<text  x="400.24" y="79.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.07%)</title><rect x="1160.9" y="181" width="0.8" height="15.0" fill="rgb(244,175,20)" rx="2" ry="2" />
<text  x="1163.89" y="191.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (93 samples, 2.03%)</title><rect x="317.1" y="37" width="24.0" height="15.0" fill="rgb(239,204,3)" rx="2" ry="2" />
<text  x="320.11" y="47.5" >i..</text>
</g>
<g >
<title>intr_execute_handlers (219 samples, 4.78%)</title><rect x="1124.3" y="277" width="56.4" height="15.0" fill="rgb(222,167,19)" rx="2" ry="2" />
<text  x="1127.30" y="287.5" >intr_..</text>
</g>
<g >
<title>sleepq_lock (7 samples, 0.15%)</title><rect x="1100.3" y="213" width="1.8" height="15.0" fill="rgb(208,203,46)" rx="2" ry="2" />
<text  x="1103.34" y="223.5" ></text>
</g>
<g >
<title>ipfw_chk (288 samples, 6.29%)</title><rect x="618.0" y="53" width="74.2" height="15.0" fill="rgb(239,201,28)" rx="2" ry="2" />
<text  x="621.03" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>rn_match (249 samples, 5.44%)</title><rect x="424.3" y="37" width="64.1" height="15.0" fill="rgb(207,141,24)" rx="2" ry="2" />
<text  x="427.29" y="47.5" >rn_match</text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.07%)</title><rect x="1173.3" y="213" width="0.7" height="15.0" fill="rgb(223,149,19)" rx="2" ry="2" />
<text  x="1176.25" y="223.5" ></text>
</g>
<g >
<title>wakeup (14 samples, 0.31%)</title><rect x="1098.5" y="229" width="3.6" height="15.0" fill="rgb(244,201,20)" rx="2" ry="2" />
<text  x="1101.54" y="239.5" ></text>
</g>
<g >
<title>doreti (5 samples, 0.11%)</title><rect x="26.2" y="277" width="1.3" height="15.0" fill="rgb(211,196,4)" rx="2" ry="2" />
<text  x="29.23" y="287.5" ></text>
</g>
</g>
</svg>
