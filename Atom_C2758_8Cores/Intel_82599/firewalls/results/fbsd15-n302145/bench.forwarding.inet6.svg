<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ether_nh_input (132 samples, 2.68%)</title><rect x="1079.5" y="181" width="31.6" height="15.0" fill="rgb(246,199,40)" rx="2" ry="2" />
<text  x="1082.51" y="191.5" >et..</text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.06%)</title><rect x="34.9" y="245" width="0.7" height="15.0" fill="rgb(214,126,43)" rx="2" ry="2" />
<text  x="37.87" y="255.5" ></text>
</g>
<g >
<title>lapic_handle_intr (10 samples, 0.20%)</title><rect x="1181.9" y="277" width="2.4" height="15.0" fill="rgb(234,78,20)" rx="2" ry="2" />
<text  x="1184.87" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="1070.9" y="197" width="0.5" height="15.0" fill="rgb(234,20,31)" rx="2" ry="2" />
<text  x="1073.90" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (132 samples, 2.68%)</title><rect x="1079.5" y="245" width="31.6" height="15.0" fill="rgb(209,88,17)" rx="2" ry="2" />
<text  x="1082.51" y="255.5" >_t..</text>
</g>
<g >
<title>spinlock_enter (12 samples, 0.24%)</title><rect x="1144.6" y="213" width="2.8" height="15.0" fill="rgb(213,223,4)" rx="2" ry="2" />
<text  x="1147.56" y="223.5" ></text>
</g>
<g >
<title>ether_demux (132 samples, 2.68%)</title><rect x="1079.5" y="165" width="31.6" height="15.0" fill="rgb(205,8,32)" rx="2" ry="2" />
<text  x="1082.51" y="175.5" >et..</text>
</g>
<g >
<title>doreti (9 samples, 0.18%)</title><rect x="32.7" y="277" width="2.2" height="15.0" fill="rgb(229,138,49)" rx="2" ry="2" />
<text  x="35.72" y="287.5" ></text>
</g>
<g >
<title>pagezero_erms (3 samples, 0.06%)</title><rect x="622.7" y="85" width="0.7" height="15.0" fill="rgb(211,95,52)" rx="2" ry="2" />
<text  x="625.72" y="95.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (68 samples, 1.38%)</title><rect x="418.0" y="53" width="16.3" height="15.0" fill="rgb(208,94,52)" rx="2" ry="2" />
<text  x="421.00" y="63.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="1079.3" y="37" width="0.2" height="15.0" fill="rgb(253,163,28)" rx="2" ry="2" />
<text  x="1082.27" y="47.5" ></text>
</g>
<g >
<title>soft_get_config (3 samples, 0.06%)</title><rect x="1188.8" y="181" width="0.7" height="15.0" fill="rgb(218,8,8)" rx="2" ry="2" />
<text  x="1191.80" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (12 samples, 0.24%)</title><rect x="1186.7" y="197" width="2.8" height="15.0" fill="rgb(241,111,46)" rx="2" ry="2" />
<text  x="1189.65" y="207.5" ></text>
</g>
<g >
<title>all (4,934 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(231,111,40)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="49.7" y="197" width="1.0" height="15.0" fill="rgb(243,25,49)" rx="2" ry="2" />
<text  x="52.70" y="207.5" ></text>
</g>
<g >
<title>handleevents (20 samples, 0.41%)</title><rect x="1185.2" y="245" width="4.8" height="15.0" fill="rgb(223,188,26)" rx="2" ry="2" />
<text  x="1188.22" y="255.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,874 samples, 58.25%)</title><rect x="47.1" y="229" width="687.3" height="15.0" fill="rgb(226,124,54)" rx="2" ry="2" />
<text  x="50.07" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>cache_alloc (8 samples, 0.16%)</title><rect x="621.8" y="165" width="1.9" height="15.0" fill="rgb(238,169,37)" rx="2" ry="2" />
<text  x="624.76" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (9 samples, 0.18%)</title><rect x="1072.6" y="229" width="2.1" height="15.0" fill="rgb(214,145,37)" rx="2" ry="2" />
<text  x="1075.57" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.10%)</title><rect x="92.7" y="181" width="1.2" height="15.0" fill="rgb(253,209,1)" rx="2" ry="2" />
<text  x="95.75" y="191.5" ></text>
</g>
<g >
<title>if_getafdata (9 samples, 0.18%)</title><rect x="225.7" y="101" width="2.2" height="15.0" fill="rgb(217,174,12)" rx="2" ry="2" />
<text  x="228.72" y="111.5" ></text>
</g>
<g >
<title>ip6_tryforward (1,453 samples, 29.45%)</title><rect x="227.9" y="101" width="347.5" height="15.0" fill="rgb(207,6,33)" rx="2" ry="2" />
<text  x="230.87" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (76 samples, 1.54%)</title><rect x="657.6" y="197" width="18.2" height="15.0" fill="rgb(239,213,0)" rx="2" ry="2" />
<text  x="660.64" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (9 samples, 0.18%)</title><rect x="1176.4" y="213" width="2.1" height="15.0" fill="rgb(210,42,36)" rx="2" ry="2" />
<text  x="1179.37" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (4 samples, 0.08%)</title><rect x="158.0" y="133" width="1.0" height="15.0" fill="rgb(227,132,39)" rx="2" ry="2" />
<text  x="161.04" y="143.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (8 samples, 0.16%)</title><rect x="731.8" y="197" width="1.9" height="15.0" fill="rgb(251,111,29)" rx="2" ry="2" />
<text  x="734.78" y="207.5" ></text>
</g>
<g >
<title>intr_execute_handlers (294 samples, 5.96%)</title><rect x="1111.1" y="277" width="70.3" height="15.0" fill="rgb(228,56,1)" rx="2" ry="2" />
<text  x="1114.08" y="287.5" >intr_ex..</text>
</g>
<g >
<title>_ck_epoch_addref (3 samples, 0.06%)</title><rect x="44.9" y="213" width="0.7" height="15.0" fill="rgb(219,115,16)" rx="2" ry="2" />
<text  x="47.92" y="223.5" ></text>
</g>
<g >
<title>if_getnumadomain (57 samples, 1.16%)</title><rect x="580.6" y="197" width="13.7" height="15.0" fill="rgb(243,2,36)" rx="2" ry="2" />
<text  x="583.63" y="207.5" ></text>
</g>
<g >
<title>intr_event_handle (245 samples, 4.97%)</title><rect x="1121.6" y="261" width="58.6" height="15.0" fill="rgb(244,57,24)" rx="2" ry="2" />
<text  x="1124.60" y="271.5" >intr_e..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (12 samples, 0.24%)</title><rect x="1153.2" y="229" width="2.8" height="15.0" fill="rgb(253,81,35)" rx="2" ry="2" />
<text  x="1156.17" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.02%)</title><rect x="1065.6" y="181" width="0.3" height="15.0" fill="rgb(227,197,53)" rx="2" ry="2" />
<text  x="1068.64" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="32.5" y="69" width="0.2" height="15.0" fill="rgb(221,129,33)" rx="2" ry="2" />
<text  x="35.48" y="79.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.02%)</title><rect x="1079.3" y="85" width="0.2" height="15.0" fill="rgb(221,40,41)" rx="2" ry="2" />
<text  x="1082.27" y="95.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.16%)</title><rect x="769.3" y="181" width="1.9" height="15.0" fill="rgb(246,179,12)" rx="2" ry="2" />
<text  x="772.32" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (5 samples, 0.10%)</title><rect x="50.7" y="197" width="1.2" height="15.0" fill="rgb(250,71,8)" rx="2" ry="2" />
<text  x="53.66" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.02%)</title><rect x="32.5" y="277" width="0.2" height="15.0" fill="rgb(207,179,21)" rx="2" ry="2" />
<text  x="35.48" y="287.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="623.4" y="133" width="0.3" height="15.0" fill="rgb(222,196,17)" rx="2" ry="2" />
<text  x="626.44" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (383 samples, 7.76%)</title><rect x="300.6" y="69" width="91.6" height="15.0" fill="rgb(235,222,31)" rx="2" ry="2" />
<text  x="303.58" y="79.5" >ether_outp..</text>
</g>
<g >
<title>m_freem (136 samples, 2.76%)</title><rect x="850.4" y="165" width="32.5" height="15.0" fill="rgb(221,69,34)" rx="2" ry="2" />
<text  x="853.40" y="175.5" >m_..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (48 samples, 0.97%)</title><rect x="1161.1" y="229" width="11.4" height="15.0" fill="rgb(226,121,30)" rx="2" ry="2" />
<text  x="1164.06" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1079.3" y="213" width="0.2" height="15.0" fill="rgb(231,96,30)" rx="2" ry="2" />
<text  x="1082.27" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="391.9" y="37" width="0.3" height="15.0" fill="rgb(225,77,42)" rx="2" ry="2" />
<text  x="394.93" y="47.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="43.7" y="229" width="0.3" height="15.0" fill="rgb(221,182,11)" rx="2" ry="2" />
<text  x="46.72" y="239.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (12 samples, 0.24%)</title><rect x="1068.5" y="213" width="2.9" height="15.0" fill="rgb(245,157,3)" rx="2" ry="2" />
<text  x="1071.51" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (54 samples, 1.09%)</title><rect x="1080.5" y="37" width="12.9" height="15.0" fill="rgb(207,179,5)" rx="2" ry="2" />
<text  x="1083.47" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.08%)</title><rect x="1078.3" y="213" width="1.0" height="15.0" fill="rgb(225,216,52)" rx="2" ry="2" />
<text  x="1081.31" y="223.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (7 samples, 0.14%)</title><rect x="742.1" y="197" width="1.6" height="15.0" fill="rgb(251,192,2)" rx="2" ry="2" />
<text  x="745.06" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (1 samples, 0.02%)</title><rect x="1152.9" y="229" width="0.3" height="15.0" fill="rgb(217,93,17)" rx="2" ry="2" />
<text  x="1155.93" y="239.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (6 samples, 0.12%)</title><rect x="45.6" y="229" width="1.5" height="15.0" fill="rgb(218,225,27)" rx="2" ry="2" />
<text  x="48.63" y="239.5" ></text>
</g>
<g >
<title>tscp_get_timecount_low (2 samples, 0.04%)</title><rect x="1184.7" y="229" width="0.5" height="15.0" fill="rgb(205,89,21)" rx="2" ry="2" />
<text  x="1187.74" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.02%)</title><rect x="1079.3" y="101" width="0.2" height="15.0" fill="rgb(209,152,14)" rx="2" ry="2" />
<text  x="1082.27" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (132 samples, 2.68%)</title><rect x="1079.5" y="149" width="31.6" height="15.0" fill="rgb(241,11,39)" rx="2" ry="2" />
<text  x="1082.51" y="159.5" >ne..</text>
</g>
<g >
<title>in6_localip (168 samples, 3.40%)</title><rect x="437.9" y="85" width="40.1" height="15.0" fill="rgb(209,222,25)" rx="2" ry="2" />
<text  x="440.85" y="95.5" >in6..</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="1080.2" y="37" width="0.3" height="15.0" fill="rgb(221,142,9)" rx="2" ry="2" />
<text  x="1083.23" y="47.5" ></text>
</g>
<g >
<title>ether_output (707 samples, 14.33%)</title><rect x="268.8" y="85" width="169.1" height="15.0" fill="rgb(230,12,0)" rx="2" ry="2" />
<text  x="271.77" y="95.5" >ether_output</text>
</g>
<g >
<title>pmap_kextract (12 samples, 0.24%)</title><rect x="860.9" y="133" width="2.9" height="15.0" fill="rgb(252,68,46)" rx="2" ry="2" />
<text  x="863.92" y="143.5" ></text>
</g>
<g >
<title>if_getcapenable (3 samples, 0.06%)</title><rect x="1065.9" y="213" width="0.7" height="15.0" fill="rgb(238,22,47)" rx="2" ry="2" />
<text  x="1068.88" y="223.5" ></text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.02%)</title><rect x="771.2" y="181" width="0.3" height="15.0" fill="rgb(224,66,49)" rx="2" ry="2" />
<text  x="774.24" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.04%)</title><rect x="1175.2" y="213" width="0.5" height="15.0" fill="rgb(229,171,7)" rx="2" ry="2" />
<text  x="1178.17" y="223.5" ></text>
</g>
<g >
<title>ether_output (1 samples, 0.02%)</title><rect x="1079.3" y="117" width="0.2" height="15.0" fill="rgb(237,93,24)" rx="2" ry="2" />
<text  x="1082.27" y="127.5" ></text>
</g>
<g >
<title>zone_import (8 samples, 0.16%)</title><rect x="621.8" y="149" width="1.9" height="15.0" fill="rgb(215,76,33)" rx="2" ry="2" />
<text  x="624.76" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.08%)</title><rect x="1155.1" y="213" width="0.9" height="15.0" fill="rgb(228,85,26)" rx="2" ry="2" />
<text  x="1158.08" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,367 samples, 88.51%)</title><rect x="34.9" y="261" width="1044.4" height="15.0" fill="rgb(250,22,15)" rx="2" ry="2" />
<text  x="37.87" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>memcmp (14 samples, 0.28%)</title><rect x="575.6" y="149" width="3.4" height="15.0" fill="rgb(215,113,23)" rx="2" ry="2" />
<text  x="578.61" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (132 samples, 2.68%)</title><rect x="1079.5" y="277" width="31.6" height="15.0" fill="rgb(218,199,29)" rx="2" ry="2" />
<text  x="1082.51" y="287.5" >gt..</text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.16%)</title><rect x="621.8" y="181" width="1.9" height="15.0" fill="rgb(239,84,30)" rx="2" ry="2" />
<text  x="624.76" y="191.5" ></text>
</g>
<g >
<title>iflib_fl_refill (220 samples, 4.46%)</title><rect x="595.0" y="197" width="52.6" height="15.0" fill="rgb(233,4,25)" rx="2" ry="2" />
<text  x="597.98" y="207.5" >iflib..</text>
</g>
<g >
<title>timercb (22 samples, 0.45%)</title><rect x="1184.7" y="261" width="5.3" height="15.0" fill="rgb(228,154,4)" rx="2" ry="2" />
<text  x="1187.74" y="271.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.02%)</title><rect x="623.4" y="117" width="0.3" height="15.0" fill="rgb(222,73,43)" rx="2" ry="2" />
<text  x="626.44" y="127.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (1 samples, 0.02%)</title><rect x="769.1" y="181" width="0.2" height="15.0" fill="rgb(229,105,45)" rx="2" ry="2" />
<text  x="772.08" y="191.5" ></text>
</g>
<g >
<title>bus_dmamap_load (1 samples, 0.02%)</title><rect x="621.5" y="181" width="0.3" height="15.0" fill="rgb(244,68,47)" rx="2" ry="2" />
<text  x="624.52" y="191.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,371 samples, 27.79%)</title><rect x="738.0" y="213" width="327.9" height="15.0" fill="rgb(208,154,19)" rx="2" ry="2" />
<text  x="740.99" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>if_getcapenable (3 samples, 0.06%)</title><rect x="579.0" y="197" width="0.7" height="15.0" fill="rgb(217,62,0)" rx="2" ry="2" />
<text  x="581.95" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (9 samples, 0.18%)</title><rect x="1150.8" y="197" width="2.1" height="15.0" fill="rgb(239,15,21)" rx="2" ry="2" />
<text  x="1153.78" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.10%)</title><rect x="51.9" y="181" width="1.1" height="15.0" fill="rgb(211,110,50)" rx="2" ry="2" />
<text  x="54.85" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (24 samples, 0.49%)</title><rect x="1184.3" y="277" width="5.7" height="15.0" fill="rgb(249,210,30)" rx="2" ry="2" />
<text  x="1187.26" y="287.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.02%)</title><rect x="32.5" y="245" width="0.2" height="15.0" fill="rgb(254,100,31)" rx="2" ry="2" />
<text  x="35.48" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="1079.0" y="197" width="0.3" height="15.0" fill="rgb(207,125,6)" rx="2" ry="2" />
<text  x="1082.03" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (132 samples, 2.68%)</title><rect x="1079.5" y="229" width="31.6" height="15.0" fill="rgb(237,110,17)" rx="2" ry="2" />
<text  x="1082.51" y="239.5" >if..</text>
</g>
<g >
<title>ether_input (132 samples, 2.68%)</title><rect x="1079.5" y="213" width="31.6" height="15.0" fill="rgb(214,11,21)" rx="2" ry="2" />
<text  x="1082.51" y="223.5" >et..</text>
</g>
<g >
<title>ip6_input (132 samples, 2.68%)</title><rect x="1079.5" y="133" width="31.6" height="15.0" fill="rgb(207,147,44)" rx="2" ry="2" />
<text  x="1082.51" y="143.5" >ip..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.02%)</title><rect x="32.5" y="85" width="0.2" height="15.0" fill="rgb(252,224,47)" rx="2" ry="2" />
<text  x="35.48" y="95.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (21 samples, 0.43%)</title><rect x="1156.0" y="229" width="5.1" height="15.0" fill="rgb(254,90,0)" rx="2" ry="2" />
<text  x="1159.04" y="239.5" ></text>
</g>
<g >
<title>uma_small_alloc (4 samples, 0.08%)</title><rect x="622.5" y="117" width="0.9" height="15.0" fill="rgb(222,69,8)" rx="2" ry="2" />
<text  x="625.48" y="127.5" ></text>
</g>
<g >
<title>ether_demux (1,833 samples, 37.15%)</title><rect x="137.0" y="149" width="438.4" height="15.0" fill="rgb(210,217,21)" rx="2" ry="2" />
<text  x="139.99" y="159.5" >ether_demux</text>
</g>
<g >
<title>iflib_get_ifp (3 samples, 0.06%)</title><rect x="1175.7" y="213" width="0.7" height="15.0" fill="rgb(240,99,31)" rx="2" ry="2" />
<text  x="1178.65" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (76 samples, 1.54%)</title><rect x="992.0" y="149" width="18.2" height="15.0" fill="rgb(248,82,24)" rx="2" ry="2" />
<text  x="994.98" y="159.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="1144.1" y="213" width="0.5" height="15.0" fill="rgb(211,135,1)" rx="2" ry="2" />
<text  x="1147.08" y="223.5" ></text>
</g>
<g >
<title>loadtimer (1 samples, 0.02%)</title><rect x="1189.5" y="229" width="0.3" height="15.0" fill="rgb(213,77,19)" rx="2" ry="2" />
<text  x="1192.52" y="239.5" ></text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.04%)</title><rect x="1181.4" y="277" width="0.5" height="15.0" fill="rgb(232,72,3)" rx="2" ry="2" />
<text  x="1184.39" y="287.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (466 samples, 9.44%)</title><rect x="771.5" y="181" width="111.4" height="15.0" fill="rgb(214,31,44)" rx="2" ry="2" />
<text  x="774.48" y="191.5" >iflib_complet..</text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.02%)</title><rect x="32.5" y="213" width="0.2" height="15.0" fill="rgb(215,44,51)" rx="2" ry="2" />
<text  x="35.48" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.02%)</title><rect x="32.5" y="261" width="0.2" height="15.0" fill="rgb(217,33,45)" rx="2" ry="2" />
<text  x="35.48" y="271.5" ></text>
</g>
<g >
<title>wakeup_any (5 samples, 0.10%)</title><rect x="51.9" y="197" width="1.1" height="15.0" fill="rgb(235,108,39)" rx="2" ry="2" />
<text  x="54.85" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (42 samples, 0.85%)</title><rect x="647.6" y="197" width="10.0" height="15.0" fill="rgb(251,3,21)" rx="2" ry="2" />
<text  x="650.59" y="207.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (3 samples, 0.06%)</title><rect x="622.7" y="101" width="0.7" height="15.0" fill="rgb(205,18,51)" rx="2" ry="2" />
<text  x="625.72" y="111.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (111 samples, 2.25%)</title><rect x="1039.1" y="181" width="26.5" height="15.0" fill="rgb(245,202,14)" rx="2" ry="2" />
<text  x="1042.09" y="191.5" >i..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (132 samples, 2.68%)</title><rect x="1079.5" y="53" width="31.6" height="15.0" fill="rgb(239,171,51)" rx="2" ry="2" />
<text  x="1082.51" y="63.5" >gr..</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="628.0" y="181" width="0.7" height="15.0" fill="rgb(247,88,54)" rx="2" ry="2" />
<text  x="630.98" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (50 samples, 1.01%)</title><rect x="1141.0" y="229" width="11.9" height="15.0" fill="rgb(209,154,25)" rx="2" ry="2" />
<text  x="1143.97" y="239.5" ></text>
</g>
<g >
<title>fork_exit (4,367 samples, 88.51%)</title><rect x="34.9" y="277" width="1044.4" height="15.0" fill="rgb(247,172,13)" rx="2" ry="2" />
<text  x="37.87" y="287.5" >fork_exit</text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1187.8" y="181" width="0.3" height="15.0" fill="rgb(248,7,3)" rx="2" ry="2" />
<text  x="1190.85" y="191.5" ></text>
</g>
<g >
<title>ether_output (132 samples, 2.68%)</title><rect x="1079.5" y="101" width="31.6" height="15.0" fill="rgb(215,61,51)" rx="2" ry="2" />
<text  x="1082.51" y="111.5" >et..</text>
</g>
<g >
<title>hardclock (17 samples, 0.34%)</title><rect x="1185.5" y="229" width="4.0" height="15.0" fill="rgb(240,210,30)" rx="2" ry="2" />
<text  x="1188.46" y="239.5" ></text>
</g>
<g >
<title>_rm_runlock (21 samples, 0.43%)</title><rect x="473.0" y="69" width="5.0" height="15.0" fill="rgb(246,194,22)" rx="2" ry="2" />
<text  x="476.01" y="79.5" ></text>
</g>
<g >
<title>m_adj (38 samples, 0.77%)</title><rect x="149.0" y="133" width="9.0" height="15.0" fill="rgb(216,12,13)" rx="2" ry="2" />
<text  x="151.95" y="143.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (61 samples, 1.24%)</title><rect x="17.7" y="277" width="14.5" height="15.0" fill="rgb(219,201,54)" rx="2" ry="2" />
<text  x="20.65" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (1,951 samples, 39.54%)</title><rect x="112.4" y="165" width="466.6" height="15.0" fill="rgb(205,108,38)" rx="2" ry="2" />
<text  x="115.36" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>if_altq_is_enabled (8 samples, 0.16%)</title><rect x="357.3" y="37" width="1.9" height="15.0" fill="rgb(234,15,41)" rx="2" ry="2" />
<text  x="360.26" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.08%)</title><rect x="1143.1" y="213" width="1.0" height="15.0" fill="rgb(209,47,47)" rx="2" ry="2" />
<text  x="1146.13" y="223.5" ></text>
</g>
<g >
<title>if_getvnet (1 samples, 0.02%)</title><rect x="594.3" y="197" width="0.2" height="15.0" fill="rgb(218,195,3)" rx="2" ry="2" />
<text  x="597.26" y="207.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.02%)</title><rect x="1079.3" y="181" width="0.2" height="15.0" fill="rgb(250,55,1)" rx="2" ry="2" />
<text  x="1082.27" y="191.5" ></text>
</g>
<g >
<title>m_free (120 samples, 2.43%)</title><rect x="854.2" y="149" width="28.7" height="15.0" fill="rgb(232,122,25)" rx="2" ry="2" />
<text  x="857.22" y="159.5" >m_..</text>
</g>
<g >
<title>memcpy_erms (22 samples, 0.45%)</title><rect x="392.2" y="69" width="5.2" height="15.0" fill="rgb(207,138,9)" rx="2" ry="2" />
<text  x="395.17" y="79.5" ></text>
</g>
<g >
<title>iflib_get_softc (3 samples, 0.06%)</title><rect x="1070.2" y="197" width="0.7" height="15.0" fill="rgb(237,10,2)" rx="2" ry="2" />
<text  x="1073.18" y="207.5" ></text>
</g>
<g >
<title>rn_match (289 samples, 5.86%)</title><rect x="506.3" y="37" width="69.1" height="15.0" fill="rgb(210,16,21)" rx="2" ry="2" />
<text  x="509.25" y="47.5" >rn_match</text>
</g>
<g >
<title>gtaskqueue_run_locked (1 samples, 0.02%)</title><rect x="1079.3" y="277" width="0.2" height="15.0" fill="rgb(210,58,15)" rx="2" ry="2" />
<text  x="1082.27" y="287.5" ></text>
</g>
<g >
<title>sleepq_broadcast (4 samples, 0.08%)</title><rect x="1077.4" y="213" width="0.9" height="15.0" fill="rgb(251,174,39)" rx="2" ry="2" />
<text  x="1080.36" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (10 samples, 0.20%)</title><rect x="1074.7" y="229" width="2.4" height="15.0" fill="rgb(226,8,36)" rx="2" ry="2" />
<text  x="1077.73" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (76 samples, 1.54%)</title><rect x="682.3" y="197" width="18.1" height="15.0" fill="rgb(229,200,5)" rx="2" ry="2" />
<text  x="685.27" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.04%)</title><rect x="594.5" y="197" width="0.5" height="15.0" fill="rgb(249,157,13)" rx="2" ry="2" />
<text  x="597.50" y="207.5" ></text>
</g>
<g >
<title>m_adj (1 samples, 0.02%)</title><rect x="575.4" y="149" width="0.2" height="15.0" fill="rgb(251,192,15)" rx="2" ry="2" />
<text  x="578.37" y="159.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,347 samples, 27.30%)</title><rect x="743.7" y="197" width="322.2" height="15.0" fill="rgb(241,31,8)" rx="2" ry="2" />
<text  x="746.73" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>intr_lookup_source (1 samples, 0.02%)</title><rect x="1184.0" y="261" width="0.3" height="15.0" fill="rgb(248,200,21)" rx="2" ry="2" />
<text  x="1187.02" y="271.5" ></text>
</g>
<g >
<title>memmove_erms (15 samples, 0.30%)</title><rect x="434.3" y="53" width="3.6" height="15.0" fill="rgb(244,15,37)" rx="2" ry="2" />
<text  x="437.26" y="63.5" ></text>
</g>
<g >
<title>_rm_rlock (66 samples, 1.34%)</title><rect x="457.2" y="69" width="15.8" height="15.0" fill="rgb(246,19,45)" rx="2" ry="2" />
<text  x="460.22" y="79.5" ></text>
</g>
<g >
<title>uma_zfree_arg (80 samples, 1.62%)</title><rect x="863.8" y="133" width="19.1" height="15.0" fill="rgb(235,0,22)" rx="2" ry="2" />
<text  x="866.79" y="143.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.04%)</title><rect x="1179.7" y="245" width="0.5" height="15.0" fill="rgb(223,108,45)" rx="2" ry="2" />
<text  x="1182.72" y="255.5" ></text>
</g>
<g >
<title>binuptime (2 samples, 0.04%)</title><rect x="1184.7" y="245" width="0.5" height="15.0" fill="rgb(224,94,6)" rx="2" ry="2" />
<text  x="1187.74" y="255.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="49.2" y="197" width="0.5" height="15.0" fill="rgb(212,143,8)" rx="2" ry="2" />
<text  x="52.22" y="207.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (7 samples, 0.14%)</title><rect x="44.0" y="229" width="1.6" height="15.0" fill="rgb(237,23,50)" rx="2" ry="2" />
<text  x="46.96" y="239.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (25 samples, 0.51%)</title><rect x="1172.5" y="229" width="6.0" height="15.0" fill="rgb(247,122,52)" rx="2" ry="2" />
<text  x="1175.54" y="239.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (121 samples, 2.45%)</title><rect x="363.0" y="37" width="28.9" height="15.0" fill="rgb(235,76,4)" rx="2" ry="2" />
<text  x="366.00" y="47.5" >if..</text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.02%)</title><rect x="32.5" y="101" width="0.2" height="15.0" fill="rgb(223,171,34)" rx="2" ry="2" />
<text  x="35.48" y="111.5" ></text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.08%)</title><rect x="579.7" y="197" width="0.9" height="15.0" fill="rgb(254,140,43)" rx="2" ry="2" />
<text  x="582.67" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (4 samples, 0.08%)</title><rect x="991.0" y="149" width="1.0" height="15.0" fill="rgb(239,158,31)" rx="2" ry="2" />
<text  x="994.02" y="159.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (79 samples, 1.60%)</title><rect x="628.7" y="181" width="18.9" height="15.0" fill="rgb(233,214,48)" rx="2" ry="2" />
<text  x="631.70" y="191.5" ></text>
</g>
<g >
<title>if_getafdata (6 samples, 0.12%)</title><rect x="416.6" y="53" width="1.4" height="15.0" fill="rgb(253,114,4)" rx="2" ry="2" />
<text  x="419.57" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.02%)</title><rect x="1079.3" y="261" width="0.2" height="15.0" fill="rgb(210,107,30)" rx="2" ry="2" />
<text  x="1082.27" y="271.5" ></text>
</g>
<g >
<title>memcmp (12 samples, 0.24%)</title><rect x="431.4" y="37" width="2.9" height="15.0" fill="rgb(246,38,43)" rx="2" ry="2" />
<text  x="434.39" y="47.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.04%)</title><rect x="359.2" y="37" width="0.4" height="15.0" fill="rgb(238,195,23)" rx="2" ry="2" />
<text  x="362.17" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (3 samples, 0.06%)</title><rect x="1079.5" y="37" width="0.7" height="15.0" fill="rgb(232,168,53)" rx="2" ry="2" />
<text  x="1082.51" y="47.5" ></text>
</g>
<g >
<title>sleepq_release (5 samples, 0.10%)</title><rect x="1071.4" y="229" width="1.2" height="15.0" fill="rgb(208,177,39)" rx="2" ry="2" />
<text  x="1074.38" y="239.5" ></text>
</g>
<g >
<title>et_start (1 samples, 0.02%)</title><rect x="1185.2" y="229" width="0.3" height="15.0" fill="rgb(253,140,17)" rx="2" ry="2" />
<text  x="1188.22" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (2 samples, 0.04%)</title><rect x="623.7" y="181" width="0.5" height="15.0" fill="rgb(252,182,36)" rx="2" ry="2" />
<text  x="626.68" y="191.5" ></text>
</g>
<g >
<title>msi_vector (5 samples, 0.10%)</title><rect x="1180.2" y="261" width="1.2" height="15.0" fill="rgb(228,29,7)" rx="2" ry="2" />
<text  x="1183.19" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1079.3" y="165" width="0.2" height="15.0" fill="rgb(240,228,1)" rx="2" ry="2" />
<text  x="1082.27" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (116 samples, 2.35%)</title><rect x="1011.3" y="165" width="27.8" height="15.0" fill="rgb(225,175,26)" rx="2" ry="2" />
<text  x="1014.35" y="175.5" >i..</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="1079.3" y="53" width="0.2" height="15.0" fill="rgb(242,45,37)" rx="2" ry="2" />
<text  x="1082.27" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="32.5" y="229" width="0.2" height="15.0" fill="rgb(238,122,39)" rx="2" ry="2" />
<text  x="35.48" y="239.5" ></text>
</g>
<g >
<title>ip6_input (1 samples, 0.02%)</title><rect x="1079.3" y="149" width="0.2" height="15.0" fill="rgb(205,109,13)" rx="2" ry="2" />
<text  x="1082.27" y="159.5" ></text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.10%)</title><rect x="1010.2" y="149" width="1.1" height="15.0" fill="rgb(222,63,0)" rx="2" ry="2" />
<text  x="1013.15" y="159.5" ></text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.02%)</title><rect x="32.5" y="117" width="0.2" height="15.0" fill="rgb(243,194,9)" rx="2" ry="2" />
<text  x="35.48" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (132 samples, 2.68%)</title><rect x="1079.5" y="261" width="31.6" height="15.0" fill="rgb(210,195,23)" rx="2" ry="2" />
<text  x="1082.51" y="271.5" >gt..</text>
</g>
<g >
<title>keg_alloc_slab (5 samples, 0.10%)</title><rect x="622.2" y="133" width="1.2" height="15.0" fill="rgb(249,79,29)" rx="2" ry="2" />
<text  x="625.24" y="143.5" ></text>
</g>
<g >
<title>nd6_resolve (169 samples, 3.43%)</title><rect x="397.4" y="69" width="40.5" height="15.0" fill="rgb(244,35,2)" rx="2" ry="2" />
<text  x="400.43" y="79.5" >nd6..</text>
</g>
<g >
<title>mb_dtor_mbuf (6 samples, 0.12%)</title><rect x="881.5" y="117" width="1.4" height="15.0" fill="rgb(254,180,36)" rx="2" ry="2" />
<text  x="884.49" y="127.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (201 samples, 4.07%)</title><rect x="1130.4" y="245" width="48.1" height="15.0" fill="rgb(246,95,15)" rx="2" ry="2" />
<text  x="1133.45" y="255.5" >ifli..</text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.02%)</title><rect x="1187.6" y="181" width="0.2" height="15.0" fill="rgb(214,192,41)" rx="2" ry="2" />
<text  x="1190.61" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (55 samples, 1.11%)</title><rect x="837.2" y="165" width="13.2" height="15.0" fill="rgb(206,90,3)" rx="2" ry="2" />
<text  x="840.24" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.02%)</title><rect x="1079.3" y="197" width="0.2" height="15.0" fill="rgb(215,146,9)" rx="2" ry="2" />
<text  x="1082.27" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (27 samples, 0.55%)</title><rect x="675.8" y="197" width="6.5" height="15.0" fill="rgb(253,15,45)" rx="2" ry="2" />
<text  x="678.81" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (18 samples, 0.36%)</title><rect x="1061.3" y="165" width="4.3" height="15.0" fill="rgb(243,57,29)" rx="2" ry="2" />
<text  x="1064.33" y="175.5" ></text>
</g>
<g >
<title>pmc_hook_handler (12 samples, 0.24%)</title><rect x="1186.7" y="213" width="2.8" height="15.0" fill="rgb(244,227,13)" rx="2" ry="2" />
<text  x="1189.65" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (57 samples, 1.16%)</title><rect x="343.6" y="37" width="13.7" height="15.0" fill="rgb(215,61,9)" rx="2" ry="2" />
<text  x="346.62" y="47.5" ></text>
</g>
<g >
<title>wakeup (9 samples, 0.18%)</title><rect x="1077.1" y="229" width="2.2" height="15.0" fill="rgb(211,62,6)" rx="2" ry="2" />
<text  x="1080.12" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (132 samples, 2.68%)</title><rect x="1079.5" y="85" width="31.6" height="15.0" fill="rgb(248,21,23)" rx="2" ry="2" />
<text  x="1082.51" y="95.5" >et..</text>
</g>
<g >
<title>netmap_rx_irq (3 samples, 0.06%)</title><rect x="733.7" y="213" width="0.7" height="15.0" fill="rgb(215,224,53)" rx="2" ry="2" />
<text  x="736.69" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (74 samples, 1.50%)</title><rect x="1093.4" y="37" width="17.7" height="15.0" fill="rgb(226,110,7)" rx="2" ry="2" />
<text  x="1096.38" y="47.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,409 samples, 28.56%)</title><rect x="734.4" y="229" width="337.0" height="15.0" fill="rgb(239,193,26)" rx="2" ry="2" />
<text  x="737.41" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>rxd_frag_to_sd (131 samples, 2.66%)</title><rect x="700.4" y="197" width="31.4" height="15.0" fill="rgb(226,207,11)" rx="2" ry="2" />
<text  x="703.45" y="207.5" >rx..</text>
</g>
<g >
<title>ifmp_ring_check_drainage (8 samples, 0.16%)</title><rect x="1066.6" y="213" width="1.9" height="15.0" fill="rgb(228,142,21)" rx="2" ry="2" />
<text  x="1069.60" y="223.5" ></text>
</g>
<g >
<title>ip6_findroute (407 samples, 8.25%)</title><rect x="478.0" y="85" width="97.4" height="15.0" fill="rgb(209,161,49)" rx="2" ry="2" />
<text  x="481.03" y="95.5" >ip6_findroute</text>
</g>
<g >
<title>netisr_dispatch_src (132 samples, 2.68%)</title><rect x="1079.5" y="197" width="31.6" height="15.0" fill="rgb(218,166,53)" rx="2" ry="2" />
<text  x="1082.51" y="207.5" >ne..</text>
</g>
<g >
<title>lradix6_lookup (318 samples, 6.45%)</title><rect x="499.3" y="53" width="76.1" height="15.0" fill="rgb(208,95,42)" rx="2" ry="2" />
<text  x="502.31" y="63.5" >lradix6_..</text>
</g>
<g >
<title>iflib_rxeof (2,846 samples, 57.68%)</title><rect x="53.0" y="213" width="680.7" height="15.0" fill="rgb(247,129,22)" rx="2" ry="2" />
<text  x="56.05" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ip6_input (1 samples, 0.02%)</title><rect x="32.5" y="165" width="0.2" height="15.0" fill="rgb(238,31,15)" rx="2" ry="2" />
<text  x="35.48" y="175.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (131 samples, 2.66%)</title><rect x="980.0" y="165" width="31.3" height="15.0" fill="rgb(236,219,42)" rx="2" ry="2" />
<text  x="983.02" y="175.5" >bu..</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="32.5" y="37" width="0.2" height="15.0" fill="rgb(239,45,24)" rx="2" ry="2" />
<text  x="35.48" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,741 samples, 35.29%)</title><rect x="159.0" y="133" width="416.4" height="15.0" fill="rgb(225,65,8)" rx="2" ry="2" />
<text  x="161.99" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ip6_input (1,672 samples, 33.89%)</title><rect x="175.5" y="117" width="399.9" height="15.0" fill="rgb(225,137,4)" rx="2" ry="2" />
<text  x="178.50" y="127.5" >ip6_input</text>
</g>
<g >
<title>ip6_tryforward (132 samples, 2.68%)</title><rect x="1079.5" y="117" width="31.6" height="15.0" fill="rgb(230,205,13)" rx="2" ry="2" />
<text  x="1082.51" y="127.5" >ip..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (16 samples, 0.32%)</title><rect x="624.2" y="181" width="3.8" height="15.0" fill="rgb(217,157,29)" rx="2" ry="2" />
<text  x="627.15" y="191.5" ></text>
</g>
<g >
<title>ether_output (1 samples, 0.02%)</title><rect x="32.5" y="133" width="0.2" height="15.0" fill="rgb(235,171,7)" rx="2" ry="2" />
<text  x="35.48" y="143.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.02%)</title><rect x="1079.3" y="229" width="0.2" height="15.0" fill="rgb(211,208,13)" rx="2" ry="2" />
<text  x="1082.27" y="239.5" ></text>
</g>
<g >
<title>_thread_lock (1 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(251,23,54)" rx="2" ry="2" />
<text  x="1192.76" y="223.5" ></text>
</g>
<g >
<title>statclock (1 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(211,84,1)" rx="2" ry="2" />
<text  x="1192.76" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="32.5" y="181" width="0.2" height="15.0" fill="rgb(228,219,13)" rx="2" ry="2" />
<text  x="35.48" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (12 samples, 0.24%)</title><rect x="1147.4" y="213" width="2.9" height="15.0" fill="rgb(207,120,5)" rx="2" ry="2" />
<text  x="1150.43" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (19 samples, 0.39%)</title><rect x="48.5" y="213" width="4.5" height="15.0" fill="rgb(237,158,0)" rx="2" ry="2" />
<text  x="51.50" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,364 samples, 88.45%)</title><rect x="35.6" y="245" width="1043.7" height="15.0" fill="rgb(237,10,8)" rx="2" ry="2" />
<text  x="38.59" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>Xapic_isr1 (32 samples, 0.65%)</title><rect x="10.0" y="277" width="7.7" height="15.0" fill="rgb(229,225,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.02%)</title><rect x="32.5" y="197" width="0.2" height="15.0" fill="rgb(236,134,1)" rx="2" ry="2" />
<text  x="35.48" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (11 samples, 0.22%)</title><rect x="1150.3" y="213" width="2.6" height="15.0" fill="rgb(213,182,4)" rx="2" ry="2" />
<text  x="1153.30" y="223.5" ></text>
</g>
<g >
<title>fib6_lookup (385 samples, 7.80%)</title><rect x="483.3" y="69" width="92.1" height="15.0" fill="rgb(212,14,44)" rx="2" ry="2" />
<text  x="486.29" y="79.5" >fib6_lookup</text>
</g>
<g >
<title>pmclog_process_callchain (3 samples, 0.06%)</title><rect x="1188.1" y="181" width="0.7" height="15.0" fill="rgb(238,17,33)" rx="2" ry="2" />
<text  x="1191.09" y="191.5" ></text>
</g>
<g >
<title>iflib_if_transmit (132 samples, 2.68%)</title><rect x="1079.5" y="69" width="31.6" height="15.0" fill="rgb(243,1,34)" rx="2" ry="2" />
<text  x="1082.51" y="79.5" >if..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (14 samples, 0.28%)</title><rect x="1058.0" y="165" width="3.3" height="15.0" fill="rgb(249,2,20)" rx="2" ry="2" />
<text  x="1060.99" y="175.5" ></text>
</g>
<g >
<title>ip6_tryforward (1 samples, 0.02%)</title><rect x="1079.3" y="133" width="0.2" height="15.0" fill="rgb(221,218,0)" rx="2" ry="2" />
<text  x="1082.27" y="143.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (15 samples, 0.30%)</title><rect x="644.0" y="165" width="3.6" height="15.0" fill="rgb(227,61,23)" rx="2" ry="2" />
<text  x="647.00" y="175.5" ></text>
</g>
<g >
<title>if_getsoftc (14 samples, 0.28%)</title><rect x="359.6" y="37" width="3.4" height="15.0" fill="rgb(249,7,41)" rx="2" ry="2" />
<text  x="362.65" y="47.5" ></text>
</g>
<g >
<title>lapic_eoi (5 samples, 0.10%)</title><rect x="1178.5" y="245" width="1.2" height="15.0" fill="rgb(248,212,3)" rx="2" ry="2" />
<text  x="1181.52" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,028 samples, 41.10%)</title><rect x="93.9" y="181" width="485.1" height="15.0" fill="rgb(241,157,15)" rx="2" ry="2" />
<text  x="96.94" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_input (2,070 samples, 41.95%)</title><rect x="83.9" y="197" width="495.1" height="15.0" fill="rgb(245,188,33)" rx="2" ry="2" />
<text  x="86.90" y="207.5" >ether_input</text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.02%)</title><rect x="1079.3" y="245" width="0.2" height="15.0" fill="rgb(226,214,17)" rx="2" ry="2" />
<text  x="1082.27" y="255.5" ></text>
</g>
<g >
<title>iflib_encap (653 samples, 13.23%)</title><rect x="882.9" y="181" width="156.2" height="15.0" fill="rgb(206,165,8)" rx="2" ry="2" />
<text  x="885.92" y="191.5" >iflib_encap</text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="1152.0" y="181" width="0.9" height="15.0" fill="rgb(226,180,13)" rx="2" ry="2" />
<text  x="1154.97" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.02%)</title><rect x="1079.3" y="69" width="0.2" height="15.0" fill="rgb(221,215,17)" rx="2" ry="2" />
<text  x="1082.27" y="79.5" ></text>
</g>
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="32.2" y="277" width="0.3" height="15.0" fill="rgb(252,175,35)" rx="2" ry="2" />
<text  x="35.24" y="287.5" ></text>
</g>
<g >
<title>iflib_if_transmit (307 samples, 6.22%)</title><rect x="318.8" y="53" width="73.4" height="15.0" fill="rgb(251,159,26)" rx="2" ry="2" />
<text  x="321.75" y="63.5" >iflib_if..</text>
</g>
<g >
<title>ip6_tryforward (1 samples, 0.02%)</title><rect x="32.5" y="149" width="0.2" height="15.0" fill="rgb(243,208,48)" rx="2" ry="2" />
<text  x="35.48" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="52.3" y="165" width="0.7" height="15.0" fill="rgb(244,197,23)" rx="2" ry="2" />
<text  x="55.33" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="32.5" y="53" width="0.2" height="15.0" fill="rgb(254,34,16)" rx="2" ry="2" />
<text  x="35.48" y="63.5" ></text>
</g>
</g>
</svg>
