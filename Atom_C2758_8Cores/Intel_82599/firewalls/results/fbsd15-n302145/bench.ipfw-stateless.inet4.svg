<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>iflib_completed_tx_reclaim (337 samples, 7.15%)</title><rect x="839.2" y="181" width="84.3" height="15.0" fill="rgb(237,119,43)" rx="2" ry="2" />
<text  x="842.20" y="191.5" >iflib_com..</text>
</g>
<g >
<title>memcmp (4 samples, 0.08%)</title><rect x="662.1" y="149" width="1.0" height="15.0" fill="rgb(238,175,45)" rx="2" ry="2" />
<text  x="665.05" y="159.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.02%)</title><rect x="1092.4" y="85" width="0.3" height="15.0" fill="rgb(231,78,29)" rx="2" ry="2" />
<text  x="1095.42" y="95.5" ></text>
</g>
<g >
<title>memcpy_erms (15 samples, 0.32%)</title><rect x="392.1" y="69" width="3.7" height="15.0" fill="rgb(219,71,23)" rx="2" ry="2" />
<text  x="395.07" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (69 samples, 1.46%)</title><rect x="1146.0" y="229" width="17.2" height="15.0" fill="rgb(236,121,8)" rx="2" ry="2" />
<text  x="1148.96" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (311 samples, 6.59%)</title><rect x="314.3" y="69" width="77.8" height="15.0" fill="rgb(230,51,35)" rx="2" ry="2" />
<text  x="317.26" y="79.5" >ether_ou..</text>
</g>
<g >
<title>pmap_kextract (6 samples, 0.13%)</title><rect x="906.5" y="133" width="1.5" height="15.0" fill="rgb(247,125,20)" rx="2" ry="2" />
<text  x="909.51" y="143.5" ></text>
</g>
<g >
<title>m_free (102 samples, 2.16%)</title><rect x="898.0" y="149" width="25.5" height="15.0" fill="rgb(234,38,35)" rx="2" ry="2" />
<text  x="901.00" y="159.5" >m..</text>
</g>
<g >
<title>m_pkthdr_init (13 samples, 0.28%)</title><rect x="754.4" y="197" width="3.2" height="15.0" fill="rgb(213,32,2)" rx="2" ry="2" />
<text  x="757.38" y="207.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (125 samples, 2.65%)</title><rect x="997.8" y="165" width="31.3" height="15.0" fill="rgb(212,128,50)" rx="2" ry="2" />
<text  x="1000.84" y="175.5" >bu..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (6 samples, 0.13%)</title><rect x="1163.2" y="229" width="1.5" height="15.0" fill="rgb(223,15,34)" rx="2" ry="2" />
<text  x="1166.23" y="239.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,050 samples, 22.26%)</title><rect x="811.9" y="213" width="262.8" height="15.0" fill="rgb(247,39,24)" rx="2" ry="2" />
<text  x="814.93" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>tcp_lro_flush_all (5 samples, 0.11%)</title><rect x="806.9" y="197" width="1.3" height="15.0" fill="rgb(241,31,0)" rx="2" ry="2" />
<text  x="809.93" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (2 samples, 0.04%)</title><rect x="27.8" y="277" width="0.5" height="15.0" fill="rgb(207,67,8)" rx="2" ry="2" />
<text  x="30.77" y="287.5" ></text>
</g>
<g >
<title>handleevents (16 samples, 0.34%)</title><rect x="1186.0" y="245" width="4.0" height="15.0" fill="rgb(223,123,17)" rx="2" ry="2" />
<text  x="1189.00" y="255.5" ></text>
</g>
<g >
<title>wakeup_any (2 samples, 0.04%)</title><rect x="27.8" y="69" width="0.5" height="15.0" fill="rgb(242,78,38)" rx="2" ry="2" />
<text  x="30.77" y="79.5" ></text>
</g>
<g >
<title>memmove_erms (16 samples, 0.34%)</title><rect x="310.3" y="53" width="4.0" height="15.0" fill="rgb(239,160,20)" rx="2" ry="2" />
<text  x="313.25" y="63.5" ></text>
</g>
<g >
<title>pmap_kextract (2 samples, 0.04%)</title><rect x="1027.1" y="133" width="0.5" height="15.0" fill="rgb(231,61,41)" rx="2" ry="2" />
<text  x="1030.11" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1092.4" y="213" width="0.3" height="15.0" fill="rgb(243,154,32)" rx="2" ry="2" />
<text  x="1095.42" y="223.5" ></text>
</g>
<g >
<title>m_tag_locate (8 samples, 0.17%)</title><rect x="535.4" y="53" width="2.0" height="15.0" fill="rgb(237,72,0)" rx="2" ry="2" />
<text  x="538.45" y="63.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1178.2" y="213" width="0.3" height="15.0" fill="rgb(212,228,39)" rx="2" ry="2" />
<text  x="1181.24" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (15 samples, 0.32%)</title><rect x="1070.4" y="165" width="3.8" height="15.0" fill="rgb(233,31,30)" rx="2" ry="2" />
<text  x="1073.40" y="175.5" ></text>
</g>
<g >
<title>ether_output (597 samples, 12.66%)</title><rect x="246.5" y="85" width="149.3" height="15.0" fill="rgb(239,92,31)" rx="2" ry="2" />
<text  x="249.45" y="95.5" >ether_output</text>
</g>
<g >
<title>bsearch4_lookup (2 samples, 0.04%)</title><rect x="444.6" y="53" width="0.5" height="15.0" fill="rgb(239,121,49)" rx="2" ry="2" />
<text  x="447.62" y="63.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.02%)</title><rect x="1092.4" y="181" width="0.3" height="15.0" fill="rgb(225,135,4)" rx="2" ry="2" />
<text  x="1095.42" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.02%)</title><rect x="1092.4" y="197" width="0.3" height="15.0" fill="rgb(234,176,3)" rx="2" ry="2" />
<text  x="1095.42" y="207.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (2 samples, 0.04%)</title><rect x="1188.2" y="181" width="0.5" height="15.0" fill="rgb(205,168,19)" rx="2" ry="2" />
<text  x="1191.25" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.02%)</title><rect x="1092.4" y="69" width="0.3" height="15.0" fill="rgb(228,109,39)" rx="2" ry="2" />
<text  x="1095.42" y="79.5" ></text>
</g>
<g >
<title>Xapic_isr1 (26 samples, 0.55%)</title><rect x="10.0" y="277" width="6.5" height="15.0" fill="rgb(220,8,31)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (24 samples, 0.51%)</title><rect x="1154.2" y="213" width="6.0" height="15.0" fill="rgb(206,103,54)" rx="2" ry="2" />
<text  x="1157.22" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (12 samples, 0.25%)</title><rect x="1089.4" y="213" width="3.0" height="15.0" fill="rgb(212,137,5)" rx="2" ry="2" />
<text  x="1092.41" y="223.5" ></text>
</g>
<g >
<title>ip_findroute (159 samples, 3.37%)</title><rect x="405.3" y="85" width="39.8" height="15.0" fill="rgb(248,93,47)" rx="2" ry="2" />
<text  x="408.34" y="95.5" >ip_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (1 samples, 0.02%)</title><rect x="1092.4" y="277" width="0.3" height="15.0" fill="rgb(249,91,11)" rx="2" ry="2" />
<text  x="1095.42" y="287.5" ></text>
</g>
<g >
<title>in_lltable_lookup (27 samples, 0.57%)</title><rect x="303.5" y="53" width="6.8" height="15.0" fill="rgb(219,22,42)" rx="2" ry="2" />
<text  x="306.50" y="63.5" ></text>
</g>
<g >
<title>iflib_get_ifp (5 samples, 0.11%)</title><rect x="1178.5" y="213" width="1.2" height="15.0" fill="rgb(210,171,5)" rx="2" ry="2" />
<text  x="1181.49" y="223.5" ></text>
</g>
<g >
<title>all (4,716 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(233,198,4)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>iflib_if_transmit (259 samples, 5.49%)</title><rect x="327.3" y="53" width="64.8" height="15.0" fill="rgb(223,33,25)" rx="2" ry="2" />
<text  x="330.27" y="63.5" >iflib_i..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.04%)</title><rect x="1074.2" y="181" width="0.5" height="15.0" fill="rgb(237,134,35)" rx="2" ry="2" />
<text  x="1077.15" y="191.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (19 samples, 0.40%)</title><rect x="1176.2" y="229" width="4.8" height="15.0" fill="rgb(217,163,22)" rx="2" ry="2" />
<text  x="1179.24" y="239.5" ></text>
</g>
<g >
<title>ip_input (2 samples, 0.04%)</title><rect x="27.8" y="165" width="0.5" height="15.0" fill="rgb(209,176,37)" rx="2" ry="2" />
<text  x="30.77" y="175.5" ></text>
</g>
<g >
<title>pagezero_erms (6 samples, 0.13%)</title><rect x="700.1" y="85" width="1.5" height="15.0" fill="rgb(218,182,37)" rx="2" ry="2" />
<text  x="703.08" y="95.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="1164.5" y="213" width="0.2" height="15.0" fill="rgb(228,138,47)" rx="2" ry="2" />
<text  x="1167.48" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,055 samples, 64.78%)</title><rect x="44.3" y="229" width="764.4" height="15.0" fill="rgb(211,45,40)" rx="2" ry="2" />
<text  x="47.28" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ipfw_chk (400 samples, 8.48%)</title><rect x="556.7" y="53" width="100.1" height="15.0" fill="rgb(221,31,3)" rx="2" ry="2" />
<text  x="559.71" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>wakeup_any (12 samples, 0.25%)</title><rect x="1160.2" y="213" width="3.0" height="15.0" fill="rgb(220,101,33)" rx="2" ry="2" />
<text  x="1163.22" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (59 samples, 1.25%)</title><rect x="757.6" y="197" width="14.8" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="760.63" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.04%)</title><rect x="27.8" y="101" width="0.5" height="15.0" fill="rgb(210,205,29)" rx="2" ry="2" />
<text  x="30.77" y="111.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.04%)</title><rect x="838.7" y="181" width="0.5" height="15.0" fill="rgb(242,19,50)" rx="2" ry="2" />
<text  x="841.70" y="191.5" ></text>
</g>
<g >
<title>tsc_get_config (3 samples, 0.06%)</title><rect x="1189.0" y="181" width="0.7" height="15.0" fill="rgb(224,154,22)" rx="2" ry="2" />
<text  x="1192.00" y="191.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.04%)</title><rect x="703.1" y="117" width="0.5" height="15.0" fill="rgb(214,23,29)" rx="2" ry="2" />
<text  x="706.09" y="127.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.06%)</title><rect x="43.5" y="229" width="0.8" height="15.0" fill="rgb(231,200,19)" rx="2" ry="2" />
<text  x="46.53" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (11 samples, 0.23%)</title><rect x="1151.5" y="213" width="2.7" height="15.0" fill="rgb(220,222,12)" rx="2" ry="2" />
<text  x="1154.47" y="223.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (5 samples, 0.11%)</title><rect x="32.3" y="245" width="1.2" height="15.0" fill="rgb(218,75,36)" rx="2" ry="2" />
<text  x="35.27" y="255.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (5 samples, 0.11%)</title><rect x="813.4" y="197" width="1.3" height="15.0" fill="rgb(227,62,47)" rx="2" ry="2" />
<text  x="816.43" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="1092.4" y="53" width="0.3" height="15.0" fill="rgb(241,103,0)" rx="2" ry="2" />
<text  x="1095.42" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (10 samples, 0.21%)</title><rect x="1084.7" y="229" width="2.5" height="15.0" fill="rgb(232,90,17)" rx="2" ry="2" />
<text  x="1087.66" y="239.5" ></text>
</g>
<g >
<title>iflib_fl_refill (207 samples, 4.39%)</title><rect x="676.1" y="197" width="51.8" height="15.0" fill="rgb(240,11,53)" rx="2" ry="2" />
<text  x="679.06" y="207.5" >iflib..</text>
</g>
<g >
<title>pmc_hook_handler (10 samples, 0.21%)</title><rect x="1187.2" y="213" width="2.5" height="15.0" fill="rgb(253,188,6)" rx="2" ry="2" />
<text  x="1190.25" y="223.5" ></text>
</g>
<g >
<title>iflib_get_softc (4 samples, 0.08%)</title><rect x="1080.2" y="197" width="1.0" height="15.0" fill="rgb(233,148,17)" rx="2" ry="2" />
<text  x="1083.16" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (1,883 samples, 39.93%)</title><rect x="189.7" y="101" width="471.1" height="15.0" fill="rgb(248,141,40)" rx="2" ry="2" />
<text  x="192.65" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>if_getsoftc (9 samples, 0.19%)</title><rect x="361.8" y="37" width="2.3" height="15.0" fill="rgb(230,204,38)" rx="2" ry="2" />
<text  x="364.80" y="47.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.06%)</title><rect x="838.0" y="181" width="0.7" height="15.0" fill="rgb(245,41,42)" rx="2" ry="2" />
<text  x="840.95" y="191.5" ></text>
</g>
<g >
<title>iflib_encap (507 samples, 10.75%)</title><rect x="923.5" y="181" width="126.9" height="15.0" fill="rgb(221,63,0)" rx="2" ry="2" />
<text  x="926.52" y="191.5" >iflib_encap</text>
</g>
<g >
<title>zone_alloc_item (4 samples, 0.08%)</title><rect x="701.6" y="117" width="1.0" height="15.0" fill="rgb(229,128,53)" rx="2" ry="2" />
<text  x="704.59" y="127.5" ></text>
</g>
<g >
<title>bus_dmamap_load (1 samples, 0.02%)</title><rect x="699.1" y="181" width="0.2" height="15.0" fill="rgb(218,64,16)" rx="2" ry="2" />
<text  x="702.08" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (8 samples, 0.17%)</title><rect x="45.0" y="213" width="2.0" height="15.0" fill="rgb(224,204,42)" rx="2" ry="2" />
<text  x="48.03" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (94 samples, 1.99%)</title><rect x="1092.7" y="69" width="23.5" height="15.0" fill="rgb(225,87,27)" rx="2" ry="2" />
<text  x="1095.67" y="79.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (28 samples, 0.59%)</title><rect x="889.7" y="165" width="7.1" height="15.0" fill="rgb(250,43,36)" rx="2" ry="2" />
<text  x="892.75" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,041 samples, 64.48%)</title><rect x="47.3" y="213" width="760.9" height="15.0" fill="rgb(237,121,0)" rx="2" ry="2" />
<text  x="50.28" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ip_input (2,003 samples, 42.47%)</title><rect x="159.6" y="117" width="501.2" height="15.0" fill="rgb(254,87,46)" rx="2" ry="2" />
<text  x="162.63" y="127.5" >ip_input</text>
</g>
<g >
<title>ipfw_chk (300 samples, 6.36%)</title><rect x="460.4" y="53" width="75.0" height="15.0" fill="rgb(245,172,20)" rx="2" ry="2" />
<text  x="463.38" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (10 samples, 0.21%)</title><rect x="1067.9" y="165" width="2.5" height="15.0" fill="rgb(245,92,9)" rx="2" ry="2" />
<text  x="1070.90" y="175.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (110 samples, 2.33%)</title><rect x="364.1" y="37" width="27.5" height="15.0" fill="rgb(212,210,45)" rx="2" ry="2" />
<text  x="367.05" y="47.5" >i..</text>
</g>
<g >
<title>ether_input (2 samples, 0.04%)</title><rect x="27.8" y="245" width="0.5" height="15.0" fill="rgb(219,221,53)" rx="2" ry="2" />
<text  x="30.77" y="255.5" ></text>
</g>
<g >
<title>ip_tryforward (94 samples, 1.99%)</title><rect x="1092.7" y="117" width="23.5" height="15.0" fill="rgb(235,82,53)" rx="2" ry="2" />
<text  x="1095.67" y="127.5" >i..</text>
</g>
<g >
<title>_rm_rlock (28 samples, 0.59%)</title><rect x="523.4" y="37" width="7.0" height="15.0" fill="rgb(251,63,10)" rx="2" ry="2" />
<text  x="526.44" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (53 samples, 1.12%)</title><rect x="1102.9" y="37" width="13.3" height="15.0" fill="rgb(214,144,50)" rx="2" ry="2" />
<text  x="1105.93" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (6 samples, 0.13%)</title><rect x="1027.6" y="149" width="1.5" height="15.0" fill="rgb(249,202,27)" rx="2" ry="2" />
<text  x="1030.61" y="159.5" ></text>
</g>
<g >
<title>m_adj (4 samples, 0.08%)</title><rect x="661.1" y="149" width="1.0" height="15.0" fill="rgb(231,185,25)" rx="2" ry="2" />
<text  x="664.05" y="159.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="47.0" y="213" width="0.3" height="15.0" fill="rgb(228,225,7)" rx="2" ry="2" />
<text  x="50.03" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (39 samples, 0.83%)</title><rect x="349.5" y="37" width="9.8" height="15.0" fill="rgb(238,7,25)" rx="2" ry="2" />
<text  x="352.54" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (94 samples, 1.99%)</title><rect x="1092.7" y="229" width="23.5" height="15.0" fill="rgb(244,186,48)" rx="2" ry="2" />
<text  x="1095.67" y="239.5" >i..</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="1092.4" y="37" width="0.3" height="15.0" fill="rgb(245,28,33)" rx="2" ry="2" />
<text  x="1095.42" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (76 samples, 1.61%)</title><rect x="735.4" y="197" width="19.0" height="15.0" fill="rgb(250,92,3)" rx="2" ry="2" />
<text  x="738.36" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (6 samples, 0.13%)</title><rect x="1150.0" y="213" width="1.5" height="15.0" fill="rgb(242,212,0)" rx="2" ry="2" />
<text  x="1152.97" y="223.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (9 samples, 0.19%)</title><rect x="41.3" y="229" width="2.2" height="15.0" fill="rgb(239,165,19)" rx="2" ry="2" />
<text  x="44.28" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (94 samples, 1.99%)</title><rect x="1092.7" y="53" width="23.5" height="15.0" fill="rgb(209,160,34)" rx="2" ry="2" />
<text  x="1095.67" y="63.5" >g..</text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.04%)</title><rect x="27.8" y="213" width="0.5" height="15.0" fill="rgb(205,109,26)" rx="2" ry="2" />
<text  x="30.77" y="223.5" ></text>
</g>
<g >
<title>fib4_lookup (57 samples, 1.21%)</title><rect x="430.9" y="69" width="14.2" height="15.0" fill="rgb(214,25,10)" rx="2" ry="2" />
<text  x="433.86" y="79.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (4 samples, 0.08%)</title><rect x="701.6" y="85" width="1.0" height="15.0" fill="rgb(212,141,30)" rx="2" ry="2" />
<text  x="704.59" y="95.5" ></text>
</g>
<g >
<title>doreti (15 samples, 0.32%)</title><rect x="28.3" y="277" width="3.7" height="15.0" fill="rgb(242,57,27)" rx="2" ry="2" />
<text  x="31.27" y="287.5" ></text>
</g>
<g >
<title>iflib_rxeof (2 samples, 0.04%)</title><rect x="27.8" y="261" width="0.5" height="15.0" fill="rgb(236,139,17)" rx="2" ry="2" />
<text  x="30.77" y="271.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.02%)</title><rect x="1092.4" y="229" width="0.3" height="15.0" fill="rgb(254,122,53)" rx="2" ry="2" />
<text  x="1095.42" y="239.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="663.3" y="197" width="0.3" height="15.0" fill="rgb(212,17,5)" rx="2" ry="2" />
<text  x="666.30" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="1091.4" y="197" width="1.0" height="15.0" fill="rgb(233,225,43)" rx="2" ry="2" />
<text  x="1094.42" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (94 samples, 1.99%)</title><rect x="1092.7" y="197" width="23.5" height="15.0" fill="rgb(209,153,31)" rx="2" ry="2" />
<text  x="1095.67" y="207.5" >n..</text>
</g>
<g >
<title>mb_ctor_mbuf (16 samples, 0.34%)</title><rect x="723.9" y="165" width="4.0" height="15.0" fill="rgb(205,67,15)" rx="2" ry="2" />
<text  x="726.85" y="175.5" ></text>
</g>
<g >
<title>intr_execute_handlers (267 samples, 5.66%)</title><rect x="1116.2" y="277" width="66.8" height="15.0" fill="rgb(249,41,10)" rx="2" ry="2" />
<text  x="1119.19" y="287.5" >intr_ex..</text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.02%)</title><rect x="27.5" y="277" width="0.3" height="15.0" fill="rgb(232,215,6)" rx="2" ry="2" />
<text  x="30.51" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (2 samples, 0.04%)</title><rect x="703.6" y="181" width="0.5" height="15.0" fill="rgb(211,206,45)" rx="2" ry="2" />
<text  x="706.59" y="191.5" ></text>
</g>
<g >
<title>keg_alloc_slab (13 samples, 0.28%)</title><rect x="699.3" y="133" width="3.3" height="15.0" fill="rgb(221,204,23)" rx="2" ry="2" />
<text  x="702.33" y="143.5" ></text>
</g>
<g >
<title>ip_input (94 samples, 1.99%)</title><rect x="1092.7" y="133" width="23.5" height="15.0" fill="rgb(236,0,17)" rx="2" ry="2" />
<text  x="1095.67" y="143.5" >i..</text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.17%)</title><rect x="1161.2" y="181" width="2.0" height="15.0" fill="rgb(241,229,13)" rx="2" ry="2" />
<text  x="1164.23" y="191.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,091 samples, 23.13%)</title><rect x="808.7" y="229" width="273.0" height="15.0" fill="rgb(218,172,36)" rx="2" ry="2" />
<text  x="811.68" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1075.7" y="213" width="0.2" height="15.0" fill="rgb(251,183,2)" rx="2" ry="2" />
<text  x="1078.65" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.04%)</title><rect x="27.8" y="117" width="0.5" height="15.0" fill="rgb(240,104,36)" rx="2" ry="2" />
<text  x="30.77" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (85 samples, 1.80%)</title><rect x="1029.1" y="165" width="21.3" height="15.0" fill="rgb(220,9,35)" rx="2" ry="2" />
<text  x="1032.11" y="175.5" >i..</text>
</g>
<g >
<title>uma_small_alloc (7 samples, 0.15%)</title><rect x="699.8" y="117" width="1.8" height="15.0" fill="rgb(250,162,30)" rx="2" ry="2" />
<text  x="702.83" y="127.5" ></text>
</g>
<g >
<title>lapic_handle_intr (9 samples, 0.19%)</title><rect x="1183.0" y="277" width="2.2" height="15.0" fill="rgb(248,140,14)" rx="2" ry="2" />
<text  x="1185.99" y="287.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (5 samples, 0.11%)</title><rect x="359.3" y="37" width="1.2" height="15.0" fill="rgb(238,115,7)" rx="2" ry="2" />
<text  x="362.30" y="47.5" ></text>
</g>
<g >
<title>ip_input (1 samples, 0.02%)</title><rect x="1092.4" y="149" width="0.3" height="15.0" fill="rgb(254,36,53)" rx="2" ry="2" />
<text  x="1095.42" y="159.5" ></text>
</g>
<g >
<title>fork_exit (4,238 samples, 89.86%)</title><rect x="32.0" y="277" width="1060.4" height="15.0" fill="rgb(231,123,38)" rx="2" ry="2" />
<text  x="35.02" y="287.5" >fork_exit</text>
</g>
<g >
<title>msi_vector (1 samples, 0.02%)</title><rect x="1182.7" y="261" width="0.3" height="15.0" fill="rgb(222,72,30)" rx="2" ry="2" />
<text  x="1185.74" y="271.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.08%)</title><rect x="1092.7" y="37" width="1.0" height="15.0" fill="rgb(243,73,53)" rx="2" ry="2" />
<text  x="1095.67" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (1 samples, 0.02%)</title><rect x="1092.4" y="133" width="0.3" height="15.0" fill="rgb(217,57,26)" rx="2" ry="2" />
<text  x="1095.42" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (30 samples, 0.64%)</title><rect x="727.9" y="197" width="7.5" height="15.0" fill="rgb(217,182,8)" rx="2" ry="2" />
<text  x="730.86" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.04%)</title><rect x="27.8" y="53" width="0.5" height="15.0" fill="rgb(222,229,52)" rx="2" ry="2" />
<text  x="30.77" y="63.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="702.3" y="69" width="0.3" height="15.0" fill="rgb(230,22,20)" rx="2" ry="2" />
<text  x="705.34" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (2 samples, 0.04%)</title><rect x="702.6" y="117" width="0.5" height="15.0" fill="rgb(249,212,28)" rx="2" ry="2" />
<text  x="705.59" y="127.5" ></text>
</g>
<g >
<title>arpresolve (116 samples, 2.46%)</title><rect x="285.2" y="69" width="29.1" height="15.0" fill="rgb(243,126,49)" rx="2" ry="2" />
<text  x="288.23" y="79.5" >ar..</text>
</g>
<g >
<title>lapic_handle_intr (1 samples, 0.02%)</title><rect x="660.8" y="149" width="0.3" height="15.0" fill="rgb(223,115,41)" rx="2" ry="2" />
<text  x="663.80" y="159.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="675.8" y="197" width="0.3" height="15.0" fill="rgb(248,206,50)" rx="2" ry="2" />
<text  x="678.81" y="207.5" ></text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(240,218,19)" rx="2" ry="2" />
<text  x="1192.75" y="239.5" ></text>
</g>
<g >
<title>ether_output (94 samples, 1.99%)</title><rect x="1092.7" y="101" width="23.5" height="15.0" fill="rgb(209,15,48)" rx="2" ry="2" />
<text  x="1095.67" y="111.5" >e..</text>
</g>
<g >
<title>pfil_mbuf_in (493 samples, 10.45%)</title><rect x="537.4" y="85" width="123.4" height="15.0" fill="rgb(215,34,22)" rx="2" ry="2" />
<text  x="540.45" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.06%)</title><rect x="147.9" y="133" width="0.7" height="15.0" fill="rgb(206,107,28)" rx="2" ry="2" />
<text  x="150.87" y="143.5" ></text>
</g>
<g >
<title>timercb (19 samples, 0.40%)</title><rect x="1185.2" y="261" width="4.8" height="15.0" fill="rgb(221,70,35)" rx="2" ry="2" />
<text  x="1188.25" y="271.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (180 samples, 3.82%)</title><rect x="1136.0" y="245" width="45.0" height="15.0" fill="rgb(253,81,48)" rx="2" ry="2" />
<text  x="1138.95" y="255.5" >ifli..</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="707.8" y="181" width="0.8" height="15.0" fill="rgb(229,94,48)" rx="2" ry="2" />
<text  x="710.84" y="191.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="391.6" y="37" width="0.5" height="15.0" fill="rgb(249,137,31)" rx="2" ry="2" />
<text  x="394.57" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (37 samples, 0.78%)</title><rect x="1093.7" y="37" width="9.2" height="15.0" fill="rgb(229,74,7)" rx="2" ry="2" />
<text  x="1096.67" y="47.5" ></text>
</g>
<g >
<title>ether_input (2,343 samples, 49.68%)</title><rect x="77.1" y="197" width="586.2" height="15.0" fill="rgb(217,167,8)" rx="2" ry="2" />
<text  x="80.06" y="207.5" >ether_input</text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.04%)</title><rect x="27.8" y="85" width="0.5" height="15.0" fill="rgb(237,161,17)" rx="2" ry="2" />
<text  x="30.77" y="95.5" ></text>
</g>
<g >
<title>ether_demux (2 samples, 0.04%)</title><rect x="27.8" y="197" width="0.5" height="15.0" fill="rgb(222,60,2)" rx="2" ry="2" />
<text  x="30.77" y="207.5" ></text>
</g>
<g >
<title>in_localip (38 samples, 0.81%)</title><rect x="395.8" y="85" width="9.5" height="15.0" fill="rgb(238,105,10)" rx="2" ry="2" />
<text  x="398.83" y="95.5" ></text>
</g>
<g >
<title>sleepq_lock (12 samples, 0.25%)</title><rect x="1160.2" y="197" width="3.0" height="15.0" fill="rgb(241,197,25)" rx="2" ry="2" />
<text  x="1163.22" y="207.5" ></text>
</g>
<g >
<title>lapic_eoi (6 samples, 0.13%)</title><rect x="1181.0" y="245" width="1.5" height="15.0" fill="rgb(226,58,41)" rx="2" ry="2" />
<text  x="1183.99" y="255.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (95 samples, 2.01%)</title><rect x="1050.4" y="181" width="23.8" height="15.0" fill="rgb(210,107,25)" rx="2" ry="2" />
<text  x="1053.38" y="191.5" >i..</text>
</g>
<g >
<title>ether_output (1 samples, 0.02%)</title><rect x="1092.4" y="117" width="0.3" height="15.0" fill="rgb(223,209,31)" rx="2" ry="2" />
<text  x="1095.42" y="127.5" ></text>
</g>
<g >
<title>pmc_process_samples (9 samples, 0.19%)</title><rect x="1187.5" y="197" width="2.2" height="15.0" fill="rgb(249,200,24)" rx="2" ry="2" />
<text  x="1190.50" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (15 samples, 0.32%)</title><rect x="704.1" y="181" width="3.7" height="15.0" fill="rgb(231,221,26)" rx="2" ry="2" />
<text  x="707.09" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="46.0" y="197" width="0.5" height="15.0" fill="rgb(238,203,41)" rx="2" ry="2" />
<text  x="49.03" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (5 samples, 0.11%)</title><rect x="674.6" y="197" width="1.2" height="15.0" fill="rgb(235,113,47)" rx="2" ry="2" />
<text  x="677.56" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (9 samples, 0.19%)</title><rect x="1164.7" y="229" width="2.3" height="15.0" fill="rgb(242,144,36)" rx="2" ry="2" />
<text  x="1167.73" y="239.5" ></text>
</g>
<g >
<title>intr_event_handle (232 samples, 4.92%)</title><rect x="1124.7" y="261" width="58.0" height="15.0" fill="rgb(223,9,41)" rx="2" ry="2" />
<text  x="1127.69" y="271.5" >intr_e..</text>
</g>
<g >
<title>intr_lookup_source (7 samples, 0.15%)</title><rect x="1183.5" y="261" width="1.7" height="15.0" fill="rgb(247,114,24)" rx="2" ry="2" />
<text  x="1186.49" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (37 samples, 0.78%)</title><rect x="1167.0" y="229" width="9.2" height="15.0" fill="rgb(242,198,27)" rx="2" ry="2" />
<text  x="1169.98" y="239.5" ></text>
</g>
<g >
<title>m_tag_locate (16 samples, 0.34%)</title><rect x="656.8" y="53" width="4.0" height="15.0" fill="rgb(227,90,0)" rx="2" ry="2" />
<text  x="659.80" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,307 samples, 48.92%)</title><rect x="86.1" y="181" width="577.2" height="15.0" fill="rgb(218,171,29)" rx="2" ry="2" />
<text  x="89.06" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>hardclock (13 samples, 0.28%)</title><rect x="1186.5" y="229" width="3.2" height="15.0" fill="rgb(226,147,3)" rx="2" ry="2" />
<text  x="1189.50" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (2 samples, 0.04%)</title><rect x="27.8" y="149" width="0.5" height="15.0" fill="rgb(252,131,51)" rx="2" ry="2" />
<text  x="30.77" y="159.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="699.6" y="117" width="0.2" height="15.0" fill="rgb(248,99,4)" rx="2" ry="2" />
<text  x="702.58" y="127.5" ></text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.02%)</title><rect x="1092.4" y="101" width="0.3" height="15.0" fill="rgb(238,177,24)" rx="2" ry="2" />
<text  x="1095.42" y="111.5" ></text>
</g>
<g >
<title>ether_demux (2,139 samples, 45.36%)</title><rect x="125.6" y="149" width="535.2" height="15.0" fill="rgb(205,61,20)" rx="2" ry="2" />
<text  x="128.60" y="159.5" >ether_demux</text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1188.7" y="181" width="0.3" height="15.0" fill="rgb(219,178,10)" rx="2" ry="2" />
<text  x="1191.75" y="191.5" ></text>
</g>
<g >
<title>zone_import (4 samples, 0.08%)</title><rect x="701.6" y="101" width="1.0" height="15.0" fill="rgb(236,83,26)" rx="2" ry="2" />
<text  x="704.59" y="111.5" ></text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.21%)</title><rect x="1082.2" y="229" width="2.5" height="15.0" fill="rgb(226,62,36)" rx="2" ry="2" />
<text  x="1085.16" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.11%)</title><rect x="360.5" y="37" width="1.3" height="15.0" fill="rgb(222,147,34)" rx="2" ry="2" />
<text  x="363.55" y="47.5" ></text>
</g>
<g >
<title>ipfw_check_packet (343 samples, 7.27%)</title><rect x="451.6" y="69" width="85.8" height="15.0" fill="rgb(226,173,18)" rx="2" ry="2" />
<text  x="454.62" y="79.5" >ipfw_check..</text>
</g>
<g >
<title>netisr_dispatch_src (94 samples, 1.99%)</title><rect x="1092.7" y="149" width="23.5" height="15.0" fill="rgb(213,55,27)" rx="2" ry="2" />
<text  x="1095.67" y="159.5" >n..</text>
</g>
<g >
<title>_rm_rlock (49 samples, 1.04%)</title><rect x="640.3" y="37" width="12.2" height="15.0" fill="rgb(220,74,45)" rx="2" ry="2" />
<text  x="643.28" y="47.5" ></text>
</g>
<g >
<title>ether_output (2 samples, 0.04%)</title><rect x="27.8" y="133" width="0.5" height="15.0" fill="rgb(250,83,28)" rx="2" ry="2" />
<text  x="30.77" y="143.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1164.2" y="213" width="0.3" height="15.0" fill="rgb(252,206,10)" rx="2" ry="2" />
<text  x="1167.23" y="223.5" ></text>
</g>
<g >
<title>_rm_runlock (20 samples, 0.42%)</title><rect x="530.4" y="37" width="5.0" height="15.0" fill="rgb(246,101,21)" rx="2" ry="2" />
<text  x="533.44" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (94 samples, 1.99%)</title><rect x="1092.7" y="85" width="23.5" height="15.0" fill="rgb(206,124,5)" rx="2" ry="2" />
<text  x="1095.67" y="95.5" >e..</text>
</g>
<g >
<title>sleepq_release (2 samples, 0.04%)</title><rect x="1081.7" y="229" width="0.5" height="15.0" fill="rgb(225,140,27)" rx="2" ry="2" />
<text  x="1084.66" y="239.5" ></text>
</g>
<g >
<title>ether_input (94 samples, 1.99%)</title><rect x="1092.7" y="213" width="23.5" height="15.0" fill="rgb(251,205,17)" rx="2" ry="2" />
<text  x="1095.67" y="223.5" >e..</text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.06%)</title><rect x="663.6" y="197" width="0.7" height="15.0" fill="rgb(224,169,6)" rx="2" ry="2" />
<text  x="666.55" y="207.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,039 samples, 22.03%)</title><rect x="814.7" y="197" width="260.0" height="15.0" fill="rgb(233,169,5)" rx="2" ry="2" />
<text  x="817.68" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ixgbe_write_reg (5 samples, 0.11%)</title><rect x="1179.7" y="213" width="1.3" height="15.0" fill="rgb(215,30,32)" rx="2" ry="2" />
<text  x="1182.74" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (94 samples, 1.99%)</title><rect x="1092.7" y="277" width="23.5" height="15.0" fill="rgb(250,228,0)" rx="2" ry="2" />
<text  x="1095.67" y="287.5" >g..</text>
</g>
<g >
<title>if_getcapenable (4 samples, 0.08%)</title><rect x="1074.7" y="213" width="1.0" height="15.0" fill="rgb(236,1,37)" rx="2" ry="2" />
<text  x="1077.65" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="663.1" y="149" width="0.2" height="15.0" fill="rgb(254,39,20)" rx="2" ry="2" />
<text  x="666.05" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,232 samples, 89.74%)</title><rect x="33.5" y="245" width="1058.9" height="15.0" fill="rgb(218,197,45)" rx="2" ry="2" />
<text  x="36.52" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (72 samples, 1.53%)</title><rect x="1009.6" y="149" width="18.0" height="15.0" fill="rgb(228,61,16)" rx="2" ry="2" />
<text  x="1012.60" y="159.5" ></text>
</g>
<g >
<title>ether_demux (94 samples, 1.99%)</title><rect x="1092.7" y="165" width="23.5" height="15.0" fill="rgb(214,18,16)" rx="2" ry="2" />
<text  x="1095.67" y="175.5" >e..</text>
</g>
<g >
<title>cache_alloc (17 samples, 0.36%)</title><rect x="699.3" y="165" width="4.3" height="15.0" fill="rgb(237,146,36)" rx="2" ry="2" />
<text  x="702.33" y="175.5" ></text>
</g>
<g >
<title>cpu_tick_calibration (1 samples, 0.02%)</title><rect x="1186.0" y="229" width="0.2" height="15.0" fill="rgb(231,97,39)" rx="2" ry="2" />
<text  x="1189.00" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.02%)</title><rect x="32.0" y="245" width="0.3" height="15.0" fill="rgb(233,51,0)" rx="2" ry="2" />
<text  x="35.02" y="255.5" ></text>
</g>
<g >
<title>sleepq_broadcast (6 samples, 0.13%)</title><rect x="1087.9" y="213" width="1.5" height="15.0" fill="rgb(208,149,10)" rx="2" ry="2" />
<text  x="1090.91" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (14 samples, 0.30%)</title><rect x="1078.2" y="213" width="3.5" height="15.0" fill="rgb(237,224,4)" rx="2" ry="2" />
<text  x="1081.16" y="223.5" ></text>
</g>
<g >
<title>if_getvnet (3 samples, 0.06%)</title><rect x="673.8" y="197" width="0.8" height="15.0" fill="rgb(218,167,33)" rx="2" ry="2" />
<text  x="676.81" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,238 samples, 89.86%)</title><rect x="32.0" y="261" width="1060.4" height="15.0" fill="rgb(209,95,19)" rx="2" ry="2" />
<text  x="35.02" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>_rm_runlock (17 samples, 0.36%)</title><rect x="652.5" y="37" width="4.3" height="15.0" fill="rgb(238,47,23)" rx="2" ry="2" />
<text  x="655.54" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (94 samples, 1.99%)</title><rect x="1092.7" y="261" width="23.5" height="15.0" fill="rgb(213,97,1)" rx="2" ry="2" />
<text  x="1095.67" y="271.5" >g..</text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.04%)</title><rect x="46.5" y="197" width="0.5" height="15.0" fill="rgb(225,72,32)" rx="2" ry="2" />
<text  x="49.53" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_timer (19 samples, 0.40%)</title><rect x="1185.2" y="277" width="4.8" height="15.0" fill="rgb(241,143,25)" rx="2" ry="2" />
<text  x="1188.25" y="287.5" ></text>
</g>
<g >
<title>m_freem (107 samples, 2.27%)</title><rect x="896.8" y="165" width="26.7" height="15.0" fill="rgb(251,114,1)" rx="2" ry="2" />
<text  x="899.75" y="175.5" >m..</text>
</g>
<g >
<title>ifmp_ring_check_drainage (9 samples, 0.19%)</title><rect x="1075.9" y="213" width="2.3" height="15.0" fill="rgb(225,172,2)" rx="2" ry="2" />
<text  x="1078.90" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (94 samples, 1.99%)</title><rect x="1092.7" y="245" width="23.5" height="15.0" fill="rgb(239,10,53)" rx="2" ry="2" />
<text  x="1095.67" y="255.5" >_..</text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="1092.4" y="165" width="0.3" height="15.0" fill="rgb(217,221,41)" rx="2" ry="2" />
<text  x="1095.42" y="175.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (1 samples, 0.02%)</title><rect x="43.3" y="213" width="0.2" height="15.0" fill="rgb(210,77,28)" rx="2" ry="2" />
<text  x="46.28" y="223.5" ></text>
</g>
<g >
<title>m_adj (29 samples, 0.61%)</title><rect x="140.6" y="133" width="7.3" height="15.0" fill="rgb(205,55,46)" rx="2" ry="2" />
<text  x="143.61" y="143.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (77 samples, 1.63%)</title><rect x="708.6" y="181" width="19.3" height="15.0" fill="rgb(217,40,13)" rx="2" ry="2" />
<text  x="711.59" y="191.5" ></text>
</g>
<g >
<title>netmap_rx_irq (2 samples, 0.04%)</title><rect x="808.2" y="213" width="0.5" height="15.0" fill="rgb(247,188,4)" rx="2" ry="2" />
<text  x="811.18" y="223.5" ></text>
</g>
<g >
<title>et_start (1 samples, 0.02%)</title><rect x="1186.2" y="229" width="0.3" height="15.0" fill="rgb(215,131,6)" rx="2" ry="2" />
<text  x="1189.25" y="239.5" ></text>
</g>
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="27.3" y="277" width="0.2" height="15.0" fill="rgb(243,97,28)" rx="2" ry="2" />
<text  x="30.26" y="287.5" ></text>
</g>
<g >
<title>if_getnumadomain (38 samples, 0.81%)</title><rect x="664.3" y="197" width="9.5" height="15.0" fill="rgb(212,83,31)" rx="2" ry="2" />
<text  x="667.30" y="207.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (6 samples, 0.13%)</title><rect x="922.0" y="117" width="1.5" height="15.0" fill="rgb(235,203,30)" rx="2" ry="2" />
<text  x="925.02" y="127.5" ></text>
</g>
<g >
<title>zone_import (17 samples, 0.36%)</title><rect x="699.3" y="149" width="4.3" height="15.0" fill="rgb(246,115,19)" rx="2" ry="2" />
<text  x="702.33" y="159.5" ></text>
</g>
<g >
<title>wakeup (21 samples, 0.45%)</title><rect x="1087.2" y="229" width="5.2" height="15.0" fill="rgb(220,81,2)" rx="2" ry="2" />
<text  x="1090.16" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="27.8" y="181" width="0.5" height="15.0" fill="rgb(244,190,16)" rx="2" ry="2" />
<text  x="30.77" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="1081.2" y="197" width="0.5" height="15.0" fill="rgb(247,195,48)" rx="2" ry="2" />
<text  x="1084.16" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (6 samples, 0.13%)</title><rect x="1148.5" y="213" width="1.5" height="15.0" fill="rgb(211,190,54)" rx="2" ry="2" />
<text  x="1151.46" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (43 samples, 0.91%)</title><rect x="16.5" y="277" width="10.8" height="15.0" fill="rgb(252,54,46)" rx="2" ry="2" />
<text  x="19.51" y="287.5" ></text>
</g>
<g >
<title>ipfw_check_packet (464 samples, 9.84%)</title><rect x="544.7" y="69" width="116.1" height="15.0" fill="rgb(215,59,45)" rx="2" ry="2" />
<text  x="547.70" y="79.5" >ipfw_check_pac..</text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1188.0" y="181" width="0.2" height="15.0" fill="rgb(239,227,46)" rx="2" ry="2" />
<text  x="1191.00" y="191.5" ></text>
</g>
<g >
<title>binuptime (2 samples, 0.04%)</title><rect x="1185.5" y="245" width="0.5" height="15.0" fill="rgb(246,42,28)" rx="2" ry="2" />
<text  x="1188.50" y="255.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.02%)</title><rect x="1092.4" y="261" width="0.3" height="15.0" fill="rgb(230,19,26)" rx="2" ry="2" />
<text  x="1095.42" y="271.5" ></text>
</g>
<g >
<title>ether_nh_input (2,255 samples, 47.82%)</title><rect x="99.1" y="165" width="564.2" height="15.0" fill="rgb(247,61,47)" rx="2" ry="2" />
<text  x="102.08" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="85.6" y="181" width="0.5" height="15.0" fill="rgb(211,218,22)" rx="2" ry="2" />
<text  x="88.56" y="191.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (5 samples, 0.11%)</title><rect x="1008.3" y="149" width="1.3" height="15.0" fill="rgb(206,212,24)" rx="2" ry="2" />
<text  x="1011.35" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="27.8" y="229" width="0.5" height="15.0" fill="rgb(219,219,45)" rx="2" ry="2" />
<text  x="30.77" y="239.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (138 samples, 2.93%)</title><rect x="772.4" y="197" width="34.5" height="15.0" fill="rgb(205,57,35)" rx="2" ry="2" />
<text  x="775.40" y="207.5" >rx..</text>
</g>
<g >
<title>bsearch4_lookup (78 samples, 1.65%)</title><rect x="411.3" y="69" width="19.6" height="15.0" fill="rgb(208,223,28)" rx="2" ry="2" />
<text  x="414.34" y="79.5" ></text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.02%)</title><rect x="1092.4" y="245" width="0.3" height="15.0" fill="rgb(212,157,0)" rx="2" ry="2" />
<text  x="1095.42" y="255.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (4 samples, 0.08%)</title><rect x="702.6" y="133" width="1.0" height="15.0" fill="rgb(240,149,27)" rx="2" ry="2" />
<text  x="705.59" y="143.5" ></text>
</g>
<g >
<title>cache_alloc_retry (17 samples, 0.36%)</title><rect x="699.3" y="181" width="4.3" height="15.0" fill="rgb(249,181,11)" rx="2" ry="2" />
<text  x="702.33" y="191.5" ></text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.02%)</title><rect x="1182.5" y="245" width="0.2" height="15.0" fill="rgb(229,45,13)" rx="2" ry="2" />
<text  x="1185.49" y="255.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (369 samples, 7.82%)</title><rect x="445.1" y="85" width="92.3" height="15.0" fill="rgb(227,223,30)" rx="2" ry="2" />
<text  x="448.12" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>uma_zfree_arg (62 samples, 1.31%)</title><rect x="908.0" y="133" width="15.5" height="15.0" fill="rgb(217,190,15)" rx="2" ry="2" />
<text  x="911.01" y="143.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (6 samples, 0.13%)</title><rect x="700.1" y="101" width="1.5" height="15.0" fill="rgb(217,163,45)" rx="2" ry="2" />
<text  x="703.08" y="111.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="27.8" y="37" width="0.5" height="15.0" fill="rgb(233,150,35)" rx="2" ry="2" />
<text  x="30.77" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (94 samples, 1.99%)</title><rect x="1092.7" y="181" width="23.5" height="15.0" fill="rgb(234,10,20)" rx="2" ry="2" />
<text  x="1095.67" y="191.5" >e..</text>
</g>
<g >
<title>netisr_dispatch_src (2,047 samples, 43.41%)</title><rect x="148.6" y="133" width="512.2" height="15.0" fill="rgb(209,58,7)" rx="2" ry="2" />
<text  x="151.62" y="143.5" >netisr_dispatch_src</text>
</g>
</g>
</svg>
