<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>lapic_handle_timer (23 samples, 0.45%)</title><rect x="1184.7" y="277" width="5.3" height="15.0" fill="rgb(246,48,49)" rx="2" ry="2" />
<text  x="1187.70" y="287.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,570 samples, 30.68%)</title><rect x="706.9" y="213" width="362.0" height="15.0" fill="rgb(226,196,25)" rx="2" ry="2" />
<text  x="709.88" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.06%)</title><rect x="33.5" y="245" width="0.7" height="15.0" fill="rgb(247,91,8)" rx="2" ry="2" />
<text  x="36.52" y="255.5" ></text>
</g>
<g >
<title>timercb (22 samples, 0.43%)</title><rect x="1184.9" y="261" width="5.1" height="15.0" fill="rgb(246,101,40)" rx="2" ry="2" />
<text  x="1187.93" y="271.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (12 samples, 0.23%)</title><rect x="1154.0" y="229" width="2.8" height="15.0" fill="rgb(210,107,33)" rx="2" ry="2" />
<text  x="1157.03" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (3 samples, 0.06%)</title><rect x="1080.0" y="133" width="0.7" height="15.0" fill="rgb(209,28,12)" rx="2" ry="2" />
<text  x="1083.00" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (3 samples, 0.06%)</title><rect x="30.5" y="117" width="0.7" height="15.0" fill="rgb(226,93,19)" rx="2" ry="2" />
<text  x="33.52" y="127.5" ></text>
</g>
<g >
<title>if_getsoftc (10 samples, 0.20%)</title><rect x="416.6" y="37" width="2.3" height="15.0" fill="rgb(234,110,5)" rx="2" ry="2" />
<text  x="419.55" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (140 samples, 2.74%)</title><rect x="1080.7" y="197" width="32.3" height="15.0" fill="rgb(237,175,30)" rx="2" ry="2" />
<text  x="1083.69" y="207.5" >ne..</text>
</g>
<g >
<title>ether_input (3 samples, 0.06%)</title><rect x="1080.0" y="229" width="0.7" height="15.0" fill="rgb(205,143,20)" rx="2" ry="2" />
<text  x="1083.00" y="239.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (10 samples, 0.20%)</title><rect x="42.7" y="229" width="2.4" height="15.0" fill="rgb(219,123,43)" rx="2" ry="2" />
<text  x="45.75" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (3 samples, 0.06%)</title><rect x="30.5" y="213" width="0.7" height="15.0" fill="rgb(243,37,43)" rx="2" ry="2" />
<text  x="33.52" y="223.5" ></text>
</g>
<g >
<title>zone_alloc_item (2 samples, 0.04%)</title><rect x="570.6" y="117" width="0.5" height="15.0" fill="rgb(218,4,38)" rx="2" ry="2" />
<text  x="573.60" y="127.5" ></text>
</g>
<g >
<title>ip_input (140 samples, 2.74%)</title><rect x="1080.7" y="133" width="32.3" height="15.0" fill="rgb(209,224,18)" rx="2" ry="2" />
<text  x="1083.69" y="143.5" >ip..</text>
</g>
<g >
<title>bus_dmamap_load (1 samples, 0.02%)</title><rect x="568.3" y="181" width="0.2" height="15.0" fill="rgb(218,67,18)" rx="2" ry="2" />
<text  x="571.29" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.04%)</title><rect x="1080.7" y="37" width="0.5" height="15.0" fill="rgb(247,76,48)" rx="2" ry="2" />
<text  x="1083.69" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (17 samples, 0.33%)</title><rect x="349.2" y="53" width="3.9" height="15.0" fill="rgb(228,192,52)" rx="2" ry="2" />
<text  x="352.22" y="63.5" ></text>
</g>
<g >
<title>wakeup (13 samples, 0.25%)</title><rect x="1077.0" y="229" width="3.0" height="15.0" fill="rgb(229,23,23)" rx="2" ry="2" />
<text  x="1080.00" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (57 samples, 1.11%)</title><rect x="1140.9" y="229" width="13.1" height="15.0" fill="rgb(216,61,4)" rx="2" ry="2" />
<text  x="1143.88" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (3 samples, 0.06%)</title><rect x="30.5" y="149" width="0.7" height="15.0" fill="rgb(216,184,42)" rx="2" ry="2" />
<text  x="33.52" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (8 samples, 0.16%)</title><rect x="1176.4" y="213" width="1.8" height="15.0" fill="rgb(249,177,1)" rx="2" ry="2" />
<text  x="1179.39" y="223.5" ></text>
</g>
<g >
<title>in_localip (48 samples, 0.94%)</title><rect x="458.5" y="85" width="11.1" height="15.0" fill="rgb(206,183,3)" rx="2" ry="2" />
<text  x="461.52" y="95.5" ></text>
</g>
<g >
<title>ip_findroute (217 samples, 4.24%)</title><rect x="469.6" y="85" width="50.0" height="15.0" fill="rgb(220,86,27)" rx="2" ry="2" />
<text  x="472.59" y="95.5" >ip_fi..</text>
</g>
<g >
<title>pmc_hook_handler (13 samples, 0.25%)</title><rect x="1186.1" y="213" width="3.0" height="15.0" fill="rgb(254,65,13)" rx="2" ry="2" />
<text  x="1189.08" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (12 samples, 0.23%)</title><rect x="1149.4" y="213" width="2.8" height="15.0" fill="rgb(237,196,5)" rx="2" ry="2" />
<text  x="1152.41" y="223.5" ></text>
</g>
<g >
<title>in_lltable_lookup (43 samples, 0.84%)</title><rect x="339.3" y="53" width="9.9" height="15.0" fill="rgb(205,108,40)" rx="2" ry="2" />
<text  x="342.30" y="63.5" ></text>
</g>
<g >
<title>m_adj (30 samples, 0.59%)</title><rect x="162.0" y="133" width="6.9" height="15.0" fill="rgb(210,205,36)" rx="2" ry="2" />
<text  x="164.97" y="143.5" ></text>
</g>
<g >
<title>memcmp (9 samples, 0.18%)</title><rect x="520.8" y="149" width="2.1" height="15.0" fill="rgb(210,2,8)" rx="2" ry="2" />
<text  x="523.79" y="159.5" ></text>
</g>
<g >
<title>intr_execute_handlers (294 samples, 5.75%)</title><rect x="1113.0" y="277" width="67.8" height="15.0" fill="rgb(216,223,50)" rx="2" ry="2" />
<text  x="1115.98" y="287.5" >intr_ex..</text>
</g>
<g >
<title>ether_nh_input (3 samples, 0.06%)</title><rect x="1080.0" y="197" width="0.7" height="15.0" fill="rgb(212,90,35)" rx="2" ry="2" />
<text  x="1083.00" y="207.5" ></text>
</g>
<g >
<title>pagezero_erms (5 samples, 0.10%)</title><rect x="569.4" y="85" width="1.2" height="15.0" fill="rgb(222,178,7)" rx="2" ry="2" />
<text  x="572.44" y="95.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="51.7" y="181" width="0.3" height="15.0" fill="rgb(249,88,16)" rx="2" ry="2" />
<text  x="54.74" y="191.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (140 samples, 2.74%)</title><rect x="1036.4" y="181" width="32.3" height="15.0" fill="rgb(216,28,47)" rx="2" ry="2" />
<text  x="1039.42" y="191.5" >if..</text>
</g>
<g >
<title>Xtimerint (3 samples, 0.06%)</title><rect x="29.4" y="277" width="0.7" height="15.0" fill="rgb(249,161,10)" rx="2" ry="2" />
<text  x="32.37" y="287.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="1144.8" y="213" width="0.5" height="15.0" fill="rgb(211,131,16)" rx="2" ry="2" />
<text  x="1147.80" y="223.5" ></text>
</g>
<g >
<title>soft_get_config (3 samples, 0.06%)</title><rect x="1188.4" y="181" width="0.7" height="15.0" fill="rgb(234,129,42)" rx="2" ry="2" />
<text  x="1191.39" y="191.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.04%)</title><rect x="1189.1" y="229" width="0.4" height="15.0" fill="rgb(246,40,14)" rx="2" ry="2" />
<text  x="1192.08" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1175.7" y="213" width="0.2" height="15.0" fill="rgb(211,177,39)" rx="2" ry="2" />
<text  x="1178.70" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="30.5" y="37" width="0.7" height="15.0" fill="rgb(235,44,7)" rx="2" ry="2" />
<text  x="33.52" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (3 samples, 0.06%)</title><rect x="30.5" y="277" width="0.7" height="15.0" fill="rgb(205,175,41)" rx="2" ry="2" />
<text  x="33.52" y="287.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.16%)</title><rect x="414.7" y="37" width="1.9" height="15.0" fill="rgb(220,187,34)" rx="2" ry="2" />
<text  x="417.71" y="47.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="1081.2" y="37" width="0.2" height="15.0" fill="rgb(219,79,40)" rx="2" ry="2" />
<text  x="1084.15" y="47.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (191 samples, 3.73%)</title><rect x="658.0" y="197" width="44.0" height="15.0" fill="rgb(238,40,26)" rx="2" ry="2" />
<text  x="661.00" y="207.5" >rxd_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (4,535 samples, 88.63%)</title><rect x="34.2" y="245" width="1045.8" height="15.0" fill="rgb(230,163,25)" rx="2" ry="2" />
<text  x="37.21" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>cache_alloc (13 samples, 0.25%)</title><rect x="568.5" y="165" width="3.0" height="15.0" fill="rgb(221,14,12)" rx="2" ry="2" />
<text  x="571.52" y="175.5" ></text>
</g>
<g >
<title>doreti (9 samples, 0.18%)</title><rect x="31.2" y="277" width="2.1" height="15.0" fill="rgb(253,89,34)" rx="2" ry="2" />
<text  x="34.22" y="287.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (9 samples, 0.18%)</title><rect x="702.0" y="197" width="2.1" height="15.0" fill="rgb(235,147,35)" rx="2" ry="2" />
<text  x="705.04" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,860 samples, 55.89%)</title><rect x="45.1" y="229" width="659.5" height="15.0" fill="rgb(247,21,37)" rx="2" ry="2" />
<text  x="48.05" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.02%)</title><rect x="1180.1" y="261" width="0.2" height="15.0" fill="rgb(236,19,38)" rx="2" ry="2" />
<text  x="1183.08" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3 samples, 0.06%)</title><rect x="30.5" y="85" width="0.7" height="15.0" fill="rgb(223,85,9)" rx="2" ry="2" />
<text  x="33.52" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="1080.0" y="165" width="0.7" height="15.0" fill="rgb(236,92,4)" rx="2" ry="2" />
<text  x="1083.00" y="175.5" ></text>
</g>
<g >
<title>Xtimerint_pti (2 samples, 0.04%)</title><rect x="30.1" y="277" width="0.4" height="15.0" fill="rgb(206,36,34)" rx="2" ry="2" />
<text  x="33.06" y="287.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,545 samples, 30.19%)</title><rect x="712.6" y="197" width="356.3" height="15.0" fill="rgb(242,6,10)" rx="2" ry="2" />
<text  x="715.65" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.16%)</title><rect x="1071.0" y="229" width="1.9" height="15.0" fill="rgb(221,92,31)" rx="2" ry="2" />
<text  x="1074.01" y="239.5" ></text>
</g>
<g >
<title>iaf_get_config (2 samples, 0.04%)</title><rect x="1187.7" y="181" width="0.5" height="15.0" fill="rgb(207,73,34)" rx="2" ry="2" />
<text  x="1190.69" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_intr (17 samples, 0.33%)</title><rect x="1180.8" y="277" width="3.9" height="15.0" fill="rgb(250,89,5)" rx="2" ry="2" />
<text  x="1183.78" y="287.5" ></text>
</g>
<g >
<title>ip_tryforward (1,299 samples, 25.39%)</title><rect x="220.1" y="101" width="299.5" height="15.0" fill="rgb(232,11,21)" rx="2" ry="2" />
<text  x="223.08" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ether_output_frame (140 samples, 2.74%)</title><rect x="1080.7" y="85" width="32.3" height="15.0" fill="rgb(234,169,25)" rx="2" ry="2" />
<text  x="1083.69" y="95.5" >et..</text>
</g>
<g >
<title>intr_event_handle (252 samples, 4.92%)</title><rect x="1122.0" y="261" width="58.1" height="15.0" fill="rgb(246,72,28)" rx="2" ry="2" />
<text  x="1124.97" y="271.5" >intr_e..</text>
</g>
<g >
<title>iflib_if_transmit (3 samples, 0.06%)</title><rect x="1080.0" y="85" width="0.7" height="15.0" fill="rgb(251,13,30)" rx="2" ry="2" />
<text  x="1083.00" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,517 samples, 29.65%)</title><rect x="169.8" y="133" width="349.8" height="15.0" fill="rgb(254,23,35)" rx="2" ry="2" />
<text  x="172.81" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>handleevents (18 samples, 0.35%)</title><rect x="1185.8" y="245" width="4.2" height="15.0" fill="rgb(238,148,53)" rx="2" ry="2" />
<text  x="1188.85" y="255.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (2 samples, 0.04%)</title><rect x="571.1" y="133" width="0.4" height="15.0" fill="rgb(237,71,43)" rx="2" ry="2" />
<text  x="574.06" y="143.5" ></text>
</g>
<g >
<title>ether_nh_input (140 samples, 2.74%)</title><rect x="1080.7" y="181" width="32.3" height="15.0" fill="rgb(237,37,44)" rx="2" ry="2" />
<text  x="1083.69" y="191.5" >et..</text>
</g>
<g >
<title>ether_output_frame (3 samples, 0.06%)</title><rect x="1080.0" y="101" width="0.7" height="15.0" fill="rgb(230,227,15)" rx="2" ry="2" />
<text  x="1083.00" y="111.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (84 samples, 1.64%)</title><rect x="576.4" y="181" width="19.3" height="15.0" fill="rgb(205,129,6)" rx="2" ry="2" />
<text  x="579.36" y="191.5" ></text>
</g>
<g >
<title>iflib_get_ifp (2 samples, 0.04%)</title><rect x="1175.9" y="213" width="0.5" height="15.0" fill="rgb(217,10,14)" rx="2" ry="2" />
<text  x="1178.93" y="223.5" ></text>
</g>
<g >
<title>m_adj (5 samples, 0.10%)</title><rect x="519.6" y="149" width="1.2" height="15.0" fill="rgb(205,153,43)" rx="2" ry="2" />
<text  x="522.63" y="159.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,588 samples, 31.03%)</title><rect x="704.6" y="229" width="366.2" height="15.0" fill="rgb(205,26,53)" rx="2" ry="2" />
<text  x="707.58" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="30.5" y="181" width="0.7" height="15.0" fill="rgb(219,171,17)" rx="2" ry="2" />
<text  x="33.52" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="1080.0" y="213" width="0.7" height="15.0" fill="rgb(212,180,6)" rx="2" ry="2" />
<text  x="1083.00" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (95 samples, 1.86%)</title><rect x="607.3" y="197" width="21.9" height="15.0" fill="rgb(243,110,1)" rx="2" ry="2" />
<text  x="610.26" y="207.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (156 samples, 3.05%)</title><rect x="1000.4" y="165" width="36.0" height="15.0" fill="rgb(235,62,27)" rx="2" ry="2" />
<text  x="1003.44" y="175.5" >ixg..</text>
</g>
<g >
<title>gtaskqueue_run_locked (3 samples, 0.06%)</title><rect x="1080.0" y="277" width="0.7" height="15.0" fill="rgb(232,93,6)" rx="2" ry="2" />
<text  x="1083.00" y="287.5" ></text>
</g>
<g >
<title>uma_small_alloc (6 samples, 0.12%)</title><rect x="569.2" y="117" width="1.4" height="15.0" fill="rgb(224,0,33)" rx="2" ry="2" />
<text  x="572.21" y="127.5" ></text>
</g>
<g >
<title>if_getvnet (3 samples, 0.06%)</title><rect x="542.7" y="197" width="0.7" height="15.0" fill="rgb(242,85,50)" rx="2" ry="2" />
<text  x="545.69" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (3 samples, 0.06%)</title><rect x="30.5" y="261" width="0.7" height="15.0" fill="rgb(213,209,2)" rx="2" ry="2" />
<text  x="33.52" y="271.5" ></text>
</g>
<g >
<title>arpresolve (158 samples, 3.09%)</title><rect x="316.7" y="69" width="36.4" height="15.0" fill="rgb(210,143,1)" rx="2" ry="2" />
<text  x="319.70" y="79.5" >arp..</text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="1153.3" y="181" width="0.7" height="15.0" fill="rgb(231,76,30)" rx="2" ry="2" />
<text  x="1156.33" y="191.5" ></text>
</g>
<g >
<title>sleepq_broadcast (1 samples, 0.02%)</title><rect x="1077.7" y="213" width="0.2" height="15.0" fill="rgb(240,29,2)" rx="2" ry="2" />
<text  x="1080.70" y="223.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (7 samples, 0.14%)</title><rect x="41.1" y="229" width="1.6" height="15.0" fill="rgb(214,160,20)" rx="2" ry="2" />
<text  x="44.13" y="239.5" ></text>
</g>
<g >
<title>fib4_lookup (98 samples, 1.92%)</title><rect x="497.0" y="69" width="22.6" height="15.0" fill="rgb(248,111,44)" rx="2" ry="2" />
<text  x="500.04" y="79.5" >f..</text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.06%)</title><rect x="1080.0" y="37" width="0.7" height="15.0" fill="rgb(214,111,21)" rx="2" ry="2" />
<text  x="1083.00" y="47.5" ></text>
</g>
<g >
<title>zone_import (2 samples, 0.04%)</title><rect x="570.6" y="101" width="0.5" height="15.0" fill="rgb(252,132,3)" rx="2" ry="2" />
<text  x="573.60" y="111.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.04%)</title><rect x="1179.6" y="245" width="0.5" height="15.0" fill="rgb(208,49,24)" rx="2" ry="2" />
<text  x="1182.62" y="255.5" ></text>
</g>
<g >
<title>bsearch4_lookup (9 samples, 0.18%)</title><rect x="517.6" y="53" width="2.0" height="15.0" fill="rgb(246,168,15)" rx="2" ry="2" />
<text  x="520.56" y="63.5" ></text>
</g>
<g >
<title>bsearch4_lookup (100 samples, 1.95%)</title><rect x="474.0" y="69" width="23.0" height="15.0" fill="rgb(232,3,51)" rx="2" ry="2" />
<text  x="476.97" y="79.5" >b..</text>
</g>
<g >
<title>ether_demux (3 samples, 0.06%)</title><rect x="30.5" y="197" width="0.7" height="15.0" fill="rgb(242,95,14)" rx="2" ry="2" />
<text  x="33.52" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (5 samples, 0.10%)</title><rect x="1183.5" y="261" width="1.2" height="15.0" fill="rgb(248,93,11)" rx="2" ry="2" />
<text  x="1186.54" y="271.5" ></text>
</g>
<g >
<title>hardclock (14 samples, 0.27%)</title><rect x="1185.8" y="229" width="3.3" height="15.0" fill="rgb(213,149,36)" rx="2" ry="2" />
<text  x="1188.85" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (18 samples, 0.35%)</title><rect x="1145.3" y="213" width="4.1" height="15.0" fill="rgb(252,56,38)" rx="2" ry="2" />
<text  x="1148.26" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (3 samples, 0.06%)</title><rect x="40.4" y="229" width="0.7" height="15.0" fill="rgb(233,157,52)" rx="2" ry="2" />
<text  x="43.44" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.04%)</title><rect x="1144.3" y="213" width="0.5" height="15.0" fill="rgb(226,53,12)" rx="2" ry="2" />
<text  x="1147.34" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (53 samples, 1.04%)</title><rect x="17.1" y="277" width="12.3" height="15.0" fill="rgb(241,78,53)" rx="2" ry="2" />
<text  x="20.15" y="287.5" ></text>
</g>
<g >
<title>if_getnumadomain (75 samples, 1.47%)</title><rect x="525.4" y="197" width="17.3" height="15.0" fill="rgb(217,143,20)" rx="2" ry="2" />
<text  x="528.40" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (27 samples, 0.53%)</title><rect x="629.2" y="197" width="6.2" height="15.0" fill="rgb(239,125,30)" rx="2" ry="2" />
<text  x="632.17" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.06%)</title><rect x="522.9" y="149" width="0.7" height="15.0" fill="rgb(241,39,5)" rx="2" ry="2" />
<text  x="525.86" y="159.5" ></text>
</g>
<g >
<title>iflib_encap (724 samples, 14.15%)</title><rect x="869.5" y="181" width="166.9" height="15.0" fill="rgb(209,59,8)" rx="2" ry="2" />
<text  x="872.46" y="191.5" >iflib_encap</text>
</g>
<g >
<title>spinlock_enter (60 samples, 1.17%)</title><rect x="1081.4" y="37" width="13.8" height="15.0" fill="rgb(234,197,5)" rx="2" ry="2" />
<text  x="1084.39" y="47.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (20 samples, 0.39%)</title><rect x="591.1" y="165" width="4.6" height="15.0" fill="rgb(254,213,47)" rx="2" ry="2" />
<text  x="594.12" y="175.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (8 samples, 0.16%)</title><rect x="867.6" y="117" width="1.9" height="15.0" fill="rgb(230,20,31)" rx="2" ry="2" />
<text  x="870.62" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,836 samples, 35.88%)</title><rect x="100.2" y="181" width="423.4" height="15.0" fill="rgb(254,97,28)" rx="2" ry="2" />
<text  x="103.17" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (60 samples, 1.17%)</title><rect x="1159.3" y="229" width="13.9" height="15.0" fill="rgb(247,105,36)" rx="2" ry="2" />
<text  x="1162.33" y="239.5" ></text>
</g>
<g >
<title>if_getnetmapadapter (1 samples, 0.02%)</title><rect x="704.3" y="197" width="0.3" height="15.0" fill="rgb(242,83,51)" rx="2" ry="2" />
<text  x="707.35" y="207.5" ></text>
</g>
<g >
<title>ip_input (3 samples, 0.06%)</title><rect x="30.5" y="165" width="0.7" height="15.0" fill="rgb(212,197,52)" rx="2" ry="2" />
<text  x="33.52" y="175.5" ></text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.02%)</title><rect x="747.5" y="181" width="0.2" height="15.0" fill="rgb(242,77,34)" rx="2" ry="2" />
<text  x="750.47" y="191.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (11 samples, 0.21%)</title><rect x="710.1" y="197" width="2.5" height="15.0" fill="rgb(226,122,2)" rx="2" ry="2" />
<text  x="713.11" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (6 samples, 0.12%)</title><rect x="1069.2" y="213" width="1.3" height="15.0" fill="rgb(245,61,54)" rx="2" ry="2" />
<text  x="1072.16" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (1,774 samples, 34.67%)</title><rect x="114.5" y="165" width="409.1" height="15.0" fill="rgb(245,55,6)" rx="2" ry="2" />
<text  x="117.46" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>m_free (102 samples, 1.99%)</title><rect x="845.9" y="149" width="23.6" height="15.0" fill="rgb(243,202,31)" rx="2" ry="2" />
<text  x="848.94" y="159.5" >m..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (1 samples, 0.02%)</title><rect x="568.3" y="165" width="0.2" height="15.0" fill="rgb(217,201,13)" rx="2" ry="2" />
<text  x="571.29" y="175.5" ></text>
</g>
<g >
<title>sched_priority (1 samples, 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(219,99,21)" rx="2" ry="2" />
<text  x="1192.77" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (8 samples, 0.16%)</title><rect x="1152.2" y="213" width="1.8" height="15.0" fill="rgb(214,187,36)" rx="2" ry="2" />
<text  x="1155.18" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (91 samples, 1.78%)</title><rect x="977.8" y="149" width="21.0" height="15.0" fill="rgb(240,5,21)" rx="2" ry="2" />
<text  x="980.84" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch (4 samples, 0.08%)</title><rect x="168.9" y="133" width="0.9" height="15.0" fill="rgb(219,15,40)" rx="2" ry="2" />
<text  x="171.89" y="143.5" ></text>
</g>
<g >
<title>wakeup_any (3 samples, 0.06%)</title><rect x="1080.0" y="53" width="0.7" height="15.0" fill="rgb(242,155,21)" rx="2" ry="2" />
<text  x="1083.00" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="50.1" y="197" width="0.7" height="15.0" fill="rgb(247,115,5)" rx="2" ry="2" />
<text  x="53.13" y="207.5" ></text>
</g>
<g >
<title>ether_input (1,900 samples, 37.13%)</title><rect x="85.4" y="197" width="438.2" height="15.0" fill="rgb(207,63,15)" rx="2" ry="2" />
<text  x="88.41" y="207.5" >ether_input</text>
</g>
<g >
<title>iflib_rxeof (3 samples, 0.06%)</title><rect x="1080.0" y="245" width="0.7" height="15.0" fill="rgb(251,129,41)" rx="2" ry="2" />
<text  x="1083.00" y="255.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="575.7" y="181" width="0.7" height="15.0" fill="rgb(226,11,4)" rx="2" ry="2" />
<text  x="578.67" y="191.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.04%)</title><rect x="1189.5" y="213" width="0.5" height="15.0" fill="rgb(206,102,34)" rx="2" ry="2" />
<text  x="1192.54" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (4 samples, 0.08%)</title><rect x="50.8" y="197" width="0.9" height="15.0" fill="rgb(215,126,0)" rx="2" ry="2" />
<text  x="53.82" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (140 samples, 2.74%)</title><rect x="1080.7" y="277" width="32.3" height="15.0" fill="rgb(228,116,11)" rx="2" ry="2" />
<text  x="1083.69" y="287.5" >gt..</text>
</g>
<g >
<title>ether_demux (140 samples, 2.74%)</title><rect x="1080.7" y="165" width="32.3" height="15.0" fill="rgb(217,88,15)" rx="2" ry="2" />
<text  x="1083.69" y="175.5" >et..</text>
</g>
<g >
<title>ether_demux (3 samples, 0.06%)</title><rect x="1080.0" y="181" width="0.7" height="15.0" fill="rgb(253,158,10)" rx="2" ry="2" />
<text  x="1083.00" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="1079.8" y="197" width="0.2" height="15.0" fill="rgb(208,142,6)" rx="2" ry="2" />
<text  x="1082.77" y="207.5" ></text>
</g>
<g >
<title>uma_zfree_arg (74 samples, 1.45%)</title><rect x="852.4" y="133" width="17.1" height="15.0" fill="rgb(245,73,17)" rx="2" ry="2" />
<text  x="855.40" y="143.5" ></text>
</g>
<g >
<title>iflib_fl_refill (221 samples, 4.32%)</title><rect x="544.8" y="197" width="50.9" height="15.0" fill="rgb(225,115,15)" rx="2" ry="2" />
<text  x="547.77" y="207.5" >iflib..</text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.02%)</title><rect x="1188.2" y="181" width="0.2" height="15.0" fill="rgb(246,145,32)" rx="2" ry="2" />
<text  x="1191.16" y="191.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (203 samples, 3.97%)</title><rect x="1131.4" y="245" width="46.8" height="15.0" fill="rgb(228,214,6)" rx="2" ry="2" />
<text  x="1134.43" y="255.5" >ifli..</text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.14%)</title><rect x="745.9" y="181" width="1.6" height="15.0" fill="rgb(215,3,22)" rx="2" ry="2" />
<text  x="748.86" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (1 samples, 0.02%)</title><rect x="1070.5" y="213" width="0.3" height="15.0" fill="rgb(226,95,37)" rx="2" ry="2" />
<text  x="1073.55" y="223.5" ></text>
</g>
<g >
<title>ether_input (3 samples, 0.06%)</title><rect x="30.5" y="245" width="0.7" height="15.0" fill="rgb(213,204,35)" rx="2" ry="2" />
<text  x="33.52" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (11 samples, 0.21%)</title><rect x="1156.8" y="229" width="2.5" height="15.0" fill="rgb(215,83,19)" rx="2" ry="2" />
<text  x="1159.79" y="239.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (4 samples, 0.08%)</title><rect x="413.8" y="37" width="0.9" height="15.0" fill="rgb(246,209,4)" rx="2" ry="2" />
<text  x="416.79" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (152 samples, 2.97%)</title><rect x="418.9" y="37" width="35.0" height="15.0" fill="rgb(217,53,0)" rx="2" ry="2" />
<text  x="421.86" y="47.5" >if..</text>
</g>
<g >
<title>_task_fn_rx (140 samples, 2.74%)</title><rect x="1080.7" y="245" width="32.3" height="15.0" fill="rgb(254,126,17)" rx="2" ry="2" />
<text  x="1083.69" y="255.5" >_t..</text>
</g>
<g >
<title>iflib_if_transmit (140 samples, 2.74%)</title><rect x="1080.7" y="69" width="32.3" height="15.0" fill="rgb(249,225,13)" rx="2" ry="2" />
<text  x="1083.69" y="79.5" >if..</text>
</g>
<g >
<title>binuptime (2 samples, 0.04%)</title><rect x="1185.4" y="245" width="0.4" height="15.0" fill="rgb(213,48,1)" rx="2" ry="2" />
<text  x="1188.39" y="255.5" ></text>
</g>
<g >
<title>ip_input (1,460 samples, 28.53%)</title><rect x="183.0" y="117" width="336.6" height="15.0" fill="rgb(208,139,39)" rx="2" ry="2" />
<text  x="185.95" y="127.5" >ip_input</text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.06%)</title><rect x="851.7" y="133" width="0.7" height="15.0" fill="rgb(246,32,39)" rx="2" ry="2" />
<text  x="854.70" y="143.5" ></text>
</g>
<g >
<title>Xapic_isr1 (31 samples, 0.61%)</title><rect x="10.0" y="277" width="7.1" height="15.0" fill="rgb(223,67,22)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (2 samples, 0.04%)</title><rect x="42.3" y="213" width="0.4" height="15.0" fill="rgb(227,44,35)" rx="2" ry="2" />
<text  x="45.28" y="223.5" ></text>
</g>
<g >
<title>netmap_rx_irq (2 samples, 0.04%)</title><rect x="704.1" y="213" width="0.5" height="15.0" fill="rgb(223,22,40)" rx="2" ry="2" />
<text  x="707.12" y="223.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="570.8" y="85" width="0.3" height="15.0" fill="rgb(229,74,54)" rx="2" ry="2" />
<text  x="573.83" y="95.5" ></text>
</g>
<g >
<title>ether_output (3 samples, 0.06%)</title><rect x="30.5" y="133" width="0.7" height="15.0" fill="rgb(236,58,13)" rx="2" ry="2" />
<text  x="33.52" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3 samples, 0.06%)</title><rect x="1080.0" y="69" width="0.7" height="15.0" fill="rgb(213,51,50)" rx="2" ry="2" />
<text  x="1083.00" y="79.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.02%)</title><rect x="33.3" y="245" width="0.2" height="15.0" fill="rgb(216,208,37)" rx="2" ry="2" />
<text  x="36.29" y="255.5" ></text>
</g>
<g >
<title>pmap_kextract (7 samples, 0.14%)</title><rect x="998.8" y="149" width="1.6" height="15.0" fill="rgb(223,180,1)" rx="2" ry="2" />
<text  x="1001.83" y="159.5" ></text>
</g>
<g >
<title>iflib_if_transmit (3 samples, 0.06%)</title><rect x="30.5" y="101" width="0.7" height="15.0" fill="rgb(229,202,10)" rx="2" ry="2" />
<text  x="33.52" y="111.5" ></text>
</g>
<g >
<title>ether_output (3 samples, 0.06%)</title><rect x="1080.0" y="117" width="0.7" height="15.0" fill="rgb(244,108,22)" rx="2" ry="2" />
<text  x="1083.00" y="127.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="1070.8" y="229" width="0.2" height="15.0" fill="rgb(249,180,36)" rx="2" ry="2" />
<text  x="1073.78" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (140 samples, 2.74%)</title><rect x="1080.7" y="53" width="32.3" height="15.0" fill="rgb(207,62,11)" rx="2" ry="2" />
<text  x="1083.69" y="63.5" >gr..</text>
</g>
<g >
<title>iflib_if_transmit (354 samples, 6.92%)</title><rect x="372.3" y="53" width="81.6" height="15.0" fill="rgb(209,85,24)" rx="2" ry="2" />
<text  x="375.28" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (50 samples, 0.98%)</title><rect x="595.7" y="197" width="11.6" height="15.0" fill="rgb(246,64,30)" rx="2" ry="2" />
<text  x="598.73" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (140 samples, 2.74%)</title><rect x="1080.7" y="261" width="32.3" height="15.0" fill="rgb(254,38,40)" rx="2" ry="2" />
<text  x="1083.69" y="271.5" >gt..</text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,539 samples, 88.70%)</title><rect x="33.3" y="261" width="1046.7" height="15.0" fill="rgb(234,204,24)" rx="2" ry="2" />
<text  x="36.29" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>if_inc_counter (6 samples, 0.12%)</title><rect x="543.4" y="197" width="1.4" height="15.0" fill="rgb(253,74,38)" rx="2" ry="2" />
<text  x="546.39" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (9 samples, 0.18%)</title><rect x="569.0" y="133" width="2.1" height="15.0" fill="rgb(209,147,20)" rx="2" ry="2" />
<text  x="571.98" y="143.5" ></text>
</g>
<g >
<title>ether_demux (1,624 samples, 31.74%)</title><rect x="145.1" y="149" width="374.5" height="15.0" fill="rgb(240,175,49)" rx="2" ry="2" />
<text  x="148.13" y="159.5" >ether_demux</text>
</g>
<g >
<title>lapic_eoi (6 samples, 0.12%)</title><rect x="1178.2" y="245" width="1.4" height="15.0" fill="rgb(242,182,38)" rx="2" ry="2" />
<text  x="1181.24" y="255.5" ></text>
</g>
<g >
<title>ether_input (140 samples, 2.74%)</title><rect x="1080.7" y="213" width="32.3" height="15.0" fill="rgb(230,20,31)" rx="2" ry="2" />
<text  x="1083.69" y="223.5" >et..</text>
</g>
<g >
<title>all (5,117 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(233,164,1)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (72 samples, 1.41%)</title><rect x="397.2" y="37" width="16.6" height="15.0" fill="rgb(226,221,46)" rx="2" ry="2" />
<text  x="400.18" y="47.5" ></text>
</g>
<g >
<title>ip_input (3 samples, 0.06%)</title><rect x="1080.0" y="149" width="0.7" height="15.0" fill="rgb(246,41,19)" rx="2" ry="2" />
<text  x="1083.00" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.06%)</title><rect x="30.5" y="229" width="0.7" height="15.0" fill="rgb(205,115,11)" rx="2" ry="2" />
<text  x="33.52" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (3 samples, 0.06%)</title><rect x="1080.0" y="261" width="0.7" height="15.0" fill="rgb(231,75,21)" rx="2" ry="2" />
<text  x="1083.00" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (21 samples, 0.41%)</title><rect x="1058.6" y="165" width="4.8" height="15.0" fill="rgb(219,149,41)" rx="2" ry="2" />
<text  x="1061.56" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.06%)</title><rect x="99.5" y="181" width="0.7" height="15.0" fill="rgb(208,166,25)" rx="2" ry="2" />
<text  x="102.47" y="191.5" ></text>
</g>
<g >
<title>memcpy_erms (95 samples, 1.86%)</title><rect x="635.4" y="197" width="21.9" height="15.0" fill="rgb(206,158,22)" rx="2" ry="2" />
<text  x="638.40" y="207.5" >m..</text>
</g>
<g >
<title>ether_output_frame (437 samples, 8.54%)</title><rect x="353.1" y="69" width="100.8" height="15.0" fill="rgb(239,139,50)" rx="2" ry="2" />
<text  x="356.14" y="79.5" >ether_output..</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (1 samples, 0.02%)</title><rect x="49.9" y="197" width="0.2" height="15.0" fill="rgb(244,30,30)" rx="2" ry="2" />
<text  x="52.89" y="207.5" ></text>
</g>
<g >
<title>fork_exit (4,539 samples, 88.70%)</title><rect x="33.3" y="277" width="1046.7" height="15.0" fill="rgb(210,86,43)" rx="2" ry="2" />
<text  x="36.29" y="287.5" >fork_exit</text>
</g>
<g >
<title>ether_output (140 samples, 2.74%)</title><rect x="1080.7" y="101" width="32.3" height="15.0" fill="rgb(234,27,3)" rx="2" ry="2" />
<text  x="1083.69" y="111.5" >et..</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="1068.9" y="213" width="0.3" height="15.0" fill="rgb(231,198,39)" rx="2" ry="2" />
<text  x="1071.93" y="223.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (5 samples, 0.10%)</title><rect x="569.4" y="101" width="1.2" height="15.0" fill="rgb(246,214,0)" rx="2" ry="2" />
<text  x="572.44" y="111.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="998.6" y="133" width="0.2" height="15.0" fill="rgb(239,175,6)" rx="2" ry="2" />
<text  x="1001.60" y="143.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.08%)</title><rect x="1155.9" y="213" width="0.9" height="15.0" fill="rgb(253,94,8)" rx="2" ry="2" />
<text  x="1158.87" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.02%)</title><rect x="1068.7" y="181" width="0.2" height="15.0" fill="rgb(222,101,19)" rx="2" ry="2" />
<text  x="1071.70" y="191.5" ></text>
</g>
<g >
<title>zone_import (13 samples, 0.25%)</title><rect x="568.5" y="149" width="3.0" height="15.0" fill="rgb(228,151,39)" rx="2" ry="2" />
<text  x="571.52" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.16%)</title><rect x="523.6" y="197" width="1.8" height="15.0" fill="rgb(230,76,9)" rx="2" ry="2" />
<text  x="526.55" y="207.5" ></text>
</g>
<g >
<title>cache_alloc_retry (13 samples, 0.25%)</title><rect x="568.5" y="181" width="3.0" height="15.0" fill="rgb(242,69,24)" rx="2" ry="2" />
<text  x="571.52" y="191.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (22 samples, 0.43%)</title><rect x="1173.2" y="229" width="5.0" height="15.0" fill="rgb(226,76,6)" rx="2" ry="2" />
<text  x="1176.17" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (57 samples, 1.11%)</title><rect x="829.3" y="165" width="13.2" height="15.0" fill="rgb(215,26,39)" rx="2" ry="2" />
<text  x="832.34" y="175.5" ></text>
</g>
<g >
<title>wakeup_any (3 samples, 0.06%)</title><rect x="30.5" y="69" width="0.7" height="15.0" fill="rgb(224,156,19)" rx="2" ry="2" />
<text  x="33.52" y="79.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (135 samples, 2.64%)</title><rect x="969.3" y="165" width="31.1" height="15.0" fill="rgb(247,183,12)" rx="2" ry="2" />
<text  x="972.31" y="175.5" >bu..</text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.06%)</title><rect x="657.3" y="197" width="0.7" height="15.0" fill="rgb(237,86,9)" rx="2" ry="2" />
<text  x="660.31" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (140 samples, 2.74%)</title><rect x="1080.7" y="117" width="32.3" height="15.0" fill="rgb(250,94,9)" rx="2" ry="2" />
<text  x="1083.69" y="127.5" >ip..</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="51.7" y="197" width="0.3" height="15.0" fill="rgb(230,77,22)" rx="2" ry="2" />
<text  x="54.74" y="207.5" ></text>
</g>
<g >
<title>statclock (2 samples, 0.04%)</title><rect x="1189.5" y="229" width="0.5" height="15.0" fill="rgb(216,46,36)" rx="2" ry="2" />
<text  x="1192.54" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,828 samples, 55.27%)</title><rect x="52.0" y="213" width="652.1" height="15.0" fill="rgb(215,169,5)" rx="2" ry="2" />
<text  x="54.97" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>memcpy_erms (20 samples, 0.39%)</title><rect x="453.9" y="69" width="4.6" height="15.0" fill="rgb(238,42,28)" rx="2" ry="2" />
<text  x="456.91" y="79.5" ></text>
</g>
<g >
<title>iflib_rxeof (140 samples, 2.74%)</title><rect x="1080.7" y="229" width="32.3" height="15.0" fill="rgb(208,82,12)" rx="2" ry="2" />
<text  x="1083.69" y="239.5" >if..</text>
</g>
<g >
<title>spinlock_exit (77 samples, 1.50%)</title><rect x="1095.2" y="37" width="17.8" height="15.0" fill="rgb(217,102,31)" rx="2" ry="2" />
<text  x="1098.22" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (6 samples, 0.12%)</title><rect x="1152.6" y="197" width="1.4" height="15.0" fill="rgb(215,164,36)" rx="2" ry="2" />
<text  x="1155.64" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (13 samples, 0.25%)</title><rect x="49.0" y="213" width="3.0" height="15.0" fill="rgb(238,212,32)" rx="2" ry="2" />
<text  x="51.97" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (18 samples, 0.35%)</title><rect x="1072.9" y="229" width="4.1" height="15.0" fill="rgb(252,183,49)" rx="2" ry="2" />
<text  x="1075.85" y="239.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (528 samples, 10.32%)</title><rect x="747.7" y="181" width="121.8" height="15.0" fill="rgb(227,94,30)" rx="2" ry="2" />
<text  x="750.70" y="191.5" >iflib_completed..</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (5 samples, 0.10%)</title><rect x="976.7" y="149" width="1.1" height="15.0" fill="rgb(249,115,9)" rx="2" ry="2" />
<text  x="979.69" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="1070.5" y="197" width="0.3" height="15.0" fill="rgb(253,6,33)" rx="2" ry="2" />
<text  x="1073.55" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (23 samples, 0.45%)</title><rect x="1063.4" y="165" width="5.3" height="15.0" fill="rgb(209,40,43)" rx="2" ry="2" />
<text  x="1066.40" y="175.5" ></text>
</g>
<g >
<title>ether_output (798 samples, 15.60%)</title><rect x="274.5" y="85" width="184.0" height="15.0" fill="rgb(207,185,17)" rx="2" ry="2" />
<text  x="277.50" y="95.5" >ether_output</text>
</g>
<g >
<title>sleepq_lock (9 samples, 0.18%)</title><rect x="1077.9" y="213" width="2.1" height="15.0" fill="rgb(239,128,27)" rx="2" ry="2" />
<text  x="1080.93" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (18 samples, 0.35%)</title><rect x="571.5" y="181" width="4.2" height="15.0" fill="rgb(218,188,27)" rx="2" ry="2" />
<text  x="574.52" y="191.5" ></text>
</g>
<g >
<title>msi_vector (2 samples, 0.04%)</title><rect x="1180.3" y="261" width="0.5" height="15.0" fill="rgb(215,219,9)" rx="2" ry="2" />
<text  x="1183.31" y="271.5" ></text>
</g>
<g >
<title>m_freem (117 samples, 2.29%)</title><rect x="842.5" y="165" width="27.0" height="15.0" fill="rgb(218,87,43)" rx="2" ry="2" />
<text  x="845.48" y="175.5" >m..</text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.06%)</title><rect x="30.5" y="53" width="0.7" height="15.0" fill="rgb(241,62,35)" rx="2" ry="2" />
<text  x="33.52" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="51.7" y="165" width="0.3" height="15.0" fill="rgb(208,220,28)" rx="2" ry="2" />
<text  x="54.74" y="175.5" ></text>
</g>
<g >
<title>pmc_process_samples (10 samples, 0.20%)</title><rect x="1186.8" y="197" width="2.3" height="15.0" fill="rgb(232,222,6)" rx="2" ry="2" />
<text  x="1189.77" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (140 samples, 2.74%)</title><rect x="1080.7" y="149" width="32.3" height="15.0" fill="rgb(217,128,17)" rx="2" ry="2" />
<text  x="1083.69" y="159.5" >ne..</text>
</g>
</g>
</svg>
