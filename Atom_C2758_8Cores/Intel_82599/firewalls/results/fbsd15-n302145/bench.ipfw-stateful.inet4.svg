<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>pmclog_process_callchain (1 samples, 0.02%)</title><rect x="1188.6" y="181" width="0.3" height="15.0" fill="rgb(250,114,2)" rx="2" ry="2" />
<text  x="1191.61" y="191.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (3 samples, 0.07%)</title><rect x="38.9" y="213" width="0.8" height="15.0" fill="rgb(210,96,24)" rx="2" ry="2" />
<text  x="41.86" y="223.5" ></text>
</g>
<g >
<title>m_free (60 samples, 1.41%)</title><rect x="761.2" y="149" width="16.7" height="15.0" fill="rgb(254,182,18)" rx="2" ry="2" />
<text  x="764.24" y="159.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (8 samples, 0.19%)</title><rect x="646.6" y="165" width="2.2" height="15.0" fill="rgb(206,125,10)" rx="2" ry="2" />
<text  x="649.62" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (74 samples, 1.74%)</title><rect x="944.7" y="85" width="20.5" height="15.0" fill="rgb(226,220,4)" rx="2" ry="2" />
<text  x="947.68" y="95.5" ></text>
</g>
<g >
<title>iflib_encap (365 samples, 8.58%)</title><rect x="777.9" y="181" width="101.3" height="15.0" fill="rgb(212,67,9)" rx="2" ry="2" />
<text  x="780.89" y="191.5" >iflib_encap</text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.05%)</title><rect x="601.7" y="197" width="0.5" height="15.0" fill="rgb(209,103,29)" rx="2" ry="2" />
<text  x="604.67" y="207.5" ></text>
</g>
<g >
<title>_rm_runlock (13 samples, 0.31%)</title><rect x="451.8" y="37" width="3.6" height="15.0" fill="rgb(232,169,26)" rx="2" ry="2" />
<text  x="454.81" y="47.5" ></text>
</g>
<g >
<title>iflib_get_ifp (3 samples, 0.07%)</title><rect x="1176.1" y="213" width="0.9" height="15.0" fill="rgb(212,167,30)" rx="2" ry="2" />
<text  x="1179.12" y="223.5" ></text>
</g>
<g >
<title>memcmp (8 samples, 0.19%)</title><rect x="599.4" y="149" width="2.3" height="15.0" fill="rgb(226,136,29)" rx="2" ry="2" />
<text  x="602.44" y="159.5" ></text>
</g>
<g >
<title>ipfw_check_packet (332 samples, 7.81%)</title><rect x="1024.3" y="85" width="92.2" height="15.0" fill="rgb(226,180,54)" rx="2" ry="2" />
<text  x="1027.32" y="95.5" >ipfw_check_..</text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (8 samples, 0.19%)</title><rect x="632.5" y="101" width="2.2" height="15.0" fill="rgb(247,35,32)" rx="2" ry="2" />
<text  x="635.47" y="111.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (143 samples, 3.36%)</title><rect x="905.0" y="277" width="39.7" height="15.0" fill="rgb(254,36,32)" rx="2" ry="2" />
<text  x="907.99" y="287.5" >gta..</text>
</g>
<g >
<title>pfil_mbuf_in (332 samples, 7.81%)</title><rect x="1024.3" y="101" width="92.2" height="15.0" fill="rgb(205,213,12)" rx="2" ry="2" />
<text  x="1027.32" y="111.5" >pfil_mbuf_in</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (30 samples, 0.71%)</title><rect x="1162.2" y="229" width="8.4" height="15.0" fill="rgb(225,99,8)" rx="2" ry="2" />
<text  x="1165.25" y="239.5" ></text>
</g>
<g >
<title>pmap_zero_page (1 samples, 0.02%)</title><rect x="634.4" y="85" width="0.3" height="15.0" fill="rgb(218,14,31)" rx="2" ry="2" />
<text  x="637.41" y="95.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (39 samples, 0.92%)</title><rect x="586.1" y="37" width="10.8" height="15.0" fill="rgb(252,129,14)" rx="2" ry="2" />
<text  x="589.12" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (40 samples, 0.94%)</title><rect x="16.4" y="277" width="11.1" height="15.0" fill="rgb(230,13,6)" rx="2" ry="2" />
<text  x="19.38" y="287.5" ></text>
</g>
<g >
<title>ipfw_chk (67 samples, 1.58%)</title><rect x="905.0" y="85" width="18.6" height="15.0" fill="rgb(223,0,44)" rx="2" ry="2" />
<text  x="907.99" y="95.5" ></text>
</g>
<g >
<title>if_getsoftc (10 samples, 0.24%)</title><rect x="293.3" y="37" width="2.8" height="15.0" fill="rgb(247,168,12)" rx="2" ry="2" />
<text  x="296.34" y="47.5" ></text>
</g>
<g >
<title>m_freem (67 samples, 1.58%)</title><rect x="759.3" y="165" width="18.6" height="15.0" fill="rgb(245,215,29)" rx="2" ry="2" />
<text  x="762.29" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (5 samples, 0.12%)</title><rect x="41.4" y="213" width="1.3" height="15.0" fill="rgb(242,93,22)" rx="2" ry="2" />
<text  x="44.36" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="676.9" y="197" width="0.2" height="15.0" fill="rgb(243,97,21)" rx="2" ry="2" />
<text  x="679.87" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (3,147 samples, 74.01%)</title><rect x="31.6" y="245" width="873.4" height="15.0" fill="rgb(215,170,46)" rx="2" ry="2" />
<text  x="34.65" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ether_bpf_mtap_if (3 samples, 0.07%)</title><rect x="702.4" y="197" width="0.8" height="15.0" fill="rgb(205,170,27)" rx="2" ry="2" />
<text  x="705.40" y="207.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="635.2" y="133" width="0.3" height="15.0" fill="rgb(219,32,30)" rx="2" ry="2" />
<text  x="638.24" y="143.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="858.9" y="133" width="0.3" height="15.0" fill="rgb(238,221,28)" rx="2" ry="2" />
<text  x="861.92" y="143.5" ></text>
</g>
<g >
<title>Xapic_isr1 (23 samples, 0.54%)</title><rect x="10.0" y="277" width="6.4" height="15.0" fill="rgb(228,81,28)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="635.0" y="85" width="0.2" height="15.0" fill="rgb(236,110,17)" rx="2" ry="2" />
<text  x="637.97" y="95.5" ></text>
</g>
<g >
<title>drain_ring_lockless (713 samples, 16.77%)</title><rect x="701.6" y="213" width="197.8" height="15.0" fill="rgb(220,23,40)" rx="2" ry="2" />
<text  x="704.57" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>uma_small_alloc (8 samples, 0.19%)</title><rect x="632.5" y="117" width="2.2" height="15.0" fill="rgb(252,94,41)" rx="2" ry="2" />
<text  x="635.47" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (37 samples, 0.87%)</title><rect x="281.7" y="37" width="10.3" height="15.0" fill="rgb(231,71,24)" rx="2" ry="2" />
<text  x="284.69" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.05%)</title><rect x="41.9" y="197" width="0.6" height="15.0" fill="rgb(223,219,28)" rx="2" ry="2" />
<text  x="44.91" y="207.5" ></text>
</g>
<g >
<title>zone_import (2 samples, 0.05%)</title><rect x="634.7" y="101" width="0.5" height="15.0" fill="rgb(220,201,49)" rx="2" ry="2" />
<text  x="637.69" y="111.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (332 samples, 7.81%)</title><rect x="1024.3" y="53" width="92.2" height="15.0" fill="rgb(242,155,10)" rx="2" ry="2" />
<text  x="1027.32" y="63.5" >ipfw_dyn_lo..</text>
</g>
<g >
<title>handleevents (16 samples, 0.38%)</title><rect x="1185.6" y="245" width="4.4" height="15.0" fill="rgb(208,210,39)" rx="2" ry="2" />
<text  x="1188.56" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (5 samples, 0.12%)</title><rect x="636.4" y="181" width="1.3" height="15.0" fill="rgb(248,223,52)" rx="2" ry="2" />
<text  x="639.35" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (11 samples, 0.26%)</title><rect x="1152.8" y="213" width="3.1" height="15.0" fill="rgb(235,143,9)" rx="2" ry="2" />
<text  x="1155.81" y="223.5" ></text>
</g>
<g >
<title>bsearch4_lookup (67 samples, 1.58%)</title><rect x="332.2" y="69" width="18.6" height="15.0" fill="rgb(227,48,38)" rx="2" ry="2" />
<text  x="335.20" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (74 samples, 1.74%)</title><rect x="944.7" y="53" width="20.5" height="15.0" fill="rgb(245,51,15)" rx="2" ry="2" />
<text  x="947.68" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (1,871 samples, 44.00%)</title><rect x="82.4" y="165" width="519.3" height="15.0" fill="rgb(214,13,7)" rx="2" ry="2" />
<text  x="85.43" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.05%)</title><rect x="719.3" y="181" width="0.6" height="15.0" fill="rgb(229,3,21)" rx="2" ry="2" />
<text  x="722.33" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="637.7" y="181" width="0.9" height="15.0" fill="rgb(218,163,11)" rx="2" ry="2" />
<text  x="640.74" y="191.5" ></text>
</g>
<g >
<title>if_inc_counter (2 samples, 0.05%)</title><rect x="611.9" y="197" width="0.6" height="15.0" fill="rgb(235,174,50)" rx="2" ry="2" />
<text  x="614.93" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (6 samples, 0.14%)</title><rect x="894.4" y="165" width="1.7" height="15.0" fill="rgb(239,150,4)" rx="2" ry="2" />
<text  x="897.44" y="175.5" ></text>
</g>
<g >
<title>ether_output (74 samples, 1.74%)</title><rect x="944.7" y="101" width="20.5" height="15.0" fill="rgb(230,67,11)" rx="2" ry="2" />
<text  x="947.68" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,906 samples, 44.83%)</title><rect x="72.7" y="181" width="529.0" height="15.0" fill="rgb(249,103,31)" rx="2" ry="2" />
<text  x="75.72" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (2 samples, 0.05%)</title><rect x="1149.8" y="213" width="0.5" height="15.0" fill="rgb(240,133,51)" rx="2" ry="2" />
<text  x="1152.76" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (3 samples, 0.07%)</title><rect x="635.5" y="181" width="0.9" height="15.0" fill="rgb(227,102,37)" rx="2" ry="2" />
<text  x="638.52" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.12%)</title><rect x="1151.4" y="213" width="1.4" height="15.0" fill="rgb(235,27,34)" rx="2" ry="2" />
<text  x="1154.43" y="223.5" ></text>
</g>
<g >
<title>doreti (11 samples, 0.26%)</title><rect x="28.6" y="277" width="3.0" height="15.0" fill="rgb(242,135,2)" rx="2" ry="2" />
<text  x="31.59" y="287.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (67 samples, 1.58%)</title><rect x="905.0" y="117" width="18.6" height="15.0" fill="rgb(227,206,37)" rx="2" ry="2" />
<text  x="907.99" y="127.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="612.5" y="197" width="0.3" height="15.0" fill="rgb(226,148,5)" rx="2" ry="2" />
<text  x="615.49" y="207.5" ></text>
</g>
<g >
<title>cache_alloc (14 samples, 0.33%)</title><rect x="631.6" y="165" width="3.9" height="15.0" fill="rgb(233,151,12)" rx="2" ry="2" />
<text  x="634.64" y="175.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.09%)</title><rect x="1150.3" y="213" width="1.1" height="15.0" fill="rgb(249,154,25)" rx="2" ry="2" />
<text  x="1153.32" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,147 samples, 74.01%)</title><rect x="31.6" y="261" width="873.4" height="15.0" fill="rgb(208,30,31)" rx="2" ry="2" />
<text  x="34.65" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>et_start (1 samples, 0.02%)</title><rect x="1185.6" y="229" width="0.2" height="15.0" fill="rgb(220,65,9)" rx="2" ry="2" />
<text  x="1188.56" y="239.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (67 samples, 1.58%)</title><rect x="905.0" y="69" width="18.6" height="15.0" fill="rgb(245,93,53)" rx="2" ry="2" />
<text  x="907.99" y="79.5" ></text>
</g>
<g >
<title>m_pkthdr_init (8 samples, 0.19%)</title><rect x="666.0" y="197" width="2.3" height="15.0" fill="rgb(211,130,44)" rx="2" ry="2" />
<text  x="669.05" y="207.5" ></text>
</g>
<g >
<title>ether_demux (619 samples, 14.56%)</title><rect x="944.7" y="165" width="171.8" height="15.0" fill="rgb(206,55,37)" rx="2" ry="2" />
<text  x="947.68" y="175.5" >ether_demux</text>
</g>
<g >
<title>netisr_dispatch (4 samples, 0.09%)</title><rect x="118.5" y="133" width="1.1" height="15.0" fill="rgb(230,35,24)" rx="2" ry="2" />
<text  x="121.51" y="143.5" ></text>
</g>
<g >
<title>iflib_if_transmit (74 samples, 1.74%)</title><rect x="944.7" y="69" width="20.5" height="15.0" fill="rgb(221,168,8)" rx="2" ry="2" />
<text  x="947.68" y="79.5" ></text>
</g>
<g >
<title>hash_packet (32 samples, 0.75%)</title><rect x="914.7" y="53" width="8.9" height="15.0" fill="rgb(222,70,18)" rx="2" ry="2" />
<text  x="917.70" y="63.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (9 samples, 0.21%)</title><rect x="896.1" y="165" width="2.5" height="15.0" fill="rgb(222,170,1)" rx="2" ry="2" />
<text  x="899.11" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (6 samples, 0.14%)</title><rect x="1160.6" y="229" width="1.6" height="15.0" fill="rgb(240,216,44)" rx="2" ry="2" />
<text  x="1163.58" y="239.5" ></text>
</g>
<g >
<title>zone_alloc_item (2 samples, 0.05%)</title><rect x="634.7" y="117" width="0.5" height="15.0" fill="rgb(214,30,18)" rx="2" ry="2" />
<text  x="637.69" y="127.5" ></text>
</g>
<g >
<title>ipfw_chk (313 samples, 7.36%)</title><rect x="380.5" y="53" width="86.8" height="15.0" fill="rgb(221,135,48)" rx="2" ry="2" />
<text  x="383.48" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>memmove_erms (4 samples, 0.09%)</title><rect x="245.6" y="53" width="1.1" height="15.0" fill="rgb(223,117,25)" rx="2" ry="2" />
<text  x="248.61" y="63.5" ></text>
</g>
<g >
<title>ipfw_check_packet (76 samples, 1.79%)</title><rect x="923.6" y="101" width="21.1" height="15.0" fill="rgb(240,195,23)" rx="2" ry="2" />
<text  x="926.58" y="111.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="900.0" y="197" width="0.3" height="15.0" fill="rgb(237,73,29)" rx="2" ry="2" />
<text  x="903.00" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (5 samples, 0.12%)</title><rect x="901.7" y="229" width="1.3" height="15.0" fill="rgb(231,25,48)" rx="2" ry="2" />
<text  x="904.66" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (143 samples, 3.36%)</title><rect x="905.0" y="245" width="39.7" height="15.0" fill="rgb(247,145,35)" rx="2" ry="2" />
<text  x="907.99" y="255.5" >ifl..</text>
</g>
<g >
<title>_epoch_enter_preempt (7 samples, 0.16%)</title><rect x="37.8" y="229" width="1.9" height="15.0" fill="rgb(215,45,32)" rx="2" ry="2" />
<text  x="40.75" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (1,626 samples, 38.24%)</title><rect x="147.1" y="101" width="451.2" height="15.0" fill="rgb(220,35,12)" rx="2" ry="2" />
<text  x="150.09" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>sleepq_broadcast (1 samples, 0.02%)</title><rect x="904.2" y="213" width="0.2" height="15.0" fill="rgb(249,167,1)" rx="2" ry="2" />
<text  x="907.16" y="223.5" ></text>
</g>
<g >
<title>hash_packet (33 samples, 0.78%)</title><rect x="935.5" y="53" width="9.2" height="15.0" fill="rgb(215,124,12)" rx="2" ry="2" />
<text  x="938.52" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.02%)</title><rect x="42.5" y="197" width="0.2" height="15.0" fill="rgb(248,79,14)" rx="2" ry="2" />
<text  x="45.47" y="207.5" ></text>
</g>
<g >
<title>m_tag_locate (9 samples, 0.21%)</title><rect x="467.3" y="53" width="2.5" height="15.0" fill="rgb(238,184,34)" rx="2" ry="2" />
<text  x="470.35" y="63.5" ></text>
</g>
<g >
<title>arpresolve (105 samples, 2.47%)</title><rect x="217.6" y="69" width="29.1" height="15.0" fill="rgb(240,173,14)" rx="2" ry="2" />
<text  x="220.58" y="79.5" >ar..</text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.05%)</title><rect x="292.8" y="37" width="0.5" height="15.0" fill="rgb(246,197,12)" rx="2" ry="2" />
<text  x="295.79" y="47.5" ></text>
</g>
<g >
<title>ipfw_chk (332 samples, 7.81%)</title><rect x="1024.3" y="69" width="92.2" height="15.0" fill="rgb(251,186,9)" rx="2" ry="2" />
<text  x="1027.32" y="79.5" >ipfw_chk</text>
</g>
<g >
<title>fork_exit (3,147 samples, 74.01%)</title><rect x="31.6" y="277" width="873.4" height="15.0" fill="rgb(217,89,53)" rx="2" ry="2" />
<text  x="34.65" y="287.5" >fork_exit</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (1 samples, 0.02%)</title><rect x="900.0" y="213" width="0.3" height="15.0" fill="rgb(206,19,17)" rx="2" ry="2" />
<text  x="903.00" y="223.5" ></text>
</g>
<g >
<title>m_adj (14 samples, 0.33%)</title><rect x="114.6" y="133" width="3.9" height="15.0" fill="rgb(235,86,41)" rx="2" ry="2" />
<text  x="117.62" y="143.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (28 samples, 0.66%)</title><rect x="1170.6" y="229" width="7.7" height="15.0" fill="rgb(250,76,24)" rx="2" ry="2" />
<text  x="1173.57" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (204 samples, 4.80%)</title><rect x="260.3" y="53" width="56.6" height="15.0" fill="rgb(221,144,29)" rx="2" ry="2" />
<text  x="263.32" y="63.5" >iflib..</text>
</g>
<g >
<title>ip_input (619 samples, 14.56%)</title><rect x="944.7" y="133" width="171.8" height="15.0" fill="rgb(244,25,33)" rx="2" ry="2" />
<text  x="947.68" y="143.5" >ip_input</text>
</g>
<g >
<title>intr_event_handle (179 samples, 4.21%)</title><rect x="1129.5" y="261" width="49.7" height="15.0" fill="rgb(230,72,16)" rx="2" ry="2" />
<text  x="1132.50" y="271.5" >intr_..</text>
</g>
<g >
<title>ether_nh_input (619 samples, 14.56%)</title><rect x="944.7" y="181" width="171.8" height="15.0" fill="rgb(241,155,51)" rx="2" ry="2" />
<text  x="947.68" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.02%)</title><rect x="635.0" y="69" width="0.2" height="15.0" fill="rgb(242,4,40)" rx="2" ry="2" />
<text  x="637.97" y="79.5" ></text>
</g>
<g >
<title>jenkins_hash32 (33 samples, 0.78%)</title><rect x="935.5" y="37" width="9.2" height="15.0" fill="rgb(251,130,3)" rx="2" ry="2" />
<text  x="938.52" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (143 samples, 3.36%)</title><rect x="905.0" y="213" width="39.7" height="15.0" fill="rgb(219,119,38)" rx="2" ry="2" />
<text  x="907.99" y="223.5" >net..</text>
</g>
<g >
<title>dyn_lookup_ipv4_state (35 samples, 0.82%)</title><rect x="905.0" y="53" width="9.7" height="15.0" fill="rgb(254,90,39)" rx="2" ry="2" />
<text  x="907.99" y="63.5" ></text>
</g>
<g >
<title>uma_zfree_arg (33 samples, 0.78%)</title><rect x="768.7" y="133" width="9.2" height="15.0" fill="rgb(221,189,20)" rx="2" ry="2" />
<text  x="771.73" y="143.5" ></text>
</g>
<g >
<title>statclock (2 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(214,180,19)" rx="2" ry="2" />
<text  x="1192.44" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (51 samples, 1.20%)</title><rect x="651.9" y="197" width="14.1" height="15.0" fill="rgb(215,90,38)" rx="2" ry="2" />
<text  x="654.90" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (2 samples, 0.05%)</title><rect x="369.4" y="53" width="0.5" height="15.0" fill="rgb(236,91,49)" rx="2" ry="2" />
<text  x="372.38" y="63.5" ></text>
</g>
<g >
<title>zone_import (14 samples, 0.33%)</title><rect x="631.6" y="149" width="3.9" height="15.0" fill="rgb(222,149,27)" rx="2" ry="2" />
<text  x="634.64" y="159.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (3 samples, 0.07%)</title><rect x="292.0" y="37" width="0.8" height="15.0" fill="rgb(214,121,20)" rx="2" ry="2" />
<text  x="294.96" y="47.5" ></text>
</g>
<g >
<title>ipfw_check_packet (350 samples, 8.23%)</title><rect x="372.7" y="69" width="97.1" height="15.0" fill="rgb(205,7,37)" rx="2" ry="2" />
<text  x="375.71" y="79.5" >ipfw_check_..</text>
</g>
<g >
<title>ipfw_chk (377 samples, 8.87%)</title><rect x="492.3" y="53" width="104.6" height="15.0" fill="rgb(216,165,7)" rx="2" ry="2" />
<text  x="495.32" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>dyn_lookup_ipv4_state (311 samples, 7.31%)</title><rect x="1024.3" y="37" width="86.3" height="15.0" fill="rgb(241,32,17)" rx="2" ry="2" />
<text  x="1027.32" y="47.5" >dyn_lookup..</text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.09%)</title><rect x="900.6" y="229" width="1.1" height="15.0" fill="rgb(252,31,2)" rx="2" ry="2" />
<text  x="903.55" y="239.5" ></text>
</g>
<g >
<title>ether_input (1,929 samples, 45.37%)</title><rect x="66.3" y="197" width="535.4" height="15.0" fill="rgb(227,217,32)" rx="2" ry="2" />
<text  x="69.34" y="207.5" >ether_input</text>
</g>
<g >
<title>_task_fn_rx (619 samples, 14.56%)</title><rect x="944.7" y="245" width="171.8" height="15.0" fill="rgb(254,218,12)" rx="2" ry="2" />
<text  x="947.68" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>if_getnumadomain (35 samples, 0.82%)</title><rect x="602.2" y="197" width="9.7" height="15.0" fill="rgb(235,159,24)" rx="2" ry="2" />
<text  x="605.22" y="207.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (78 samples, 1.83%)</title><rect x="677.1" y="197" width="21.7" height="15.0" fill="rgb(246,187,42)" rx="2" ry="2" />
<text  x="680.15" y="207.5" >r..</text>
</g>
<g >
<title>iflib_txq_drain (707 samples, 16.63%)</title><rect x="703.2" y="197" width="196.2" height="15.0" fill="rgb(234,146,2)" rx="2" ry="2" />
<text  x="706.24" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ether_demux (143 samples, 3.36%)</title><rect x="905.0" y="181" width="39.7" height="15.0" fill="rgb(230,174,24)" rx="2" ry="2" />
<text  x="907.99" y="191.5" >eth..</text>
</g>
<g >
<title>pagezero_erms (7 samples, 0.16%)</title><rect x="632.5" y="85" width="1.9" height="15.0" fill="rgb(219,126,33)" rx="2" ry="2" />
<text  x="635.47" y="95.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,366 samples, 55.64%)</title><rect x="42.7" y="213" width="656.7" height="15.0" fill="rgb(223,14,30)" rx="2" ry="2" />
<text  x="45.75" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>ip_findroute (146 samples, 3.43%)</title><rect x="329.4" y="85" width="40.5" height="15.0" fill="rgb(249,149,20)" rx="2" ry="2" />
<text  x="332.42" y="95.5" >ip_..</text>
</g>
<g >
<title>iflib_fl_refill (130 samples, 3.06%)</title><rect x="612.8" y="197" width="36.0" height="15.0" fill="rgb(211,84,25)" rx="2" ry="2" />
<text  x="615.77" y="207.5" >ifl..</text>
</g>
<g >
<title>Xtimerint_pti (3 samples, 0.07%)</title><rect x="27.8" y="277" width="0.8" height="15.0" fill="rgb(224,17,4)" rx="2" ry="2" />
<text  x="30.76" y="287.5" ></text>
</g>
<g >
<title>ipfw_check_packet (67 samples, 1.58%)</title><rect x="905.0" y="101" width="18.6" height="15.0" fill="rgb(239,227,12)" rx="2" ry="2" />
<text  x="907.99" y="111.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.07%)</title><rect x="718.5" y="181" width="0.8" height="15.0" fill="rgb(215,69,0)" rx="2" ry="2" />
<text  x="721.50" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (619 samples, 14.56%)</title><rect x="944.7" y="261" width="171.8" height="15.0" fill="rgb(239,113,35)" rx="2" ry="2" />
<text  x="947.68" y="271.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ixgbe_write_reg (5 samples, 0.12%)</title><rect x="1177.0" y="213" width="1.3" height="15.0" fill="rgb(232,41,0)" rx="2" ry="2" />
<text  x="1179.96" y="223.5" ></text>
</g>
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="27.5" y="277" width="0.3" height="15.0" fill="rgb(225,124,43)" rx="2" ry="2" />
<text  x="30.48" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (10 samples, 0.24%)</title><rect x="648.8" y="197" width="2.8" height="15.0" fill="rgb(219,53,18)" rx="2" ry="2" />
<text  x="651.84" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (253 samples, 5.95%)</title><rect x="246.7" y="69" width="70.2" height="15.0" fill="rgb(247,122,21)" rx="2" ry="2" />
<text  x="249.72" y="79.5" >ether_o..</text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="1159.8" y="213" width="0.8" height="15.0" fill="rgb(220,107,43)" rx="2" ry="2" />
<text  x="1162.75" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (619 samples, 14.56%)</title><rect x="944.7" y="277" width="171.8" height="15.0" fill="rgb(239,52,36)" rx="2" ry="2" />
<text  x="947.68" y="287.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>lapic_handle_timer (20 samples, 0.47%)</title><rect x="1184.4" y="277" width="5.6" height="15.0" fill="rgb(212,164,6)" rx="2" ry="2" />
<text  x="1187.45" y="287.5" ></text>
</g>
<g >
<title>msi_vector (1 samples, 0.02%)</title><rect x="1179.2" y="261" width="0.3" height="15.0" fill="rgb(229,81,54)" rx="2" ry="2" />
<text  x="1182.18" y="271.5" ></text>
</g>
<g >
<title>ipfw_chk (76 samples, 1.79%)</title><rect x="923.6" y="85" width="21.1" height="15.0" fill="rgb(230,93,51)" rx="2" ry="2" />
<text  x="926.58" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.07%)</title><rect x="1157.3" y="181" width="0.8" height="15.0" fill="rgb(229,149,18)" rx="2" ry="2" />
<text  x="1160.25" y="191.5" ></text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1188.3" y="181" width="0.3" height="15.0" fill="rgb(251,0,38)" rx="2" ry="2" />
<text  x="1191.33" y="191.5" ></text>
</g>
<g >
<title>_rm_rlock (28 samples, 0.66%)</title><rect x="573.1" y="37" width="7.8" height="15.0" fill="rgb(245,198,4)" rx="2" ry="2" />
<text  x="576.08" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="768.5" y="133" width="0.2" height="15.0" fill="rgb(220,49,2)" rx="2" ry="2" />
<text  x="771.45" y="143.5" ></text>
</g>
<g >
<title>ether_input (619 samples, 14.56%)</title><rect x="944.7" y="213" width="171.8" height="15.0" fill="rgb(226,102,7)" rx="2" ry="2" />
<text  x="947.68" y="223.5" >ether_input</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (9 samples, 0.21%)</title><rect x="1158.1" y="229" width="2.5" height="15.0" fill="rgb(253,10,13)" rx="2" ry="2" />
<text  x="1161.09" y="239.5" ></text>
</g>
<g >
<title>lapic_eoi (2 samples, 0.05%)</title><rect x="1178.3" y="245" width="0.6" height="15.0" fill="rgb(241,161,21)" rx="2" ry="2" />
<text  x="1181.34" y="255.5" ></text>
</g>
<g >
<title>dyn_update_proto_state (43 samples, 1.01%)</title><rect x="923.6" y="37" width="11.9" height="15.0" fill="rgb(246,11,8)" rx="2" ry="2" />
<text  x="926.58" y="47.5" ></text>
</g>
<g >
<title>sched_clock (2 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(236,155,10)" rx="2" ry="2" />
<text  x="1192.44" y="223.5" ></text>
</g>
<g >
<title>in_localip (36 samples, 0.85%)</title><rect x="319.4" y="85" width="10.0" height="15.0" fill="rgb(242,61,30)" rx="2" ry="2" />
<text  x="322.43" y="95.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (76 samples, 1.79%)</title><rect x="923.6" y="69" width="21.1" height="15.0" fill="rgb(246,85,48)" rx="2" ry="2" />
<text  x="926.58" y="79.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (86 samples, 2.02%)</title><rect x="835.3" y="165" width="23.9" height="15.0" fill="rgb(211,140,20)" rx="2" ry="2" />
<text  x="838.33" y="175.5" >b..</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1175.8" y="213" width="0.3" height="15.0" fill="rgb(206,197,0)" rx="2" ry="2" />
<text  x="1178.85" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (143 samples, 3.36%)</title><rect x="905.0" y="165" width="39.7" height="15.0" fill="rgb(244,60,8)" rx="2" ry="2" />
<text  x="907.99" y="175.5" >net..</text>
</g>
<g >
<title>hash_packet (21 samples, 0.49%)</title><rect x="1110.6" y="37" width="5.9" height="15.0" fill="rgb(213,182,6)" rx="2" ry="2" />
<text  x="1113.63" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.05%)</title><rect x="72.2" y="181" width="0.5" height="15.0" fill="rgb(219,127,20)" rx="2" ry="2" />
<text  x="75.16" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (619 samples, 14.56%)</title><rect x="944.7" y="197" width="171.8" height="15.0" fill="rgb(251,114,25)" rx="2" ry="2" />
<text  x="947.68" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sched_priority (1 samples, 0.02%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(209,188,45)" rx="2" ry="2" />
<text  x="1192.72" y="207.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (37 samples, 0.87%)</title><rect x="638.6" y="181" width="10.2" height="15.0" fill="rgb(233,134,52)" rx="2" ry="2" />
<text  x="641.57" y="191.5" ></text>
</g>
<g >
<title>intr_event_handle (1 samples, 0.02%)</title><rect x="1186.4" y="213" width="0.3" height="15.0" fill="rgb(207,22,1)" rx="2" ry="2" />
<text  x="1189.39" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.05%)</title><rect x="904.4" y="213" width="0.6" height="15.0" fill="rgb(208,77,26)" rx="2" ry="2" />
<text  x="907.44" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (31 samples, 0.73%)</title><rect x="668.3" y="197" width="8.6" height="15.0" fill="rgb(217,148,37)" rx="2" ry="2" />
<text  x="671.27" y="207.5" ></text>
</g>
<g >
<title>_rm_runlock (18 samples, 0.42%)</title><rect x="580.9" y="37" width="4.9" height="15.0" fill="rgb(229,81,19)" rx="2" ry="2" />
<text  x="583.85" y="47.5" ></text>
</g>
<g >
<title>hardclock (11 samples, 0.26%)</title><rect x="1185.8" y="229" width="3.1" height="15.0" fill="rgb(242,129,46)" rx="2" ry="2" />
<text  x="1188.84" y="239.5" ></text>
</g>
<g >
<title>ether_input (143 samples, 3.36%)</title><rect x="905.0" y="229" width="39.7" height="15.0" fill="rgb(212,39,51)" rx="2" ry="2" />
<text  x="907.99" y="239.5" >eth..</text>
</g>
<g >
<title>m_adj (4 samples, 0.09%)</title><rect x="598.3" y="149" width="1.1" height="15.0" fill="rgb(216,147,40)" rx="2" ry="2" />
<text  x="601.33" y="159.5" ></text>
</g>
<g >
<title>ip_input (1,705 samples, 40.10%)</title><rect x="125.2" y="117" width="473.1" height="15.0" fill="rgb(251,4,35)" rx="2" ry="2" />
<text  x="128.17" y="127.5" >ip_input</text>
</g>
<g >
<title>cache_alloc_retry (17 samples, 0.40%)</title><rect x="630.8" y="181" width="4.7" height="15.0" fill="rgb(237,189,24)" rx="2" ry="2" />
<text  x="633.80" y="191.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (49 samples, 1.15%)</title><rect x="845.6" y="149" width="13.6" height="15.0" fill="rgb(226,46,28)" rx="2" ry="2" />
<text  x="848.60" y="159.5" ></text>
</g>
<g >
<title>ip_tryforward (619 samples, 14.56%)</title><rect x="944.7" y="117" width="171.8" height="15.0" fill="rgb(218,192,48)" rx="2" ry="2" />
<text  x="947.68" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>netmap_rx_irq (2 samples, 0.05%)</title><rect x="699.4" y="213" width="0.5" height="15.0" fill="rgb(251,64,22)" rx="2" ry="2" />
<text  x="702.35" y="223.5" ></text>
</g>
<g >
<title>keg_alloc_slab (13 samples, 0.31%)</title><rect x="631.6" y="133" width="3.6" height="15.0" fill="rgb(242,49,11)" rx="2" ry="2" />
<text  x="634.64" y="143.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (209 samples, 4.92%)</title><rect x="719.9" y="181" width="58.0" height="15.0" fill="rgb(221,78,9)" rx="2" ry="2" />
<text  x="722.89" y="191.5" >iflib_..</text>
</g>
<g >
<title>iflib_rxeof (619 samples, 14.56%)</title><rect x="944.7" y="229" width="171.8" height="15.0" fill="rgb(244,14,20)" rx="2" ry="2" />
<text  x="947.68" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>intr_execute_handlers (227 samples, 5.34%)</title><rect x="1116.5" y="277" width="63.0" height="15.0" fill="rgb(249,76,18)" rx="2" ry="2" />
<text  x="1119.46" y="287.5" >intr_e..</text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="900.3" y="229" width="0.3" height="15.0" fill="rgb(244,222,20)" rx="2" ry="2" />
<text  x="903.27" y="239.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (2 samples, 0.05%)</title><rect x="777.3" y="117" width="0.6" height="15.0" fill="rgb(238,114,50)" rx="2" ry="2" />
<text  x="780.33" y="127.5" ></text>
</g>
<g >
<title>iflib_get_softc (3 samples, 0.07%)</title><rect x="1158.9" y="213" width="0.9" height="15.0" fill="rgb(230,210,54)" rx="2" ry="2" />
<text  x="1161.92" y="223.5" ></text>
</g>
<g >
<title>pfil_mbuf_in (463 samples, 10.89%)</title><rect x="469.8" y="85" width="128.5" height="15.0" fill="rgb(229,182,9)" rx="2" ry="2" />
<text  x="472.84" y="95.5" >pfil_mbuf_in</text>
</g>
<g >
<title>dyn_lookup_ipv4_state (202 samples, 4.75%)</title><rect x="965.2" y="37" width="56.1" height="15.0" fill="rgb(206,84,54)" rx="2" ry="2" />
<text  x="968.21" y="47.5" >dyn_l..</text>
</g>
<g >
<title>_ck_epoch_delref (4 samples, 0.09%)</title><rect x="36.6" y="229" width="1.2" height="15.0" fill="rgb(247,145,53)" rx="2" ry="2" />
<text  x="39.64" y="239.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (70 samples, 1.65%)</title><rect x="879.2" y="181" width="19.4" height="15.0" fill="rgb(239,94,1)" rx="2" ry="2" />
<text  x="882.18" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (32 samples, 0.75%)</title><rect x="944.7" y="37" width="8.9" height="15.0" fill="rgb(246,210,52)" rx="2" ry="2" />
<text  x="947.68" y="47.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.05%)</title><rect x="631.9" y="117" width="0.6" height="15.0" fill="rgb(241,91,41)" rx="2" ry="2" />
<text  x="634.91" y="127.5" ></text>
</g>
<g >
<title>ipfw_check_packet (426 samples, 10.02%)</title><rect x="480.1" y="69" width="118.2" height="15.0" fill="rgb(216,204,27)" rx="2" ry="2" />
<text  x="483.11" y="79.5" >ipfw_check_pac..</text>
</g>
<g >
<title>tcp_lro_flush_all (2 samples, 0.05%)</title><rect x="698.8" y="197" width="0.6" height="15.0" fill="rgb(240,43,36)" rx="2" ry="2" />
<text  x="701.80" y="207.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (213 samples, 5.01%)</title><rect x="965.2" y="101" width="59.1" height="15.0" fill="rgb(237,10,27)" rx="2" ry="2" />
<text  x="968.21" y="111.5" >pfil_m..</text>
</g>
<g >
<title>ipfw_dyn_lookup_state (213 samples, 5.01%)</title><rect x="965.2" y="53" width="59.1" height="15.0" fill="rgb(249,223,28)" rx="2" ry="2" />
<text  x="968.21" y="63.5" >ipfw_d..</text>
</g>
<g >
<title>all (4,252 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(209,193,7)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ipfw_check_packet (213 samples, 5.01%)</title><rect x="965.2" y="85" width="59.1" height="15.0" fill="rgb(237,217,52)" rx="2" ry="2" />
<text  x="968.21" y="95.5" >ipfw_c..</text>
</g>
<g >
<title>pmc_process_samples (8 samples, 0.19%)</title><rect x="1186.7" y="197" width="2.2" height="15.0" fill="rgb(235,133,24)" rx="2" ry="2" />
<text  x="1189.67" y="207.5" ></text>
</g>
<g >
<title>ipfw_chk (213 samples, 5.01%)</title><rect x="965.2" y="69" width="59.1" height="15.0" fill="rgb(244,73,27)" rx="2" ry="2" />
<text  x="968.21" y="79.5" >ipfw_chk</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (1 samples, 0.02%)</title><rect x="651.6" y="197" width="0.3" height="15.0" fill="rgb(241,129,21)" rx="2" ry="2" />
<text  x="654.62" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (75 samples, 1.76%)</title><rect x="296.1" y="37" width="20.8" height="15.0" fill="rgb(247,70,44)" rx="2" ry="2" />
<text  x="299.12" y="47.5" ></text>
</g>
<g >
<title>intr_lookup_source (6 samples, 0.14%)</title><rect x="1182.8" y="261" width="1.6" height="15.0" fill="rgb(239,116,15)" rx="2" ry="2" />
<text  x="1185.78" y="271.5" ></text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.02%)</title><rect x="1178.9" y="245" width="0.3" height="15.0" fill="rgb(233,210,2)" rx="2" ry="2" />
<text  x="1181.90" y="255.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.05%)</title><rect x="1188.9" y="229" width="0.5" height="15.0" fill="rgb(213,69,53)" rx="2" ry="2" />
<text  x="1191.89" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (72 samples, 1.69%)</title><rect x="859.2" y="165" width="20.0" height="15.0" fill="rgb(221,71,10)" rx="2" ry="2" />
<text  x="862.20" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (42 samples, 0.99%)</title><rect x="953.6" y="37" width="11.6" height="15.0" fill="rgb(235,5,31)" rx="2" ry="2" />
<text  x="956.56" y="47.5" ></text>
</g>
<g >
<title>hash_packet (11 samples, 0.26%)</title><rect x="1021.3" y="37" width="3.0" height="15.0" fill="rgb(233,208,15)" rx="2" ry="2" />
<text  x="1024.27" y="47.5" ></text>
</g>
<g >
<title>m_tag_locate (5 samples, 0.12%)</title><rect x="596.9" y="53" width="1.4" height="15.0" fill="rgb(221,168,25)" rx="2" ry="2" />
<text  x="599.95" y="63.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (43 samples, 1.01%)</title><rect x="455.4" y="37" width="11.9" height="15.0" fill="rgb(223,66,29)" rx="2" ry="2" />
<text  x="458.41" y="47.5" ></text>
</g>
<g >
<title>_rm_rlock (29 samples, 0.68%)</title><rect x="443.8" y="37" width="8.0" height="15.0" fill="rgb(227,115,36)" rx="2" ry="2" />
<text  x="446.76" y="47.5" ></text>
</g>
<g >
<title>ipfw_dyn_install_state (1 samples, 0.02%)</title><rect x="585.8" y="37" width="0.3" height="15.0" fill="rgb(220,205,14)" rx="2" ry="2" />
<text  x="588.85" y="47.5" ></text>
</g>
<g >
<title>jenkins_hash32 (32 samples, 0.75%)</title><rect x="914.7" y="37" width="8.9" height="15.0" fill="rgb(211,50,33)" rx="2" ry="2" />
<text  x="917.70" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,379 samples, 55.95%)</title><rect x="39.7" y="229" width="660.2" height="15.0" fill="rgb(217,46,15)" rx="2" ry="2" />
<text  x="42.69" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ifmp_ring_check_drainage (2 samples, 0.05%)</title><rect x="899.4" y="213" width="0.6" height="15.0" fill="rgb(212,22,24)" rx="2" ry="2" />
<text  x="902.44" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (8 samples, 0.19%)</title><rect x="1155.9" y="213" width="2.2" height="15.0" fill="rgb(207,62,17)" rx="2" ry="2" />
<text  x="1158.87" y="223.5" ></text>
</g>
<g >
<title>ip_input (143 samples, 3.36%)</title><rect x="905.0" y="149" width="39.7" height="15.0" fill="rgb(226,90,16)" rx="2" ry="2" />
<text  x="907.99" y="159.5" >ip_..</text>
</g>
<g >
<title>sleepq_lock (8 samples, 0.19%)</title><rect x="1155.9" y="197" width="2.2" height="15.0" fill="rgb(230,116,19)" rx="2" ry="2" />
<text  x="1158.87" y="207.5" ></text>
</g>
<g >
<title>ether_output (451 samples, 10.61%)</title><rect x="194.3" y="85" width="125.1" height="15.0" fill="rgb(228,34,21)" rx="2" ry="2" />
<text  x="197.27" y="95.5" >ether_output</text>
</g>
<g >
<title>memcpy_erms (9 samples, 0.21%)</title><rect x="316.9" y="69" width="2.5" height="15.0" fill="rgb(225,13,49)" rx="2" ry="2" />
<text  x="319.93" y="79.5" ></text>
</g>
<g >
<title>ether_demux (1,777 samples, 41.79%)</title><rect x="105.2" y="149" width="493.1" height="15.0" fill="rgb(225,111,31)" rx="2" ry="2" />
<text  x="108.19" y="159.5" >ether_demux</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (3 samples, 0.07%)</title><rect x="898.6" y="181" width="0.8" height="15.0" fill="rgb(218,11,23)" rx="2" ry="2" />
<text  x="901.61" y="191.5" ></text>
</g>
<g >
<title>fib4_lookup (69 samples, 1.62%)</title><rect x="350.8" y="69" width="19.1" height="15.0" fill="rgb(251,104,18)" rx="2" ry="2" />
<text  x="353.79" y="79.5" ></text>
</g>
<g >
<title>pmc_hook_handler (8 samples, 0.19%)</title><rect x="1186.7" y="213" width="2.2" height="15.0" fill="rgb(208,123,8)" rx="2" ry="2" />
<text  x="1189.67" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (4 samples, 0.09%)</title><rect x="844.5" y="149" width="1.1" height="15.0" fill="rgb(236,44,24)" rx="2" ry="2" />
<text  x="847.49" y="159.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (146 samples, 3.43%)</title><rect x="1137.8" y="245" width="40.5" height="15.0" fill="rgb(220,90,16)" rx="2" ry="2" />
<text  x="1140.83" y="255.5" >ifl..</text>
</g>
<g >
<title>ether_nh_input (143 samples, 3.36%)</title><rect x="905.0" y="197" width="39.7" height="15.0" fill="rgb(229,82,38)" rx="2" ry="2" />
<text  x="907.99" y="207.5" >eth..</text>
</g>
<g >
<title>_task_fn_rx (143 samples, 3.36%)</title><rect x="905.0" y="261" width="39.7" height="15.0" fill="rgb(225,162,21)" rx="2" ry="2" />
<text  x="907.99" y="271.5" >_ta..</text>
</g>
<g >
<title>dyn_lookup_ipv4_state (43 samples, 1.01%)</title><rect x="923.6" y="53" width="11.9" height="15.0" fill="rgb(225,159,48)" rx="2" ry="2" />
<text  x="926.58" y="63.5" ></text>
</g>
<g >
<title>pfil_mbuf_fwd (360 samples, 8.47%)</title><rect x="369.9" y="85" width="99.9" height="15.0" fill="rgb(225,185,29)" rx="2" ry="2" />
<text  x="372.94" y="95.5" >pfil_mbuf_fwd</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (20 samples, 0.47%)</title><rect x="753.7" y="165" width="5.6" height="15.0" fill="rgb(239,176,1)" rx="2" ry="2" />
<text  x="756.74" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (619 samples, 14.56%)</title><rect x="944.7" y="149" width="171.8" height="15.0" fill="rgb(229,105,26)" rx="2" ry="2" />
<text  x="947.68" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>timercb (19 samples, 0.45%)</title><rect x="1184.7" y="261" width="5.3" height="15.0" fill="rgb(206,46,2)" rx="2" ry="2" />
<text  x="1187.73" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,725 samples, 40.57%)</title><rect x="119.6" y="133" width="478.7" height="15.0" fill="rgb(221,199,15)" rx="2" ry="2" />
<text  x="122.62" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>grouptaskqueue_enqueue (33 samples, 0.78%)</title><rect x="1148.9" y="229" width="9.2" height="15.0" fill="rgb(206,172,42)" rx="2" ry="2" />
<text  x="1151.93" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (143 samples, 3.36%)</title><rect x="905.0" y="133" width="39.7" height="15.0" fill="rgb(227,146,45)" rx="2" ry="2" />
<text  x="907.99" y="143.5" >ip_..</text>
</g>
<g >
<title>in_lltable_lookup (41 samples, 0.96%)</title><rect x="234.2" y="53" width="11.4" height="15.0" fill="rgb(224,162,42)" rx="2" ry="2" />
<text  x="237.23" y="63.5" ></text>
</g>
<g >
<title>wakeup (7 samples, 0.16%)</title><rect x="903.0" y="229" width="2.0" height="15.0" fill="rgb(247,108,45)" rx="2" ry="2" />
<text  x="906.05" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_intr (18 samples, 0.42%)</title><rect x="1179.5" y="277" width="4.9" height="15.0" fill="rgb(209,197,0)" rx="2" ry="2" />
<text  x="1182.45" y="287.5" ></text>
</g>
<g >
<title>dyn_update_proto_state (35 samples, 0.82%)</title><rect x="905.0" y="37" width="9.7" height="15.0" fill="rgb(239,103,34)" rx="2" ry="2" />
<text  x="907.99" y="47.5" ></text>
</g>
<g >
<title>_task_fn_tx (722 samples, 16.98%)</title><rect x="699.9" y="229" width="200.4" height="15.0" fill="rgb(232,146,40)" rx="2" ry="2" />
<text  x="702.91" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>pfil_mbuf_in (76 samples, 1.79%)</title><rect x="923.6" y="117" width="21.1" height="15.0" fill="rgb(238,166,29)" rx="2" ry="2" />
<text  x="926.58" y="127.5" ></text>
</g>
</g>
</svg>
