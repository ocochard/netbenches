<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>zone_import (8 samples, 0.25%)</title><rect x="264.9" y="149" width="2.9" height="15.0" fill="rgb(239,39,43)" rx="2" ry="2" />
<text  x="267.87" y="159.5" ></text>
</g>
<g >
<title>m_pkthdr_init (1 samples, 0.03%)</title><rect x="274.4" y="197" width="0.3" height="15.0" fill="rgb(254,134,2)" rx="2" ry="2" />
<text  x="277.38" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (288 samples, 8.92%)</title><rect x="1062.4" y="277" width="105.3" height="15.0" fill="rgb(226,205,9)" rx="2" ry="2" />
<text  x="1065.38" y="287.5" >gtaskqueue_t..</text>
</g>
<g >
<title>in_lltable_lookup (3 samples, 0.09%)</title><rect x="60.8" y="53" width="1.1" height="15.0" fill="rgb(228,23,44)" rx="2" ry="2" />
<text  x="63.83" y="63.5" ></text>
</g>
<g >
<title>__rw_rlock_int (51 samples, 1.58%)</title><rect x="321.9" y="37" width="18.7" height="15.0" fill="rgb(248,142,24)" rx="2" ry="2" />
<text  x="324.91" y="47.5" ></text>
</g>
<g >
<title>strncpy (8 samples, 0.25%)</title><rect x="1164.4" y="37" width="2.9" height="15.0" fill="rgb(228,223,20)" rx="2" ry="2" />
<text  x="1167.40" y="47.5" ></text>
</g>
<g >
<title>lapic_handle_timer (25 samples, 0.77%)</title><rect x="1180.9" y="277" width="9.1" height="15.0" fill="rgb(219,29,22)" rx="2" ry="2" />
<text  x="1183.86" y="287.5" ></text>
</g>
<g >
<title>ipf_scanlist (2 samples, 0.06%)</title><rect x="1083.6" y="53" width="0.7" height="15.0" fill="rgb(227,81,10)" rx="2" ry="2" />
<text  x="1086.59" y="63.5" ></text>
</g>
<g >
<title>iflib_rxeof (288 samples, 8.92%)</title><rect x="1062.4" y="229" width="105.3" height="15.0" fill="rgb(211,145,23)" rx="2" ry="2" />
<text  x="1065.38" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>ipf_state_check (2,023 samples, 62.69%)</title><rect x="321.5" y="69" width="739.8" height="15.0" fill="rgb(239,45,45)" rx="2" ry="2" />
<text  x="324.55" y="79.5" >ipf_state_check</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.03%)</title><rect x="19.5" y="181" width="0.4" height="15.0" fill="rgb(216,172,5)" rx="2" ry="2" />
<text  x="22.51" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (9 samples, 0.28%)</title><rect x="1185.2" y="197" width="3.3" height="15.0" fill="rgb(239,142,53)" rx="2" ry="2" />
<text  x="1188.25" y="207.5" ></text>
</g>
<g >
<title>m_free (3 samples, 0.09%)</title><rect x="1061.3" y="53" width="1.1" height="15.0" fill="rgb(229,182,26)" rx="2" ry="2" />
<text  x="1064.29" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (628 samples, 19.46%)</title><rect x="31.2" y="165" width="229.6" height="15.0" fill="rgb(212,176,13)" rx="2" ry="2" />
<text  x="34.21" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ether_output_frame (38 samples, 1.18%)</title><rect x="62.7" y="69" width="13.9" height="15.0" fill="rgb(225,31,21)" rx="2" ry="2" />
<text  x="65.66" y="79.5" ></text>
</g>
<g >
<title>ether_output (63 samples, 1.95%)</title><rect x="54.2" y="85" width="23.1" height="15.0" fill="rgb(236,1,24)" rx="2" ry="2" />
<text  x="57.25" y="95.5" >e..</text>
</g>
<g >
<title>ipf_check_wrapper (2,042 samples, 63.28%)</title><rect x="315.7" y="101" width="746.7" height="15.0" fill="rgb(246,103,11)" rx="2" ry="2" />
<text  x="318.70" y="111.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_state_add (25 samples, 0.77%)</title><rect x="1084.3" y="53" width="9.2" height="15.0" fill="rgb(242,59,27)" rx="2" ry="2" />
<text  x="1087.32" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (2 samples, 0.06%)</title><rect x="76.6" y="69" width="0.7" height="15.0" fill="rgb(222,204,0)" rx="2" ry="2" />
<text  x="79.55" y="79.5" ></text>
</g>
<g >
<title>ipf_state_insert (2 samples, 0.06%)</title><rect x="320.4" y="53" width="0.8" height="15.0" fill="rgb(226,171,45)" rx="2" ry="2" />
<text  x="323.45" y="63.5" ></text>
</g>
<g >
<title>memcmp (21 samples, 0.65%)</title><rect x="1085.1" y="37" width="7.6" height="15.0" fill="rgb(252,212,54)" rx="2" ry="2" />
<text  x="1088.05" y="47.5" ></text>
</g>
<g >
<title>ether_input (288 samples, 8.92%)</title><rect x="1062.4" y="213" width="105.3" height="15.0" fill="rgb(247,180,16)" rx="2" ry="2" />
<text  x="1065.38" y="223.5" >ether_input</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.03%)</title><rect x="1189.3" y="229" width="0.3" height="15.0" fill="rgb(237,55,46)" rx="2" ry="2" />
<text  x="1192.27" y="239.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (3 samples, 0.09%)</title><rect x="340.6" y="37" width="1.1" height="15.0" fill="rgb(239,162,12)" rx="2" ry="2" />
<text  x="343.56" y="47.5" ></text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.03%)</title><rect x="260.8" y="197" width="0.4" height="15.0" fill="rgb(205,131,37)" rx="2" ry="2" />
<text  x="263.85" y="207.5" ></text>
</g>
<g >
<title>ipf_check (468 samples, 14.50%)</title><rect x="89.0" y="53" width="171.1" height="15.0" fill="rgb(217,145,50)" rx="2" ry="2" />
<text  x="91.98" y="63.5" >ipf_check</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.03%)</title><rect x="19.5" y="197" width="0.4" height="15.0" fill="rgb(235,144,53)" rx="2" ry="2" />
<text  x="22.51" y="207.5" ></text>
</g>
<g >
<title>statclock (1 samples, 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(232,216,35)" rx="2" ry="2" />
<text  x="1192.63" y="239.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (282 samples, 8.74%)</title><rect x="1064.6" y="85" width="103.1" height="15.0" fill="rgb(247,165,8)" rx="2" ry="2" />
<text  x="1067.58" y="95.5" >ipf_check_wr..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (3 samples, 0.09%)</title><rect x="1174.6" y="229" width="1.1" height="15.0" fill="rgb(220,22,1)" rx="2" ry="2" />
<text  x="1177.64" y="239.5" ></text>
</g>
<g >
<title>hardclock (14 samples, 0.43%)</title><rect x="1183.4" y="229" width="5.1" height="15.0" fill="rgb(237,196,2)" rx="2" ry="2" />
<text  x="1186.42" y="239.5" ></text>
</g>
<g >
<title>pfil_run_hooks (2,042 samples, 63.28%)</title><rect x="315.7" y="117" width="746.7" height="15.0" fill="rgb(231,206,24)" rx="2" ry="2" />
<text  x="318.70" y="127.5" >pfil_run_hooks</text>
</g>
<g >
<title>ether_nh_input (3 samples, 0.09%)</title><rect x="14.4" y="213" width="1.1" height="15.0" fill="rgb(217,156,35)" rx="2" ry="2" />
<text  x="17.39" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (2 samples, 0.06%)</title><rect x="293.4" y="165" width="0.7" height="15.0" fill="rgb(216,61,51)" rx="2" ry="2" />
<text  x="296.39" y="175.5" ></text>
</g>
<g >
<title>ether_demux (614 samples, 19.03%)</title><rect x="35.6" y="149" width="224.5" height="15.0" fill="rgb(213,191,34)" rx="2" ry="2" />
<text  x="38.60" y="159.5" >ether_demux</text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.25%)</title><rect x="264.9" y="181" width="2.9" height="15.0" fill="rgb(229,35,7)" rx="2" ry="2" />
<text  x="267.87" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (2,042 samples, 63.28%)</title><rect x="315.7" y="245" width="746.7" height="15.0" fill="rgb(252,218,54)" rx="2" ry="2" />
<text  x="318.70" y="255.5" >iflib_rxeof</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (2 samples, 0.06%)</title><rect x="1176.5" y="229" width="0.7" height="15.0" fill="rgb(249,201,16)" rx="2" ry="2" />
<text  x="1179.47" y="239.5" ></text>
</g>
<g >
<title>_rw_wowned (28 samples, 0.87%)</title><rect x="1095.3" y="37" width="10.2" height="15.0" fill="rgb(227,36,50)" rx="2" ry="2" />
<text  x="1098.29" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (6 samples, 0.19%)</title><rect x="306.9" y="165" width="2.2" height="15.0" fill="rgb(234,116,31)" rx="2" ry="2" />
<text  x="309.92" y="175.5" ></text>
</g>
<g >
<title>ipf_state_check (83 samples, 2.57%)</title><rect x="226.5" y="37" width="30.3" height="15.0" fill="rgb(221,97,3)" rx="2" ry="2" />
<text  x="229.47" y="47.5" >ip..</text>
</g>
<g >
<title>ipf_movequeue (4 samples, 0.12%)</title><rect x="1105.5" y="37" width="1.5" height="15.0" fill="rgb(250,75,29)" rx="2" ry="2" />
<text  x="1108.53" y="47.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (6 samples, 0.19%)</title><rect x="268.9" y="165" width="2.2" height="15.0" fill="rgb(222,170,16)" rx="2" ry="2" />
<text  x="271.89" y="175.5" ></text>
</g>
<g >
<title>__rw_rlock_int (34 samples, 1.05%)</title><rect x="147.5" y="37" width="12.4" height="15.0" fill="rgb(219,222,39)" rx="2" ry="2" />
<text  x="150.49" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (811 samples, 25.13%)</title><rect x="17.3" y="261" width="296.6" height="15.0" fill="rgb(223,101,45)" rx="2" ry="2" />
<text  x="20.31" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ipf_state_add (25 samples, 0.77%)</title><rect x="217.3" y="37" width="9.2" height="15.0" fill="rgb(231,63,23)" rx="2" ry="2" />
<text  x="220.33" y="47.5" ></text>
</g>
<g >
<title>ipf_makefrip (8 samples, 0.25%)</title><rect x="1080.7" y="53" width="2.9" height="15.0" fill="rgb(249,163,32)" rx="2" ry="2" />
<text  x="1083.67" y="63.5" ></text>
</g>
<g >
<title>ether_input (3 samples, 0.09%)</title><rect x="14.4" y="245" width="1.1" height="15.0" fill="rgb(227,126,41)" rx="2" ry="2" />
<text  x="17.39" y="255.5" ></text>
</g>
<g >
<title>__rw_wlock_hard (4 samples, 0.12%)</title><rect x="314.2" y="181" width="1.5" height="15.0" fill="rgb(240,141,0)" rx="2" ry="2" />
<text  x="317.23" y="191.5" ></text>
</g>
<g >
<title>m_freem (1 samples, 0.03%)</title><rect x="1167.3" y="53" width="0.4" height="15.0" fill="rgb(220,18,21)" rx="2" ry="2" />
<text  x="1170.33" y="63.5" ></text>
</g>
<g >
<title>ether_demux (288 samples, 8.92%)</title><rect x="1062.4" y="165" width="105.3" height="15.0" fill="rgb(224,176,41)" rx="2" ry="2" />
<text  x="1065.38" y="175.5" >ether_demux</text>
</g>
<g >
<title>_task_fn_rx (729 samples, 22.59%)</title><rect x="18.0" y="229" width="266.6" height="15.0" fill="rgb(227,10,21)" rx="2" ry="2" />
<text  x="21.04" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>wakeup (4 samples, 0.12%)</title><rect x="312.4" y="229" width="1.5" height="15.0" fill="rgb(233,128,50)" rx="2" ry="2" />
<text  x="315.40" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (3 samples, 0.09%)</title><rect x="265.2" y="117" width="1.1" height="15.0" fill="rgb(243,40,44)" rx="2" ry="2" />
<text  x="268.23" y="127.5" ></text>
</g>
<g >
<title>if_getsoftc (1 samples, 0.03%)</title><rect x="71.8" y="37" width="0.4" height="15.0" fill="rgb(236,203,28)" rx="2" ry="2" />
<text  x="74.80" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (2,042 samples, 63.28%)</title><rect x="315.7" y="133" width="746.7" height="15.0" fill="rgb(215,185,42)" rx="2" ry="2" />
<text  x="318.70" y="143.5" >ip_tryforward</text>
</g>
<g >
<title>mb_dtor_mbuf (3 samples, 0.09%)</title><rect x="296.7" y="117" width="1.1" height="15.0" fill="rgb(235,220,32)" rx="2" ry="2" />
<text  x="299.68" y="127.5" ></text>
</g>
<g >
<title>_mtx_init (1 samples, 0.03%)</title><rect x="14.4" y="53" width="0.4" height="15.0" fill="rgb(232,71,27)" rx="2" ry="2" />
<text  x="17.39" y="63.5" ></text>
</g>
<g >
<title>m_freem (10 samples, 0.31%)</title><rect x="294.1" y="165" width="3.7" height="15.0" fill="rgb(245,135,22)" rx="2" ry="2" />
<text  x="297.12" y="175.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.03%)</title><rect x="267.4" y="101" width="0.4" height="15.0" fill="rgb(227,91,6)" rx="2" ry="2" />
<text  x="270.43" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.09%)</title><rect x="14.4" y="229" width="1.1" height="15.0" fill="rgb(248,187,42)" rx="2" ry="2" />
<text  x="17.39" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.03%)</title><rect x="311.7" y="229" width="0.3" height="15.0" fill="rgb(228,80,35)" rx="2" ry="2" />
<text  x="314.67" y="239.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.03%)</title><rect x="267.1" y="85" width="0.3" height="15.0" fill="rgb(250,220,36)" rx="2" ry="2" />
<text  x="270.06" y="95.5" ></text>
</g>
<g >
<title>strncpy (1 samples, 0.03%)</title><rect x="1093.1" y="37" width="0.4" height="15.0" fill="rgb(210,144,38)" rx="2" ry="2" />
<text  x="1096.10" y="47.5" ></text>
</g>
<g >
<title>ixgbe_read_reg (1 samples, 0.03%)</title><rect x="313.9" y="181" width="0.3" height="15.0" fill="rgb(251,188,52)" rx="2" ry="2" />
<text  x="316.87" y="191.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (3 samples, 0.09%)</title><rect x="14.4" y="117" width="1.1" height="15.0" fill="rgb(217,7,42)" rx="2" ry="2" />
<text  x="17.39" y="127.5" ></text>
</g>
<g >
<title>m_free (2 samples, 0.06%)</title><rect x="14.8" y="69" width="0.7" height="15.0" fill="rgb(227,2,24)" rx="2" ry="2" />
<text  x="17.75" y="79.5" ></text>
</g>
<g >
<title>sleepq_broadcast (1 samples, 0.03%)</title><rect x="312.4" y="213" width="0.4" height="15.0" fill="rgb(246,11,12)" rx="2" ry="2" />
<text  x="315.40" y="223.5" ></text>
</g>
<g >
<title>intr_event_handle (1 samples, 0.03%)</title><rect x="1184.1" y="213" width="0.4" height="15.0" fill="rgb(252,97,53)" rx="2" ry="2" />
<text  x="1187.15" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.03%)</title><rect x="38.2" y="133" width="0.3" height="15.0" fill="rgb(207,114,44)" rx="2" ry="2" />
<text  x="41.16" y="143.5" ></text>
</g>
<g >
<title>ipf_state_lookup (2,022 samples, 62.66%)</title><rect x="321.9" y="53" width="739.4" height="15.0" fill="rgb(213,90,11)" rx="2" ry="2" />
<text  x="324.91" y="63.5" >ipf_state_lookup</text>
</g>
<g >
<title>ipf_derefrule (13 samples, 0.40%)</title><rect x="315.7" y="69" width="4.7" height="15.0" fill="rgb(250,79,24)" rx="2" ry="2" />
<text  x="318.70" y="79.5" ></text>
</g>
<g >
<title>_task_fn_rx (2,042 samples, 63.28%)</title><rect x="315.7" y="261" width="746.7" height="15.0" fill="rgb(210,98,9)" rx="2" ry="2" />
<text  x="318.70" y="271.5" >_task_fn_rx</text>
</g>
<g >
<title>ipf_scanlist (40 samples, 1.24%)</title><rect x="202.7" y="37" width="14.6" height="15.0" fill="rgb(214,24,46)" rx="2" ry="2" />
<text  x="205.71" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (288 samples, 8.92%)</title><rect x="1062.4" y="197" width="105.3" height="15.0" fill="rgb(224,41,5)" rx="2" ry="2" />
<text  x="1065.38" y="207.5" >netisr_dispa..</text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.03%)</title><rect x="267.4" y="117" width="0.4" height="15.0" fill="rgb(233,189,32)" rx="2" ry="2" />
<text  x="270.43" y="127.5" ></text>
</g>
<g >
<title>m_freem (2 samples, 0.06%)</title><rect x="14.8" y="85" width="0.7" height="15.0" fill="rgb(224,159,40)" rx="2" ry="2" />
<text  x="17.75" y="95.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.03%)</title><rect x="19.9" y="213" width="0.3" height="15.0" fill="rgb(220,106,25)" rx="2" ry="2" />
<text  x="22.87" y="223.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (23 samples, 0.71%)</title><rect x="289.4" y="181" width="8.4" height="15.0" fill="rgb(245,3,50)" rx="2" ry="2" />
<text  x="292.37" y="191.5" ></text>
</g>
<g >
<title>memmove_erms (2 samples, 0.06%)</title><rect x="61.9" y="53" width="0.8" height="15.0" fill="rgb(223,134,39)" rx="2" ry="2" />
<text  x="64.92" y="63.5" ></text>
</g>
<g >
<title>pfil_run_hooks (478 samples, 14.81%)</title><rect x="85.3" y="85" width="174.8" height="15.0" fill="rgb(254,59,5)" rx="2" ry="2" />
<text  x="88.33" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.03%)</title><rect x="311.3" y="197" width="0.4" height="15.0" fill="rgb(240,124,38)" rx="2" ry="2" />
<text  x="314.31" y="207.5" ></text>
</g>
<g >
<title>ether_output (6 samples, 0.19%)</title><rect x="1062.4" y="101" width="2.2" height="15.0" fill="rgb(212,212,29)" rx="2" ry="2" />
<text  x="1065.38" y="111.5" ></text>
</g>
<g >
<title>_task_fn_tx (74 samples, 2.29%)</title><rect x="284.6" y="229" width="27.1" height="15.0" fill="rgb(249,168,30)" rx="2" ry="2" />
<text  x="287.61" y="239.5" >_..</text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.09%)</title><rect x="312.8" y="213" width="1.1" height="15.0" fill="rgb(233,188,39)" rx="2" ry="2" />
<text  x="315.77" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (13 samples, 0.40%)</title><rect x="315.7" y="53" width="4.7" height="15.0" fill="rgb(223,211,27)" rx="2" ry="2" />
<text  x="318.70" y="63.5" ></text>
</g>
<g >
<title>ipf_check (282 samples, 8.74%)</title><rect x="1064.6" y="69" width="103.1" height="15.0" fill="rgb(239,159,44)" rx="2" ry="2" />
<text  x="1067.58" y="79.5" >ipf_check</text>
</g>
<g >
<title>grouptaskqueue_enqueue (7 samples, 0.22%)</title><rect x="69.2" y="37" width="2.6" height="15.0" fill="rgb(254,222,20)" rx="2" ry="2" />
<text  x="72.24" y="47.5" ></text>
</g>
<g >
<title>arpresolve (9 samples, 0.28%)</title><rect x="59.4" y="69" width="3.3" height="15.0" fill="rgb(235,169,8)" rx="2" ry="2" />
<text  x="62.36" y="79.5" ></text>
</g>
<g >
<title>iflib_if_transmit (30 samples, 0.93%)</title><rect x="65.6" y="53" width="11.0" height="15.0" fill="rgb(235,60,41)" rx="2" ry="2" />
<text  x="68.58" y="63.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (6 samples, 0.19%)</title><rect x="1177.2" y="229" width="2.2" height="15.0" fill="rgb(235,178,26)" rx="2" ry="2" />
<text  x="1180.20" y="239.5" ></text>
</g>
<g >
<title>ipf_state_lookup (157 samples, 4.87%)</title><rect x="1107.0" y="37" width="57.4" height="15.0" fill="rgb(220,46,8)" rx="2" ry="2" />
<text  x="1109.99" y="47.5" >ipf_st..</text>
</g>
<g >
<title>ipf_checkv4sum (5 samples, 0.15%)</title><rect x="1080.7" y="37" width="1.8" height="15.0" fill="rgb(218,26,9)" rx="2" ry="2" />
<text  x="1083.67" y="47.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (2 samples, 0.06%)</title><rect x="266.3" y="101" width="0.8" height="15.0" fill="rgb(247,194,38)" rx="2" ry="2" />
<text  x="269.33" y="111.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (288 samples, 8.92%)</title><rect x="1062.4" y="261" width="105.3" height="15.0" fill="rgb(241,212,38)" rx="2" ry="2" />
<text  x="1065.38" y="271.5" >gtaskqueue_r..</text>
</g>
<g >
<title>ifmp_ring_enqueue (12 samples, 0.37%)</title><rect x="72.2" y="37" width="4.4" height="15.0" fill="rgb(217,20,38)" rx="2" ry="2" />
<text  x="75.16" y="47.5" ></text>
</g>
<g >
<title>pagezero_erms (2 samples, 0.06%)</title><rect x="266.3" y="85" width="0.8" height="15.0" fill="rgb(251,15,49)" rx="2" ry="2" />
<text  x="269.33" y="95.5" ></text>
</g>
<g >
<title>softclock_thread (5 samples, 0.15%)</title><rect x="313.9" y="261" width="1.8" height="15.0" fill="rgb(250,129,52)" rx="2" ry="2" />
<text  x="316.87" y="271.5" ></text>
</g>
<g >
<title>uma_small_alloc (2 samples, 0.06%)</title><rect x="266.3" y="117" width="0.8" height="15.0" fill="rgb(211,138,9)" rx="2" ry="2" />
<text  x="269.33" y="127.5" ></text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.06%)</title><rect x="1180.1" y="261" width="0.8" height="15.0" fill="rgb(235,219,44)" rx="2" ry="2" />
<text  x="1183.13" y="271.5" ></text>
</g>
<g >
<title>timercb (23 samples, 0.71%)</title><rect x="1181.6" y="261" width="8.4" height="15.0" fill="rgb(230,205,43)" rx="2" ry="2" />
<text  x="1184.59" y="271.5" ></text>
</g>
<g >
<title>ipf_nat_checkout (4 samples, 0.12%)</title><rect x="201.2" y="37" width="1.5" height="15.0" fill="rgb(237,79,34)" rx="2" ry="2" />
<text  x="204.24" y="47.5" ></text>
</g>
<g >
<title>zone_import (1 samples, 0.03%)</title><rect x="267.1" y="101" width="0.3" height="15.0" fill="rgb(227,168,43)" rx="2" ry="2" />
<text  x="270.06" y="111.5" ></text>
</g>
<g >
<title>_rw_wowned (13 samples, 0.40%)</title><rect x="341.7" y="37" width="4.7" height="15.0" fill="rgb(230,150,51)" rx="2" ry="2" />
<text  x="344.66" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (29 samples, 0.90%)</title><rect x="1070.1" y="37" width="10.6" height="15.0" fill="rgb(213,221,29)" rx="2" ry="2" />
<text  x="1073.06" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_timer (1 samples, 0.03%)</title><rect x="313.9" y="213" width="0.3" height="15.0" fill="rgb(234,140,30)" rx="2" ry="2" />
<text  x="316.87" y="223.5" ></text>
</g>
<g >
<title>ipf_nat_checkin (3 samples, 0.09%)</title><rect x="200.1" y="37" width="1.1" height="15.0" fill="rgb(245,79,17)" rx="2" ry="2" />
<text  x="203.15" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.03%)</title><rect x="1179.0" y="213" width="0.4" height="15.0" fill="rgb(217,138,23)" rx="2" ry="2" />
<text  x="1182.03" y="223.5" ></text>
</g>
<g >
<title>ipf_queueappend (2 samples, 0.06%)</title><rect x="320.4" y="37" width="0.8" height="15.0" fill="rgb(231,6,43)" rx="2" ry="2" />
<text  x="323.45" y="47.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (5 samples, 0.15%)</title><rect x="1093.5" y="37" width="1.8" height="15.0" fill="rgb(248,135,9)" rx="2" ry="2" />
<text  x="1096.46" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.03%)</title><rect x="312.0" y="229" width="0.4" height="15.0" fill="rgb(239,11,21)" rx="2" ry="2" />
<text  x="315.04" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (2,042 samples, 63.28%)</title><rect x="315.7" y="197" width="746.7" height="15.0" fill="rgb(252,164,23)" rx="2" ry="2" />
<text  x="318.70" y="207.5" >ether_nh_input</text>
</g>
<g >
<title>pfil_run_hooks (282 samples, 8.74%)</title><rect x="1064.6" y="101" width="103.1" height="15.0" fill="rgb(212,27,25)" rx="2" ry="2" />
<text  x="1067.58" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>ipf_state_add (3 samples, 0.09%)</title><rect x="320.4" y="69" width="1.1" height="15.0" fill="rgb(247,211,48)" rx="2" ry="2" />
<text  x="323.45" y="79.5" ></text>
</g>
<g >
<title>ipf_timer_func (4 samples, 0.12%)</title><rect x="314.2" y="229" width="1.5" height="15.0" fill="rgb(251,172,48)" rx="2" ry="2" />
<text  x="317.23" y="239.5" ></text>
</g>
<g >
<title>iflib_fl_refill (27 samples, 0.84%)</title><rect x="261.2" y="197" width="9.9" height="15.0" fill="rgb(235,116,31)" rx="2" ry="2" />
<text  x="264.21" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.03%)</title><rect x="289.0" y="181" width="0.4" height="15.0" fill="rgb(230,206,44)" rx="2" ry="2" />
<text  x="292.00" y="191.5" ></text>
</g>
<g >
<title>fib4_lookup (17 samples, 0.53%)</title><rect x="79.1" y="69" width="6.2" height="15.0" fill="rgb(229,224,12)" rx="2" ry="2" />
<text  x="82.11" y="79.5" ></text>
</g>
<g >
<title>iflib_timer (1 samples, 0.03%)</title><rect x="313.9" y="229" width="0.3" height="15.0" fill="rgb(205,138,4)" rx="2" ry="2" />
<text  x="316.87" y="239.5" ></text>
</g>
<g >
<title>intr_execute_handlers (34 samples, 1.05%)</title><rect x="1167.7" y="277" width="12.4" height="15.0" fill="rgb(235,121,7)" rx="2" ry="2" />
<text  x="1170.69" y="287.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (6 samples, 0.19%)</title><rect x="304.7" y="165" width="2.2" height="15.0" fill="rgb(237,120,32)" rx="2" ry="2" />
<text  x="307.73" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (2,042 samples, 63.28%)</title><rect x="315.7" y="277" width="746.7" height="15.0" fill="rgb(230,44,54)" rx="2" ry="2" />
<text  x="318.70" y="287.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>Xapic_isr1 (8 samples, 0.25%)</title><rect x="10.0" y="277" width="2.9" height="15.0" fill="rgb(250,108,22)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_rw_wowned (49 samples, 1.52%)</title><rect x="162.1" y="37" width="17.9" height="15.0" fill="rgb(238,51,49)" rx="2" ry="2" />
<text  x="165.12" y="47.5" ></text>
</g>
<g >
<title>ipf_derefrule (29 samples, 0.90%)</title><rect x="1070.1" y="53" width="10.6" height="15.0" fill="rgb(209,162,5)" rx="2" ry="2" />
<text  x="1073.06" y="63.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (6 samples, 0.19%)</title><rect x="1062.4" y="53" width="2.2" height="15.0" fill="rgb(219,29,50)" rx="2" ry="2" />
<text  x="1065.38" y="63.5" ></text>
</g>
<g >
<title>ether_input (2,042 samples, 63.28%)</title><rect x="315.7" y="229" width="746.7" height="15.0" fill="rgb(210,12,13)" rx="2" ry="2" />
<text  x="318.70" y="239.5" >ether_input</text>
</g>
<g >
<title>uma_zfree_arg (7 samples, 0.22%)</title><rect x="295.2" y="133" width="2.6" height="15.0" fill="rgb(222,104,29)" rx="2" ry="2" />
<text  x="298.22" y="143.5" ></text>
</g>
<g >
<title>ixgbe_check_mac_link_generic (1 samples, 0.03%)</title><rect x="313.9" y="197" width="0.3" height="15.0" fill="rgb(250,104,8)" rx="2" ry="2" />
<text  x="316.87" y="207.5" ></text>
</g>
<g >
<title>uma_zfree_arg (3 samples, 0.09%)</title><rect x="1061.3" y="37" width="1.1" height="15.0" fill="rgb(217,127,37)" rx="2" ry="2" />
<text  x="1064.29" y="47.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (9 samples, 0.28%)</title><rect x="267.8" y="181" width="3.3" height="15.0" fill="rgb(235,40,33)" rx="2" ry="2" />
<text  x="270.79" y="191.5" ></text>
</g>
<g >
<title>iflib_encap (31 samples, 0.96%)</title><rect x="297.8" y="181" width="11.3" height="15.0" fill="rgb(238,20,38)" rx="2" ry="2" />
<text  x="300.78" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.09%)</title><rect x="1063.5" y="37" width="1.1" height="15.0" fill="rgb(244,33,41)" rx="2" ry="2" />
<text  x="1066.48" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (3 samples, 0.09%)</title><rect x="14.4" y="261" width="1.1" height="15.0" fill="rgb(206,184,4)" rx="2" ry="2" />
<text  x="17.39" y="271.5" ></text>
</g>
<g >
<title>ether_input (638 samples, 19.77%)</title><rect x="27.6" y="197" width="233.2" height="15.0" fill="rgb(224,215,45)" rx="2" ry="2" />
<text  x="30.55" y="207.5" >ether_input</text>
</g>
<g >
<title>Xapic_isr1_pti (3 samples, 0.09%)</title><rect x="12.9" y="277" width="1.1" height="15.0" fill="rgb(239,122,0)" rx="2" ry="2" />
<text  x="15.93" y="287.5" ></text>
</g>
<g >
<title>ip_input (603 samples, 18.69%)</title><rect x="39.6" y="117" width="220.5" height="15.0" fill="rgb(209,130,40)" rx="2" ry="2" />
<text  x="42.62" y="127.5" >ip_input</text>
</g>
<g >
<title>ip_tryforward (3 samples, 0.09%)</title><rect x="14.4" y="149" width="1.1" height="15.0" fill="rgb(223,204,15)" rx="2" ry="2" />
<text  x="17.39" y="159.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.03%)</title><rect x="267.4" y="133" width="0.4" height="15.0" fill="rgb(221,197,41)" rx="2" ry="2" />
<text  x="270.43" y="143.5" ></text>
</g>
<g >
<title>ipf_matchsrcdst (1,955 samples, 60.58%)</title><rect x="346.4" y="37" width="714.9" height="15.0" fill="rgb(247,222,42)" rx="2" ry="2" />
<text  x="349.41" y="47.5" >ipf_matchsrcdst</text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.09%)</title><rect x="1062.4" y="37" width="1.1" height="15.0" fill="rgb(243,56,2)" rx="2" ry="2" />
<text  x="1065.38" y="47.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.03%)</title><rect x="267.1" y="53" width="0.3" height="15.0" fill="rgb(243,121,21)" rx="2" ry="2" />
<text  x="270.06" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (288 samples, 8.92%)</title><rect x="1062.4" y="149" width="105.3" height="15.0" fill="rgb(233,150,22)" rx="2" ry="2" />
<text  x="1065.38" y="159.5" >netisr_dispa..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.06%)</title><rect x="19.1" y="213" width="0.8" height="15.0" fill="rgb(223,193,53)" rx="2" ry="2" />
<text  x="22.14" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.03%)</title><rect x="267.1" y="69" width="0.3" height="15.0" fill="rgb(251,139,0)" rx="2" ry="2" />
<text  x="270.06" y="79.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (2 samples, 0.06%)</title><rect x="1083.6" y="37" width="0.7" height="15.0" fill="rgb(242,202,35)" rx="2" ry="2" />
<text  x="1086.59" y="47.5" ></text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.03%)</title><rect x="14.0" y="277" width="0.4" height="15.0" fill="rgb(247,144,7)" rx="2" ry="2" />
<text  x="17.02" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (1 samples, 0.03%)</title><rect x="1176.1" y="229" width="0.4" height="15.0" fill="rgb(216,17,44)" rx="2" ry="2" />
<text  x="1179.10" y="239.5" ></text>
</g>
<g >
<title>ipf_auth_check (7 samples, 0.22%)</title><rect x="180.0" y="37" width="2.6" height="15.0" fill="rgb(237,149,24)" rx="2" ry="2" />
<text  x="183.03" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (288 samples, 8.92%)</title><rect x="1062.4" y="245" width="105.3" height="15.0" fill="rgb(213,82,15)" rx="2" ry="2" />
<text  x="1065.38" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>iflib_get_ifp (2 samples, 0.06%)</title><rect x="1178.3" y="213" width="0.7" height="15.0" fill="rgb(216,94,14)" rx="2" ry="2" />
<text  x="1181.30" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (15 samples, 0.46%)</title><rect x="1064.6" y="53" width="5.5" height="15.0" fill="rgb(218,190,20)" rx="2" ry="2" />
<text  x="1067.58" y="63.5" ></text>
</g>
<g >
<title>memset_erms (9 samples, 0.28%)</title><rect x="256.8" y="37" width="3.3" height="15.0" fill="rgb(232,96,42)" rx="2" ry="2" />
<text  x="259.82" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (6 samples, 0.19%)</title><rect x="271.1" y="197" width="2.2" height="15.0" fill="rgb(231,25,42)" rx="2" ry="2" />
<text  x="274.08" y="207.5" ></text>
</g>
<g >
<title>ipf_check_wrapper (472 samples, 14.63%)</title><rect x="87.5" y="69" width="172.6" height="15.0" fill="rgb(206,175,37)" rx="2" ry="2" />
<text  x="90.52" y="79.5" >ipf_check_wrapper</text>
</g>
<g >
<title>ipf_slowtimer (4 samples, 0.12%)</title><rect x="314.2" y="213" width="1.5" height="15.0" fill="rgb(229,5,13)" rx="2" ry="2" />
<text  x="317.23" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (3 samples, 0.09%)</title><rect x="310.6" y="213" width="1.1" height="15.0" fill="rgb(228,161,46)" rx="2" ry="2" />
<text  x="313.58" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3 samples, 0.09%)</title><rect x="14.4" y="181" width="1.1" height="15.0" fill="rgb(227,27,39)" rx="2" ry="2" />
<text  x="17.39" y="191.5" ></text>
</g>
<g >
<title>pmc_hook_handler (11 samples, 0.34%)</title><rect x="1184.5" y="213" width="4.0" height="15.0" fill="rgb(210,168,21)" rx="2" ry="2" />
<text  x="1187.52" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (68 samples, 2.11%)</title><rect x="285.7" y="197" width="24.9" height="15.0" fill="rgb(208,195,52)" rx="2" ry="2" />
<text  x="288.71" y="207.5" >i..</text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.03%)</title><rect x="321.5" y="37" width="0.4" height="15.0" fill="rgb(248,90,14)" rx="2" ry="2" />
<text  x="324.55" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,042 samples, 63.28%)</title><rect x="315.7" y="165" width="746.7" height="15.0" fill="rgb(232,170,50)" rx="2" ry="2" />
<text  x="318.70" y="175.5" >netisr_dispatch_src</text>
</g>
<g >
<title>tsc_get_config (1 samples, 0.03%)</title><rect x="1188.2" y="181" width="0.3" height="15.0" fill="rgb(241,218,24)" rx="2" ry="2" />
<text  x="1191.17" y="191.5" ></text>
</g>
<g >
<title>lock_delay (15 samples, 0.46%)</title><rect x="1064.6" y="37" width="5.5" height="15.0" fill="rgb(242,150,1)" rx="2" ry="2" />
<text  x="1067.58" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (811 samples, 25.13%)</title><rect x="17.3" y="245" width="296.6" height="15.0" fill="rgb(220,176,52)" rx="2" ry="2" />
<text  x="20.31" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>memcpy_erms (9 samples, 0.28%)</title><rect x="274.7" y="197" width="3.3" height="15.0" fill="rgb(252,72,35)" rx="2" ry="2" />
<text  x="277.74" y="207.5" ></text>
</g>
<g >
<title>ipf_derefrule (25 samples, 0.77%)</title><rect x="182.6" y="37" width="9.1" height="15.0" fill="rgb(229,162,46)" rx="2" ry="2" />
<text  x="185.59" y="47.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (4 samples, 0.12%)</title><rect x="309.1" y="181" width="1.5" height="15.0" fill="rgb(209,221,6)" rx="2" ry="2" />
<text  x="312.11" y="191.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (1 samples, 0.03%)</title><rect x="14.8" y="37" width="0.3" height="15.0" fill="rgb(243,21,53)" rx="2" ry="2" />
<text  x="17.75" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.03%)</title><rect x="1175.4" y="213" width="0.3" height="15.0" fill="rgb(206,48,3)" rx="2" ry="2" />
<text  x="1178.37" y="223.5" ></text>
</g>
<g >
<title>memset_erms (1 samples, 0.03%)</title><rect x="1092.7" y="37" width="0.4" height="15.0" fill="rgb(224,208,3)" rx="2" ry="2" />
<text  x="1095.73" y="47.5" ></text>
</g>
<g >
<title>handleevents (22 samples, 0.68%)</title><rect x="1182.0" y="245" width="8.0" height="15.0" fill="rgb(224,73,52)" rx="2" ry="2" />
<text  x="1184.96" y="255.5" ></text>
</g>
<g >
<title>m_adj (2 samples, 0.06%)</title><rect x="37.4" y="133" width="0.8" height="15.0" fill="rgb(245,179,22)" rx="2" ry="2" />
<text  x="40.42" y="143.5" ></text>
</g>
<g >
<title>ip_tryforward (587 samples, 18.19%)</title><rect x="45.5" y="101" width="214.6" height="15.0" fill="rgb(214,224,16)" rx="2" ry="2" />
<text  x="48.47" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ip_input (3 samples, 0.09%)</title><rect x="14.4" y="165" width="1.1" height="15.0" fill="rgb(208,177,8)" rx="2" ry="2" />
<text  x="17.39" y="175.5" ></text>
</g>
<g >
<title>ipf_state_log (1 samples, 0.03%)</title><rect x="321.2" y="53" width="0.3" height="15.0" fill="rgb(232,174,44)" rx="2" ry="2" />
<text  x="324.18" y="63.5" ></text>
</g>
<g >
<title>lock_delay (3 samples, 0.09%)</title><rect x="265.2" y="101" width="1.1" height="15.0" fill="rgb(216,169,11)" rx="2" ry="2" />
<text  x="268.23" y="111.5" ></text>
</g>
<g >
<title>ip_input (288 samples, 8.92%)</title><rect x="1062.4" y="133" width="105.3" height="15.0" fill="rgb(218,166,6)" rx="2" ry="2" />
<text  x="1065.38" y="143.5" >ip_input</text>
</g>
<g >
<title>ether_output_frame (6 samples, 0.19%)</title><rect x="1062.4" y="85" width="2.2" height="15.0" fill="rgb(214,175,51)" rx="2" ry="2" />
<text  x="1065.38" y="95.5" ></text>
</g>
<g >
<title>ether_demux (2,042 samples, 63.28%)</title><rect x="315.7" y="181" width="746.7" height="15.0" fill="rgb(216,64,47)" rx="2" ry="2" />
<text  x="318.70" y="191.5" >ether_demux</text>
</g>
<g >
<title>ipf_makefrip (23 samples, 0.71%)</title><rect x="191.7" y="37" width="8.4" height="15.0" fill="rgb(220,55,2)" rx="2" ry="2" />
<text  x="194.74" y="47.5" ></text>
</g>
<g >
<title>msi_vector (2 samples, 0.06%)</title><rect x="1179.4" y="261" width="0.7" height="15.0" fill="rgb(241,155,39)" rx="2" ry="2" />
<text  x="1182.40" y="271.5" ></text>
</g>
<g >
<title>lock_delay (13 samples, 0.40%)</title><rect x="315.7" y="37" width="4.7" height="15.0" fill="rgb(238,98,0)" rx="2" ry="2" />
<text  x="318.70" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (3 samples, 0.09%)</title><rect x="273.3" y="197" width="1.1" height="15.0" fill="rgb(208,92,24)" rx="2" ry="2" />
<text  x="276.28" y="207.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.06%)</title><rect x="260.1" y="149" width="0.7" height="15.0" fill="rgb(252,42,29)" rx="2" ry="2" />
<text  x="263.11" y="159.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (1 samples, 0.03%)</title><rect x="284.2" y="197" width="0.4" height="15.0" fill="rgb(242,100,52)" rx="2" ry="2" />
<text  x="287.25" y="207.5" ></text>
</g>
<g >
<title>m_free (9 samples, 0.28%)</title><rect x="294.5" y="149" width="3.3" height="15.0" fill="rgb(221,181,20)" rx="2" ry="2" />
<text  x="297.49" y="159.5" ></text>
</g>
<g >
<title>ipf_check (3 samples, 0.09%)</title><rect x="14.4" y="101" width="1.1" height="15.0" fill="rgb(229,169,11)" rx="2" ry="2" />
<text  x="17.39" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (606 samples, 18.78%)</title><rect x="38.5" y="133" width="221.6" height="15.0" fill="rgb(209,52,18)" rx="2" ry="2" />
<text  x="41.52" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch_src (2,042 samples, 63.28%)</title><rect x="315.7" y="213" width="746.7" height="15.0" fill="rgb(235,80,12)" rx="2" ry="2" />
<text  x="318.70" y="223.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_fast_intr_rxtx (23 samples, 0.71%)</title><rect x="1171.0" y="245" width="8.4" height="15.0" fill="rgb(205,159,39)" rx="2" ry="2" />
<text  x="1173.99" y="255.5" ></text>
</g>
<g >
<title>all (3,227 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(248,164,15)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ipf_state_insert (1 samples, 0.03%)</title><rect x="14.4" y="69" width="0.4" height="15.0" fill="rgb(251,122,42)" rx="2" ry="2" />
<text  x="17.39" y="79.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (1 samples, 0.03%)</title><rect x="1175.7" y="229" width="0.4" height="15.0" fill="rgb(252,175,52)" rx="2" ry="2" />
<text  x="1178.74" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (6 samples, 0.19%)</title><rect x="1062.4" y="69" width="2.2" height="15.0" fill="rgb(218,29,51)" rx="2" ry="2" />
<text  x="1065.38" y="79.5" ></text>
</g>
<g >
<title>softclock_call_cc (5 samples, 0.15%)</title><rect x="313.9" y="245" width="1.8" height="15.0" fill="rgb(248,125,2)" rx="2" ry="2" />
<text  x="316.87" y="255.5" ></text>
</g>
<g >
<title>ip_input (2,042 samples, 63.28%)</title><rect x="315.7" y="149" width="746.7" height="15.0" fill="rgb(240,108,39)" rx="2" ry="2" />
<text  x="318.70" y="159.5" >ip_input</text>
</g>
<g >
<title>ether_nh_input (288 samples, 8.92%)</title><rect x="1062.4" y="181" width="105.3" height="15.0" fill="rgb(216,149,50)" rx="2" ry="2" />
<text  x="1065.38" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>bsearch4_lookup (8 samples, 0.25%)</title><rect x="82.4" y="53" width="2.9" height="15.0" fill="rgb(236,174,33)" rx="2" ry="2" />
<text  x="85.40" y="63.5" ></text>
</g>
<g >
<title>lock_init (1 samples, 0.03%)</title><rect x="14.4" y="37" width="0.4" height="15.0" fill="rgb(212,229,2)" rx="2" ry="2" />
<text  x="17.39" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (723 samples, 22.40%)</title><rect x="20.2" y="213" width="264.4" height="15.0" fill="rgb(220,173,13)" rx="2" ry="2" />
<text  x="23.24" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.03%)</title><rect x="15.1" y="37" width="0.4" height="15.0" fill="rgb(211,116,34)" rx="2" ry="2" />
<text  x="18.12" y="47.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (3 samples, 0.09%)</title><rect x="1186.3" y="181" width="1.1" height="15.0" fill="rgb(249,89,2)" rx="2" ry="2" />
<text  x="1189.34" y="191.5" ></text>
</g>
<g >
<title>ipf_movequeue (1 samples, 0.03%)</title><rect x="321.5" y="53" width="0.4" height="15.0" fill="rgb(240,107,20)" rx="2" ry="2" />
<text  x="324.55" y="63.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.25%)</title><rect x="264.9" y="165" width="2.9" height="15.0" fill="rgb(227,54,49)" rx="2" ry="2" />
<text  x="267.87" y="175.5" ></text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.03%)</title><rect x="1188.5" y="229" width="0.4" height="15.0" fill="rgb(229,14,38)" rx="2" ry="2" />
<text  x="1191.54" y="239.5" ></text>
</g>
<g >
<title>fork_exit (816 samples, 25.29%)</title><rect x="17.3" y="277" width="298.4" height="15.0" fill="rgb(233,136,36)" rx="2" ry="2" />
<text  x="20.31" y="287.5" >fork_exit</text>
</g>
<g >
<title>netisr_dispatch_src (635 samples, 19.68%)</title><rect x="28.6" y="181" width="232.2" height="15.0" fill="rgb(238,152,11)" rx="2" ry="2" />
<text  x="31.65" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>soft_get_config (2 samples, 0.06%)</title><rect x="1187.4" y="181" width="0.8" height="15.0" fill="rgb(235,170,0)" rx="2" ry="2" />
<text  x="1190.44" y="191.5" ></text>
</g>
<g >
<title>keg_alloc_slab (7 samples, 0.22%)</title><rect x="264.9" y="133" width="2.5" height="15.0" fill="rgb(236,67,40)" rx="2" ry="2" />
<text  x="267.87" y="143.5" ></text>
</g>
<g >
<title>m_free (1 samples, 0.03%)</title><rect x="1167.3" y="37" width="0.4" height="15.0" fill="rgb(253,209,21)" rx="2" ry="2" />
<text  x="1170.33" y="47.5" ></text>
</g>
<g >
<title>intr_event_handle (28 samples, 0.87%)</title><rect x="1169.2" y="261" width="10.2" height="15.0" fill="rgb(249,190,35)" rx="2" ry="2" />
<text  x="1172.16" y="271.5" ></text>
</g>
<g >
<title>pfil_run_hooks (3 samples, 0.09%)</title><rect x="14.4" y="133" width="1.1" height="15.0" fill="rgb(240,223,51)" rx="2" ry="2" />
<text  x="17.39" y="143.5" ></text>
</g>
<g >
<title>doreti (5 samples, 0.15%)</title><rect x="15.5" y="277" width="1.8" height="15.0" fill="rgb(232,108,39)" rx="2" ry="2" />
<text  x="18.48" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.03%)</title><rect x="310.2" y="165" width="0.4" height="15.0" fill="rgb(219,204,33)" rx="2" ry="2" />
<text  x="313.21" y="175.5" ></text>
</g>
<g >
<title>ipf_check (2,042 samples, 63.28%)</title><rect x="315.7" y="85" width="746.7" height="15.0" fill="rgb(207,102,34)" rx="2" ry="2" />
<text  x="318.70" y="95.5" >ipf_check</text>
</g>
<g >
<title>ipf_state_expire (4 samples, 0.12%)</title><rect x="314.2" y="197" width="1.5" height="15.0" fill="rgb(224,218,46)" rx="2" ry="2" />
<text  x="317.23" y="207.5" ></text>
</g>
<g >
<title>_rw_runlock_cookie_int (6 samples, 0.19%)</title><rect x="159.9" y="37" width="2.2" height="15.0" fill="rgb(218,46,53)" rx="2" ry="2" />
<text  x="162.92" y="47.5" ></text>
</g>
<g >
<title>in_localip (4 samples, 0.12%)</title><rect x="77.3" y="85" width="1.4" height="15.0" fill="rgb(211,157,35)" rx="2" ry="2" />
<text  x="80.28" y="95.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2 samples, 0.06%)</title><rect x="14.8" y="53" width="0.7" height="15.0" fill="rgb(234,213,4)" rx="2" ry="2" />
<text  x="17.75" y="63.5" ></text>
</g>
<g >
<title>ip_findroute (18 samples, 0.56%)</title><rect x="78.7" y="85" width="6.6" height="15.0" fill="rgb(222,112,48)" rx="2" ry="2" />
<text  x="81.74" y="95.5" ></text>
</g>
<g >
<title>ipf_log_items (1 samples, 0.03%)</title><rect x="321.2" y="37" width="0.3" height="15.0" fill="rgb(236,85,48)" rx="2" ry="2" />
<text  x="324.18" y="47.5" ></text>
</g>
<g >
<title>drain_ring_lockless (68 samples, 2.11%)</title><rect x="285.7" y="213" width="24.9" height="15.0" fill="rgb(213,212,11)" rx="2" ry="2" />
<text  x="288.71" y="223.5" >d..</text>
</g>
<g >
<title>m_freem (3 samples, 0.09%)</title><rect x="1061.3" y="69" width="1.1" height="15.0" fill="rgb(206,192,24)" rx="2" ry="2" />
<text  x="1064.29" y="79.5" ></text>
</g>
<g >
<title>ether_demux (3 samples, 0.09%)</title><rect x="14.4" y="197" width="1.1" height="15.0" fill="rgb(223,14,31)" rx="2" ry="2" />
<text  x="17.39" y="207.5" ></text>
</g>
<g >
<title>loadtimer (1 samples, 0.03%)</title><rect x="1188.9" y="229" width="0.4" height="15.0" fill="rgb(230,102,19)" rx="2" ry="2" />
<text  x="1191.90" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (20 samples, 0.62%)</title><rect x="140.2" y="37" width="7.3" height="15.0" fill="rgb(229,190,3)" rx="2" ry="2" />
<text  x="143.18" y="47.5" ></text>
</g>
<g >
<title>ip_tryforward (288 samples, 8.92%)</title><rect x="1062.4" y="117" width="105.3" height="15.0" fill="rgb(210,102,30)" rx="2" ry="2" />
<text  x="1065.38" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>et_start (1 samples, 0.03%)</title><rect x="1183.1" y="229" width="0.3" height="15.0" fill="rgb(231,64,42)" rx="2" ry="2" />
<text  x="1186.05" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (4 samples, 0.12%)</title><rect x="305.5" y="149" width="1.4" height="15.0" fill="rgb(252,163,13)" rx="2" ry="2" />
<text  x="308.46" y="159.5" ></text>
</g>
<g >
<title>_task_fn_rx (3 samples, 0.09%)</title><rect x="14.4" y="277" width="1.1" height="15.0" fill="rgb(251,107,31)" rx="2" ry="2" />
<text  x="17.39" y="287.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (17 samples, 0.53%)</title><rect x="278.0" y="197" width="6.2" height="15.0" fill="rgb(223,203,41)" rx="2" ry="2" />
<text  x="281.03" y="207.5" ></text>
</g>
<g >
<title>ipf_pr_pullup (3 samples, 0.09%)</title><rect x="1082.5" y="37" width="1.1" height="15.0" fill="rgb(212,106,47)" rx="2" ry="2" />
<text  x="1085.49" y="47.5" ></text>
</g>
<g >
<title>ipf_state_check (202 samples, 6.26%)</title><rect x="1093.5" y="53" width="73.8" height="15.0" fill="rgb(214,136,42)" rx="2" ry="2" />
<text  x="1096.46" y="63.5" >ipf_stat..</text>
</g>
<g >
<title>ipf_state_add (1 samples, 0.03%)</title><rect x="14.4" y="85" width="0.4" height="15.0" fill="rgb(209,122,35)" rx="2" ry="2" />
<text  x="17.39" y="95.5" ></text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.03%)</title><rect x="267.1" y="117" width="0.3" height="15.0" fill="rgb(224,11,32)" rx="2" ry="2" />
<text  x="270.06" y="127.5" ></text>
</g>
<g >
<title>lapic_handle_intr (2 samples, 0.06%)</title><rect x="1180.1" y="277" width="0.8" height="15.0" fill="rgb(211,183,5)" rx="2" ry="2" />
<text  x="1183.13" y="287.5" ></text>
</g>
<g >
<title>_rw_wowned (2 samples, 0.06%)</title><rect x="1084.3" y="37" width="0.8" height="15.0" fill="rgb(250,217,7)" rx="2" ry="2" />
<text  x="1087.32" y="47.5" ></text>
</g>
</g>
</svg>
