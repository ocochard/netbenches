<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>gtaskqueue_run_locked (1,686 samples, 77.41%)</title><rect x="31.7" y="245" width="913.4" height="15.0" fill="rgb(250,170,49)" rx="2" ry="2" />
<text  x="34.67" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>handleevents (6 samples, 0.28%)</title><rect x="1186.7" y="245" width="3.3" height="15.0" fill="rgb(240,140,45)" rx="2" ry="2" />
<text  x="1189.75" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (29 samples, 1.33%)</title><rect x="668.3" y="197" width="15.7" height="15.0" fill="rgb(239,52,4)" rx="2" ry="2" />
<text  x="671.26" y="207.5" ></text>
</g>
<g >
<title>iflib_txq_drain (389 samples, 17.86%)</title><rect x="729.5" y="197" width="210.7" height="15.0" fill="rgb(226,159,25)" rx="2" ry="2" />
<text  x="732.49" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ether_demux (50 samples, 2.30%)</title><rect x="945.1" y="181" width="27.1" height="15.0" fill="rgb(236,73,12)" rx="2" ry="2" />
<text  x="948.11" y="191.5" >e..</text>
</g>
<g >
<title>iflib_rxeof (50 samples, 2.30%)</title><rect x="945.1" y="245" width="27.1" height="15.0" fill="rgb(235,228,33)" rx="2" ry="2" />
<text  x="948.11" y="255.5" >i..</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.05%)</title><rect x="27.9" y="69" width="0.5" height="15.0" fill="rgb(248,143,3)" rx="2" ry="2" />
<text  x="30.88" y="79.5" ></text>
</g>
<g >
<title>m_adj (10 samples, 0.46%)</title><rect x="124.9" y="133" width="5.4" height="15.0" fill="rgb(210,105,47)" rx="2" ry="2" />
<text  x="127.86" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (119 samples, 5.46%)</title><rect x="275.5" y="69" width="64.4" height="15.0" fill="rgb(205,66,0)" rx="2" ry="2" />
<text  x="278.47" y="79.5" >ether_o..</text>
</g>
<g >
<title>_rm_runlock (12 samples, 0.55%)</title><rect x="583.2" y="37" width="6.5" height="15.0" fill="rgb(216,178,44)" rx="2" ry="2" />
<text  x="586.20" y="47.5" ></text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.05%)</title><rect x="1189.5" y="213" width="0.5" height="15.0" fill="rgb(217,206,37)" rx="2" ry="2" />
<text  x="1192.46" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.05%)</title><rect x="27.9" y="53" width="0.5" height="15.0" fill="rgb(245,205,5)" rx="2" ry="2" />
<text  x="30.88" y="63.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="649.3" y="181" width="0.5" height="15.0" fill="rgb(219,133,16)" rx="2" ry="2" />
<text  x="652.30" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (254 samples, 11.66%)</title><rect x="972.2" y="277" width="137.6" height="15.0" fill="rgb(238,74,9)" rx="2" ry="2" />
<text  x="975.20" y="287.5" >gtaskqueue_thread..</text>
</g>
<g >
<title>ip_tryforward (1 samples, 0.05%)</title><rect x="27.9" y="149" width="0.5" height="15.0" fill="rgb(248,64,3)" rx="2" ry="2" />
<text  x="30.88" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (254 samples, 11.66%)</title><rect x="972.2" y="149" width="137.6" height="15.0" fill="rgb(237,86,9)" rx="2" ry="2" />
<text  x="975.20" y="159.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ipfw_dyn_lookup_state (42 samples, 1.93%)</title><rect x="589.7" y="37" width="22.8" height="15.0" fill="rgb(240,47,4)" rx="2" ry="2" />
<text  x="592.71" y="47.5" >i..</text>
</g>
<g >
<title>tc_windup (1 samples, 0.05%)</title><rect x="1189.5" y="197" width="0.5" height="15.0" fill="rgb(251,190,42)" rx="2" ry="2" />
<text  x="1192.46" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.14%)</title><rect x="38.7" y="229" width="1.6" height="15.0" fill="rgb(242,59,32)" rx="2" ry="2" />
<text  x="41.71" y="239.5" ></text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.05%)</title><rect x="740.3" y="181" width="0.6" height="15.0" fill="rgb(245,42,38)" rx="2" ry="2" />
<text  x="743.32" y="191.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (18 samples, 0.83%)</title><rect x="649.8" y="181" width="9.8" height="15.0" fill="rgb(234,84,34)" rx="2" ry="2" />
<text  x="652.84" y="191.5" ></text>
</g>
<g >
<title>pfil_run_hooks (50 samples, 2.30%)</title><rect x="945.1" y="117" width="27.1" height="15.0" fill="rgb(213,129,17)" rx="2" ry="2" />
<text  x="948.11" y="127.5" >p..</text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.09%)</title><rect x="941.3" y="229" width="1.1" height="15.0" fill="rgb(208,195,43)" rx="2" ry="2" />
<text  x="944.32" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (254 samples, 11.66%)</title><rect x="972.2" y="197" width="137.6" height="15.0" fill="rgb(212,12,2)" rx="2" ry="2" />
<text  x="975.20" y="207.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_nh_input (978 samples, 44.90%)</title><rect x="89.6" y="165" width="529.9" height="15.0" fill="rgb(209,55,30)" rx="2" ry="2" />
<text  x="92.64" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>memcmp (1 samples, 0.05%)</title><rect x="617.9" y="149" width="0.5" height="15.0" fill="rgb(217,221,0)" rx="2" ry="2" />
<text  x="620.88" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (24 samples, 1.10%)</title><rect x="305.3" y="37" width="13.0" height="15.0" fill="rgb(241,20,27)" rx="2" ry="2" />
<text  x="308.27" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.05%)</title><rect x="27.9" y="261" width="0.5" height="15.0" fill="rgb(239,5,49)" rx="2" ry="2" />
<text  x="30.88" y="271.5" ></text>
</g>
<g >
<title>ip_input (887 samples, 40.73%)</title><rect x="137.3" y="117" width="480.6" height="15.0" fill="rgb(221,171,20)" rx="2" ry="2" />
<text  x="140.32" y="127.5" >ip_input</text>
</g>
<g >
<title>rxd_frag_to_sd (44 samples, 2.02%)</title><rect x="700.2" y="197" width="23.9" height="15.0" fill="rgb(216,143,29)" rx="2" ry="2" />
<text  x="703.23" y="207.5" >r..</text>
</g>
<g >
<title>pmc_hook_handler (5 samples, 0.23%)</title><rect x="1186.7" y="213" width="2.8" height="15.0" fill="rgb(219,66,28)" rx="2" ry="2" />
<text  x="1189.75" y="223.5" ></text>
</g>
<g >
<title>tscp_get_timecount_low (1 samples, 0.05%)</title><rect x="1186.2" y="229" width="0.5" height="15.0" fill="rgb(237,69,26)" rx="2" ry="2" />
<text  x="1189.21" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,253 samples, 57.53%)</title><rect x="45.8" y="213" width="678.8" height="15.0" fill="rgb(211,179,15)" rx="2" ry="2" />
<text  x="48.76" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.14%)</title><rect x="620.0" y="197" width="1.7" height="15.0" fill="rgb(243,72,20)" rx="2" ry="2" />
<text  x="623.05" y="207.5" ></text>
</g>
<g >
<title>ip_input (254 samples, 11.66%)</title><rect x="972.2" y="133" width="137.6" height="15.0" fill="rgb(211,88,24)" rx="2" ry="2" />
<text  x="975.20" y="143.5" >ip_input</text>
</g>
<g >
<title>ether_input (254 samples, 11.66%)</title><rect x="972.2" y="213" width="137.6" height="15.0" fill="rgb(243,86,16)" rx="2" ry="2" />
<text  x="975.20" y="223.5" >ether_input</text>
</g>
<g >
<title>memcpy_erms (25 samples, 1.15%)</title><rect x="686.7" y="197" width="13.5" height="15.0" fill="rgb(233,47,5)" rx="2" ry="2" />
<text  x="689.69" y="207.5" ></text>
</g>
<g >
<title>timercb (8 samples, 0.37%)</title><rect x="1185.7" y="261" width="4.3" height="15.0" fill="rgb(228,90,2)" rx="2" ry="2" />
<text  x="1188.67" y="271.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (93 samples, 4.27%)</title><rect x="1129.9" y="245" width="50.3" height="15.0" fill="rgb(250,190,16)" rx="2" ry="2" />
<text  x="1132.86" y="255.5" >iflib..</text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.09%)</title><rect x="1142.9" y="213" width="1.0" height="15.0" fill="rgb(238,78,34)" rx="2" ry="2" />
<text  x="1145.87" y="223.5" ></text>
</g>
<g >
<title>_task_fn_tx (399 samples, 18.32%)</title><rect x="724.6" y="229" width="216.2" height="15.0" fill="rgb(226,171,2)" rx="2" ry="2" />
<text  x="727.61" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>_ck_epoch_delref (2 samples, 0.09%)</title><rect x="39.3" y="213" width="1.0" height="15.0" fill="rgb(232,200,36)" rx="2" ry="2" />
<text  x="42.26" y="223.5" ></text>
</g>
<g >
<title>ipfw_check_packet (402 samples, 18.46%)</title><rect x="400.1" y="69" width="217.8" height="15.0" fill="rgb(250,127,11)" rx="2" ry="2" />
<text  x="403.08" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>iflib_encap (209 samples, 9.60%)</title><rect x="808.0" y="181" width="113.3" height="15.0" fill="rgb(212,88,33)" rx="2" ry="2" />
<text  x="811.04" y="191.5" >iflib_encap</text>
</g>
<g >
<title>hash_packet (24 samples, 1.10%)</title><rect x="1096.8" y="37" width="13.0" height="15.0" fill="rgb(220,184,12)" rx="2" ry="2" />
<text  x="1099.81" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (4 samples, 0.18%)</title><rect x="900.1" y="133" width="2.2" height="15.0" fill="rgb(227,206,27)" rx="2" ry="2" />
<text  x="903.15" y="143.5" ></text>
</g>
<g >
<title>iflib_rxeof (254 samples, 11.66%)</title><rect x="972.2" y="229" width="137.6" height="15.0" fill="rgb(219,103,8)" rx="2" ry="2" />
<text  x="975.20" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>lapic_handle_intr (6 samples, 0.28%)</title><rect x="1181.9" y="277" width="3.2" height="15.0" fill="rgb(207,93,18)" rx="2" ry="2" />
<text  x="1184.87" y="287.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.05%)</title><rect x="944.0" y="213" width="0.6" height="15.0" fill="rgb(239,98,46)" rx="2" ry="2" />
<text  x="947.03" y="223.5" ></text>
</g>
<g >
<title>ipfw_check_packet (50 samples, 2.30%)</title><rect x="945.1" y="101" width="27.1" height="15.0" fill="rgb(239,31,18)" rx="2" ry="2" />
<text  x="948.11" y="111.5" >i..</text>
</g>
<g >
<title>ether_input (1,011 samples, 46.42%)</title><rect x="71.8" y="197" width="547.7" height="15.0" fill="rgb(221,160,17)" rx="2" ry="2" />
<text  x="74.76" y="207.5" >ether_input</text>
</g>
<g >
<title>tcp_lro_flush_all (1 samples, 0.05%)</title><rect x="724.1" y="197" width="0.5" height="15.0" fill="rgb(228,82,29)" rx="2" ry="2" />
<text  x="727.07" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (1 samples, 0.05%)</title><rect x="889.9" y="149" width="0.5" height="15.0" fill="rgb(244,184,44)" rx="2" ry="2" />
<text  x="892.85" y="159.5" ></text>
</g>
<g >
<title>doreti (6 samples, 0.28%)</title><rect x="28.4" y="277" width="3.3" height="15.0" fill="rgb(218,75,14)" rx="2" ry="2" />
<text  x="31.42" y="287.5" ></text>
</g>
<g >
<title>cache_alloc_retry (3 samples, 0.14%)</title><rect x="646.1" y="181" width="1.6" height="15.0" fill="rgb(209,65,0)" rx="2" ry="2" />
<text  x="649.05" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="27.9" y="37" width="0.5" height="15.0" fill="rgb(244,109,23)" rx="2" ry="2" />
<text  x="30.88" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (12 samples, 0.55%)</title><rect x="10.0" y="277" width="6.5" height="15.0" fill="rgb(236,205,33)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.09%)</title><rect x="618.4" y="149" width="1.1" height="15.0" fill="rgb(242,75,14)" rx="2" ry="2" />
<text  x="621.42" y="159.5" ></text>
</g>
<g >
<title>ipfw_chk (216 samples, 9.92%)</title><rect x="992.8" y="69" width="117.0" height="15.0" fill="rgb(207,6,34)" rx="2" ry="2" />
<text  x="995.79" y="79.5" >ipfw_chk</text>
</g>
<g >
<title>iflib_if_transmit (38 samples, 1.74%)</title><rect x="972.2" y="69" width="20.6" height="15.0" fill="rgb(209,130,49)" rx="2" ry="2" />
<text  x="975.20" y="79.5" ></text>
</g>
<g >
<title>msi_vector (2 samples, 0.09%)</title><rect x="1180.8" y="261" width="1.1" height="15.0" fill="rgb(230,103,41)" rx="2" ry="2" />
<text  x="1183.79" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="45.2" y="197" width="0.6" height="15.0" fill="rgb(248,106,48)" rx="2" ry="2" />
<text  x="48.22" y="207.5" ></text>
</g>
<g >
<title>arpresolve (54 samples, 2.48%)</title><rect x="246.2" y="69" width="29.3" height="15.0" fill="rgb(253,129,41)" rx="2" ry="2" />
<text  x="249.22" y="79.5" >ar..</text>
</g>
<g >
<title>lock_delay (1 samples, 0.05%)</title><rect x="945.1" y="37" width="0.6" height="15.0" fill="rgb(243,22,53)" rx="2" ry="2" />
<text  x="948.11" y="47.5" ></text>
</g>
<g >
<title>intr_execute_handlers (133 samples, 6.11%)</title><rect x="1109.8" y="277" width="72.1" height="15.0" fill="rgb(243,92,29)" rx="2" ry="2" />
<text  x="1112.82" y="287.5" >intr_exe..</text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.05%)</title><rect x="27.9" y="117" width="0.5" height="15.0" fill="rgb(208,203,27)" rx="2" ry="2" />
<text  x="30.88" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (254 samples, 11.66%)</title><rect x="972.2" y="261" width="137.6" height="15.0" fill="rgb(242,43,34)" rx="2" ry="2" />
<text  x="975.20" y="271.5" >gtaskqueue_run_lo..</text>
</g>
<g >
<title>m_tag_locate (10 samples, 0.46%)</title><rect x="612.5" y="53" width="5.4" height="15.0" fill="rgb(206,99,4)" rx="2" ry="2" />
<text  x="615.46" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (98 samples, 4.50%)</title><rect x="286.9" y="53" width="53.0" height="15.0" fill="rgb(207,154,40)" rx="2" ry="2" />
<text  x="289.85" y="63.5" >iflib..</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.05%)</title><rect x="943.5" y="213" width="0.5" height="15.0" fill="rgb(236,3,27)" rx="2" ry="2" />
<text  x="946.49" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (1 samples, 0.05%)</title><rect x="882.3" y="165" width="0.5" height="15.0" fill="rgb(234,184,33)" rx="2" ry="2" />
<text  x="885.27" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.05%)</title><rect x="27.9" y="213" width="0.5" height="15.0" fill="rgb(228,192,51)" rx="2" ry="2" />
<text  x="30.88" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="1179.7" y="213" width="0.5" height="15.0" fill="rgb(222,58,33)" rx="2" ry="2" />
<text  x="1182.71" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (4 samples, 0.18%)</title><rect x="934.8" y="165" width="2.2" height="15.0" fill="rgb(235,192,13)" rx="2" ry="2" />
<text  x="937.82" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.23%)</title><rect x="1140.2" y="213" width="2.7" height="15.0" fill="rgb(248,197,3)" rx="2" ry="2" />
<text  x="1143.16" y="223.5" ></text>
</g>
<g >
<title>m_pkthdr_init (5 samples, 0.23%)</title><rect x="684.0" y="197" width="2.7" height="15.0" fill="rgb(210,195,1)" rx="2" ry="2" />
<text  x="686.98" y="207.5" ></text>
</g>
<g >
<title>m_free (40 samples, 1.84%)</title><rect x="786.4" y="149" width="21.6" height="15.0" fill="rgb(207,144,45)" rx="2" ry="2" />
<text  x="789.37" y="159.5" >m..</text>
</g>
<g >
<title>iap_get_config (1 samples, 0.05%)</title><rect x="1188.9" y="181" width="0.6" height="15.0" fill="rgb(249,28,8)" rx="2" ry="2" />
<text  x="1191.92" y="191.5" ></text>
</g>
<g >
<title>ether_output (254 samples, 11.66%)</title><rect x="209.9" y="85" width="137.6" height="15.0" fill="rgb(224,215,20)" rx="2" ry="2" />
<text  x="212.92" y="95.5" >ether_output</text>
</g>
<g >
<title>ifmp_ring_check_drainage (1 samples, 0.05%)</title><rect x="940.2" y="213" width="0.6" height="15.0" fill="rgb(244,144,47)" rx="2" ry="2" />
<text  x="943.24" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,263 samples, 57.99%)</title><rect x="40.3" y="229" width="684.3" height="15.0" fill="rgb(253,194,51)" rx="2" ry="2" />
<text  x="43.34" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>iflib_fl_refill (70 samples, 3.21%)</title><rect x="621.7" y="197" width="37.9" height="15.0" fill="rgb(217,209,34)" rx="2" ry="2" />
<text  x="624.67" y="207.5" >ifl..</text>
</g>
<g >
<title>pmc_process_samples (5 samples, 0.23%)</title><rect x="1186.7" y="197" width="2.8" height="15.0" fill="rgb(214,113,3)" rx="2" ry="2" />
<text  x="1189.75" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (9 samples, 0.41%)</title><rect x="1148.8" y="197" width="4.9" height="15.0" fill="rgb(229,26,8)" rx="2" ry="2" />
<text  x="1151.82" y="207.5" ></text>
</g>
<g >
<title>fork_exit (1,686 samples, 77.41%)</title><rect x="31.7" y="277" width="913.4" height="15.0" fill="rgb(232,153,14)" rx="2" ry="2" />
<text  x="34.67" y="287.5" >fork_exit</text>
</g>
<g >
<title>ifmp_ring_enqueue (36 samples, 1.65%)</title><rect x="320.4" y="37" width="19.5" height="15.0" fill="rgb(222,68,50)" rx="2" ry="2" />
<text  x="323.44" y="47.5" ></text>
</g>
<g >
<title>ether_output (38 samples, 1.74%)</title><rect x="972.2" y="101" width="20.6" height="15.0" fill="rgb(220,196,41)" rx="2" ry="2" />
<text  x="975.20" y="111.5" ></text>
</g>
<g >
<title>timekeep_push_vdso (1 samples, 0.05%)</title><rect x="1189.5" y="181" width="0.5" height="15.0" fill="rgb(252,109,21)" rx="2" ry="2" />
<text  x="1192.46" y="191.5" ></text>
</g>
<g >
<title>_rm_rlock_hard (1 samples, 0.05%)</title><rect x="945.1" y="69" width="0.6" height="15.0" fill="rgb(217,4,6)" rx="2" ry="2" />
<text  x="948.11" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (1,686 samples, 77.41%)</title><rect x="31.7" y="261" width="913.4" height="15.0" fill="rgb(243,17,53)" rx="2" ry="2" />
<text  x="34.67" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ip_tryforward (254 samples, 11.66%)</title><rect x="972.2" y="117" width="137.6" height="15.0" fill="rgb(240,176,2)" rx="2" ry="2" />
<text  x="975.20" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>grouptaskqueue_enqueue (29 samples, 1.33%)</title><rect x="1138.0" y="229" width="15.7" height="15.0" fill="rgb(233,156,23)" rx="2" ry="2" />
<text  x="1140.99" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (14 samples, 0.64%)</title><rect x="339.9" y="69" width="7.6" height="15.0" fill="rgb(251,160,36)" rx="2" ry="2" />
<text  x="342.94" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.05%)</title><rect x="27.9" y="181" width="0.5" height="15.0" fill="rgb(245,46,39)" rx="2" ry="2" />
<text  x="30.88" y="191.5" ></text>
</g>
<g >
<title>ether_demux (254 samples, 11.66%)</title><rect x="972.2" y="165" width="137.6" height="15.0" fill="rgb(227,205,47)" rx="2" ry="2" />
<text  x="975.20" y="175.5" >ether_demux</text>
</g>
<g >
<title>memmove_erms (12 samples, 0.55%)</title><rect x="269.0" y="53" width="6.5" height="15.0" fill="rgb(211,115,4)" rx="2" ry="2" />
<text  x="271.97" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="1153.2" y="181" width="0.5" height="15.0" fill="rgb(237,126,14)" rx="2" ry="2" />
<text  x="1156.16" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (25 samples, 1.15%)</title><rect x="979.2" y="37" width="13.6" height="15.0" fill="rgb(239,178,52)" rx="2" ry="2" />
<text  x="982.25" y="47.5" ></text>
</g>
<g >
<title>iflib_get_ifp (2 samples, 0.09%)</title><rect x="1178.6" y="213" width="1.1" height="15.0" fill="rgb(215,135,54)" rx="2" ry="2" />
<text  x="1181.62" y="223.5" ></text>
</g>
<g >
<title>bsearch4_lookup (28 samples, 1.29%)</title><rect x="373.5" y="53" width="15.2" height="15.0" fill="rgb(241,124,53)" rx="2" ry="2" />
<text  x="376.54" y="63.5" ></text>
</g>
<g >
<title>ether_input (50 samples, 2.30%)</title><rect x="945.1" y="229" width="27.1" height="15.0" fill="rgb(217,56,48)" rx="2" ry="2" />
<text  x="948.11" y="239.5" >e..</text>
</g>
<g >
<title>wakeup_any (14 samples, 0.64%)</title><rect x="1146.1" y="213" width="7.6" height="15.0" fill="rgb(225,172,43)" rx="2" ry="2" />
<text  x="1149.12" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="944.6" y="213" width="0.5" height="15.0" fill="rgb(251,158,21)" rx="2" ry="2" />
<text  x="947.57" y="223.5" ></text>
</g>
<g >
<title>ipfw_check_packet (216 samples, 9.92%)</title><rect x="992.8" y="85" width="117.0" height="15.0" fill="rgb(237,23,15)" rx="2" ry="2" />
<text  x="995.79" y="95.5" >ipfw_check_pac..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (22 samples, 1.01%)</title><rect x="890.4" y="149" width="11.9" height="15.0" fill="rgb(231,124,8)" rx="2" ry="2" />
<text  x="893.39" y="159.5" ></text>
</g>
<g >
<title>ip_tryforward (843 samples, 38.71%)</title><rect x="161.2" y="101" width="456.7" height="15.0" fill="rgb(249,46,35)" rx="2" ry="2" />
<text  x="164.16" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>if_getsoftc (4 samples, 0.18%)</title><rect x="318.3" y="37" width="2.1" height="15.0" fill="rgb(217,63,35)" rx="2" ry="2" />
<text  x="321.27" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (216 samples, 9.92%)</title><rect x="992.8" y="101" width="117.0" height="15.0" fill="rgb(227,93,0)" rx="2" ry="2" />
<text  x="995.79" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>netisr_dispatch_src (996 samples, 45.73%)</title><rect x="79.9" y="181" width="539.6" height="15.0" fill="rgb(230,35,9)" rx="2" ry="2" />
<text  x="82.89" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>binuptime (1 samples, 0.05%)</title><rect x="1186.2" y="245" width="0.5" height="15.0" fill="rgb(213,71,54)" rx="2" ry="2" />
<text  x="1189.21" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.09%)</title><rect x="939.2" y="181" width="1.0" height="15.0" fill="rgb(236,94,17)" rx="2" ry="2" />
<text  x="942.16" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.18%)</title><rect x="43.6" y="213" width="2.2" height="15.0" fill="rgb(205,44,37)" rx="2" ry="2" />
<text  x="46.59" y="223.5" ></text>
</g>
<g >
<title>ipfw_chk (50 samples, 2.30%)</title><rect x="945.1" y="85" width="27.1" height="15.0" fill="rgb(229,123,8)" rx="2" ry="2" />
<text  x="948.11" y="95.5" >i..</text>
</g>
<g >
<title>ether_demux (928 samples, 42.61%)</title><rect x="115.1" y="149" width="502.8" height="15.0" fill="rgb(211,134,22)" rx="2" ry="2" />
<text  x="118.11" y="159.5" >ether_demux</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.05%)</title><rect x="619.5" y="197" width="0.5" height="15.0" fill="rgb(218,154,32)" rx="2" ry="2" />
<text  x="622.50" y="207.5" ></text>
</g>
<g >
<title>wakeup (5 samples, 0.23%)</title><rect x="942.4" y="229" width="2.7" height="15.0" fill="rgb(228,11,6)" rx="2" ry="2" />
<text  x="945.41" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_timer (9 samples, 0.41%)</title><rect x="1185.1" y="277" width="4.9" height="15.0" fill="rgb(247,162,5)" rx="2" ry="2" />
<text  x="1188.12" y="287.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (33 samples, 1.52%)</title><rect x="921.3" y="181" width="17.9" height="15.0" fill="rgb(214,41,4)" rx="2" ry="2" />
<text  x="924.28" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="940.8" y="229" width="0.5" height="15.0" fill="rgb(243,135,35)" rx="2" ry="2" />
<text  x="943.78" y="239.5" ></text>
</g>
<g >
<title>m_freem (44 samples, 2.02%)</title><rect x="784.2" y="165" width="23.8" height="15.0" fill="rgb(229,28,15)" rx="2" ry="2" />
<text  x="787.21" y="175.5" >m..</text>
</g>
<g >
<title>mb_ctor_mbuf (3 samples, 0.14%)</title><rect x="658.0" y="165" width="1.6" height="15.0" fill="rgb(233,114,16)" rx="2" ry="2" />
<text  x="660.97" y="175.5" ></text>
</g>
<g >
<title>lapic_eoi (1 samples, 0.05%)</title><rect x="1180.2" y="245" width="0.6" height="15.0" fill="rgb(218,173,35)" rx="2" ry="2" />
<text  x="1183.25" y="255.5" ></text>
</g>
<g >
<title>ipfw_chk (354 samples, 16.25%)</title><rect x="420.7" y="53" width="191.8" height="15.0" fill="rgb(215,149,48)" rx="2" ry="2" />
<text  x="423.67" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>dyn_lookup_ipv4_state (28 samples, 1.29%)</title><rect x="945.7" y="53" width="15.1" height="15.0" fill="rgb(209,72,20)" rx="2" ry="2" />
<text  x="948.66" y="63.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (50 samples, 2.30%)</title><rect x="945.1" y="277" width="27.1" height="15.0" fill="rgb(232,16,39)" rx="2" ry="2" />
<text  x="948.11" y="287.5" >g..</text>
</g>
<g >
<title>_ck_epoch_addref (2 samples, 0.09%)</title><rect x="37.6" y="213" width="1.1" height="15.0" fill="rgb(206,188,33)" rx="2" ry="2" />
<text  x="40.63" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (898 samples, 41.23%)</title><rect x="131.4" y="133" width="486.5" height="15.0" fill="rgb(232,31,48)" rx="2" ry="2" />
<text  x="134.36" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_output (1 samples, 0.05%)</title><rect x="27.9" y="133" width="0.5" height="15.0" fill="rgb(212,141,36)" rx="2" ry="2" />
<text  x="30.88" y="143.5" ></text>
</g>
<g >
<title>ip_findroute (63 samples, 2.89%)</title><rect x="354.6" y="85" width="34.1" height="15.0" fill="rgb(244,107,19)" rx="2" ry="2" />
<text  x="357.57" y="95.5" >ip..</text>
</g>
<g >
<title>ipfw_dyn_lookup_state (49 samples, 2.25%)</title><rect x="945.7" y="69" width="26.5" height="15.0" fill="rgb(236,51,4)" rx="2" ry="2" />
<text  x="948.66" y="79.5" >i..</text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.05%)</title><rect x="27.3" y="277" width="0.6" height="15.0" fill="rgb(224,150,48)" rx="2" ry="2" />
<text  x="30.34" y="287.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (4 samples, 0.18%)</title><rect x="1143.9" y="213" width="2.2" height="15.0" fill="rgb(243,46,51)" rx="2" ry="2" />
<text  x="1146.95" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (50 samples, 2.30%)</title><rect x="945.1" y="133" width="27.1" height="15.0" fill="rgb(238,33,47)" rx="2" ry="2" />
<text  x="948.11" y="143.5" >i..</text>
</g>
<g >
<title>Xapic_isr1_pti (20 samples, 0.92%)</title><rect x="16.5" y="277" width="10.8" height="15.0" fill="rgb(228,22,3)" rx="2" ry="2" />
<text  x="19.50" y="287.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (216 samples, 9.92%)</title><rect x="992.8" y="53" width="117.0" height="15.0" fill="rgb(243,50,25)" rx="2" ry="2" />
<text  x="995.79" y="63.5" >ipfw_dyn_looku..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (35 samples, 1.61%)</title><rect x="902.3" y="165" width="19.0" height="15.0" fill="rgb(211,75,41)" rx="2" ry="2" />
<text  x="905.31" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (38 samples, 1.74%)</title><rect x="972.2" y="53" width="20.6" height="15.0" fill="rgb(221,66,33)" rx="2" ry="2" />
<text  x="975.20" y="63.5" ></text>
</g>
<g >
<title>_task_fn_rx (50 samples, 2.30%)</title><rect x="945.1" y="261" width="27.1" height="15.0" fill="rgb(246,59,30)" rx="2" ry="2" />
<text  x="948.11" y="271.5" >_..</text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.09%)</title><rect x="130.3" y="133" width="1.1" height="15.0" fill="rgb(219,87,51)" rx="2" ry="2" />
<text  x="133.28" y="143.5" ></text>
</g>
<g >
<title>jenkins_hash32 (21 samples, 0.96%)</title><rect x="960.8" y="37" width="11.4" height="15.0" fill="rgb(229,40,41)" rx="2" ry="2" />
<text  x="963.83" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (9 samples, 0.41%)</title><rect x="779.3" y="165" width="4.9" height="15.0" fill="rgb(225,128,29)" rx="2" ry="2" />
<text  x="782.33" y="175.5" ></text>
</g>
<g >
<title>in_localip (13 samples, 0.60%)</title><rect x="347.5" y="85" width="7.1" height="15.0" fill="rgb(224,37,34)" rx="2" ry="2" />
<text  x="350.53" y="95.5" ></text>
</g>
<g >
<title>drain_ring_lockless (395 samples, 18.14%)</title><rect x="726.2" y="213" width="214.0" height="15.0" fill="rgb(240,29,40)" rx="2" ry="2" />
<text  x="729.24" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>_rm_rlock (26 samples, 1.19%)</title><rect x="569.1" y="37" width="14.1" height="15.0" fill="rgb(220,68,24)" rx="2" ry="2" />
<text  x="572.12" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (11 samples, 0.51%)</title><rect x="1164.5" y="229" width="6.0" height="15.0" fill="rgb(216,229,1)" rx="2" ry="2" />
<text  x="1167.54" y="239.5" ></text>
</g>
<g >
<title>ip_input (1 samples, 0.05%)</title><rect x="27.9" y="165" width="0.5" height="15.0" fill="rgb(240,167,19)" rx="2" ry="2" />
<text  x="30.88" y="175.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (18 samples, 0.83%)</title><rect x="1170.5" y="229" width="9.7" height="15.0" fill="rgb(210,228,8)" rx="2" ry="2" />
<text  x="1173.50" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (3 samples, 0.14%)</title><rect x="37.1" y="229" width="1.6" height="15.0" fill="rgb(229,117,45)" rx="2" ry="2" />
<text  x="40.09" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.05%)</title><rect x="27.9" y="101" width="0.5" height="15.0" fill="rgb(213,20,53)" rx="2" ry="2" />
<text  x="30.88" y="111.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.05%)</title><rect x="945.1" y="53" width="0.6" height="15.0" fill="rgb(231,113,41)" rx="2" ry="2" />
<text  x="948.11" y="63.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.05%)</title><rect x="27.9" y="245" width="0.5" height="15.0" fill="rgb(242,34,35)" rx="2" ry="2" />
<text  x="30.88" y="255.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.05%)</title><rect x="27.9" y="197" width="0.5" height="15.0" fill="rgb(239,58,23)" rx="2" ry="2" />
<text  x="30.88" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (3 samples, 0.14%)</title><rect x="1183.5" y="261" width="1.6" height="15.0" fill="rgb(208,107,44)" rx="2" ry="2" />
<text  x="1186.50" y="271.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (36 samples, 1.65%)</title><rect x="882.8" y="165" width="19.5" height="15.0" fill="rgb(205,221,44)" rx="2" ry="2" />
<text  x="885.81" y="175.5" ></text>
</g>
<g >
<title>hardclock (6 samples, 0.28%)</title><rect x="1186.7" y="229" width="3.3" height="15.0" fill="rgb(215,138,12)" rx="2" ry="2" />
<text  x="1189.75" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.05%)</title><rect x="27.9" y="85" width="0.5" height="15.0" fill="rgb(242,197,7)" rx="2" ry="2" />
<text  x="30.88" y="95.5" ></text>
</g>
<g >
<title>ether_nh_input (254 samples, 11.66%)</title><rect x="972.2" y="181" width="137.6" height="15.0" fill="rgb(209,213,43)" rx="2" ry="2" />
<text  x="975.20" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.18%)</title><rect x="937.0" y="165" width="2.2" height="15.0" fill="rgb(208,100,38)" rx="2" ry="2" />
<text  x="939.99" y="175.5" ></text>
</g>
<g >
<title>hash_packet (21 samples, 0.96%)</title><rect x="960.8" y="53" width="11.4" height="15.0" fill="rgb(247,222,34)" rx="2" ry="2" />
<text  x="963.83" y="63.5" ></text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.05%)</title><rect x="1188.4" y="181" width="0.5" height="15.0" fill="rgb(216,53,47)" rx="2" ry="2" />
<text  x="1191.37" y="191.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.05%)</title><rect x="1155.9" y="213" width="0.5" height="15.0" fill="rgb(218,121,17)" rx="2" ry="2" />
<text  x="1158.87" y="223.5" ></text>
</g>
<g >
<title>uma_zfree_arg (33 samples, 1.52%)</title><rect x="790.2" y="133" width="17.8" height="15.0" fill="rgb(253,55,38)" rx="2" ry="2" />
<text  x="793.17" y="143.5" ></text>
</g>
<g >
<title>ether_output_frame (38 samples, 1.74%)</title><rect x="972.2" y="85" width="20.6" height="15.0" fill="rgb(227,198,17)" rx="2" ry="2" />
<text  x="975.20" y="95.5" ></text>
</g>
<g >
<title>dyn_update_proto_state (28 samples, 1.29%)</title><rect x="945.7" y="37" width="15.1" height="15.0" fill="rgb(241,143,3)" rx="2" ry="2" />
<text  x="948.66" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (423 samples, 19.42%)</title><rect x="388.7" y="85" width="229.2" height="15.0" fill="rgb(250,33,31)" rx="2" ry="2" />
<text  x="391.71" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.14%)</title><rect x="78.3" y="181" width="1.6" height="15.0" fill="rgb(237,90,22)" rx="2" ry="2" />
<text  x="81.26" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (50 samples, 2.30%)</title><rect x="945.1" y="197" width="27.1" height="15.0" fill="rgb(208,188,42)" rx="2" ry="2" />
<text  x="948.11" y="207.5" >e..</text>
</g>
<g >
<title>all (2,178 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(205,87,38)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>_task_fn_rx (254 samples, 11.66%)</title><rect x="972.2" y="245" width="137.6" height="15.0" fill="rgb(213,58,20)" rx="2" ry="2" />
<text  x="975.20" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.09%)</title><rect x="1147.7" y="197" width="1.1" height="15.0" fill="rgb(248,53,44)" rx="2" ry="2" />
<text  x="1150.74" y="207.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (124 samples, 5.69%)</title><rect x="740.9" y="181" width="67.1" height="15.0" fill="rgb(235,11,35)" rx="2" ry="2" />
<text  x="743.86" y="191.5" >iflib_c..</text>
</g>
<g >
<title>netisr_dispatch_src (50 samples, 2.30%)</title><rect x="945.1" y="213" width="27.1" height="15.0" fill="rgb(244,174,48)" rx="2" ry="2" />
<text  x="948.11" y="223.5" >n..</text>
</g>
<g >
<title>cache_alloc (1 samples, 0.05%)</title><rect x="647.1" y="165" width="0.6" height="15.0" fill="rgb(253,87,46)" rx="2" ry="2" />
<text  x="650.13" y="175.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (11 samples, 0.51%)</title><rect x="799.4" y="117" width="5.9" height="15.0" fill="rgb(251,213,41)" rx="2" ry="2" />
<text  x="802.38" y="127.5" ></text>
</g>
<g >
<title>ip_input (50 samples, 2.30%)</title><rect x="945.1" y="149" width="27.1" height="15.0" fill="rgb(239,44,50)" rx="2" ry="2" />
<text  x="948.11" y="159.5" >i..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (5 samples, 0.23%)</title><rect x="1153.7" y="229" width="2.7" height="15.0" fill="rgb(239,181,50)" rx="2" ry="2" />
<text  x="1156.70" y="239.5" ></text>
</g>
<g >
<title>intr_event_handle (117 samples, 5.37%)</title><rect x="1117.4" y="261" width="63.4" height="15.0" fill="rgb(209,17,16)" rx="2" ry="2" />
<text  x="1120.40" y="271.5" >intr_e..</text>
</g>
<g >
<title>dyn_lookup_ipv4_state (192 samples, 8.82%)</title><rect x="992.8" y="37" width="104.0" height="15.0" fill="rgb(252,70,17)" rx="2" ry="2" />
<text  x="995.79" y="47.5" >dyn_lookup_i..</text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.05%)</title><rect x="27.9" y="229" width="0.5" height="15.0" fill="rgb(211,186,5)" rx="2" ry="2" />
<text  x="30.88" y="239.5" ></text>
</g>
<g >
<title>fib4_lookup (56 samples, 2.57%)</title><rect x="358.4" y="69" width="30.3" height="15.0" fill="rgb(217,168,36)" rx="2" ry="2" />
<text  x="361.37" y="79.5" >fi..</text>
</g>
<g >
<title>sleepq_broadcast (2 samples, 0.09%)</title><rect x="942.4" y="213" width="1.1" height="15.0" fill="rgb(244,8,26)" rx="2" ry="2" />
<text  x="945.41" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.05%)</title><rect x="27.9" y="277" width="0.5" height="15.0" fill="rgb(212,21,26)" rx="2" ry="2" />
<text  x="30.88" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (16 samples, 0.73%)</title><rect x="659.6" y="197" width="8.7" height="15.0" fill="rgb(251,102,10)" rx="2" ry="2" />
<text  x="662.60" y="207.5" ></text>
</g>
<g >
<title>in_lltable_lookup (15 samples, 0.69%)</title><rect x="260.8" y="53" width="8.2" height="15.0" fill="rgb(227,145,51)" rx="2" ry="2" />
<text  x="263.84" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (50 samples, 2.30%)</title><rect x="945.1" y="165" width="27.1" height="15.0" fill="rgb(244,103,54)" rx="2" ry="2" />
<text  x="948.11" y="175.5" >n..</text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.23%)</title><rect x="805.3" y="117" width="2.7" height="15.0" fill="rgb(225,110,51)" rx="2" ry="2" />
<text  x="808.34" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (15 samples, 0.69%)</title><rect x="1156.4" y="229" width="8.1" height="15.0" fill="rgb(211,74,30)" rx="2" ry="2" />
<text  x="1159.41" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (13 samples, 0.60%)</title><rect x="972.2" y="37" width="7.0" height="15.0" fill="rgb(215,7,48)" rx="2" ry="2" />
<text  x="975.20" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (3 samples, 0.14%)</title><rect x="647.7" y="181" width="1.6" height="15.0" fill="rgb(238,90,13)" rx="2" ry="2" />
<text  x="650.68" y="191.5" ></text>
</g>
</g>
</svg>
