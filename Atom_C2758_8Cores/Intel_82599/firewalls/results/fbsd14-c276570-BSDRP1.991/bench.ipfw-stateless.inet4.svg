<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>ether_output (35 samples, 1.49%)</title><rect x="1103.9" y="101" width="17.6" height="15.0" fill="rgb(249,224,25)" rx="2" ry="2" />
<text  x="1106.92" y="111.5" ></text>
</g>
<g >
<title>ip_tryforward (2 samples, 0.09%)</title><rect x="28.1" y="149" width="1.0" height="15.0" fill="rgb(223,164,20)" rx="2" ry="2" />
<text  x="31.12" y="159.5" ></text>
</g>
<g >
<title>pmap_kextract (7 samples, 0.30%)</title><rect x="932.3" y="117" width="3.5" height="15.0" fill="rgb(236,229,24)" rx="2" ry="2" />
<text  x="935.25" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (17 samples, 0.73%)</title><rect x="1112.5" y="37" width="8.5" height="15.0" fill="rgb(210,174,51)" rx="2" ry="2" />
<text  x="1115.47" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (13 samples, 0.55%)</title><rect x="1161.3" y="213" width="6.5" height="15.0" fill="rgb(237,95,39)" rx="2" ry="2" />
<text  x="1164.31" y="223.5" ></text>
</g>
<g >
<title>fork_exit (2,129 samples, 90.83%)</title><rect x="30.1" y="277" width="1071.8" height="15.0" fill="rgb(252,193,29)" rx="2" ry="2" />
<text  x="33.14" y="287.5" >fork_exit</text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.09%)</title><rect x="28.1" y="229" width="1.0" height="15.0" fill="rgb(245,200,16)" rx="2" ry="2" />
<text  x="31.12" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.17%)</title><rect x="1101.9" y="69" width="2.0" height="15.0" fill="rgb(206,97,31)" rx="2" ry="2" />
<text  x="1104.90" y="79.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.17%)</title><rect x="1091.3" y="229" width="2.0" height="15.0" fill="rgb(211,44,32)" rx="2" ry="2" />
<text  x="1094.33" y="239.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (52 samples, 2.22%)</title><rect x="788.3" y="197" width="26.2" height="15.0" fill="rgb(216,64,10)" rx="2" ry="2" />
<text  x="791.28" y="207.5" >r..</text>
</g>
<g >
<title>m_adj (10 samples, 0.43%)</title><rect x="158.0" y="133" width="5.0" height="15.0" fill="rgb(211,32,34)" rx="2" ry="2" />
<text  x="161.00" y="143.5" ></text>
</g>
<g >
<title>_task_fn_rx (35 samples, 1.49%)</title><rect x="1103.9" y="245" width="17.6" height="15.0" fill="rgb(233,110,51)" rx="2" ry="2" />
<text  x="1106.92" y="255.5" ></text>
</g>
<g >
<title>memcpy_erms (11 samples, 0.47%)</title><rect x="401.7" y="69" width="5.5" height="15.0" fill="rgb(230,151,33)" rx="2" ry="2" />
<text  x="404.66" y="79.5" ></text>
</g>
<g >
<title>ip_input (35 samples, 1.49%)</title><rect x="1103.9" y="133" width="17.6" height="15.0" fill="rgb(219,86,27)" rx="2" ry="2" />
<text  x="1106.92" y="143.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.04%)</title><rect x="28.1" y="53" width="0.5" height="15.0" fill="rgb(226,141,5)" rx="2" ry="2" />
<text  x="31.12" y="63.5" ></text>
</g>
<g >
<title>pmc_hook_handler (3 samples, 0.13%)</title><rect x="1188.0" y="213" width="1.5" height="15.0" fill="rgb(240,160,6)" rx="2" ry="2" />
<text  x="1190.99" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (26 samples, 1.11%)</title><rect x="886.4" y="165" width="13.1" height="15.0" fill="rgb(219,134,19)" rx="2" ry="2" />
<text  x="889.44" y="175.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (1 samples, 0.04%)</title><rect x="44.7" y="213" width="0.5" height="15.0" fill="rgb(241,199,23)" rx="2" ry="2" />
<text  x="47.74" y="223.5" ></text>
</g>
<g >
<title>ether_demux (1,064 samples, 45.39%)</title><rect x="145.9" y="149" width="535.7" height="15.0" fill="rgb(253,24,51)" rx="2" ry="2" />
<text  x="148.92" y="159.5" >ether_demux</text>
</g>
<g >
<title>iflib_txq_drain (522 samples, 22.27%)</title><rect x="824.5" y="197" width="262.8" height="15.0" fill="rgb(237,17,49)" rx="2" ry="2" />
<text  x="827.52" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.04%)</title><rect x="720.8" y="181" width="0.5" height="15.0" fill="rgb(249,198,39)" rx="2" ry="2" />
<text  x="723.82" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (2 samples, 0.09%)</title><rect x="28.1" y="261" width="1.0" height="15.0" fill="rgb(205,214,3)" rx="2" ry="2" />
<text  x="31.12" y="271.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.04%)</title><rect x="1164.8" y="181" width="0.5" height="15.0" fill="rgb(231,190,3)" rx="2" ry="2" />
<text  x="1167.83" y="191.5" ></text>
</g>
<g >
<title>Xapic_isr1 (13 samples, 0.55%)</title><rect x="10.0" y="277" width="6.5" height="15.0" fill="rgb(215,112,32)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.04%)</title><rect x="847.7" y="181" width="0.5" height="15.0" fill="rgb(252,8,2)" rx="2" ry="2" />
<text  x="850.68" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (166 samples, 7.08%)</title><rect x="318.1" y="69" width="83.6" height="15.0" fill="rgb(250,26,35)" rx="2" ry="2" />
<text  x="321.09" y="79.5" >ether_out..</text>
</g>
<g >
<title>ip_tryforward (35 samples, 1.49%)</title><rect x="1103.9" y="117" width="17.6" height="15.0" fill="rgb(239,54,11)" rx="2" ry="2" />
<text  x="1106.92" y="127.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,529 samples, 65.23%)</title><rect x="47.3" y="229" width="769.7" height="15.0" fill="rgb(249,223,48)" rx="2" ry="2" />
<text  x="50.25" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>uma_zalloc_arg (35 samples, 1.49%)</title><rect x="721.3" y="181" width="17.6" height="15.0" fill="rgb(236,223,16)" rx="2" ry="2" />
<text  x="724.32" y="191.5" ></text>
</g>
<g >
<title>fib4_lookup (73 samples, 3.11%)</title><rect x="415.8" y="69" width="36.7" height="15.0" fill="rgb(245,135,53)" rx="2" ry="2" />
<text  x="418.75" y="79.5" >fib..</text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.13%)</title><rect x="1102.4" y="37" width="1.5" height="15.0" fill="rgb(251,115,10)" rx="2" ry="2" />
<text  x="1105.41" y="47.5" ></text>
</g>
<g >
<title>arpresolve (54 samples, 2.30%)</title><rect x="290.9" y="69" width="27.2" height="15.0" fill="rgb(249,62,19)" rx="2" ry="2" />
<text  x="293.90" y="79.5" >a..</text>
</g>
<g >
<title>m_freem (72 samples, 3.07%)</title><rect x="899.5" y="165" width="36.3" height="15.0" fill="rgb(244,51,27)" rx="2" ry="2" />
<text  x="902.53" y="175.5" >m_f..</text>
</g>
<g >
<title>_task_fn_tx (545 samples, 23.25%)</title><rect x="817.0" y="229" width="274.3" height="15.0" fill="rgb(210,39,36)" rx="2" ry="2" />
<text  x="819.97" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>lapic_handle_timer (6 samples, 0.26%)</title><rect x="1187.0" y="277" width="3.0" height="15.0" fill="rgb(229,98,31)" rx="2" ry="2" />
<text  x="1189.98" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (3 samples, 0.13%)</title><rect x="1084.3" y="165" width="1.5" height="15.0" fill="rgb(205,125,1)" rx="2" ry="2" />
<text  x="1087.28" y="175.5" ></text>
</g>
<g >
<title>ether_input (4 samples, 0.17%)</title><rect x="1101.9" y="229" width="2.0" height="15.0" fill="rgb(236,99,14)" rx="2" ry="2" />
<text  x="1104.90" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.09%)</title><rect x="50.3" y="197" width="1.0" height="15.0" fill="rgb(227,162,46)" rx="2" ry="2" />
<text  x="53.27" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (8 samples, 0.34%)</title><rect x="771.7" y="197" width="4.0" height="15.0" fill="rgb(220,204,37)" rx="2" ry="2" />
<text  x="774.66" y="207.5" ></text>
</g>
<g >
<title>msi_vector (2 samples, 0.09%)</title><rect x="1183.0" y="261" width="1.0" height="15.0" fill="rgb(215,47,47)" rx="2" ry="2" />
<text  x="1185.95" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (3 samples, 0.13%)</title><rect x="1169.4" y="229" width="1.5" height="15.0" fill="rgb(234,6,49)" rx="2" ry="2" />
<text  x="1172.36" y="239.5" ></text>
</g>
<g >
<title>ether_input (1,186 samples, 50.60%)</title><rect x="89.0" y="197" width="597.1" height="15.0" fill="rgb(205,120,28)" rx="2" ry="2" />
<text  x="92.04" y="207.5" >ether_input</text>
</g>
<g >
<title>wakeup_any (4 samples, 0.17%)</title><rect x="1101.9" y="53" width="2.0" height="15.0" fill="rgb(232,186,14)" rx="2" ry="2" />
<text  x="1104.90" y="63.5" ></text>
</g>
<g >
<title>ipfw_chk (367 samples, 15.66%)</title><rect x="491.8" y="53" width="184.7" height="15.0" fill="rgb(245,95,25)" rx="2" ry="2" />
<text  x="494.77" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>lock_delay (1 samples, 0.04%)</title><rect x="714.3" y="101" width="0.5" height="15.0" fill="rgb(206,49,49)" rx="2" ry="2" />
<text  x="717.27" y="111.5" ></text>
</g>
<g >
<title>iflib_if_transmit (4 samples, 0.17%)</title><rect x="1101.9" y="85" width="2.0" height="15.0" fill="rgb(207,204,43)" rx="2" ry="2" />
<text  x="1104.90" y="95.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.04%)</title><rect x="714.3" y="117" width="0.5" height="15.0" fill="rgb(242,179,30)" rx="2" ry="2" />
<text  x="717.27" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (35 samples, 1.49%)</title><rect x="1103.9" y="149" width="17.6" height="15.0" fill="rgb(223,57,7)" rx="2" ry="2" />
<text  x="1106.92" y="159.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (3 samples, 0.13%)</title><rect x="1167.8" y="229" width="1.6" height="15.0" fill="rgb(246,146,13)" rx="2" ry="2" />
<text  x="1170.85" y="239.5" ></text>
</g>
<g >
<title>ipfw_check_packet (411 samples, 17.53%)</title><rect x="474.7" y="69" width="206.9" height="15.0" fill="rgb(215,80,22)" rx="2" ry="2" />
<text  x="477.65" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>_epoch_enter_preempt (3 samples, 0.13%)</title><rect x="43.7" y="229" width="1.5" height="15.0" fill="rgb(249,35,2)" rx="2" ry="2" />
<text  x="46.73" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.09%)</title><rect x="1180.4" y="213" width="1.0" height="15.0" fill="rgb(249,177,18)" rx="2" ry="2" />
<text  x="1183.44" y="223.5" ></text>
</g>
<g >
<title>all (2,344 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(218,19,35)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>m_tag_locate (10 samples, 0.43%)</title><rect x="676.5" y="53" width="5.1" height="15.0" fill="rgb(221,126,28)" rx="2" ry="2" />
<text  x="679.52" y="63.5" ></text>
</g>
<g >
<title>memmove_erms (9 samples, 0.38%)</title><rect x="313.6" y="53" width="4.5" height="15.0" fill="rgb(248,113,44)" rx="2" ry="2" />
<text  x="316.56" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.26%)</title><rect x="1157.8" y="213" width="3.0" height="15.0" fill="rgb(209,18,37)" rx="2" ry="2" />
<text  x="1160.78" y="223.5" ></text>
</g>
<g >
<title>ether_demux (35 samples, 1.49%)</title><rect x="1103.9" y="165" width="17.6" height="15.0" fill="rgb(222,220,42)" rx="2" ry="2" />
<text  x="1106.92" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.09%)</title><rect x="94.6" y="181" width="1.0" height="15.0" fill="rgb(252,20,46)" rx="2" ry="2" />
<text  x="97.57" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (21 samples, 0.90%)</title><rect x="738.9" y="197" width="10.6" height="15.0" fill="rgb(241,70,39)" rx="2" ry="2" />
<text  x="741.94" y="207.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (43 samples, 1.83%)</title><rect x="1065.2" y="181" width="21.6" height="15.0" fill="rgb(222,62,6)" rx="2" ry="2" />
<text  x="1068.15" y="191.5" >i..</text>
</g>
<g >
<title>netmap_rx_irq (2 samples, 0.09%)</title><rect x="816.0" y="213" width="1.0" height="15.0" fill="rgb(205,176,0)" rx="2" ry="2" />
<text  x="818.96" y="223.5" ></text>
</g>
<g >
<title>ether_output (4 samples, 0.17%)</title><rect x="1101.9" y="117" width="2.0" height="15.0" fill="rgb(214,142,12)" rx="2" ry="2" />
<text  x="1104.90" y="127.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.04%)</title><rect x="1189.0" y="181" width="0.5" height="15.0" fill="rgb(221,24,13)" rx="2" ry="2" />
<text  x="1191.99" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.04%)</title><rect x="28.1" y="37" width="0.5" height="15.0" fill="rgb(246,209,9)" rx="2" ry="2" />
<text  x="31.12" y="47.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (4 samples, 0.17%)</title><rect x="45.2" y="229" width="2.1" height="15.0" fill="rgb(245,176,1)" rx="2" ry="2" />
<text  x="48.24" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (27 samples, 1.15%)</title><rect x="350.8" y="37" width="13.6" height="15.0" fill="rgb(243,34,4)" rx="2" ry="2" />
<text  x="353.81" y="47.5" ></text>
</g>
<g >
<title>sleepq_broadcast (3 samples, 0.13%)</title><rect x="1096.9" y="213" width="1.5" height="15.0" fill="rgb(207,35,12)" rx="2" ry="2" />
<text  x="1099.87" y="223.5" ></text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.04%)</title><rect x="1188.0" y="181" width="0.5" height="15.0" fill="rgb(221,21,42)" rx="2" ry="2" />
<text  x="1190.99" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (3 samples, 0.13%)</title><rect x="1188.0" y="197" width="1.5" height="15.0" fill="rgb(207,177,52)" rx="2" ry="2" />
<text  x="1190.99" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (148 samples, 6.31%)</title><rect x="327.2" y="53" width="74.5" height="15.0" fill="rgb(227,219,21)" rx="2" ry="2" />
<text  x="330.15" y="63.5" >iflib_if..</text>
</g>
<g >
<title>tc_windup (1 samples, 0.04%)</title><rect x="1189.5" y="197" width="0.5" height="15.0" fill="rgb(205,177,35)" rx="2" ry="2" />
<text  x="1192.50" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.09%)</title><rect x="28.1" y="101" width="1.0" height="15.0" fill="rgb(246,152,26)" rx="2" ry="2" />
<text  x="31.12" y="111.5" ></text>
</g>
<g >
<title>iflib_get_ifp (1 samples, 0.04%)</title><rect x="1179.9" y="213" width="0.5" height="15.0" fill="rgb(246,25,38)" rx="2" ry="2" />
<text  x="1182.93" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.04%)</title><rect x="46.7" y="213" width="0.6" height="15.0" fill="rgb(211,41,47)" rx="2" ry="2" />
<text  x="49.75" y="223.5" ></text>
</g>
<g >
<title>iflib_get_softc (2 samples, 0.09%)</title><rect x="1089.8" y="197" width="1.0" height="15.0" fill="rgb(211,160,51)" rx="2" ry="2" />
<text  x="1092.82" y="207.5" ></text>
</g>
<g >
<title>ether_demux (2 samples, 0.09%)</title><rect x="28.1" y="197" width="1.0" height="15.0" fill="rgb(212,193,24)" rx="2" ry="2" />
<text  x="31.12" y="207.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (1 samples, 0.04%)</title><rect x="1121.0" y="37" width="0.5" height="15.0" fill="rgb(253,191,42)" rx="2" ry="2" />
<text  x="1124.03" y="47.5" ></text>
</g>
<g >
<title>zone_import (7 samples, 0.30%)</title><rect x="714.3" y="149" width="3.5" height="15.0" fill="rgb(217,130,53)" rx="2" ry="2" />
<text  x="717.27" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.04%)</title><rect x="28.6" y="37" width="0.5" height="15.0" fill="rgb(207,141,17)" rx="2" ry="2" />
<text  x="31.63" y="47.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (3 samples, 0.13%)</title><rect x="814.5" y="197" width="1.5" height="15.0" fill="rgb(250,185,2)" rx="2" ry="2" />
<text  x="817.45" y="207.5" ></text>
</g>
<g >
<title>uma_small_alloc (6 samples, 0.26%)</title><rect x="714.8" y="117" width="3.0" height="15.0" fill="rgb(240,131,1)" rx="2" ry="2" />
<text  x="717.78" y="127.5" ></text>
</g>
<g >
<title>ether_demux (4 samples, 0.17%)</title><rect x="1101.9" y="181" width="2.0" height="15.0" fill="rgb(241,190,23)" rx="2" ry="2" />
<text  x="1104.90" y="191.5" ></text>
</g>
<g >
<title>in_localip (9 samples, 0.38%)</title><rect x="407.2" y="85" width="4.5" height="15.0" fill="rgb(240,227,49)" rx="2" ry="2" />
<text  x="410.19" y="95.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (40 samples, 1.71%)</title><rect x="1045.0" y="165" width="20.2" height="15.0" fill="rgb(250,193,30)" rx="2" ry="2" />
<text  x="1048.02" y="175.5" ></text>
</g>
<g >
<title>ip_findroute (81 samples, 3.46%)</title><rect x="411.7" y="85" width="40.8" height="15.0" fill="rgb(253,111,46)" rx="2" ry="2" />
<text  x="414.72" y="95.5" >ip_..</text>
</g>
<g >
<title>netisr_dispatch_src (1,173 samples, 50.04%)</title><rect x="95.6" y="181" width="590.5" height="15.0" fill="rgb(253,38,18)" rx="2" ry="2" />
<text  x="98.58" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_output (319 samples, 13.61%)</title><rect x="246.6" y="85" width="160.6" height="15.0" fill="rgb(228,199,43)" rx="2" ry="2" />
<text  x="249.60" y="95.5" >ether_output</text>
</g>
<g >
<title>ifmp_ring_check_drainage (3 samples, 0.13%)</title><rect x="1087.3" y="213" width="1.5" height="15.0" fill="rgb(216,63,16)" rx="2" ry="2" />
<text  x="1090.30" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (25 samples, 1.07%)</title><rect x="775.7" y="197" width="12.6" height="15.0" fill="rgb(207,150,1)" rx="2" ry="2" />
<text  x="778.69" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (2 samples, 0.09%)</title><rect x="28.1" y="277" width="1.0" height="15.0" fill="rgb(240,165,5)" rx="2" ry="2" />
<text  x="31.12" y="287.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (41 samples, 1.75%)</title><rect x="1024.4" y="165" width="20.6" height="15.0" fill="rgb(252,114,49)" rx="2" ry="2" />
<text  x="1027.38" y="175.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (174 samples, 7.42%)</title><rect x="848.2" y="181" width="87.6" height="15.0" fill="rgb(250,228,4)" rx="2" ry="2" />
<text  x="851.18" y="191.5" >iflib_comp..</text>
</g>
<g >
<title>ether_nh_input (4 samples, 0.17%)</title><rect x="1101.9" y="197" width="2.0" height="15.0" fill="rgb(248,193,30)" rx="2" ry="2" />
<text  x="1104.90" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (35 samples, 1.49%)</title><rect x="1103.9" y="53" width="17.6" height="15.0" fill="rgb(226,46,34)" rx="2" ry="2" />
<text  x="1106.92" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (5 samples, 0.21%)</title><rect x="718.3" y="181" width="2.5" height="15.0" fill="rgb(223,158,49)" rx="2" ry="2" />
<text  x="721.30" y="191.5" ></text>
</g>
<g >
<title>uma_zfree_arg (46 samples, 1.96%)</title><rect x="912.6" y="133" width="23.2" height="15.0" fill="rgb(223,112,44)" rx="2" ry="2" />
<text  x="915.62" y="143.5" >u..</text>
</g>
<g >
<title>iflib_rxeof (35 samples, 1.49%)</title><rect x="1103.9" y="229" width="17.6" height="15.0" fill="rgb(250,6,7)" rx="2" ry="2" />
<text  x="1106.92" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (1 samples, 0.04%)</title><rect x="1023.9" y="165" width="0.5" height="15.0" fill="rgb(246,193,9)" rx="2" ry="2" />
<text  x="1026.87" y="175.5" ></text>
</g>
<g >
<title>wakeup (12 samples, 0.51%)</title><rect x="1095.9" y="229" width="6.0" height="15.0" fill="rgb(213,196,27)" rx="2" ry="2" />
<text  x="1098.86" y="239.5" ></text>
</g>
<g >
<title>sleepq_signal (5 samples, 0.21%)</title><rect x="1165.3" y="197" width="2.5" height="15.0" fill="rgb(250,229,46)" rx="2" ry="2" />
<text  x="1168.33" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.09%)</title><rect x="685.1" y="149" width="1.0" height="15.0" fill="rgb(230,175,33)" rx="2" ry="2" />
<text  x="688.08" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (17 samples, 0.73%)</title><rect x="1103.9" y="37" width="8.6" height="15.0" fill="rgb(211,228,25)" rx="2" ry="2" />
<text  x="1106.92" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.09%)</title><rect x="28.1" y="213" width="1.0" height="15.0" fill="rgb(214,12,52)" rx="2" ry="2" />
<text  x="31.12" y="223.5" ></text>
</g>
<g >
<title>hardclock (4 samples, 0.17%)</title><rect x="1188.0" y="229" width="2.0" height="15.0" fill="rgb(248,55,23)" rx="2" ry="2" />
<text  x="1190.99" y="239.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.04%)</title><rect x="1188.5" y="181" width="0.5" height="15.0" fill="rgb(222,98,41)" rx="2" ry="2" />
<text  x="1191.49" y="191.5" ></text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.04%)</title><rect x="1189.5" y="213" width="0.5" height="15.0" fill="rgb(210,168,37)" rx="2" ry="2" />
<text  x="1192.50" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (9 samples, 0.38%)</title><rect x="1170.9" y="229" width="4.5" height="15.0" fill="rgb(231,102,37)" rx="2" ry="2" />
<text  x="1173.87" y="239.5" ></text>
</g>
<g >
<title>ip_input (1,011 samples, 43.13%)</title><rect x="172.6" y="117" width="509.0" height="15.0" fill="rgb(224,34,11)" rx="2" ry="2" />
<text  x="175.60" y="127.5" >ip_input</text>
</g>
<g >
<title>netisr_dispatch_src (35 samples, 1.49%)</title><rect x="1103.9" y="197" width="17.6" height="15.0" fill="rgb(238,104,26)" rx="2" ry="2" />
<text  x="1106.92" y="207.5" ></text>
</g>
<g >
<title>if_getsoftc (5 samples, 0.21%)</title><rect x="364.4" y="37" width="2.5" height="15.0" fill="rgb(242,169,9)" rx="2" ry="2" />
<text  x="367.40" y="47.5" ></text>
</g>
<g >
<title>iflib_fl_refill (102 samples, 4.35%)</title><rect x="687.6" y="197" width="51.3" height="15.0" fill="rgb(240,194,34)" rx="2" ry="2" />
<text  x="690.59" y="207.5" >iflib..</text>
</g>
<g >
<title>ip_input (4 samples, 0.17%)</title><rect x="1101.9" y="149" width="2.0" height="15.0" fill="rgb(223,96,38)" rx="2" ry="2" />
<text  x="1104.90" y="159.5" ></text>
</g>
<g >
<title>ether_output (2 samples, 0.09%)</title><rect x="28.1" y="133" width="1.0" height="15.0" fill="rgb(247,1,9)" rx="2" ry="2" />
<text  x="31.12" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (2,128 samples, 90.78%)</title><rect x="30.6" y="245" width="1071.3" height="15.0" fill="rgb(249,100,33)" rx="2" ry="2" />
<text  x="33.64" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.09%)</title><rect x="28.1" y="181" width="1.0" height="15.0" fill="rgb(237,165,21)" rx="2" ry="2" />
<text  x="31.12" y="191.5" ></text>
</g>
<g >
<title>lapic_eoi (2 samples, 0.09%)</title><rect x="1181.9" y="245" width="1.1" height="15.0" fill="rgb(233,5,24)" rx="2" ry="2" />
<text  x="1184.95" y="255.5" ></text>
</g>
<g >
<title>ether_output_frame (4 samples, 0.17%)</title><rect x="1101.9" y="101" width="2.0" height="15.0" fill="rgb(241,46,13)" rx="2" ry="2" />
<text  x="1104.90" y="111.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.09%)</title><rect x="1166.8" y="181" width="1.0" height="15.0" fill="rgb(244,116,51)" rx="2" ry="2" />
<text  x="1169.84" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (5 samples, 0.21%)</title><rect x="1088.8" y="213" width="2.5" height="15.0" fill="rgb(219,53,52)" rx="2" ry="2" />
<text  x="1091.81" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.09%)</title><rect x="1168.4" y="213" width="1.0" height="15.0" fill="rgb(246,36,35)" rx="2" ry="2" />
<text  x="1171.35" y="223.5" ></text>
</g>
<g >
<title>bsearch4_lookup (38 samples, 1.62%)</title><rect x="433.4" y="53" width="19.1" height="15.0" fill="rgb(217,82,30)" rx="2" ry="2" />
<text  x="436.37" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (35 samples, 1.49%)</title><rect x="1103.9" y="181" width="17.6" height="15.0" fill="rgb(245,111,46)" rx="2" ry="2" />
<text  x="1106.92" y="191.5" ></text>
</g>
<g >
<title>_rm_rlock (47 samples, 2.01%)</title><rect x="643.8" y="37" width="23.7" height="15.0" fill="rgb(228,154,4)" rx="2" ry="2" />
<text  x="646.80" y="47.5" >_..</text>
</g>
<g >
<title>ifmp_ring_enqueue (69 samples, 2.94%)</title><rect x="366.9" y="37" width="34.8" height="15.0" fill="rgb(229,133,6)" rx="2" ry="2" />
<text  x="369.92" y="47.5" >if..</text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.09%)</title><rect x="28.1" y="117" width="1.0" height="15.0" fill="rgb(247,50,26)" rx="2" ry="2" />
<text  x="31.12" y="127.5" ></text>
</g>
<g >
<title>ip_input (2 samples, 0.09%)</title><rect x="28.1" y="165" width="1.0" height="15.0" fill="rgb(228,184,10)" rx="2" ry="2" />
<text  x="31.12" y="175.5" ></text>
</g>
<g >
<title>pagezero_erms (3 samples, 0.13%)</title><rect x="716.3" y="85" width="1.5" height="15.0" fill="rgb(222,2,44)" rx="2" ry="2" />
<text  x="719.29" y="95.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (1 samples, 0.04%)</title><rect x="1160.8" y="213" width="0.5" height="15.0" fill="rgb(216,167,19)" rx="2" ry="2" />
<text  x="1163.80" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.09%)</title><rect x="1099.4" y="197" width="1.0" height="15.0" fill="rgb(246,205,33)" rx="2" ry="2" />
<text  x="1102.39" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (5 samples, 0.21%)</title><rect x="1093.3" y="229" width="2.6" height="15.0" fill="rgb(212,31,13)" rx="2" ry="2" />
<text  x="1096.34" y="239.5" ></text>
</g>
<g >
<title>_rm_runlock (18 samples, 0.77%)</title><rect x="667.5" y="37" width="9.0" height="15.0" fill="rgb(213,9,18)" rx="2" ry="2" />
<text  x="670.46" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.17%)</title><rect x="1101.9" y="213" width="2.0" height="15.0" fill="rgb(248,28,21)" rx="2" ry="2" />
<text  x="1104.90" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.04%)</title><rect x="1090.8" y="197" width="0.5" height="15.0" fill="rgb(232,142,6)" rx="2" ry="2" />
<text  x="1093.83" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.09%)</title><rect x="1085.8" y="165" width="1.0" height="15.0" fill="rgb(230,185,49)" rx="2" ry="2" />
<text  x="1088.79" y="175.5" ></text>
</g>
<g >
<title>drain_ring_lockless (529 samples, 22.57%)</title><rect x="821.0" y="213" width="266.3" height="15.0" fill="rgb(218,125,42)" rx="2" ry="2" />
<text  x="824.00" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ether_nh_input (1,150 samples, 49.06%)</title><rect x="107.2" y="165" width="578.9" height="15.0" fill="rgb(207,197,0)" rx="2" ry="2" />
<text  x="110.16" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>grouptaskqueue_enqueue (33 samples, 1.41%)</title><rect x="1151.2" y="229" width="16.6" height="15.0" fill="rgb(254,25,42)" rx="2" ry="2" />
<text  x="1154.24" y="239.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.17%)</title><rect x="1098.4" y="213" width="2.0" height="15.0" fill="rgb(242,84,10)" rx="2" ry="2" />
<text  x="1101.38" y="223.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (1 samples, 0.04%)</title><rect x="30.1" y="245" width="0.5" height="15.0" fill="rgb(239,107,7)" rx="2" ry="2" />
<text  x="33.14" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.04%)</title><rect x="163.0" y="133" width="0.5" height="15.0" fill="rgb(243,43,16)" rx="2" ry="2" />
<text  x="166.04" y="143.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (22 samples, 0.94%)</title><rect x="1033.9" y="149" width="11.1" height="15.0" fill="rgb(244,68,52)" rx="2" ry="2" />
<text  x="1036.94" y="159.5" ></text>
</g>
<g >
<title>lapic_handle_intr (6 samples, 0.26%)</title><rect x="1184.0" y="277" width="3.0" height="15.0" fill="rgb(247,10,27)" rx="2" ry="2" />
<text  x="1186.96" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (35 samples, 1.49%)</title><rect x="1103.9" y="261" width="17.6" height="15.0" fill="rgb(225,110,39)" rx="2" ry="2" />
<text  x="1106.92" y="271.5" ></text>
</g>
<g >
<title>ether_input (2 samples, 0.09%)</title><rect x="28.1" y="245" width="1.0" height="15.0" fill="rgb(208,143,23)" rx="2" ry="2" />
<text  x="31.12" y="255.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (6 samples, 0.26%)</title><rect x="735.9" y="165" width="3.0" height="15.0" fill="rgb(246,46,18)" rx="2" ry="2" />
<text  x="738.92" y="175.5" ></text>
</g>
<g >
<title>keg_alloc_slab (7 samples, 0.30%)</title><rect x="714.3" y="133" width="3.5" height="15.0" fill="rgb(236,85,10)" rx="2" ry="2" />
<text  x="717.27" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (35 samples, 1.49%)</title><rect x="1103.9" y="277" width="17.6" height="15.0" fill="rgb(244,202,50)" rx="2" ry="2" />
<text  x="1106.92" y="287.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.09%)</title><rect x="28.1" y="85" width="1.0" height="15.0" fill="rgb(213,56,25)" rx="2" ry="2" />
<text  x="31.12" y="95.5" ></text>
</g>
<g >
<title>intr_lookup_source (5 samples, 0.21%)</title><rect x="1184.5" y="261" width="2.5" height="15.0" fill="rgb(226,226,39)" rx="2" ry="2" />
<text  x="1187.46" y="271.5" ></text>
</g>
<g >
<title>ether_input (35 samples, 1.49%)</title><rect x="1103.9" y="213" width="17.6" height="15.0" fill="rgb(208,2,5)" rx="2" ry="2" />
<text  x="1106.92" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (4 samples, 0.17%)</title><rect x="1101.9" y="133" width="2.0" height="15.0" fill="rgb(238,35,33)" rx="2" ry="2" />
<text  x="1104.90" y="143.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.04%)</title><rect x="686.1" y="197" width="0.5" height="15.0" fill="rgb(226,1,34)" rx="2" ry="2" />
<text  x="689.08" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (35 samples, 1.49%)</title><rect x="1103.9" y="85" width="17.6" height="15.0" fill="rgb(241,173,54)" rx="2" ry="2" />
<text  x="1106.92" y="95.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (23 samples, 0.98%)</title><rect x="16.5" y="277" width="11.6" height="15.0" fill="rgb(215,195,37)" rx="2" ry="2" />
<text  x="19.54" y="287.5" ></text>
</g>
<g >
<title>iflib_encap (257 samples, 10.96%)</title><rect x="935.8" y="181" width="129.4" height="15.0" fill="rgb(242,214,22)" rx="2" ry="2" />
<text  x="938.78" y="191.5" >iflib_encap</text>
</g>
<g >
<title>cache_alloc (7 samples, 0.30%)</title><rect x="714.3" y="165" width="3.5" height="15.0" fill="rgb(213,85,47)" rx="2" ry="2" />
<text  x="717.27" y="175.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.04%)</title><rect x="1101.9" y="37" width="0.5" height="15.0" fill="rgb(205,202,1)" rx="2" ry="2" />
<text  x="1104.90" y="47.5" ></text>
</g>
<g >
<title>handleevents (5 samples, 0.21%)</title><rect x="1187.5" y="245" width="2.5" height="15.0" fill="rgb(217,219,30)" rx="2" ry="2" />
<text  x="1190.48" y="255.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (7 samples, 0.30%)</title><rect x="928.7" y="117" width="3.6" height="15.0" fill="rgb(229,76,15)" rx="2" ry="2" />
<text  x="931.73" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,029 samples, 43.90%)</title><rect x="163.5" y="133" width="518.1" height="15.0" fill="rgb(208,111,52)" rx="2" ry="2" />
<text  x="166.54" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.17%)</title><rect x="1101.9" y="165" width="2.0" height="15.0" fill="rgb(214,134,16)" rx="2" ry="2" />
<text  x="1104.90" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3 samples, 0.13%)</title><rect x="49.8" y="213" width="1.5" height="15.0" fill="rgb(206,150,14)" rx="2" ry="2" />
<text  x="52.77" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.21%)</title><rect x="1162.8" y="197" width="2.5" height="15.0" fill="rgb(244,69,18)" rx="2" ry="2" />
<text  x="1165.82" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (44 samples, 1.88%)</title><rect x="749.5" y="197" width="22.2" height="15.0" fill="rgb(254,109,18)" rx="2" ry="2" />
<text  x="752.51" y="207.5" >i..</text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.30%)</title><rect x="714.3" y="181" width="3.5" height="15.0" fill="rgb(233,65,17)" rx="2" ry="2" />
<text  x="717.27" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.04%)</title><rect x="1086.8" y="181" width="0.5" height="15.0" fill="rgb(211,26,36)" rx="2" ry="2" />
<text  x="1089.80" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.21%)</title><rect x="1155.3" y="213" width="2.5" height="15.0" fill="rgb(248,100,16)" rx="2" ry="2" />
<text  x="1158.26" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (2 samples, 0.09%)</title><rect x="28.1" y="69" width="1.0" height="15.0" fill="rgb(215,126,25)" rx="2" ry="2" />
<text  x="31.12" y="79.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (1 samples, 0.04%)</title><rect x="717.8" y="181" width="0.5" height="15.0" fill="rgb(222,127,18)" rx="2" ry="2" />
<text  x="720.80" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,519 samples, 64.80%)</title><rect x="51.3" y="213" width="764.7" height="15.0" fill="rgb(224,34,51)" rx="2" ry="2" />
<text  x="54.28" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (3 samples, 0.13%)</title><rect x="716.3" y="101" width="1.5" height="15.0" fill="rgb(210,43,29)" rx="2" ry="2" />
<text  x="719.29" y="111.5" ></text>
</g>
<g >
<title>iflib_rxeof (4 samples, 0.17%)</title><rect x="1101.9" y="245" width="2.0" height="15.0" fill="rgb(246,163,22)" rx="2" ry="2" />
<text  x="1104.90" y="255.5" ></text>
</g>
<g >
<title>if_getdrvflags (2 samples, 0.09%)</title><rect x="686.6" y="197" width="1.0" height="15.0" fill="rgb(217,29,8)" rx="2" ry="2" />
<text  x="689.59" y="207.5" ></text>
</g>
<g >
<title>memcmp (7 samples, 0.30%)</title><rect x="681.6" y="149" width="3.5" height="15.0" fill="rgb(233,146,17)" rx="2" ry="2" />
<text  x="684.55" y="159.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (80 samples, 3.41%)</title><rect x="1141.7" y="245" width="40.2" height="15.0" fill="rgb(231,15,23)" rx="2" ry="2" />
<text  x="1144.67" y="255.5" >ifl..</text>
</g>
<g >
<title>iflib_if_transmit (35 samples, 1.49%)</title><rect x="1103.9" y="69" width="17.6" height="15.0" fill="rgb(243,9,16)" rx="2" ry="2" />
<text  x="1106.92" y="79.5" ></text>
</g>
<g >
<title>pfil_run_hooks (455 samples, 19.41%)</title><rect x="452.5" y="85" width="229.1" height="15.0" fill="rgb(249,214,46)" rx="2" ry="2" />
<text  x="455.50" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.04%)</title><rect x="1101.4" y="213" width="0.5" height="15.0" fill="rgb(248,39,43)" rx="2" ry="2" />
<text  x="1104.40" y="223.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.09%)</title><rect x="1100.4" y="213" width="1.0" height="15.0" fill="rgb(216,65,45)" rx="2" ry="2" />
<text  x="1103.39" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.04%)</title><rect x="28.6" y="53" width="0.5" height="15.0" fill="rgb(234,173,36)" rx="2" ry="2" />
<text  x="31.63" y="63.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (12 samples, 0.51%)</title><rect x="1175.4" y="229" width="6.0" height="15.0" fill="rgb(227,189,31)" rx="2" ry="2" />
<text  x="1178.40" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (2,129 samples, 90.83%)</title><rect x="30.1" y="261" width="1071.8" height="15.0" fill="rgb(233,96,16)" rx="2" ry="2" />
<text  x="33.14" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>m_free (63 samples, 2.69%)</title><rect x="904.1" y="149" width="31.7" height="15.0" fill="rgb(235,37,19)" rx="2" ry="2" />
<text  x="907.06" y="159.5" >m_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (4 samples, 0.17%)</title><rect x="1101.9" y="277" width="2.0" height="15.0" fill="rgb(211,109,33)" rx="2" ry="2" />
<text  x="1104.90" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (4 samples, 0.17%)</title><rect x="1101.9" y="261" width="2.0" height="15.0" fill="rgb(232,22,8)" rx="2" ry="2" />
<text  x="1104.90" y="271.5" ></text>
</g>
<g >
<title>ip_tryforward (971 samples, 41.42%)</title><rect x="192.7" y="101" width="488.9" height="15.0" fill="rgb(249,91,24)" rx="2" ry="2" />
<text  x="195.74" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>intr_event_handle (103 samples, 4.39%)</title><rect x="1131.1" y="261" width="51.9" height="15.0" fill="rgb(217,202,22)" rx="2" ry="2" />
<text  x="1134.10" y="271.5" >intr_..</text>
</g>
<g >
<title>taskqueue_thread_enqueue (1 samples, 0.04%)</title><rect x="1181.4" y="229" width="0.5" height="15.0" fill="rgb(227,104,21)" rx="2" ry="2" />
<text  x="1184.44" y="239.5" ></text>
</g>
<g >
<title>doreti (2 samples, 0.09%)</title><rect x="29.1" y="277" width="1.0" height="15.0" fill="rgb(230,178,16)" rx="2" ry="2" />
<text  x="32.13" y="287.5" ></text>
</g>
<g >
<title>in_lltable_lookup (14 samples, 0.60%)</title><rect x="306.5" y="53" width="7.1" height="15.0" fill="rgb(231,110,54)" rx="2" ry="2" />
<text  x="309.51" y="63.5" ></text>
</g>
<g >
<title>timercb (5 samples, 0.21%)</title><rect x="1187.5" y="261" width="2.5" height="15.0" fill="rgb(216,165,47)" rx="2" ry="2" />
<text  x="1190.48" y="271.5" ></text>
</g>
<g >
<title>intr_execute_handlers (124 samples, 5.29%)</title><rect x="1121.5" y="277" width="62.5" height="15.0" fill="rgb(208,27,44)" rx="2" ry="2" />
<text  x="1124.54" y="287.5" >intr_e..</text>
</g>
</g>
</svg>
