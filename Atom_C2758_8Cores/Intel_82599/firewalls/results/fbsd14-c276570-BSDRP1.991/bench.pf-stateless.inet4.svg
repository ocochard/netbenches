<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>netisr_dispatch (2 samples, 0.10%)</title><rect x="116.2" y="133" width="1.2" height="15.0" fill="rgb(231,223,38)" rx="2" ry="2" />
<text  x="119.22" y="143.5" ></text>
</g>
<g >
<title>lock_delay (4 samples, 0.20%)</title><rect x="711.7" y="101" width="2.4" height="15.0" fill="rgb(229,125,49)" rx="2" ry="2" />
<text  x="714.73" y="111.5" ></text>
</g>
<g >
<title>pf_test_rule (20 samples, 0.98%)</title><rect x="959.0" y="69" width="11.6" height="15.0" fill="rgb(237,74,13)" rx="2" ry="2" />
<text  x="961.99" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (107 samples, 5.26%)</title><rect x="956.7" y="213" width="62.1" height="15.0" fill="rgb(224,219,24)" rx="2" ry="2" />
<text  x="959.67" y="223.5" >netisr..</text>
</g>
<g >
<title>pfil_run_hooks (182 samples, 8.95%)</title><rect x="1035.6" y="101" width="105.6" height="15.0" fill="rgb(241,24,15)" rx="2" ry="2" />
<text  x="1038.61" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>grouptaskqueue_enqueue (22 samples, 1.08%)</title><rect x="266.5" y="37" width="12.8" height="15.0" fill="rgb(247,75,19)" rx="2" ry="2" />
<text  x="269.55" y="47.5" ></text>
</g>
<g >
<title>pf_find_state (30 samples, 1.48%)</title><rect x="970.6" y="53" width="17.4" height="15.0" fill="rgb(244,213,38)" rx="2" ry="2" />
<text  x="973.60" y="63.5" ></text>
</g>
<g >
<title>memmove_erms (4 samples, 0.20%)</title><rect x="238.7" y="53" width="2.3" height="15.0" fill="rgb(235,220,13)" rx="2" ry="2" />
<text  x="241.69" y="63.5" ></text>
</g>
<g >
<title>m_copydata (16 samples, 0.79%)</title><rect x="1035.6" y="37" width="9.3" height="15.0" fill="rgb(254,52,23)" rx="2" ry="2" />
<text  x="1038.61" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.10%)</title><rect x="950.3" y="229" width="1.1" height="15.0" fill="rgb(223,205,37)" rx="2" ry="2" />
<text  x="953.29" y="239.5" ></text>
</g>
<g >
<title>ip_input (107 samples, 5.26%)</title><rect x="956.7" y="149" width="62.1" height="15.0" fill="rgb(217,52,46)" rx="2" ry="2" />
<text  x="959.67" y="159.5" >ip_input</text>
</g>
<g >
<title>pf_test_state_udp (30 samples, 1.48%)</title><rect x="970.6" y="69" width="17.4" height="15.0" fill="rgb(239,65,42)" rx="2" ry="2" />
<text  x="973.60" y="79.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (2 samples, 0.10%)</title><rect x="29.2" y="229" width="1.1" height="15.0" fill="rgb(229,14,12)" rx="2" ry="2" />
<text  x="32.15" y="239.5" ></text>
</g>
<g >
<title>pagezero_erms (2 samples, 0.10%)</title><rect x="714.1" y="85" width="1.1" height="15.0" fill="rgb(239,197,3)" rx="2" ry="2" />
<text  x="717.05" y="95.5" ></text>
</g>
<g >
<title>pmc_process_samples (2 samples, 0.10%)</title><rect x="1188.3" y="197" width="1.1" height="15.0" fill="rgb(211,157,50)" rx="2" ry="2" />
<text  x="1191.26" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (4 samples, 0.20%)</title><rect x="947.4" y="213" width="2.3" height="15.0" fill="rgb(214,71,1)" rx="2" ry="2" />
<text  x="950.38" y="223.5" ></text>
</g>
<g >
<title>sleepq_broadcast (1 samples, 0.05%)</title><rect x="953.8" y="213" width="0.5" height="15.0" fill="rgb(240,146,29)" rx="2" ry="2" />
<text  x="956.77" y="223.5" ></text>
</g>
<g >
<title>memset_erms (8 samples, 0.39%)</title><rect x="613.1" y="37" width="4.6" height="15.0" fill="rgb(251,53,5)" rx="2" ry="2" />
<text  x="616.06" y="47.5" ></text>
</g>
<g >
<title>pf_get_translation (11 samples, 0.54%)</title><rect x="1097.7" y="37" width="6.4" height="15.0" fill="rgb(228,73,3)" rx="2" ry="2" />
<text  x="1100.71" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.10%)</title><rect x="64.0" y="181" width="1.1" height="15.0" fill="rgb(217,160,39)" rx="2" ry="2" />
<text  x="66.98" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (107 samples, 5.26%)</title><rect x="956.7" y="261" width="62.1" height="15.0" fill="rgb(242,41,26)" rx="2" ry="2" />
<text  x="959.67" y="271.5" >_task_..</text>
</g>
<g >
<title>pf_pull_hdr (7 samples, 0.34%)</title><rect x="1093.6" y="53" width="4.1" height="15.0" fill="rgb(242,95,33)" rx="2" ry="2" />
<text  x="1096.65" y="63.5" ></text>
</g>
<g >
<title>ether_input (211 samples, 10.38%)</title><rect x="1018.8" y="213" width="122.4" height="15.0" fill="rgb(239,63,5)" rx="2" ry="2" />
<text  x="1021.78" y="223.5" >ether_input</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="36.1" y="197" width="0.6" height="15.0" fill="rgb(222,220,21)" rx="2" ry="2" />
<text  x="39.12" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_timer (5 samples, 0.25%)</title><rect x="1187.1" y="277" width="2.9" height="15.0" fill="rgb(226,5,33)" rx="2" ry="2" />
<text  x="1190.10" y="287.5" ></text>
</g>
<g >
<title>_rm_runlock (6 samples, 0.30%)</title><rect x="609.6" y="37" width="3.5" height="15.0" fill="rgb(232,26,49)" rx="2" ry="2" />
<text  x="612.58" y="47.5" ></text>
</g>
<g >
<title>ether_output (29 samples, 1.43%)</title><rect x="1018.8" y="101" width="16.8" height="15.0" fill="rgb(240,97,22)" rx="2" ry="2" />
<text  x="1021.78" y="111.5" ></text>
</g>
<g >
<title>in_lltable_lookup (8 samples, 0.39%)</title><rect x="234.0" y="53" width="4.7" height="15.0" fill="rgb(217,63,29)" rx="2" ry="2" />
<text  x="237.04" y="63.5" ></text>
</g>
<g >
<title>hardclock (3 samples, 0.15%)</title><rect x="1187.7" y="229" width="1.7" height="15.0" fill="rgb(205,102,0)" rx="2" ry="2" />
<text  x="1190.68" y="239.5" ></text>
</g>
<g >
<title>iflib_fl_refill (64 samples, 3.15%)</title><rect x="693.7" y="197" width="37.2" height="15.0" fill="rgb(210,110,0)" rx="2" ry="2" />
<text  x="696.74" y="207.5" >ifl..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (77 samples, 3.79%)</title><rect x="804.6" y="181" width="44.7" height="15.0" fill="rgb(250,56,24)" rx="2" ry="2" />
<text  x="807.60" y="191.5" >ifli..</text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.20%)</title><rect x="1166.8" y="181" width="2.3" height="15.0" fill="rgb(211,109,53)" rx="2" ry="2" />
<text  x="1169.78" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (7 samples, 0.34%)</title><rect x="830.1" y="165" width="4.1" height="15.0" fill="rgb(218,114,11)" rx="2" ry="2" />
<text  x="833.14" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (22 samples, 1.08%)</title><rect x="733.8" y="197" width="12.8" height="15.0" fill="rgb(215,149,44)" rx="2" ry="2" />
<text  x="736.79" y="207.5" ></text>
</g>
<g >
<title>pf_test (312 samples, 15.35%)</title><rect x="373.9" y="53" width="181.1" height="15.0" fill="rgb(245,216,39)" rx="2" ry="2" />
<text  x="376.93" y="63.5" >pf_test</text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.10%)</title><rect x="1163.9" y="213" width="1.1" height="15.0" fill="rgb(230,82,29)" rx="2" ry="2" />
<text  x="1166.88" y="223.5" ></text>
</g>
<g >
<title>m_pkthdr_init (1 samples, 0.05%)</title><rect x="746.6" y="197" width="0.5" height="15.0" fill="rgb(247,180,30)" rx="2" ry="2" />
<text  x="749.56" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (1 samples, 0.05%)</title><rect x="693.2" y="197" width="0.5" height="15.0" fill="rgb(246,51,52)" rx="2" ry="2" />
<text  x="696.16" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (107 samples, 5.26%)</title><rect x="956.7" y="277" width="62.1" height="15.0" fill="rgb(245,182,5)" rx="2" ry="2" />
<text  x="959.67" y="287.5" >gtaskq..</text>
</g>
<g >
<title>ether_output_frame (105 samples, 5.16%)</title><rect x="241.0" y="69" width="61.0" height="15.0" fill="rgb(211,158,19)" rx="2" ry="2" />
<text  x="244.01" y="79.5" >ether_..</text>
</g>
<g >
<title>netisr_dispatch_src (988 samples, 48.60%)</title><rect x="117.4" y="133" width="573.4" height="15.0" fill="rgb(211,219,24)" rx="2" ry="2" />
<text  x="120.38" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ifmp_ring_check_drainage (1 samples, 0.05%)</title><rect x="946.8" y="213" width="0.6" height="15.0" fill="rgb(212,8,45)" rx="2" ry="2" />
<text  x="949.80" y="223.5" ></text>
</g>
<g >
<title>pf_normalize_ip (19 samples, 0.93%)</title><rect x="460.4" y="37" width="11.0" height="15.0" fill="rgb(236,0,20)" rx="2" ry="2" />
<text  x="463.41" y="47.5" ></text>
</g>
<g >
<title>lapic_handle_intr (6 samples, 0.30%)</title><rect x="1183.6" y="277" width="3.5" height="15.0" fill="rgb(229,166,33)" rx="2" ry="2" />
<text  x="1186.62" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (211 samples, 10.38%)</title><rect x="1018.8" y="277" width="122.4" height="15.0" fill="rgb(206,123,48)" rx="2" ry="2" />
<text  x="1021.78" y="287.5" >gtaskqueue_thre..</text>
</g>
<g >
<title>ether_demux (211 samples, 10.38%)</title><rect x="1018.8" y="165" width="122.4" height="15.0" fill="rgb(220,23,52)" rx="2" ry="2" />
<text  x="1021.78" y="175.5" >ether_demux</text>
</g>
<g >
<title>zone_import (7 samples, 0.34%)</title><rect x="711.7" y="149" width="4.1" height="15.0" fill="rgb(226,224,1)" rx="2" ry="2" />
<text  x="714.73" y="159.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (2 samples, 0.10%)</title><rect x="30.9" y="213" width="1.2" height="15.0" fill="rgb(215,119,33)" rx="2" ry="2" />
<text  x="33.90" y="223.5" ></text>
</g>
<g >
<title>pmc_hook_handler (3 samples, 0.15%)</title><rect x="1187.7" y="213" width="1.7" height="15.0" fill="rgb(218,226,43)" rx="2" ry="2" />
<text  x="1190.68" y="223.5" ></text>
</g>
<g >
<title>pf_pull_hdr (5 samples, 0.25%)</title><rect x="629.9" y="37" width="2.9" height="15.0" fill="rgb(210,88,1)" rx="2" ry="2" />
<text  x="632.89" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (29 samples, 1.43%)</title><rect x="1018.8" y="85" width="16.8" height="15.0" fill="rgb(209,40,41)" rx="2" ry="2" />
<text  x="1021.78" y="95.5" ></text>
</g>
<g >
<title>pf_match_translation (26 samples, 1.28%)</title><rect x="992.1" y="37" width="15.1" height="15.0" fill="rgb(234,140,33)" rx="2" ry="2" />
<text  x="995.08" y="47.5" ></text>
</g>
<g >
<title>_task_fn_rx (211 samples, 10.38%)</title><rect x="1018.8" y="245" width="122.4" height="15.0" fill="rgb(250,211,45)" rx="2" ry="2" />
<text  x="1021.78" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (2 samples, 0.10%)</title><rect x="714.1" y="101" width="1.1" height="15.0" fill="rgb(227,171,47)" rx="2" ry="2" />
<text  x="717.05" y="111.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (5 samples, 0.25%)</title><rect x="1173.2" y="229" width="2.9" height="15.0" fill="rgb(218,67,7)" rx="2" ry="2" />
<text  x="1176.17" y="239.5" ></text>
</g>
<g >
<title>pf_pull_hdr (11 samples, 0.54%)</title><rect x="471.4" y="37" width="6.4" height="15.0" fill="rgb(237,111,3)" rx="2" ry="2" />
<text  x="474.44" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (590 samples, 29.02%)</title><rect x="348.4" y="85" width="342.4" height="15.0" fill="rgb(207,194,38)" rx="2" ry="2" />
<text  x="351.39" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>memmove_erms (7 samples, 0.34%)</title><rect x="988.0" y="37" width="4.1" height="15.0" fill="rgb(209,125,22)" rx="2" ry="2" />
<text  x="991.01" y="47.5" ></text>
</g>
<g >
<title>murmur3_32_hash32 (30 samples, 1.48%)</title><rect x="970.6" y="37" width="17.4" height="15.0" fill="rgb(217,199,37)" rx="2" ry="2" />
<text  x="973.60" y="47.5" ></text>
</g>
<g >
<title>ether_input (107 samples, 5.26%)</title><rect x="956.7" y="229" width="62.1" height="15.0" fill="rgb(229,1,46)" rx="2" ry="2" />
<text  x="959.67" y="239.5" >ether_..</text>
</g>
<g >
<title>ether_nh_input (1,067 samples, 52.48%)</title><rect x="73.8" y="165" width="619.4" height="15.0" fill="rgb(239,28,15)" rx="2" ry="2" />
<text  x="76.85" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>intr_lookup_source (2 samples, 0.10%)</title><rect x="1185.9" y="261" width="1.2" height="15.0" fill="rgb(250,183,40)" rx="2" ry="2" />
<text  x="1188.94" y="271.5" ></text>
</g>
<g >
<title>iflib_rxeof (107 samples, 5.26%)</title><rect x="956.7" y="245" width="62.1" height="15.0" fill="rgb(208,78,47)" rx="2" ry="2" />
<text  x="959.67" y="255.5" >iflib_..</text>
</g>
<g >
<title>murmur3_32_hash32 (20 samples, 0.98%)</title><rect x="1007.2" y="37" width="11.6" height="15.0" fill="rgb(249,180,20)" rx="2" ry="2" />
<text  x="1010.17" y="47.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.10%)</title><rect x="954.9" y="213" width="1.2" height="15.0" fill="rgb(246,219,32)" rx="2" ry="2" />
<text  x="957.93" y="223.5" ></text>
</g>
<g >
<title>pf_test_state_udp (64 samples, 3.15%)</title><rect x="1104.1" y="53" width="37.1" height="15.0" fill="rgb(226,175,44)" rx="2" ry="2" />
<text  x="1107.10" y="63.5" >pf_..</text>
</g>
<g >
<title>ip_findroute (53 samples, 2.61%)</title><rect x="317.6" y="85" width="30.8" height="15.0" fill="rgb(232,18,5)" rx="2" ry="2" />
<text  x="320.62" y="95.5" >ip..</text>
</g>
<g >
<title>ether_nh_input (107 samples, 5.26%)</title><rect x="956.7" y="197" width="62.1" height="15.0" fill="rgb(245,198,7)" rx="2" ry="2" />
<text  x="959.67" y="207.5" >ether_..</text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.49%)</title><rect x="1018.8" y="37" width="5.8" height="15.0" fill="rgb(222,198,19)" rx="2" ry="2" />
<text  x="1021.78" y="47.5" ></text>
</g>
<g >
<title>handleevents (4 samples, 0.20%)</title><rect x="1187.7" y="245" width="2.3" height="15.0" fill="rgb(224,29,26)" rx="2" ry="2" />
<text  x="1190.68" y="255.5" ></text>
</g>
<g >
<title>msi_vector (2 samples, 0.10%)</title><rect x="1182.5" y="261" width="1.1" height="15.0" fill="rgb(252,51,41)" rx="2" ry="2" />
<text  x="1185.45" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (19 samples, 0.93%)</title><rect x="925.9" y="165" width="11.0" height="15.0" fill="rgb(230,122,44)" rx="2" ry="2" />
<text  x="928.91" y="175.5" ></text>
</g>
<g >
<title>pf_get_translation (26 samples, 1.28%)</title><rect x="992.1" y="53" width="15.1" height="15.0" fill="rgb(240,79,18)" rx="2" ry="2" />
<text  x="995.08" y="63.5" ></text>
</g>
<g >
<title>pf_find_state (20 samples, 0.98%)</title><rect x="1007.2" y="53" width="11.6" height="15.0" fill="rgb(247,155,43)" rx="2" ry="2" />
<text  x="1010.17" y="63.5" ></text>
</g>
<g >
<title>pf_pull_hdr (4 samples, 0.20%)</title><rect x="956.7" y="69" width="2.3" height="15.0" fill="rgb(231,221,32)" rx="2" ry="2" />
<text  x="959.67" y="79.5" ></text>
</g>
<g >
<title>pf_test_state_udp (66 samples, 3.25%)</title><rect x="1055.3" y="53" width="38.3" height="15.0" fill="rgb(217,218,0)" rx="2" ry="2" />
<text  x="1058.34" y="63.5" >pf_..</text>
</g>
<g >
<title>loadtimer (1 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(208,52,43)" rx="2" ry="2" />
<text  x="1192.42" y="239.5" ></text>
</g>
<g >
<title>cache_alloc (7 samples, 0.34%)</title><rect x="711.7" y="165" width="4.1" height="15.0" fill="rgb(252,165,38)" rx="2" ry="2" />
<text  x="714.73" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="1181.9" y="213" width="0.6" height="15.0" fill="rgb(206,84,18)" rx="2" ry="2" />
<text  x="1184.87" y="223.5" ></text>
</g>
<g >
<title>pf_dummynet_route (9 samples, 0.44%)</title><rect x="617.7" y="37" width="5.2" height="15.0" fill="rgb(207,80,42)" rx="2" ry="2" />
<text  x="620.70" y="47.5" ></text>
</g>
<g >
<title>pf_normalize_ip (12 samples, 0.59%)</title><rect x="622.9" y="37" width="7.0" height="15.0" fill="rgb(212,176,2)" rx="2" ry="2" />
<text  x="625.93" y="47.5" ></text>
</g>
<g >
<title>iflib_encap (151 samples, 7.43%)</title><rect x="849.3" y="181" width="87.6" height="15.0" fill="rgb(235,134,37)" rx="2" ry="2" />
<text  x="852.29" y="191.5" >iflib_encap</text>
</g>
<g >
<title>gtaskqueue_run_locked (1,610 samples, 79.19%)</title><rect x="22.2" y="245" width="934.5" height="15.0" fill="rgb(212,7,50)" rx="2" ry="2" />
<text  x="25.19" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="1175.5" y="213" width="0.6" height="15.0" fill="rgb(250,176,21)" rx="2" ry="2" />
<text  x="1178.49" y="223.5" ></text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.30%)</title><rect x="711.7" y="133" width="3.5" height="15.0" fill="rgb(226,110,53)" rx="2" ry="2" />
<text  x="714.73" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,082 samples, 53.22%)</title><rect x="65.1" y="181" width="628.1" height="15.0" fill="rgb(208,121,43)" rx="2" ry="2" />
<text  x="68.14" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>tcp_lro_flush_all (5 samples, 0.25%)</title><rect x="782.5" y="197" width="2.9" height="15.0" fill="rgb(235,57,32)" rx="2" ry="2" />
<text  x="785.54" y="207.5" ></text>
</g>
<g >
<title>intr_execute_handlers (73 samples, 3.59%)</title><rect x="1141.2" y="277" width="42.4" height="15.0" fill="rgb(214,196,45)" rx="2" ry="2" />
<text  x="1144.24" y="287.5" >int..</text>
</g>
<g >
<title>pf_test (54 samples, 2.66%)</title><rect x="956.7" y="85" width="31.3" height="15.0" fill="rgb(237,142,31)" rx="2" ry="2" />
<text  x="959.67" y="95.5" >pf..</text>
</g>
<g >
<title>in_localip (16 samples, 0.79%)</title><rect x="308.3" y="85" width="9.3" height="15.0" fill="rgb(237,138,40)" rx="2" ry="2" />
<text  x="311.34" y="95.5" ></text>
</g>
<g >
<title>intr_event_handle (61 samples, 3.00%)</title><rect x="1147.0" y="261" width="35.5" height="15.0" fill="rgb(233,123,46)" rx="2" ry="2" />
<text  x="1150.05" y="271.5" >int..</text>
</g>
<g >
<title>wakeup_any (3 samples, 0.15%)</title><rect x="38.4" y="197" width="1.8" height="15.0" fill="rgb(214,193,44)" rx="2" ry="2" />
<text  x="41.44" y="207.5" ></text>
</g>
<g >
<title>ip_input (211 samples, 10.38%)</title><rect x="1018.8" y="133" width="122.4" height="15.0" fill="rgb(251,176,52)" rx="2" ry="2" />
<text  x="1021.78" y="143.5" >ip_input</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (4 samples, 0.20%)</title><rect x="1176.1" y="229" width="2.3" height="15.0" fill="rgb(221,142,26)" rx="2" ry="2" />
<text  x="1179.07" y="239.5" ></text>
</g>
<g >
<title>pf_check_in (318 samples, 15.64%)</title><rect x="370.4" y="69" width="184.6" height="15.0" fill="rgb(232,148,6)" rx="2" ry="2" />
<text  x="373.44" y="79.5" >pf_check_in</text>
</g>
<g >
<title>spinlock_exit (4 samples, 0.20%)</title><rect x="1170.8" y="181" width="2.4" height="15.0" fill="rgb(225,219,22)" rx="2" ry="2" />
<text  x="1173.85" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.05%)</title><rect x="692.6" y="149" width="0.6" height="15.0" fill="rgb(229,122,51)" rx="2" ry="2" />
<text  x="695.58" y="159.5" ></text>
</g>
<g >
<title>drain_ring_lockless (272 samples, 13.38%)</title><rect x="788.9" y="213" width="157.9" height="15.0" fill="rgb(220,14,32)" rx="2" ry="2" />
<text  x="791.93" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="946.2" y="165" width="0.6" height="15.0" fill="rgb(227,218,40)" rx="2" ry="2" />
<text  x="949.22" y="175.5" ></text>
</g>
<g >
<title>memcpy_erms (11 samples, 0.54%)</title><rect x="302.0" y="69" width="6.3" height="15.0" fill="rgb(222,25,39)" rx="2" ry="2" />
<text  x="304.95" y="79.5" ></text>
</g>
<g >
<title>m_freem (26 samples, 1.28%)</title><rect x="834.2" y="165" width="15.1" height="15.0" fill="rgb(210,224,29)" rx="2" ry="2" />
<text  x="837.20" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (211 samples, 10.38%)</title><rect x="1018.8" y="149" width="122.4" height="15.0" fill="rgb(218,43,20)" rx="2" ry="2" />
<text  x="1021.78" y="159.5" >netisr_dispatch..</text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.05%)</title><rect x="715.2" y="117" width="0.6" height="15.0" fill="rgb(225,141,20)" rx="2" ry="2" />
<text  x="718.21" y="127.5" ></text>
</g>
<g >
<title>pfi_kkif_match (4 samples, 0.20%)</title><rect x="1053.0" y="37" width="2.3" height="15.0" fill="rgb(226,178,12)" rx="2" ry="2" />
<text  x="1056.02" y="47.5" ></text>
</g>
<g >
<title>pf_check_out (53 samples, 2.61%)</title><rect x="988.0" y="101" width="30.8" height="15.0" fill="rgb(235,77,32)" rx="2" ry="2" />
<text  x="991.01" y="111.5" >pf..</text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.20%)</title><rect x="1166.8" y="197" width="2.3" height="15.0" fill="rgb(211,96,7)" rx="2" ry="2" />
<text  x="1169.78" y="207.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (1 samples, 0.05%)</title><rect x="730.3" y="165" width="0.6" height="15.0" fill="rgb(253,17,36)" rx="2" ry="2" />
<text  x="733.30" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (5 samples, 0.25%)</title><rect x="1178.4" y="229" width="2.9" height="15.0" fill="rgb(234,144,39)" rx="2" ry="2" />
<text  x="1181.39" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (211 samples, 10.38%)</title><rect x="1018.8" y="181" width="122.4" height="15.0" fill="rgb(228,184,11)" rx="2" ry="2" />
<text  x="1021.78" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>pf_test_rule (85 samples, 4.18%)</title><rect x="632.8" y="37" width="49.3" height="15.0" fill="rgb(246,30,36)" rx="2" ry="2" />
<text  x="635.79" y="47.5" >pf_t..</text>
</g>
<g >
<title>ether_output (208 samples, 10.23%)</title><rect x="187.6" y="85" width="120.7" height="15.0" fill="rgb(213,113,4)" rx="2" ry="2" />
<text  x="190.61" y="95.5" >ether_output</text>
</g>
<g >
<title>netisr_dispatch_src (107 samples, 5.26%)</title><rect x="956.7" y="165" width="62.1" height="15.0" fill="rgb(217,42,40)" rx="2" ry="2" />
<text  x="959.67" y="175.5" >netisr..</text>
</g>
<g >
<title>fib4_lookup (46 samples, 2.26%)</title><rect x="321.7" y="69" width="26.7" height="15.0" fill="rgb(213,53,43)" rx="2" ry="2" />
<text  x="324.69" y="79.5" >f..</text>
</g>
<g >
<title>iflib_if_transmit (29 samples, 1.43%)</title><rect x="1018.8" y="69" width="16.8" height="15.0" fill="rgb(213,154,39)" rx="2" ry="2" />
<text  x="1021.78" y="79.5" ></text>
</g>
<g >
<title>m_copydata (4 samples, 0.20%)</title><rect x="956.7" y="53" width="2.3" height="15.0" fill="rgb(224,145,51)" rx="2" ry="2" />
<text  x="959.67" y="63.5" ></text>
</g>
<g >
<title>pf_test (227 samples, 11.17%)</title><rect x="559.1" y="53" width="131.7" height="15.0" fill="rgb(253,209,21)" rx="2" ry="2" />
<text  x="562.08" y="63.5" >pf_test</text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.15%)</title><rect x="1165.0" y="213" width="1.8" height="15.0" fill="rgb(228,149,17)" rx="2" ry="2" />
<text  x="1168.04" y="223.5" ></text>
</g>
<g >
<title>m_adj (13 samples, 0.64%)</title><rect x="108.7" y="133" width="7.5" height="15.0" fill="rgb(208,96,38)" rx="2" ry="2" />
<text  x="111.67" y="143.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.05%)</title><rect x="925.3" y="133" width="0.6" height="15.0" fill="rgb(205,203,5)" rx="2" ry="2" />
<text  x="928.33" y="143.5" ></text>
</g>
<g >
<title>pf_dummynet_route (11 samples, 0.54%)</title><rect x="454.0" y="37" width="6.4" height="15.0" fill="rgb(208,106,29)" rx="2" ry="2" />
<text  x="457.02" y="47.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (2 samples, 0.10%)</title><rect x="1181.3" y="229" width="1.2" height="15.0" fill="rgb(228,87,36)" rx="2" ry="2" />
<text  x="1184.29" y="239.5" ></text>
</g>
<g >
<title>wakeup (7 samples, 0.34%)</title><rect x="952.6" y="229" width="4.1" height="15.0" fill="rgb(229,133,41)" rx="2" ry="2" />
<text  x="955.61" y="239.5" ></text>
</g>
<g >
<title>pf_get_translation (14 samples, 0.69%)</title><rect x="1044.9" y="37" width="8.1" height="15.0" fill="rgb(252,164,29)" rx="2" ry="2" />
<text  x="1047.89" y="47.5" ></text>
</g>
<g >
<title>fork_exit (1,610 samples, 79.19%)</title><rect x="22.2" y="277" width="934.5" height="15.0" fill="rgb(244,109,42)" rx="2" ry="2" />
<text  x="25.19" y="287.5" >fork_exit</text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.15%)</title><rect x="30.3" y="229" width="1.8" height="15.0" fill="rgb(207,104,1)" rx="2" ry="2" />
<text  x="33.31" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="954.3" y="197" width="0.6" height="15.0" fill="rgb(237,167,17)" rx="2" ry="2" />
<text  x="957.35" y="207.5" ></text>
</g>
<g >
<title>pf_check_in (100 samples, 4.92%)</title><rect x="1035.6" y="85" width="58.0" height="15.0" fill="rgb(247,99,31)" rx="2" ry="2" />
<text  x="1038.61" y="95.5" >pf_che..</text>
</g>
<g >
<title>iflib_txd_db_check (17 samples, 0.84%)</title><rect x="936.9" y="181" width="9.9" height="15.0" fill="rgb(214,113,34)" rx="2" ry="2" />
<text  x="939.94" y="191.5" ></text>
</g>
<g >
<title>ip_input (973 samples, 47.86%)</title><rect x="126.1" y="117" width="564.7" height="15.0" fill="rgb(231,137,50)" rx="2" ry="2" />
<text  x="129.08" y="127.5" >ip_input</text>
</g>
<g >
<title>pf_pull_hdr (7 samples, 0.34%)</title><rect x="988.0" y="69" width="4.1" height="15.0" fill="rgb(219,201,17)" rx="2" ry="2" />
<text  x="991.01" y="79.5" ></text>
</g>
<g >
<title>all (2,033 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(215,178,19)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (29 samples, 1.43%)</title><rect x="1018.8" y="53" width="16.8" height="15.0" fill="rgb(248,213,27)" rx="2" ry="2" />
<text  x="1021.78" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.10%)</title><rect x="951.4" y="229" width="1.2" height="15.0" fill="rgb(213,75,49)" rx="2" ry="2" />
<text  x="954.45" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (211 samples, 10.38%)</title><rect x="1018.8" y="197" width="122.4" height="15.0" fill="rgb(208,129,7)" rx="2" ry="2" />
<text  x="1021.78" y="207.5" >netisr_dispatch..</text>
</g>
<g >
<title>iflib_rxeof (1,284 samples, 63.16%)</title><rect x="40.2" y="213" width="745.2" height="15.0" fill="rgb(217,190,22)" rx="2" ry="2" />
<text  x="43.18" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>if_getsoftc (4 samples, 0.20%)</title><rect x="279.3" y="37" width="2.3" height="15.0" fill="rgb(242,27,35)" rx="2" ry="2" />
<text  x="282.32" y="47.5" ></text>
</g>
<g >
<title>pf_test_state_udp (15 samples, 0.74%)</title><rect x="682.1" y="37" width="8.7" height="15.0" fill="rgb(217,161,29)" rx="2" ry="2" />
<text  x="685.13" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (4 samples, 0.20%)</title><rect x="715.8" y="181" width="2.3" height="15.0" fill="rgb(252,226,45)" rx="2" ry="2" />
<text  x="718.79" y="191.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (1 samples, 0.05%)</title><rect x="1035.0" y="37" width="0.6" height="15.0" fill="rgb(249,61,47)" rx="2" ry="2" />
<text  x="1038.03" y="47.5" ></text>
</g>
<g >
<title>ether_demux (107 samples, 5.26%)</title><rect x="956.7" y="181" width="62.1" height="15.0" fill="rgb(206,185,47)" rx="2" ry="2" />
<text  x="959.67" y="191.5" >ether_..</text>
</g>
<g >
<title>m_copydata (7 samples, 0.34%)</title><rect x="1093.6" y="37" width="4.1" height="15.0" fill="rgb(241,204,54)" rx="2" ry="2" />
<text  x="1096.65" y="47.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.10%)</title><rect x="39.0" y="181" width="1.2" height="15.0" fill="rgb(231,121,47)" rx="2" ry="2" />
<text  x="42.02" y="191.5" ></text>
</g>
<g >
<title>iflib_txq_drain (263 samples, 12.94%)</title><rect x="794.2" y="197" width="152.6" height="15.0" fill="rgb(211,105,54)" rx="2" ry="2" />
<text  x="797.15" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (21 samples, 1.03%)</title><rect x="913.7" y="149" width="12.2" height="15.0" fill="rgb(214,189,17)" rx="2" ry="2" />
<text  x="916.72" y="159.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.05%)</title><rect x="715.2" y="101" width="0.6" height="15.0" fill="rgb(207,219,25)" rx="2" ry="2" />
<text  x="718.21" y="111.5" ></text>
</g>
<g >
<title>ip_tryforward (107 samples, 5.26%)</title><rect x="956.7" y="133" width="62.1" height="15.0" fill="rgb(246,0,29)" rx="2" ry="2" />
<text  x="959.67" y="143.5" >ip_try..</text>
</g>
<g >
<title>_task_fn_tx (281 samples, 13.82%)</title><rect x="786.6" y="229" width="163.1" height="15.0" fill="rgb(209,71,8)" rx="2" ry="2" />
<text  x="789.61" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (5 samples, 0.25%)</title><rect x="730.9" y="197" width="2.9" height="15.0" fill="rgb(227,209,38)" rx="2" ry="2" />
<text  x="733.89" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (16 samples, 0.79%)</title><rect x="339.1" y="53" width="9.3" height="15.0" fill="rgb(228,119,9)" rx="2" ry="2" />
<text  x="342.10" y="63.5" ></text>
</g>
<g >
<title>iflib_if_transmit (88 samples, 4.33%)</title><rect x="250.9" y="53" width="51.1" height="15.0" fill="rgb(217,62,52)" rx="2" ry="2" />
<text  x="253.88" y="63.5" >iflib..</text>
</g>
<g >
<title>memcpy_erms (16 samples, 0.79%)</title><rect x="747.1" y="197" width="9.3" height="15.0" fill="rgb(245,96,51)" rx="2" ry="2" />
<text  x="750.14" y="207.5" ></text>
</g>
<g >
<title>pf_test_rule (18 samples, 0.89%)</title><rect x="1044.9" y="53" width="10.4" height="15.0" fill="rgb(213,192,51)" rx="2" ry="2" />
<text  x="1047.89" y="63.5" ></text>
</g>
<g >
<title>m_copydata (7 samples, 0.34%)</title><rect x="988.0" y="53" width="4.1" height="15.0" fill="rgb(225,67,10)" rx="2" ry="2" />
<text  x="991.01" y="63.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (10 samples, 0.49%)</title><rect x="34.4" y="213" width="5.8" height="15.0" fill="rgb(211,48,9)" rx="2" ry="2" />
<text  x="37.38" y="223.5" ></text>
</g>
<g >
<title>pf_check_out (82 samples, 4.03%)</title><rect x="1093.6" y="85" width="47.6" height="15.0" fill="rgb(241,26,39)" rx="2" ry="2" />
<text  x="1096.65" y="95.5" >pf_c..</text>
</g>
<g >
<title>memmove_erms (4 samples, 0.20%)</title><rect x="956.7" y="37" width="2.3" height="15.0" fill="rgb(221,95,27)" rx="2" ry="2" />
<text  x="959.67" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="35.5" y="197" width="0.6" height="15.0" fill="rgb(253,216,8)" rx="2" ry="2" />
<text  x="38.54" y="207.5" ></text>
</g>
<g >
<title>uma_zfree_arg (21 samples, 1.03%)</title><rect x="837.1" y="133" width="12.2" height="15.0" fill="rgb(206,93,37)" rx="2" ry="2" />
<text  x="840.10" y="143.5" ></text>
</g>
<g >
<title>memset_erms (7 samples, 0.34%)</title><rect x="450.0" y="37" width="4.0" height="15.0" fill="rgb(209,149,39)" rx="2" ry="2" />
<text  x="452.96" y="47.5" ></text>
</g>
<g >
<title>pf_check_in (54 samples, 2.66%)</title><rect x="956.7" y="101" width="31.3" height="15.0" fill="rgb(209,228,45)" rx="2" ry="2" />
<text  x="959.67" y="111.5" >pf..</text>
</g>
<g >
<title>doreti (3 samples, 0.15%)</title><rect x="20.4" y="277" width="1.8" height="15.0" fill="rgb(219,119,12)" rx="2" ry="2" />
<text  x="23.45" y="287.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (5 samples, 0.25%)</title><rect x="844.6" y="117" width="3.0" height="15.0" fill="rgb(217,158,28)" rx="2" ry="2" />
<text  x="847.65" y="127.5" ></text>
</g>
<g >
<title>ip_tryforward (944 samples, 46.43%)</title><rect x="142.9" y="101" width="547.9" height="15.0" fill="rgb(233,12,38)" rx="2" ry="2" />
<text  x="145.92" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>pf_match_translation (20 samples, 0.98%)</title><rect x="959.0" y="37" width="11.6" height="15.0" fill="rgb(217,56,34)" rx="2" ry="2" />
<text  x="961.99" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.05%)</title><rect x="945.6" y="165" width="0.6" height="15.0" fill="rgb(233,125,12)" rx="2" ry="2" />
<text  x="948.64" y="175.5" ></text>
</g>
<g >
<title>pf_pull_hdr (16 samples, 0.79%)</title><rect x="1035.6" y="53" width="9.3" height="15.0" fill="rgb(246,135,11)" rx="2" ry="2" />
<text  x="1038.61" y="63.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (21 samples, 1.03%)</title><rect x="718.7" y="181" width="12.2" height="15.0" fill="rgb(225,68,46)" rx="2" ry="2" />
<text  x="721.70" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.05%)</title><rect x="804.0" y="181" width="0.6" height="15.0" fill="rgb(246,70,11)" rx="2" ry="2" />
<text  x="807.02" y="191.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (3 samples, 0.15%)</title><rect x="36.7" y="197" width="1.7" height="15.0" fill="rgb(254,38,19)" rx="2" ry="2" />
<text  x="39.70" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (211 samples, 10.38%)</title><rect x="1018.8" y="229" width="122.4" height="15.0" fill="rgb(238,95,47)" rx="2" ry="2" />
<text  x="1021.78" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.15%)</title><rect x="847.6" y="117" width="1.7" height="15.0" fill="rgb(231,152,23)" rx="2" ry="2" />
<text  x="850.55" y="127.5" ></text>
</g>
<g >
<title>pf_test (53 samples, 2.61%)</title><rect x="988.0" y="85" width="30.8" height="15.0" fill="rgb(241,91,48)" rx="2" ry="2" />
<text  x="991.01" y="95.5" >pf..</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="956.1" y="213" width="0.6" height="15.0" fill="rgb(240,81,54)" rx="2" ry="2" />
<text  x="959.09" y="223.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (45 samples, 2.21%)</title><rect x="756.4" y="197" width="26.1" height="15.0" fill="rgb(219,3,15)" rx="2" ry="2" />
<text  x="759.42" y="207.5" >r..</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.05%)</title><rect x="38.4" y="181" width="0.6" height="15.0" fill="rgb(228,22,40)" rx="2" ry="2" />
<text  x="41.44" y="191.5" ></text>
</g>
<g >
<title>timercb (4 samples, 0.20%)</title><rect x="1187.7" y="261" width="2.3" height="15.0" fill="rgb(206,20,19)" rx="2" ry="2" />
<text  x="1190.68" y="271.5" ></text>
</g>
<g >
<title>pf_test (82 samples, 4.03%)</title><rect x="1093.6" y="69" width="47.6" height="15.0" fill="rgb(220,163,13)" rx="2" ry="2" />
<text  x="1096.65" y="79.5" >pf_t..</text>
</g>
<g >
<title>_rm_rlock (12 samples, 0.59%)</title><rect x="438.9" y="37" width="7.0" height="15.0" fill="rgb(232,160,36)" rx="2" ry="2" />
<text  x="441.93" y="47.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.05%)</title><rect x="715.2" y="133" width="0.6" height="15.0" fill="rgb(217,202,17)" rx="2" ry="2" />
<text  x="718.21" y="143.5" ></text>
</g>
<g >
<title>pf_test_rule (114 samples, 5.61%)</title><rect x="477.8" y="37" width="66.2" height="15.0" fill="rgb(253,207,10)" rx="2" ry="2" />
<text  x="480.82" y="47.5" >pf_test..</text>
</g>
<g >
<title>ether_input (1,088 samples, 53.52%)</title><rect x="61.7" y="197" width="631.5" height="15.0" fill="rgb(232,21,11)" rx="2" ry="2" />
<text  x="64.66" y="207.5" >ether_input</text>
</g>
<g >
<title>Xapic_isr1_pti (11 samples, 0.54%)</title><rect x="13.5" y="277" width="6.4" height="15.0" fill="rgb(247,148,17)" rx="2" ry="2" />
<text  x="16.48" y="287.5" ></text>
</g>
<g >
<title>sleepq_signal (7 samples, 0.34%)</title><rect x="1169.1" y="197" width="4.1" height="15.0" fill="rgb(234,45,14)" rx="2" ry="2" />
<text  x="1172.10" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (35 samples, 1.72%)</title><rect x="281.6" y="37" width="20.4" height="15.0" fill="rgb(223,187,21)" rx="2" ry="2" />
<text  x="284.64" y="47.5" ></text>
</g>
<g >
<title>pf_find_state (66 samples, 3.25%)</title><rect x="1055.3" y="37" width="38.3" height="15.0" fill="rgb(248,181,27)" rx="2" ry="2" />
<text  x="1058.34" y="47.5" >pf_..</text>
</g>
<g >
<title>pf_test_rule (11 samples, 0.54%)</title><rect x="1097.7" y="53" width="6.4" height="15.0" fill="rgb(208,177,34)" rx="2" ry="2" />
<text  x="1100.71" y="63.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (50 samples, 2.46%)</title><rect x="1153.4" y="245" width="29.1" height="15.0" fill="rgb(251,28,8)" rx="2" ry="2" />
<text  x="1156.43" y="255.5" >if..</text>
</g>
<g >
<title>pf_test_rule (26 samples, 1.28%)</title><rect x="992.1" y="69" width="15.1" height="15.0" fill="rgb(241,201,26)" rx="2" ry="2" />
<text  x="995.08" y="79.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,300 samples, 63.94%)</title><rect x="32.1" y="229" width="754.5" height="15.0" fill="rgb(250,142,44)" rx="2" ry="2" />
<text  x="35.06" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>gtaskqueue_thread_loop (1,610 samples, 79.19%)</title><rect x="22.2" y="261" width="934.5" height="15.0" fill="rgb(228,154,14)" rx="2" ry="2" />
<text  x="25.19" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>_rm_rlock (22 samples, 1.08%)</title><rect x="596.8" y="37" width="12.8" height="15.0" fill="rgb(220,55,38)" rx="2" ry="2" />
<text  x="599.81" y="47.5" ></text>
</g>
<g >
<title>pf_check_out (234 samples, 11.51%)</title><rect x="555.0" y="69" width="135.8" height="15.0" fill="rgb(249,112,2)" rx="2" ry="2" />
<text  x="558.02" y="79.5" >pf_check_out</text>
</g>
<g >
<title>arpresolve (34 samples, 1.67%)</title><rect x="221.3" y="69" width="19.7" height="15.0" fill="rgb(243,121,36)" rx="2" ry="2" />
<text  x="224.27" y="79.5" ></text>
</g>
<g >
<title>uma_small_alloc (2 samples, 0.10%)</title><rect x="714.1" y="117" width="1.1" height="15.0" fill="rgb(253,4,36)" rx="2" ry="2" />
<text  x="717.05" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (16 samples, 0.79%)</title><rect x="1163.9" y="229" width="9.3" height="15.0" fill="rgb(247,205,11)" rx="2" ry="2" />
<text  x="1166.88" y="239.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.05%)</title><rect x="1174.9" y="213" width="0.6" height="15.0" fill="rgb(239,186,54)" rx="2" ry="2" />
<text  x="1177.91" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (18 samples, 0.89%)</title><rect x="1024.6" y="37" width="10.4" height="15.0" fill="rgb(207,228,30)" rx="2" ry="2" />
<text  x="1027.58" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (211 samples, 10.38%)</title><rect x="1018.8" y="261" width="122.4" height="15.0" fill="rgb(246,10,37)" rx="2" ry="2" />
<text  x="1021.78" y="271.5" >gtaskqueue_run_..</text>
</g>
<g >
<title>pf_get_translation (20 samples, 0.98%)</title><rect x="959.0" y="53" width="11.6" height="15.0" fill="rgb(251,22,0)" rx="2" ry="2" />
<text  x="961.99" y="63.5" ></text>
</g>
<g >
<title>pf_test_state_udp (19 samples, 0.93%)</title><rect x="544.0" y="37" width="11.0" height="15.0" fill="rgb(205,57,5)" rx="2" ry="2" />
<text  x="546.99" y="47.5" ></text>
</g>
<g >
<title>memcmp (3 samples, 0.15%)</title><rect x="690.8" y="149" width="1.8" height="15.0" fill="rgb(253,98,2)" rx="2" ry="2" />
<text  x="693.84" y="159.5" ></text>
</g>
<g >
<title>wakeup_any (11 samples, 0.54%)</title><rect x="1166.8" y="213" width="6.4" height="15.0" fill="rgb(244,127,31)" rx="2" ry="2" />
<text  x="1169.78" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.05%)</title><rect x="718.1" y="181" width="0.6" height="15.0" fill="rgb(220,167,45)" rx="2" ry="2" />
<text  x="721.12" y="191.5" ></text>
</g>
<g >
<title>m_free (26 samples, 1.28%)</title><rect x="834.2" y="149" width="15.1" height="15.0" fill="rgb(242,195,54)" rx="2" ry="2" />
<text  x="837.20" y="159.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (4 samples, 0.20%)</title><rect x="711.7" y="117" width="2.4" height="15.0" fill="rgb(206,203,15)" rx="2" ry="2" />
<text  x="714.73" y="127.5" ></text>
</g>
<g >
<title>_rm_runlock (7 samples, 0.34%)</title><rect x="445.9" y="37" width="4.1" height="15.0" fill="rgb(242,64,9)" rx="2" ry="2" />
<text  x="448.90" y="47.5" ></text>
</g>
<g >
<title>netmap_rx_irq (2 samples, 0.10%)</title><rect x="785.4" y="213" width="1.2" height="15.0" fill="rgb(211,26,52)" rx="2" ry="2" />
<text  x="788.45" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1 (6 samples, 0.30%)</title><rect x="10.0" y="277" width="3.5" height="15.0" fill="rgb(222,75,7)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.05%)</title><rect x="949.7" y="229" width="0.6" height="15.0" fill="rgb(241,30,49)" rx="2" ry="2" />
<text  x="952.70" y="239.5" ></text>
</g>
<g >
<title>ether_demux (1,023 samples, 50.32%)</title><rect x="97.1" y="149" width="593.7" height="15.0" fill="rgb(246,123,30)" rx="2" ry="2" />
<text  x="100.06" y="159.5" >ether_demux</text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.34%)</title><rect x="711.7" y="181" width="4.1" height="15.0" fill="rgb(219,69,41)" rx="2" ry="2" />
<text  x="714.73" y="191.5" ></text>
</g>
<g >
<title>pf_find_state (64 samples, 3.15%)</title><rect x="1104.1" y="37" width="37.1" height="15.0" fill="rgb(211,1,43)" rx="2" ry="2" />
<text  x="1107.10" y="47.5" >pf_..</text>
</g>
<g >
<title>Xtimerint (1 samples, 0.05%)</title><rect x="19.9" y="277" width="0.5" height="15.0" fill="rgb(223,36,3)" rx="2" ry="2" />
<text  x="22.87" y="287.5" ></text>
</g>
<g >
<title>pf_test_state_udp (20 samples, 0.98%)</title><rect x="1007.2" y="69" width="11.6" height="15.0" fill="rgb(215,38,18)" rx="2" ry="2" />
<text  x="1010.17" y="79.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (32 samples, 1.57%)</title><rect x="907.3" y="165" width="18.6" height="15.0" fill="rgb(220,32,54)" rx="2" ry="2" />
<text  x="910.33" y="175.5" ></text>
</g>
<g >
<title>pfil_run_hooks (107 samples, 5.26%)</title><rect x="956.7" y="117" width="62.1" height="15.0" fill="rgb(238,6,46)" rx="2" ry="2" />
<text  x="959.67" y="127.5" >pfil_r..</text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.05%)</title><rect x="954.3" y="213" width="0.6" height="15.0" fill="rgb(246,70,6)" rx="2" ry="2" />
<text  x="957.35" y="223.5" ></text>
</g>
<g >
<title>pf_test (100 samples, 4.92%)</title><rect x="1035.6" y="69" width="58.0" height="15.0" fill="rgb(250,57,53)" rx="2" ry="2" />
<text  x="1038.61" y="79.5" >pf_test</text>
</g>
<g >
<title>ip_tryforward (211 samples, 10.38%)</title><rect x="1018.8" y="117" width="122.4" height="15.0" fill="rgb(212,172,41)" rx="2" ry="2" />
<text  x="1021.78" y="127.5" >ip_tryforward</text>
</g>
</g>
</svg>
