<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>_ck_epoch_addref (1 samples, 0.05%)</title><rect x="38.5" y="213" width="0.6" height="15.0" fill="rgb(234,147,16)" rx="2" ry="2" />
<text  x="41.54" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (20 samples, 0.97%)</title><rect x="751.0" y="197" width="11.4" height="15.0" fill="rgb(233,219,15)" rx="2" ry="2" />
<text  x="754.00" y="207.5" ></text>
</g>
<g >
<title>ip6_findroute (110 samples, 5.32%)</title><rect x="322.3" y="85" width="62.8" height="15.0" fill="rgb(238,141,3)" rx="2" ry="2" />
<text  x="325.27" y="95.5" >ip6_fi..</text>
</g>
<g >
<title>iflib_txq_drain (300 samples, 14.51%)</title><rect x="797.2" y="197" width="171.3" height="15.0" fill="rgb(242,86,46)" rx="2" ry="2" />
<text  x="800.24" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>drain_ring_lockless (308 samples, 14.90%)</title><rect x="792.7" y="213" width="175.8" height="15.0" fill="rgb(245,126,15)" rx="2" ry="2" />
<text  x="795.67" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (16 samples, 0.77%)</title><rect x="937.7" y="149" width="9.1" height="15.0" fill="rgb(223,30,41)" rx="2" ry="2" />
<text  x="940.67" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.05%)</title><rect x="31.1" y="181" width="0.6" height="15.0" fill="rgb(249,199,52)" rx="2" ry="2" />
<text  x="34.12" y="191.5" ></text>
</g>
<g >
<title>_rm_runlock (9 samples, 0.44%)</title><rect x="551.2" y="37" width="5.1" height="15.0" fill="rgb(223,132,2)" rx="2" ry="2" />
<text  x="554.19" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (89 samples, 4.31%)</title><rect x="228.6" y="53" width="50.9" height="15.0" fill="rgb(223,85,36)" rx="2" ry="2" />
<text  x="231.65" y="63.5" >iflib..</text>
</g>
<g >
<title>doreti (4 samples, 0.19%)</title><rect x="31.7" y="277" width="2.3" height="15.0" fill="rgb(221,156,45)" rx="2" ry="2" />
<text  x="34.69" y="287.5" ></text>
</g>
<g >
<title>lapic_handle_timer (9 samples, 0.44%)</title><rect x="1184.9" y="277" width="5.1" height="15.0" fill="rgb(253,52,9)" rx="2" ry="2" />
<text  x="1187.86" y="287.5" ></text>
</g>
<g >
<title>ipfw_chk (183 samples, 8.85%)</title><rect x="1022.2" y="69" width="104.4" height="15.0" fill="rgb(222,122,41)" rx="2" ry="2" />
<text  x="1025.16" y="79.5" >ipfw_chk</text>
</g>
<g >
<title>grouptaskqueue_enqueue (22 samples, 1.06%)</title><rect x="1009.6" y="53" width="12.6" height="15.0" fill="rgb(219,80,45)" rx="2" ry="2" />
<text  x="1012.60" y="63.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.05%)</title><rect x="968.5" y="213" width="0.6" height="15.0" fill="rgb(212,126,54)" rx="2" ry="2" />
<text  x="971.50" y="223.5" ></text>
</g>
<g >
<title>pmc_process_samples (5 samples, 0.24%)</title><rect x="1186.0" y="197" width="2.9" height="15.0" fill="rgb(229,183,0)" rx="2" ry="2" />
<text  x="1189.00" y="207.5" ></text>
</g>
<g >
<title>ether_input (205 samples, 9.92%)</title><rect x="1009.6" y="213" width="117.0" height="15.0" fill="rgb(208,166,26)" rx="2" ry="2" />
<text  x="1012.60" y="223.5" >ether_input</text>
</g>
<g >
<title>netisr_dispatch_src (205 samples, 9.92%)</title><rect x="1009.6" y="149" width="117.0" height="15.0" fill="rgb(230,115,14)" rx="2" ry="2" />
<text  x="1012.60" y="159.5" >netisr_dispatc..</text>
</g>
<g >
<title>_rm_rlock (27 samples, 1.31%)</title><rect x="535.8" y="37" width="15.4" height="15.0" fill="rgb(222,44,19)" rx="2" ry="2" />
<text  x="538.78" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (58 samples, 2.81%)</title><rect x="976.5" y="213" width="33.1" height="15.0" fill="rgb(228,50,4)" rx="2" ry="2" />
<text  x="979.49" y="223.5" >ne..</text>
</g>
<g >
<title>_task_fn_rx (205 samples, 9.92%)</title><rect x="1009.6" y="245" width="117.0" height="15.0" fill="rgb(231,87,0)" rx="2" ry="2" />
<text  x="1012.60" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>mb_dtor_mbuf (7 samples, 0.34%)</title><rect x="866.9" y="117" width="4.0" height="15.0" fill="rgb(208,59,4)" rx="2" ry="2" />
<text  x="869.88" y="127.5" ></text>
</g>
<g >
<title>netmap_rx_irq (1 samples, 0.05%)</title><rect x="791.5" y="213" width="0.6" height="15.0" fill="rgb(220,45,48)" rx="2" ry="2" />
<text  x="794.53" y="223.5" ></text>
</g>
<g >
<title>soft_get_config (2 samples, 0.10%)</title><rect x="1187.7" y="181" width="1.2" height="15.0" fill="rgb(246,201,28)" rx="2" ry="2" />
<text  x="1190.72" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (1,116 samples, 53.99%)</title><rect x="81.9" y="165" width="637.1" height="15.0" fill="rgb(250,148,3)" rx="2" ry="2" />
<text  x="84.93" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (15 samples, 0.73%)</title><rect x="946.8" y="165" width="8.6" height="15.0" fill="rgb(230,48,35)" rx="2" ry="2" />
<text  x="949.81" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.05%)</title><rect x="31.1" y="229" width="0.6" height="15.0" fill="rgb(230,113,52)" rx="2" ry="2" />
<text  x="34.12" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.10%)</title><rect x="966.8" y="165" width="1.1" height="15.0" fill="rgb(228,191,12)" rx="2" ry="2" />
<text  x="969.79" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.05%)</title><rect x="31.1" y="261" width="0.6" height="15.0" fill="rgb(227,64,31)" rx="2" ry="2" />
<text  x="34.12" y="271.5" ></text>
</g>
<g >
<title>in6_localip (30 samples, 1.45%)</title><rect x="305.1" y="85" width="17.2" height="15.0" fill="rgb(245,60,6)" rx="2" ry="2" />
<text  x="308.14" y="95.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.05%)</title><rect x="31.1" y="197" width="0.6" height="15.0" fill="rgb(229,219,37)" rx="2" ry="2" />
<text  x="34.12" y="207.5" ></text>
</g>
<g >
<title>fib6_lookup (105 samples, 5.08%)</title><rect x="325.1" y="69" width="60.0" height="15.0" fill="rgb(242,101,36)" rx="2" ry="2" />
<text  x="328.12" y="79.5" >fib6_l..</text>
</g>
<g >
<title>netisr_dispatch_src (1,127 samples, 54.52%)</title><rect x="75.7" y="181" width="643.3" height="15.0" fill="rgb(217,114,34)" rx="2" ry="2" />
<text  x="78.65" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_output_frame (22 samples, 1.06%)</title><rect x="1009.6" y="85" width="12.6" height="15.0" fill="rgb(236,190,9)" rx="2" ry="2" />
<text  x="1012.60" y="95.5" ></text>
</g>
<g >
<title>spinlock_exit (11 samples, 0.53%)</title><rect x="1015.9" y="37" width="6.3" height="15.0" fill="rgb(245,8,43)" rx="2" ry="2" />
<text  x="1018.88" y="47.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (100 samples, 4.84%)</title><rect x="814.4" y="181" width="57.1" height="15.0" fill="rgb(239,193,7)" rx="2" ry="2" />
<text  x="817.36" y="191.5" >iflib_..</text>
</g>
<g >
<title>lradix6_lookup (82 samples, 3.97%)</title><rect x="338.3" y="53" width="46.8" height="15.0" fill="rgb(209,126,22)" rx="2" ry="2" />
<text  x="341.25" y="63.5" >lrad..</text>
</g>
<g >
<title>iflib_rxeof (58 samples, 2.81%)</title><rect x="976.5" y="245" width="33.1" height="15.0" fill="rgb(248,117,3)" rx="2" ry="2" />
<text  x="979.49" y="255.5" >if..</text>
</g>
<g >
<title>memmove_erms (6 samples, 0.29%)</title><rect x="301.7" y="53" width="3.4" height="15.0" fill="rgb(247,118,15)" rx="2" ry="2" />
<text  x="304.72" y="63.5" ></text>
</g>
<g >
<title>m_freem (35 samples, 1.69%)</title><rect x="851.5" y="165" width="20.0" height="15.0" fill="rgb(250,16,2)" rx="2" ry="2" />
<text  x="854.47" y="175.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (22 samples, 1.06%)</title><rect x="955.4" y="181" width="12.5" height="15.0" fill="rgb(230,195,2)" rx="2" ry="2" />
<text  x="958.37" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.05%)</title><rect x="967.9" y="181" width="0.6" height="15.0" fill="rgb(254,117,3)" rx="2" ry="2" />
<text  x="970.93" y="191.5" ></text>
</g>
<g >
<title>memcmp (1 samples, 0.05%)</title><rect x="301.1" y="37" width="0.6" height="15.0" fill="rgb(228,44,36)" rx="2" ry="2" />
<text  x="304.15" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (8 samples, 0.39%)</title><rect x="746.4" y="197" width="4.6" height="15.0" fill="rgb(205,94,35)" rx="2" ry="2" />
<text  x="749.43" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.05%)</title><rect x="31.1" y="85" width="0.6" height="15.0" fill="rgb(218,19,40)" rx="2" ry="2" />
<text  x="34.12" y="95.5" ></text>
</g>
<g >
<title>ether_nh_input (205 samples, 9.92%)</title><rect x="1009.6" y="181" width="117.0" height="15.0" fill="rgb(252,215,50)" rx="2" ry="2" />
<text  x="1012.60" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>pmc_hook_handler (6 samples, 0.29%)</title><rect x="1185.4" y="213" width="3.5" height="15.0" fill="rgb(243,209,34)" rx="2" ry="2" />
<text  x="1188.43" y="223.5" ></text>
</g>
<g >
<title>_task_fn_tx (314 samples, 15.19%)</title><rect x="792.1" y="229" width="179.3" height="15.0" fill="rgb(228,103,30)" rx="2" ry="2" />
<text  x="795.10" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>ipfw_find_rule (1 samples, 0.05%)</title><rect x="1051.8" y="37" width="0.6" height="15.0" fill="rgb(237,221,26)" rx="2" ry="2" />
<text  x="1054.85" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.05%)</title><rect x="31.1" y="213" width="0.6" height="15.0" fill="rgb(253,78,37)" rx="2" ry="2" />
<text  x="34.12" y="223.5" ></text>
</g>
<g >
<title>ipfw_check_packet (183 samples, 8.85%)</title><rect x="1022.2" y="85" width="104.4" height="15.0" fill="rgb(238,9,52)" rx="2" ry="2" />
<text  x="1025.16" y="95.5" >ipfw_check_p..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (17 samples, 0.82%)</title><rect x="1152.3" y="229" width="9.7" height="15.0" fill="rgb(235,115,15)" rx="2" ry="2" />
<text  x="1155.32" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (4 samples, 0.19%)</title><rect x="964.5" y="165" width="2.3" height="15.0" fill="rgb(243,185,9)" rx="2" ry="2" />
<text  x="967.50" y="175.5" ></text>
</g>
<g >
<title>ip6_tryforward (1 samples, 0.05%)</title><rect x="31.1" y="149" width="0.6" height="15.0" fill="rgb(220,220,51)" rx="2" ry="2" />
<text  x="34.12" y="159.5" ></text>
</g>
<g >
<title>_task_fn_rx (58 samples, 2.81%)</title><rect x="976.5" y="261" width="33.1" height="15.0" fill="rgb(236,78,15)" rx="2" ry="2" />
<text  x="979.49" y="271.5" >_t..</text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.10%)</title><rect x="120.2" y="133" width="1.1" height="15.0" fill="rgb(240,147,23)" rx="2" ry="2" />
<text  x="123.18" y="143.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.10%)</title><rect x="1155.7" y="213" width="1.2" height="15.0" fill="rgb(225,172,43)" rx="2" ry="2" />
<text  x="1158.75" y="223.5" ></text>
</g>
<g >
<title>m_pkthdr_init (5 samples, 0.24%)</title><rect x="762.4" y="197" width="2.9" height="15.0" fill="rgb(230,115,33)" rx="2" ry="2" />
<text  x="765.41" y="207.5" ></text>
</g>
<g >
<title>ip6_input (205 samples, 9.92%)</title><rect x="1009.6" y="133" width="117.0" height="15.0" fill="rgb(240,20,35)" rx="2" ry="2" />
<text  x="1012.60" y="143.5" >ip6_input</text>
</g>
<g >
<title>timercb (9 samples, 0.44%)</title><rect x="1184.9" y="261" width="5.1" height="15.0" fill="rgb(221,215,32)" rx="2" ry="2" />
<text  x="1187.86" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (3 samples, 0.15%)</title><rect x="1159.2" y="197" width="1.7" height="15.0" fill="rgb(243,91,44)" rx="2" ry="2" />
<text  x="1162.17" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (205 samples, 9.92%)</title><rect x="1009.6" y="261" width="117.0" height="15.0" fill="rgb(234,164,4)" rx="2" ry="2" />
<text  x="1012.60" y="271.5" >gtaskqueue_run..</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (22 samples, 1.06%)</title><rect x="934.2" y="165" width="12.6" height="15.0" fill="rgb(221,217,37)" rx="2" ry="2" />
<text  x="937.25" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (1,651 samples, 79.87%)</title><rect x="34.0" y="261" width="942.5" height="15.0" fill="rgb(252,98,41)" rx="2" ry="2" />
<text  x="36.98" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.05%)</title><rect x="38.5" y="229" width="0.6" height="15.0" fill="rgb(249,62,18)" rx="2" ry="2" />
<text  x="41.54" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1 (17 samples, 0.82%)</title><rect x="10.0" y="277" width="9.7" height="15.0" fill="rgb(243,218,53)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (58 samples, 2.81%)</title><rect x="976.5" y="69" width="33.1" height="15.0" fill="rgb(227,206,28)" rx="2" ry="2" />
<text  x="979.49" y="79.5" >ip..</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="31.1" y="37" width="0.6" height="15.0" fill="rgb(206,195,46)" rx="2" ry="2" />
<text  x="34.12" y="47.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (4 samples, 0.19%)</title><rect x="39.1" y="229" width="2.3" height="15.0" fill="rgb(218,222,54)" rx="2" ry="2" />
<text  x="42.11" y="239.5" ></text>
</g>
<g >
<title>ip6_tryforward (205 samples, 9.92%)</title><rect x="1009.6" y="117" width="117.0" height="15.0" fill="rgb(233,190,40)" rx="2" ry="2" />
<text  x="1012.60" y="127.5" >ip6_tryforward</text>
</g>
<g >
<title>iflib_rxeof (205 samples, 9.92%)</title><rect x="1009.6" y="229" width="117.0" height="15.0" fill="rgb(205,221,39)" rx="2" ry="2" />
<text  x="1012.60" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>ipfw_chk (516 samples, 24.96%)</title><rect x="422.7" y="53" width="294.6" height="15.0" fill="rgb(248,98,1)" rx="2" ry="2" />
<text  x="425.74" y="63.5" >ipfw_chk</text>
</g>
<g >
<title>iflib_if_transmit (22 samples, 1.06%)</title><rect x="1009.6" y="69" width="12.6" height="15.0" fill="rgb(232,95,54)" rx="2" ry="2" />
<text  x="1012.60" y="79.5" ></text>
</g>
<g >
<title>pfil_run_hooks (581 samples, 28.11%)</title><rect x="386.8" y="85" width="331.7" height="15.0" fill="rgb(226,10,22)" rx="2" ry="2" />
<text  x="389.78" y="95.5" >pfil_run_hooks</text>
</g>
<g >
<title>netisr_dispatch_src (205 samples, 9.92%)</title><rect x="1009.6" y="197" width="117.0" height="15.0" fill="rgb(252,5,4)" rx="2" ry="2" />
<text  x="1012.60" y="207.5" >netisr_dispatc..</text>
</g>
<g >
<title>all (2,067 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(234,216,24)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (4 samples, 0.19%)</title><rect x="744.1" y="165" width="2.3" height="15.0" fill="rgb(218,68,15)" rx="2" ry="2" />
<text  x="747.15" y="175.5" ></text>
</g>
<g >
<title>tc_windup (1 samples, 0.05%)</title><rect x="1188.9" y="197" width="0.5" height="15.0" fill="rgb(210,102,17)" rx="2" ry="2" />
<text  x="1191.86" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (2 samples, 0.10%)</title><rect x="933.1" y="165" width="1.1" height="15.0" fill="rgb(205,130,53)" rx="2" ry="2" />
<text  x="936.11" y="175.5" ></text>
</g>
<g >
<title>iflib_get_ifp (1 samples, 0.05%)</title><rect x="1178.6" y="213" width="0.6" height="15.0" fill="rgb(228,130,50)" rx="2" ry="2" />
<text  x="1181.58" y="223.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (8 samples, 0.39%)</title><rect x="297.2" y="53" width="4.5" height="15.0" fill="rgb(250,218,10)" rx="2" ry="2" />
<text  x="300.15" y="63.5" ></text>
</g>
<g >
<title>if_getsoftc (3 samples, 0.15%)</title><rect x="260.0" y="37" width="1.8" height="15.0" fill="rgb(218,197,20)" rx="2" ry="2" />
<text  x="263.04" y="47.5" ></text>
</g>
<g >
<title>m_tag_locate (2 samples, 0.10%)</title><rect x="717.3" y="53" width="1.2" height="15.0" fill="rgb(248,43,52)" rx="2" ry="2" />
<text  x="720.31" y="63.5" ></text>
</g>
<g >
<title>ipfw_check_packet (58 samples, 2.81%)</title><rect x="976.5" y="101" width="33.1" height="15.0" fill="rgb(221,84,20)" rx="2" ry="2" />
<text  x="979.49" y="111.5" >ip..</text>
</g>
<g >
<title>ipfw_dyn_lookup_state (282 samples, 13.64%)</title><rect x="556.3" y="37" width="161.0" height="15.0" fill="rgb(207,55,37)" rx="2" ry="2" />
<text  x="559.33" y="47.5" >ipfw_dyn_lookup_state</text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.05%)</title><rect x="870.9" y="117" width="0.6" height="15.0" fill="rgb(215,48,54)" rx="2" ry="2" />
<text  x="873.88" y="127.5" ></text>
</g>
<g >
<title>memcmp (1 samples, 0.05%)</title><rect x="718.5" y="149" width="0.5" height="15.0" fill="rgb(209,143,52)" rx="2" ry="2" />
<text  x="721.46" y="159.5" ></text>
</g>
<g >
<title>ether_input (1,136 samples, 54.96%)</title><rect x="70.5" y="197" width="648.5" height="15.0" fill="rgb(214,122,41)" rx="2" ry="2" />
<text  x="73.51" y="207.5" >ether_input</text>
</g>
<g >
<title>memcpy_erms (11 samples, 0.53%)</title><rect x="279.5" y="69" width="6.2" height="15.0" fill="rgb(242,93,46)" rx="2" ry="2" />
<text  x="282.45" y="79.5" ></text>
</g>
<g >
<title>iflib_encap (147 samples, 7.11%)</title><rect x="871.5" y="181" width="83.9" height="15.0" fill="rgb(214,65,51)" rx="2" ry="2" />
<text  x="874.45" y="191.5" >iflib_encap</text>
</g>
<g >
<title>gtaskqueue_run_locked (58 samples, 2.81%)</title><rect x="976.5" y="277" width="33.1" height="15.0" fill="rgb(219,93,3)" rx="2" ry="2" />
<text  x="979.49" y="287.5" >gt..</text>
</g>
<g >
<title>ipfw_chk (58 samples, 2.81%)</title><rect x="976.5" y="85" width="33.1" height="15.0" fill="rgb(253,185,0)" rx="2" ry="2" />
<text  x="979.49" y="95.5" >ip..</text>
</g>
<g >
<title>rxd_frag_to_sd (30 samples, 1.45%)</title><rect x="774.4" y="197" width="17.1" height="15.0" fill="rgb(251,100,35)" rx="2" ry="2" />
<text  x="777.40" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (16 samples, 0.77%)</title><rect x="765.3" y="197" width="9.1" height="15.0" fill="rgb(207,38,51)" rx="2" ry="2" />
<text  x="768.27" y="207.5" ></text>
</g>
<g >
<title>ipfw_check_packet (553 samples, 26.75%)</title><rect x="402.8" y="69" width="315.7" height="15.0" fill="rgb(242,185,41)" rx="2" ry="2" />
<text  x="405.76" y="79.5" >ipfw_check_packet</text>
</g>
<g >
<title>hash_packet (58 samples, 2.81%)</title><rect x="976.5" y="53" width="33.1" height="15.0" fill="rgb(238,151,25)" rx="2" ry="2" />
<text  x="979.49" y="63.5" >ha..</text>
</g>
<g >
<title>spinlock_exit (1 samples, 0.05%)</title><rect x="1161.5" y="181" width="0.5" height="15.0" fill="rgb(230,196,32)" rx="2" ry="2" />
<text  x="1164.46" y="191.5" ></text>
</g>
<g >
<title>ipfw_dyn_lookup_state (183 samples, 8.85%)</title><rect x="1022.2" y="53" width="104.4" height="15.0" fill="rgb(248,185,42)" rx="2" ry="2" />
<text  x="1025.16" y="63.5" >ipfw_dyn_loo..</text>
</g>
<g >
<title>m_adj (8 samples, 0.39%)</title><rect x="115.6" y="133" width="4.6" height="15.0" fill="rgb(235,71,22)" rx="2" ry="2" />
<text  x="118.61" y="143.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.05%)</title><rect x="1187.1" y="181" width="0.6" height="15.0" fill="rgb(216,141,33)" rx="2" ry="2" />
<text  x="1190.15" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.19%)</title><rect x="971.4" y="229" width="2.2" height="15.0" fill="rgb(243,31,4)" rx="2" ry="2" />
<text  x="974.35" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (20 samples, 0.97%)</title><rect x="248.6" y="37" width="11.4" height="15.0" fill="rgb(253,187,50)" rx="2" ry="2" />
<text  x="251.63" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (1,651 samples, 79.87%)</title><rect x="34.0" y="245" width="942.5" height="15.0" fill="rgb(227,121,44)" rx="2" ry="2" />
<text  x="36.98" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>memcmp (3 samples, 0.15%)</title><rect x="385.1" y="85" width="1.7" height="15.0" fill="rgb(208,149,52)" rx="2" ry="2" />
<text  x="388.07" y="95.5" ></text>
</g>
<g >
<title>intr_execute_handlers (94 samples, 4.55%)</title><rect x="1126.6" y="277" width="53.7" height="15.0" fill="rgb(250,55,53)" rx="2" ry="2" />
<text  x="1129.63" y="287.5" >intr_..</text>
</g>
<g >
<title>netisr_dispatch_src (58 samples, 2.81%)</title><rect x="976.5" y="165" width="33.1" height="15.0" fill="rgb(220,150,43)" rx="2" ry="2" />
<text  x="979.49" y="175.5" >ne..</text>
</g>
<g >
<title>dyn_update_proto_state (32 samples, 1.55%)</title><rect x="1022.2" y="37" width="18.2" height="15.0" fill="rgb(253,225,3)" rx="2" ry="2" />
<text  x="1025.16" y="47.5" ></text>
</g>
<g >
<title>pfil_run_hooks (183 samples, 8.85%)</title><rect x="1022.2" y="101" width="104.4" height="15.0" fill="rgb(248,153,22)" rx="2" ry="2" />
<text  x="1025.16" y="111.5" >pfil_run_hooks</text>
</g>
<g >
<title>ip6_input (1,033 samples, 49.98%)</title><rect x="128.7" y="117" width="589.8" height="15.0" fill="rgb(209,75,10)" rx="2" ry="2" />
<text  x="131.74" y="127.5" >ip6_input</text>
</g>
<g >
<title>nd6_resolve (34 samples, 1.64%)</title><rect x="285.7" y="69" width="19.4" height="15.0" fill="rgb(251,77,40)" rx="2" ry="2" />
<text  x="288.73" y="79.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (64 samples, 3.10%)</title><rect x="1143.8" y="245" width="36.5" height="15.0" fill="rgb(228,108,49)" rx="2" ry="2" />
<text  x="1146.76" y="255.5" >ifl..</text>
</g>
<g >
<title>m_free (31 samples, 1.50%)</title><rect x="853.8" y="149" width="17.7" height="15.0" fill="rgb(246,54,17)" rx="2" ry="2" />
<text  x="856.75" y="159.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.05%)</title><rect x="31.1" y="101" width="0.6" height="15.0" fill="rgb(245,82,27)" rx="2" ry="2" />
<text  x="34.12" y="111.5" ></text>
</g>
<g >
<title>ip6_tryforward (58 samples, 2.81%)</title><rect x="976.5" y="133" width="33.1" height="15.0" fill="rgb(207,38,53)" rx="2" ry="2" />
<text  x="979.49" y="143.5" >ip..</text>
</g>
<g >
<title>ether_demux (58 samples, 2.81%)</title><rect x="976.5" y="181" width="33.1" height="15.0" fill="rgb(250,74,31)" rx="2" ry="2" />
<text  x="979.49" y="191.5" >et..</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.05%)</title><rect x="31.1" y="69" width="0.6" height="15.0" fill="rgb(235,130,3)" rx="2" ry="2" />
<text  x="34.12" y="79.5" ></text>
</g>
<g >
<title>intr_lookup_source (5 samples, 0.24%)</title><rect x="1182.0" y="261" width="2.9" height="15.0" fill="rgb(246,126,3)" rx="2" ry="2" />
<text  x="1185.01" y="271.5" ></text>
</g>
<g >
<title>ip6_input (58 samples, 2.81%)</title><rect x="976.5" y="149" width="33.1" height="15.0" fill="rgb(219,166,41)" rx="2" ry="2" />
<text  x="979.49" y="159.5" >ip..</text>
</g>
<g >
<title>handleevents (9 samples, 0.44%)</title><rect x="1184.9" y="245" width="5.1" height="15.0" fill="rgb(211,199,42)" rx="2" ry="2" />
<text  x="1187.86" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,046 samples, 50.60%)</title><rect x="121.3" y="133" width="597.2" height="15.0" fill="rgb(245,196,39)" rx="2" ry="2" />
<text  x="124.32" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>pfil_run_hooks (58 samples, 2.81%)</title><rect x="976.5" y="117" width="33.1" height="15.0" fill="rgb(206,216,49)" rx="2" ry="2" />
<text  x="979.49" y="127.5" >pf..</text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.10%)</title><rect x="43.1" y="197" width="1.2" height="15.0" fill="rgb(239,131,48)" rx="2" ry="2" />
<text  x="46.11" y="207.5" ></text>
</g>
<g >
<title>jenkins_hash32 (43 samples, 2.08%)</title><rect x="976.5" y="37" width="24.5" height="15.0" fill="rgb(223,52,40)" rx="2" ry="2" />
<text  x="979.49" y="47.5" >j..</text>
</g>
<g >
<title>ip6_input (1 samples, 0.05%)</title><rect x="31.1" y="165" width="0.6" height="15.0" fill="rgb(209,196,54)" rx="2" ry="2" />
<text  x="34.12" y="175.5" ></text>
</g>
<g >
<title>fork_exit (1,651 samples, 79.87%)</title><rect x="34.0" y="277" width="942.5" height="15.0" fill="rgb(238,192,42)" rx="2" ry="2" />
<text  x="36.98" y="287.5" >fork_exit</text>
</g>
<g >
<title>taskqueue_thread_enqueue (2 samples, 0.10%)</title><rect x="1156.9" y="213" width="1.1" height="15.0" fill="rgb(253,173,17)" rx="2" ry="2" />
<text  x="1159.89" y="223.5" ></text>
</g>
<g >
<title>timekeep_push_vdso (1 samples, 0.05%)</title><rect x="1188.9" y="181" width="0.5" height="15.0" fill="rgb(238,24,37)" rx="2" ry="2" />
<text  x="1191.86" y="191.5" ></text>
</g>
<g >
<title>memcmp (15 samples, 0.73%)</title><rect x="1001.0" y="37" width="8.6" height="15.0" fill="rgb(247,21,20)" rx="2" ry="2" />
<text  x="1004.04" y="47.5" ></text>
</g>
<g >
<title>ether_output (190 samples, 9.19%)</title><rect x="196.7" y="85" width="108.4" height="15.0" fill="rgb(219,75,46)" rx="2" ry="2" />
<text  x="199.68" y="95.5" >ether_output</text>
</g>
<g >
<title>memcmp (130 samples, 6.29%)</title><rect x="1052.4" y="37" width="74.2" height="15.0" fill="rgb(220,198,41)" rx="2" ry="2" />
<text  x="1055.42" y="47.5" >memcmp</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (6 samples, 0.29%)</title><rect x="735.6" y="181" width="3.4" height="15.0" fill="rgb(213,159,25)" rx="2" ry="2" />
<text  x="738.58" y="191.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.10%)</title><rect x="1160.9" y="197" width="1.1" height="15.0" fill="rgb(227,144,35)" rx="2" ry="2" />
<text  x="1163.89" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (11 samples, 0.53%)</title><rect x="1009.6" y="37" width="6.3" height="15.0" fill="rgb(220,61,16)" rx="2" ry="2" />
<text  x="1012.60" y="47.5" ></text>
</g>
<g >
<title>ether_output (1 samples, 0.05%)</title><rect x="31.1" y="133" width="0.6" height="15.0" fill="rgb(240,191,41)" rx="2" ry="2" />
<text  x="34.12" y="143.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,315 samples, 63.62%)</title><rect x="41.4" y="229" width="750.7" height="15.0" fill="rgb(250,176,53)" rx="2" ry="2" />
<text  x="44.40" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_demux (205 samples, 9.92%)</title><rect x="1009.6" y="165" width="117.0" height="15.0" fill="rgb(207,98,7)" rx="2" ry="2" />
<text  x="1012.60" y="175.5" >ether_demux</text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.05%)</title><rect x="31.1" y="117" width="0.6" height="15.0" fill="rgb(242,49,3)" rx="2" ry="2" />
<text  x="34.12" y="127.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.10%)</title><rect x="1179.2" y="213" width="1.1" height="15.0" fill="rgb(216,75,37)" rx="2" ry="2" />
<text  x="1182.15" y="223.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (2 samples, 0.10%)</title><rect x="1162.0" y="229" width="1.2" height="15.0" fill="rgb(234,115,26)" rx="2" ry="2" />
<text  x="1165.03" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (205 samples, 9.92%)</title><rect x="1009.6" y="277" width="117.0" height="15.0" fill="rgb(223,207,52)" rx="2" ry="2" />
<text  x="1012.60" y="287.5" >gtaskqueue_thr..</text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(245,54,9)" rx="2" ry="2" />
<text  x="1192.43" y="239.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.05%)</title><rect x="975.9" y="213" width="0.6" height="15.0" fill="rgb(236,122,52)" rx="2" ry="2" />
<text  x="978.92" y="223.5" ></text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.05%)</title><rect x="1188.9" y="213" width="0.5" height="15.0" fill="rgb(233,190,23)" rx="2" ry="2" />
<text  x="1191.86" y="223.5" ></text>
</g>
<g >
<title>hash_packet (20 samples, 0.97%)</title><rect x="1040.4" y="37" width="11.4" height="15.0" fill="rgb(232,117,51)" rx="2" ry="2" />
<text  x="1043.43" y="47.5" ></text>
</g>
<g >
<title>tc_fill_vdso_timehands (1 samples, 0.05%)</title><rect x="1188.9" y="165" width="0.5" height="15.0" fill="rgb(235,184,21)" rx="2" ry="2" />
<text  x="1191.86" y="175.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (20 samples, 0.97%)</title><rect x="19.7" y="277" width="11.4" height="15.0" fill="rgb(223,43,42)" rx="2" ry="2" />
<text  x="22.70" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.15%)</title><rect x="1154.0" y="213" width="1.7" height="15.0" fill="rgb(229,32,13)" rx="2" ry="2" />
<text  x="1157.03" y="223.5" ></text>
</g>
<g >
<title>ether_demux (1,076 samples, 52.06%)</title><rect x="104.2" y="149" width="614.3" height="15.0" fill="rgb(228,220,24)" rx="2" ry="2" />
<text  x="107.19" y="159.5" >ether_demux</text>
</g>
<g >
<title>ifmp_ring_check_drainage (3 samples, 0.15%)</title><rect x="969.1" y="213" width="1.7" height="15.0" fill="rgb(254,52,6)" rx="2" ry="2" />
<text  x="972.07" y="223.5" ></text>
</g>
<g >
<title>lapic_handle_intr (8 samples, 0.39%)</title><rect x="1180.3" y="277" width="4.6" height="15.0" fill="rgb(249,1,5)" rx="2" ry="2" />
<text  x="1183.30" y="287.5" ></text>
</g>
<g >
<title>wakeup_any (7 samples, 0.34%)</title><rect x="1158.0" y="213" width="4.0" height="15.0" fill="rgb(207,130,11)" rx="2" ry="2" />
<text  x="1161.03" y="223.5" ></text>
</g>
<g >
<title>rn_match (76 samples, 3.68%)</title><rect x="341.7" y="37" width="43.4" height="15.0" fill="rgb(239,208,38)" rx="2" ry="2" />
<text  x="344.68" y="47.5" >rn_m..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (15 samples, 0.73%)</title><rect x="1168.3" y="229" width="8.6" height="15.0" fill="rgb(240,73,50)" rx="2" ry="2" />
<text  x="1171.31" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.15%)</title><rect x="973.6" y="229" width="1.8" height="15.0" fill="rgb(225,3,4)" rx="2" ry="2" />
<text  x="976.64" y="239.5" ></text>
</g>
<g >
<title>hardclock (8 samples, 0.39%)</title><rect x="1184.9" y="229" width="4.5" height="15.0" fill="rgb(242,54,31)" rx="2" ry="2" />
<text  x="1187.86" y="239.5" ></text>
</g>
<g >
<title>ether_input (58 samples, 2.81%)</title><rect x="976.5" y="229" width="33.1" height="15.0" fill="rgb(247,101,52)" rx="2" ry="2" />
<text  x="979.49" y="239.5" >et..</text>
</g>
<g >
<title>ether_nh_input (58 samples, 2.81%)</title><rect x="976.5" y="197" width="33.1" height="15.0" fill="rgb(250,79,43)" rx="2" ry="2" />
<text  x="979.49" y="207.5" >et..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.19%)</title><rect x="43.1" y="213" width="2.3" height="15.0" fill="rgb(220,175,5)" rx="2" ry="2" />
<text  x="46.11" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (9 samples, 0.44%)</title><rect x="1163.2" y="229" width="5.1" height="15.0" fill="rgb(223,92,9)" rx="2" ry="2" />
<text  x="1166.17" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (101 samples, 4.89%)</title><rect x="221.8" y="69" width="57.7" height="15.0" fill="rgb(230,205,38)" rx="2" ry="2" />
<text  x="224.79" y="79.5" >ether_..</text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.05%)</title><rect x="1160.3" y="181" width="0.6" height="15.0" fill="rgb(216,77,14)" rx="2" ry="2" />
<text  x="1163.31" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (1 samples, 0.05%)</title><rect x="970.8" y="213" width="0.6" height="15.0" fill="rgb(254,23,32)" rx="2" ry="2" />
<text  x="973.78" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.10%)</title><rect x="44.3" y="197" width="1.1" height="15.0" fill="rgb(250,26,24)" rx="2" ry="2" />
<text  x="47.25" y="207.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (6 samples, 0.29%)</title><rect x="1176.9" y="229" width="3.4" height="15.0" fill="rgb(227,32,39)" rx="2" ry="2" />
<text  x="1179.87" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.05%)</title><rect x="31.1" y="277" width="0.6" height="15.0" fill="rgb(216,35,43)" rx="2" ry="2" />
<text  x="34.12" y="287.5" ></text>
</g>
<g >
<title>intr_event_handle (75 samples, 3.63%)</title><rect x="1137.5" y="261" width="42.8" height="15.0" fill="rgb(254,42,45)" rx="2" ry="2" />
<text  x="1140.48" y="271.5" >intr..</text>
</g>
<g >
<title>_rm_runlock (4 samples, 0.19%)</title><rect x="320.0" y="69" width="2.3" height="15.0" fill="rgb(216,210,51)" rx="2" ry="2" />
<text  x="322.99" y="79.5" ></text>
</g>
<g >
<title>uma_zfree_arg (28 samples, 1.35%)</title><rect x="855.5" y="133" width="16.0" height="15.0" fill="rgb(247,118,47)" rx="2" ry="2" />
<text  x="858.47" y="143.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,307 samples, 63.23%)</title><rect x="45.4" y="213" width="746.1" height="15.0" fill="rgb(215,175,50)" rx="2" ry="2" />
<text  x="48.39" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>iflib_fl_refill (48 samples, 2.32%)</title><rect x="719.0" y="197" width="27.4" height="15.0" fill="rgb(216,122,47)" rx="2" ry="2" />
<text  x="722.03" y="207.5" >i..</text>
</g>
<g >
<title>uma_zalloc_arg (13 samples, 0.63%)</title><rect x="739.0" y="181" width="7.4" height="15.0" fill="rgb(238,194,42)" rx="2" ry="2" />
<text  x="742.01" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.05%)</title><rect x="31.1" y="53" width="0.6" height="15.0" fill="rgb(229,152,51)" rx="2" ry="2" />
<text  x="34.12" y="63.5" ></text>
</g>
<g >
<title>_rm_rlock (17 samples, 0.82%)</title><rect x="310.3" y="69" width="9.7" height="15.0" fill="rgb(240,97,41)" rx="2" ry="2" />
<text  x="313.28" y="79.5" ></text>
</g>
<g >
<title>ether_output (22 samples, 1.06%)</title><rect x="1009.6" y="101" width="12.6" height="15.0" fill="rgb(223,160,14)" rx="2" ry="2" />
<text  x="1012.60" y="111.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (9 samples, 0.44%)</title><rect x="846.3" y="165" width="5.2" height="15.0" fill="rgb(253,64,52)" rx="2" ry="2" />
<text  x="849.33" y="175.5" ></text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.15%)</title><rect x="812.7" y="181" width="1.7" height="15.0" fill="rgb(221,154,22)" rx="2" ry="2" />
<text  x="815.65" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.05%)</title><rect x="946.2" y="133" width="0.6" height="15.0" fill="rgb(247,95,15)" rx="2" ry="2" />
<text  x="949.24" y="143.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.05%)</title><rect x="31.1" y="245" width="0.6" height="15.0" fill="rgb(232,127,6)" rx="2" ry="2" />
<text  x="34.12" y="255.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (31 samples, 1.50%)</title><rect x="261.8" y="37" width="17.7" height="15.0" fill="rgb(242,136,3)" rx="2" ry="2" />
<text  x="264.76" y="47.5" ></text>
</g>
<g >
<title>wakeup (2 samples, 0.10%)</title><rect x="975.4" y="229" width="1.1" height="15.0" fill="rgb(211,80,30)" rx="2" ry="2" />
<text  x="978.35" y="239.5" ></text>
</g>
<g >
<title>ip6_tryforward (968 samples, 46.83%)</title><rect x="165.8" y="101" width="552.7" height="15.0" fill="rgb(250,121,50)" rx="2" ry="2" />
<text  x="168.85" y="111.5" >ip6_tryforward</text>
</g>
</g>
</svg>
