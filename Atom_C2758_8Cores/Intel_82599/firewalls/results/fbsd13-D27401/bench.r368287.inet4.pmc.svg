<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>mb_ctor_mbuf (77 samples, 0.39%)</title><rect x="654.5" y="165" width="4.6" height="15.0" fill="rgb(229,109,39)" rx="2" ry="2" />
<text  x="657.50" y="175.5" ></text>
</g>
<g >
<title>cache_alloc_retry (115 samples, 0.58%)</title><rect x="629.5" y="181" width="6.8" height="15.0" fill="rgb(223,160,48)" rx="2" ry="2" />
<text  x="632.48" y="191.5" ></text>
</g>
<g >
<title>pmc_hook_handler (34 samples, 0.17%)</title><rect x="1186.5" y="213" width="2.1" height="15.0" fill="rgb(236,96,34)" rx="2" ry="2" />
<text  x="1189.55" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.05%)</title><rect x="67.1" y="165" width="0.6" height="15.0" fill="rgb(220,96,25)" rx="2" ry="2" />
<text  x="70.12" y="175.5" ></text>
</g>
<g >
<title>ether_nh_input (7,294 samples, 36.82%)</title><rect x="165.8" y="165" width="434.4" height="15.0" fill="rgb(236,185,17)" rx="2" ry="2" />
<text  x="168.81" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>statclock (3 samples, 0.02%)</title><rect x="1110.9" y="197" width="0.2" height="15.0" fill="rgb(226,12,9)" rx="2" ry="2" />
<text  x="1113.90" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (28 samples, 0.14%)</title><rect x="1170.6" y="213" width="1.7" height="15.0" fill="rgb(238,40,16)" rx="2" ry="2" />
<text  x="1173.64" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (8 samples, 0.04%)</title><rect x="45.0" y="213" width="0.5" height="15.0" fill="rgb(246,3,6)" rx="2" ry="2" />
<text  x="48.02" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (6 samples, 0.03%)</title><rect x="726.7" y="197" width="0.3" height="15.0" fill="rgb(241,191,47)" rx="2" ry="2" />
<text  x="729.68" y="207.5" ></text>
</g>
<g >
<title>sched_priority (4 samples, 0.02%)</title><rect x="1189.7" y="197" width="0.2" height="15.0" fill="rgb(239,55,48)" rx="2" ry="2" />
<text  x="1192.70" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (12 samples, 0.06%)</title><rect x="206.2" y="133" width="0.8" height="15.0" fill="rgb(233,48,43)" rx="2" ry="2" />
<text  x="209.25" y="143.5" ></text>
</g>
<g >
<title>iflib_get_softc (4 samples, 0.02%)</title><rect x="1097.9" y="197" width="0.3" height="15.0" fill="rgb(227,92,26)" rx="2" ry="2" />
<text  x="1100.92" y="207.5" ></text>
</g>
<g >
<title>if_getsoftc (31 samples, 0.16%)</title><rect x="416.7" y="37" width="1.9" height="15.0" fill="rgb(214,60,54)" rx="2" ry="2" />
<text  x="419.73" y="47.5" ></text>
</g>
<g >
<title>iflib_fl_refill (945 samples, 4.77%)</title><rect x="602.8" y="197" width="56.3" height="15.0" fill="rgb(215,196,53)" rx="2" ry="2" />
<text  x="605.80" y="207.5" >iflib..</text>
</g>
<g >
<title>ether_nh_input (11 samples, 0.06%)</title><rect x="18.8" y="213" width="0.6" height="15.0" fill="rgb(254,175,2)" rx="2" ry="2" />
<text  x="21.76" y="223.5" ></text>
</g>
<g >
<title>native_lapic_eoi (11 samples, 0.06%)</title><rect x="1180.8" y="245" width="0.7" height="15.0" fill="rgb(210,39,26)" rx="2" ry="2" />
<text  x="1183.83" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (35 samples, 0.18%)</title><rect x="1098.6" y="229" width="2.1" height="15.0" fill="rgb(241,22,6)" rx="2" ry="2" />
<text  x="1101.64" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (10 samples, 0.05%)</title><rect x="1150.5" y="37" width="0.6" height="15.0" fill="rgb(225,90,36)" rx="2" ry="2" />
<text  x="1153.51" y="47.5" ></text>
</g>
<g >
<title>keg_alloc_slab (79 samples, 0.40%)</title><rect x="630.8" y="133" width="4.7" height="15.0" fill="rgb(239,86,52)" rx="2" ry="2" />
<text  x="633.79" y="143.5" ></text>
</g>
<g >
<title>keg_alloc_slab (2 samples, 0.01%)</title><rect x="634.7" y="85" width="0.1" height="15.0" fill="rgb(250,57,44)" rx="2" ry="2" />
<text  x="637.66" y="95.5" ></text>
</g>
<g >
<title>vm_page_zone_import (6 samples, 0.03%)</title><rect x="1151.1" y="69" width="0.4" height="15.0" fill="rgb(222,34,44)" rx="2" ry="2" />
<text  x="1154.11" y="79.5" ></text>
</g>
<g >
<title>in_localip (600 samples, 3.03%)</title><rect x="460.5" y="85" width="35.7" height="15.0" fill="rgb(234,40,51)" rx="2" ry="2" />
<text  x="463.45" y="95.5" >in_..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (291 samples, 1.47%)</title><rect x="865.5" y="165" width="17.3" height="15.0" fill="rgb(226,74,49)" rx="2" ry="2" />
<text  x="868.46" y="175.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.02%)</title><rect x="1120.4" y="37" width="0.2" height="15.0" fill="rgb(205,56,42)" rx="2" ry="2" />
<text  x="1123.37" y="47.5" ></text>
</g>
<g >
<title>in_lltable_lookup (164 samples, 0.83%)</title><rect x="345.4" y="53" width="9.8" height="15.0" fill="rgb(212,95,14)" rx="2" ry="2" />
<text  x="348.44" y="63.5" ></text>
</g>
<g >
<title>_rm_runlock (71 samples, 0.36%)</title><rect x="528.1" y="53" width="4.2" height="15.0" fill="rgb(252,66,35)" rx="2" ry="2" />
<text  x="531.11" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.01%)</title><rect x="1115.2" y="37" width="0.1" height="15.0" fill="rgb(219,200,51)" rx="2" ry="2" />
<text  x="1118.19" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (124 samples, 0.63%)</title><rect x="1114.2" y="101" width="7.4" height="15.0" fill="rgb(254,168,47)" rx="2" ry="2" />
<text  x="1117.24" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (124 samples, 0.63%)</title><rect x="1114.2" y="165" width="7.4" height="15.0" fill="rgb(248,190,36)" rx="2" ry="2" />
<text  x="1117.24" y="175.5" ></text>
</g>
<g >
<title>memcpy_erms (94 samples, 0.47%)</title><rect x="454.9" y="69" width="5.6" height="15.0" fill="rgb(211,187,38)" rx="2" ry="2" />
<text  x="457.85" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (7,585 samples, 38.28%)</title><rect x="148.5" y="181" width="451.7" height="15.0" fill="rgb(212,204,43)" rx="2" ry="2" />
<text  x="151.48" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>m_freem (492 samples, 2.48%)</title><rect x="882.8" y="165" width="29.3" height="15.0" fill="rgb(210,227,39)" rx="2" ry="2" />
<text  x="885.79" y="175.5" >m_..</text>
</g>
<g >
<title>sleepq_release (3 samples, 0.02%)</title><rect x="67.7" y="181" width="0.2" height="15.0" fill="rgb(219,105,32)" rx="2" ry="2" />
<text  x="70.71" y="191.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (3 samples, 0.02%)</title><rect x="1187.6" y="181" width="0.2" height="15.0" fill="rgb(223,154,36)" rx="2" ry="2" />
<text  x="1190.62" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (197 samples, 0.99%)</title><rect x="1123.0" y="37" width="11.7" height="15.0" fill="rgb(217,26,44)" rx="2" ry="2" />
<text  x="1126.00" y="47.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (7 samples, 0.04%)</title><rect x="635.1" y="69" width="0.4" height="15.0" fill="rgb(237,205,26)" rx="2" ry="2" />
<text  x="638.08" y="79.5" ></text>
</g>
<g >
<title>ether_input (11 samples, 0.06%)</title><rect x="18.8" y="245" width="0.6" height="15.0" fill="rgb(228,181,5)" rx="2" ry="2" />
<text  x="21.76" y="255.5" ></text>
</g>
<g >
<title>wakeup_any (105 samples, 0.53%)</title><rect x="1115.4" y="53" width="6.2" height="15.0" fill="rgb(233,130,13)" rx="2" ry="2" />
<text  x="1118.37" y="63.5" ></text>
</g>
<g >
<title>tc_ticktock (4 samples, 0.02%)</title><rect x="1188.6" y="213" width="0.2" height="15.0" fill="rgb(238,83,18)" rx="2" ry="2" />
<text  x="1191.57" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.04%)</title><rect x="69.0" y="213" width="0.4" height="15.0" fill="rgb(254,198,34)" rx="2" ry="2" />
<text  x="72.02" y="223.5" ></text>
</g>
<g >
<title>ip_findroute (1,636 samples, 8.26%)</title><rect x="496.2" y="85" width="97.4" height="15.0" fill="rgb(254,172,9)" rx="2" ry="2" />
<text  x="499.19" y="95.5" >ip_findroute</text>
</g>
<g >
<title>ip_input (124 samples, 0.63%)</title><rect x="1114.2" y="149" width="7.4" height="15.0" fill="rgb(243,136,38)" rx="2" ry="2" />
<text  x="1117.24" y="159.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.01%)</title><rect x="1098.5" y="229" width="0.1" height="15.0" fill="rgb(238,50,20)" rx="2" ry="2" />
<text  x="1101.52" y="239.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (44 samples, 0.22%)</title><rect x="1178.1" y="229" width="2.6" height="15.0" fill="rgb(250,72,7)" rx="2" ry="2" />
<text  x="1181.09" y="239.5" ></text>
</g>
<g >
<title>fork_exit (18,361 samples, 92.68%)</title><rect x="20.7" y="277" width="1093.5" height="15.0" fill="rgb(210,194,35)" rx="2" ry="2" />
<text  x="23.66" y="287.5" >fork_exit</text>
</g>
<g >
<title>ixgbe_write_reg (8 samples, 0.04%)</title><rect x="1180.2" y="213" width="0.5" height="15.0" fill="rgb(240,70,25)" rx="2" ry="2" />
<text  x="1183.23" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1 (64 samples, 0.32%)</title><rect x="10.0" y="277" width="3.8" height="15.0" fill="rgb(211,139,18)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (501 samples, 2.53%)</title><rect x="1121.6" y="245" width="29.9" height="15.0" fill="rgb(232,81,15)" rx="2" ry="2" />
<text  x="1124.63" y="255.5" >_t..</text>
</g>
<g >
<title>spinlock_exit (17 samples, 0.09%)</title><rect x="1120.6" y="37" width="1.0" height="15.0" fill="rgb(227,42,23)" rx="2" ry="2" />
<text  x="1123.61" y="47.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (3 samples, 0.02%)</title><rect x="20.7" y="245" width="0.1" height="15.0" fill="rgb(222,18,54)" rx="2" ry="2" />
<text  x="23.66" y="255.5" ></text>
</g>
<g >
<title>drain_ring_lockless (5,302 samples, 26.76%)</title><rect x="777.3" y="213" width="315.7" height="15.0" fill="rgb(244,103,40)" rx="2" ry="2" />
<text  x="780.25" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>m_free (451 samples, 2.28%)</title><rect x="885.2" y="149" width="26.9" height="15.0" fill="rgb(216,224,40)" rx="2" ry="2" />
<text  x="888.23" y="159.5" >m..</text>
</g>
<g >
<title>cache_alloc_retry (6 samples, 0.03%)</title><rect x="1151.1" y="197" width="0.4" height="15.0" fill="rgb(234,17,47)" rx="2" ry="2" />
<text  x="1154.11" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (63 samples, 0.32%)</title><rect x="1086.0" y="181" width="3.8" height="15.0" fill="rgb(228,27,42)" rx="2" ry="2" />
<text  x="1089.01" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (164 samples, 0.83%)</title><rect x="659.1" y="197" width="9.8" height="15.0" fill="rgb(230,166,13)" rx="2" ry="2" />
<text  x="662.08" y="207.5" ></text>
</g>
<g >
<title>statclock (9 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.5" height="15.0" fill="rgb(243,148,4)" rx="2" ry="2" />
<text  x="1192.40" y="239.5" ></text>
</g>
<g >
<title>loadtimer (5 samples, 0.03%)</title><rect x="1188.8" y="229" width="0.3" height="15.0" fill="rgb(240,86,51)" rx="2" ry="2" />
<text  x="1191.81" y="239.5" ></text>
</g>
<g >
<title>zone_import (6 samples, 0.03%)</title><rect x="1151.1" y="165" width="0.4" height="15.0" fill="rgb(236,144,44)" rx="2" ry="2" />
<text  x="1154.11" y="175.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (9 samples, 0.05%)</title><rect x="635.8" y="117" width="0.5" height="15.0" fill="rgb(233,41,17)" rx="2" ry="2" />
<text  x="638.80" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (10 samples, 0.05%)</title><rect x="18.8" y="85" width="0.6" height="15.0" fill="rgb(247,17,18)" rx="2" ry="2" />
<text  x="21.81" y="95.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (509 samples, 2.57%)</title><rect x="418.6" y="37" width="30.3" height="15.0" fill="rgb(226,36,5)" rx="2" ry="2" />
<text  x="421.58" y="47.5" >if..</text>
</g>
<g >
<title>_task_fn_rx (11 samples, 0.06%)</title><rect x="18.8" y="277" width="0.6" height="15.0" fill="rgb(211,43,42)" rx="2" ry="2" />
<text  x="21.76" y="287.5" ></text>
</g>
<g >
<title>uma_small_alloc (6 samples, 0.03%)</title><rect x="1151.1" y="133" width="0.4" height="15.0" fill="rgb(250,22,0)" rx="2" ry="2" />
<text  x="1154.11" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (120 samples, 0.61%)</title><rect x="1114.5" y="69" width="7.1" height="15.0" fill="rgb(241,152,7)" rx="2" ry="2" />
<text  x="1117.48" y="79.5" ></text>
</g>
<g >
<title>netmap_rx_irq (14 samples, 0.07%)</title><rect x="772.8" y="213" width="0.8" height="15.0" fill="rgb(225,51,30)" rx="2" ry="2" />
<text  x="775.78" y="223.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (9 samples, 0.05%)</title><rect x="1173.4" y="213" width="0.6" height="15.0" fill="rgb(234,49,5)" rx="2" ry="2" />
<text  x="1176.44" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (12,217 samples, 61.66%)</title><rect x="46.0" y="229" width="727.6" height="15.0" fill="rgb(224,216,12)" rx="2" ry="2" />
<text  x="48.97" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>cpu_idle_acpi (52 samples, 0.26%)</title><rect x="1111.1" y="229" width="3.1" height="15.0" fill="rgb(251,139,53)" rx="2" ry="2" />
<text  x="1114.08" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (18,291 samples, 92.32%)</title><rect x="20.8" y="245" width="1089.4" height="15.0" fill="rgb(228,198,51)" rx="2" ry="2" />
<text  x="23.84" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>_task_fn_tx (5,455 samples, 27.53%)</title><rect x="773.6" y="229" width="324.9" height="15.0" fill="rgb(254,168,31)" rx="2" ry="2" />
<text  x="776.62" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>sleepq_lock (42 samples, 0.21%)</title><rect x="1106.7" y="213" width="2.5" height="15.0" fill="rgb(247,227,21)" rx="2" ry="2" />
<text  x="1109.74" y="223.5" ></text>
</g>
<g >
<title>_rxq_refill_cb (2 samples, 0.01%)</title><rect x="629.2" y="165" width="0.2" height="15.0" fill="rgb(230,0,18)" rx="2" ry="2" />
<text  x="632.24" y="175.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2 samples, 0.01%)</title><rect x="634.1" y="85" width="0.1" height="15.0" fill="rgb(241,50,35)" rx="2" ry="2" />
<text  x="637.13" y="95.5" ></text>
</g>
<g >
<title>softclock_call_cc (9 samples, 0.05%)</title><rect x="1110.2" y="229" width="0.6" height="15.0" fill="rgb(243,104,49)" rx="2" ry="2" />
<text  x="1113.25" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (495 samples, 2.50%)</title><rect x="1121.6" y="85" width="29.5" height="15.0" fill="rgb(246,1,49)" rx="2" ry="2" />
<text  x="1124.63" y="95.5" >et..</text>
</g>
<g >
<title>mac_ifnet_check_transmit (100 samples, 0.50%)</title><rect x="448.9" y="69" width="6.0" height="15.0" fill="rgb(214,55,37)" rx="2" ry="2" />
<text  x="451.90" y="79.5" ></text>
</g>
<g >
<title>ether_output (11 samples, 0.06%)</title><rect x="18.8" y="133" width="0.6" height="15.0" fill="rgb(227,156,52)" rx="2" ry="2" />
<text  x="21.76" y="143.5" ></text>
</g>
<g >
<title>cpu_activeclock (4 samples, 0.02%)</title><rect x="1110.8" y="229" width="0.3" height="15.0" fill="rgb(213,98,49)" rx="2" ry="2" />
<text  x="1113.84" y="239.5" ></text>
</g>
<g >
<title>tc_windup (4 samples, 0.02%)</title><rect x="1188.6" y="197" width="0.2" height="15.0" fill="rgb(253,54,29)" rx="2" ry="2" />
<text  x="1191.57" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (318 samples, 1.61%)</title><rect x="707.7" y="197" width="19.0" height="15.0" fill="rgb(245,220,21)" rx="2" ry="2" />
<text  x="710.74" y="207.5" ></text>
</g>
<g >
<title>vm_phys_alloc_npages (6 samples, 0.03%)</title><rect x="633.7" y="37" width="0.4" height="15.0" fill="rgb(224,38,31)" rx="2" ry="2" />
<text  x="636.71" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (124 samples, 0.63%)</title><rect x="1114.2" y="245" width="7.4" height="15.0" fill="rgb(211,167,30)" rx="2" ry="2" />
<text  x="1117.24" y="255.5" ></text>
</g>
<g >
<title>uma_small_alloc (38 samples, 0.19%)</title><rect x="632.0" y="117" width="2.2" height="15.0" fill="rgb(247,93,41)" rx="2" ry="2" />
<text  x="634.98" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (57 samples, 0.29%)</title><rect x="1100.7" y="229" width="3.4" height="15.0" fill="rgb(223,24,28)" rx="2" ry="2" />
<text  x="1103.72" y="239.5" ></text>
</g>
<g >
<title>sched_clock (4 samples, 0.02%)</title><rect x="1189.7" y="213" width="0.2" height="15.0" fill="rgb(227,11,32)" rx="2" ry="2" />
<text  x="1192.70" y="223.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (5 samples, 0.03%)</title><rect x="1150.2" y="37" width="0.3" height="15.0" fill="rgb(240,112,21)" rx="2" ry="2" />
<text  x="1153.21" y="47.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (8 samples, 0.04%)</title><rect x="45.5" y="229" width="0.5" height="15.0" fill="rgb(246,158,50)" rx="2" ry="2" />
<text  x="48.50" y="239.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (15 samples, 0.08%)</title><rect x="1114.5" y="53" width="0.9" height="15.0" fill="rgb(241,51,10)" rx="2" ry="2" />
<text  x="1117.48" y="63.5" ></text>
</g>
<g >
<title>lock_delay (5 samples, 0.03%)</title><rect x="636.0" y="101" width="0.3" height="15.0" fill="rgb(209,107,18)" rx="2" ry="2" />
<text  x="639.03" y="111.5" ></text>
</g>
<g >
<title>m_pkthdr_init (4 samples, 0.02%)</title><rect x="772.5" y="213" width="0.3" height="15.0" fill="rgb(233,224,44)" rx="2" ry="2" />
<text  x="775.54" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (11 samples, 0.06%)</title><rect x="18.8" y="101" width="0.6" height="15.0" fill="rgb(212,190,37)" rx="2" ry="2" />
<text  x="21.76" y="111.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (2 samples, 0.01%)</title><rect x="629.4" y="165" width="0.1" height="15.0" fill="rgb(250,139,47)" rx="2" ry="2" />
<text  x="632.36" y="175.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (3 samples, 0.02%)</title><rect x="58.3" y="197" width="0.2" height="15.0" fill="rgb(251,74,49)" rx="2" ry="2" />
<text  x="61.30" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (40 samples, 0.20%)</title><rect x="1174.3" y="197" width="2.4" height="15.0" fill="rgb(205,195,51)" rx="2" ry="2" />
<text  x="1177.34" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.03%)</title><rect x="1098.2" y="197" width="0.3" height="15.0" fill="rgb(246,189,22)" rx="2" ry="2" />
<text  x="1101.16" y="207.5" ></text>
</g>
<g >
<title>intr_lookup_source (17 samples, 0.09%)</title><rect x="1183.0" y="261" width="1.0" height="15.0" fill="rgb(229,26,28)" rx="2" ry="2" />
<text  x="1186.03" y="271.5" ></text>
</g>
<g >
<title>cache_alloc (6 samples, 0.03%)</title><rect x="1151.1" y="181" width="0.4" height="15.0" fill="rgb(252,179,15)" rx="2" ry="2" />
<text  x="1154.11" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (26 samples, 0.13%)</title><rect x="1097.0" y="213" width="1.5" height="15.0" fill="rgb(249,116,5)" rx="2" ry="2" />
<text  x="1099.97" y="223.5" ></text>
</g>
<g >
<title>ether_output (124 samples, 0.63%)</title><rect x="1114.2" y="117" width="7.4" height="15.0" fill="rgb(249,89,11)" rx="2" ry="2" />
<text  x="1117.24" y="127.5" ></text>
</g>
<g >
<title>cache_alloc (112 samples, 0.57%)</title><rect x="629.7" y="165" width="6.6" height="15.0" fill="rgb(213,38,46)" rx="2" ry="2" />
<text  x="632.66" y="175.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (563 samples, 2.84%)</title><rect x="1015.6" y="165" width="33.5" height="15.0" fill="rgb(238,137,2)" rx="2" ry="2" />
<text  x="1018.61" y="175.5" >bu..</text>
</g>
<g >
<title>pmap_kextract (38 samples, 0.19%)</title><rect x="909.8" y="117" width="2.3" height="15.0" fill="rgb(219,211,43)" rx="2" ry="2" />
<text  x="912.83" y="127.5" ></text>
</g>
<g >
<title>ip_tryforward (11 samples, 0.06%)</title><rect x="18.8" y="149" width="0.6" height="15.0" fill="rgb(233,213,36)" rx="2" ry="2" />
<text  x="21.76" y="159.5" ></text>
</g>
<g >
<title>vm_page_alloc_domain_after (6 samples, 0.03%)</title><rect x="1151.1" y="117" width="0.4" height="15.0" fill="rgb(205,47,15)" rx="2" ry="2" />
<text  x="1154.11" y="127.5" ></text>
</g>
<g >
<title>wakeup_any (10 samples, 0.05%)</title><rect x="18.8" y="69" width="0.6" height="15.0" fill="rgb(248,197,54)" rx="2" ry="2" />
<text  x="21.81" y="79.5" ></text>
</g>
<g >
<title>sched_idletd (57 samples, 0.29%)</title><rect x="1110.8" y="261" width="3.4" height="15.0" fill="rgb(230,226,48)" rx="2" ry="2" />
<text  x="1113.79" y="271.5" ></text>
</g>
<g >
<title>iflib_txq_drain (4 samples, 0.02%)</title><rect x="1114.2" y="53" width="0.3" height="15.0" fill="rgb(237,185,43)" rx="2" ry="2" />
<text  x="1117.24" y="63.5" ></text>
</g>
<g >
<title>zone_import (21 samples, 0.11%)</title><rect x="634.2" y="101" width="1.3" height="15.0" fill="rgb(205,225,2)" rx="2" ry="2" />
<text  x="637.25" y="111.5" ></text>
</g>
<g >
<title>pagezero_erms (23 samples, 0.12%)</title><rect x="632.2" y="101" width="1.3" height="15.0" fill="rgb(240,110,27)" rx="2" ry="2" />
<text  x="635.16" y="111.5" ></text>
</g>
<g >
<title>sleepq_lock (79 samples, 0.40%)</title><rect x="1115.4" y="37" width="4.7" height="15.0" fill="rgb(223,153,39)" rx="2" ry="2" />
<text  x="1118.37" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (495 samples, 2.50%)</title><rect x="1121.6" y="181" width="29.5" height="15.0" fill="rgb(230,229,53)" rx="2" ry="2" />
<text  x="1124.63" y="191.5" >et..</text>
</g>
<g >
<title>netisr_dispatch_src (495 samples, 2.50%)</title><rect x="1121.6" y="149" width="29.5" height="15.0" fill="rgb(243,64,25)" rx="2" ry="2" />
<text  x="1124.63" y="159.5" >ne..</text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.05%)</title><rect x="18.8" y="37" width="0.6" height="15.0" fill="rgb(215,75,20)" rx="2" ry="2" />
<text  x="21.81" y="47.5" ></text>
</g>
<g >
<title>iflib_get_ifp (29 samples, 0.15%)</title><rect x="692.0" y="181" width="1.7" height="15.0" fill="rgb(229,177,50)" rx="2" ry="2" />
<text  x="694.96" y="191.5" ></text>
</g>
<g >
<title>mac_ifnet_create_mbuf (62 samples, 0.31%)</title><rect x="593.6" y="149" width="3.7" height="15.0" fill="rgb(209,172,26)" rx="2" ry="2" />
<text  x="596.63" y="159.5" ></text>
</g>
<g >
<title>handleevents (83 samples, 0.42%)</title><rect x="1185.1" y="245" width="4.9" height="15.0" fill="rgb(240,44,45)" rx="2" ry="2" />
<text  x="1188.06" y="255.5" ></text>
</g>
<g >
<title>cache_alloc (9 samples, 0.05%)</title><rect x="633.6" y="69" width="0.5" height="15.0" fill="rgb(237,118,5)" rx="2" ry="2" />
<text  x="636.59" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.02%)</title><rect x="641.5" y="181" width="0.2" height="15.0" fill="rgb(226,59,31)" rx="2" ry="2" />
<text  x="644.51" y="191.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (9 samples, 0.05%)</title><rect x="61.8" y="197" width="0.6" height="15.0" fill="rgb(230,90,33)" rx="2" ry="2" />
<text  x="64.82" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (14 samples, 0.07%)</title><rect x="1014.8" y="165" width="0.8" height="15.0" fill="rgb(207,49,46)" rx="2" ry="2" />
<text  x="1017.77" y="175.5" ></text>
</g>
<g >
<title>zone_alloc_item (21 samples, 0.11%)</title><rect x="634.2" y="117" width="1.3" height="15.0" fill="rgb(230,140,53)" rx="2" ry="2" />
<text  x="637.25" y="127.5" ></text>
</g>
<g >
<title>cpu_idle (56 samples, 0.28%)</title><rect x="1110.8" y="245" width="3.4" height="15.0" fill="rgb(230,181,4)" rx="2" ry="2" />
<text  x="1113.84" y="255.5" ></text>
</g>
<g >
<title>atkbd_timeout (9 samples, 0.05%)</title><rect x="1110.2" y="213" width="0.6" height="15.0" fill="rgb(214,193,0)" rx="2" ry="2" />
<text  x="1113.25" y="223.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (52 samples, 0.26%)</title><rect x="1111.1" y="213" width="3.1" height="15.0" fill="rgb(218,0,51)" rx="2" ry="2" />
<text  x="1114.08" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (619 samples, 3.12%)</title><rect x="1049.1" y="165" width="36.9" height="15.0" fill="rgb(242,41,39)" rx="2" ry="2" />
<text  x="1052.14" y="175.5" >ixg..</text>
</g>
<g >
<title>uma_zalloc_arg (292 samples, 1.47%)</title><rect x="641.7" y="181" width="17.4" height="15.0" fill="rgb(225,158,30)" rx="2" ry="2" />
<text  x="644.69" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (10 samples, 0.05%)</title><rect x="18.8" y="53" width="0.6" height="15.0" fill="rgb(248,0,2)" rx="2" ry="2" />
<text  x="21.81" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (84 samples, 0.42%)</title><rect x="636.5" y="181" width="5.0" height="15.0" fill="rgb(218,26,18)" rx="2" ry="2" />
<text  x="639.51" y="191.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (30 samples, 0.15%)</title><rect x="43.7" y="229" width="1.8" height="15.0" fill="rgb(254,170,38)" rx="2" ry="2" />
<text  x="46.71" y="239.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (14 samples, 0.07%)</title><rect x="635.5" y="133" width="0.8" height="15.0" fill="rgb(210,15,29)" rx="2" ry="2" />
<text  x="638.50" y="143.5" ></text>
</g>
<g >
<title>if_inc_counter (18 samples, 0.09%)</title><rect x="844.3" y="181" width="1.0" height="15.0" fill="rgb(212,212,32)" rx="2" ry="2" />
<text  x="847.25" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.03%)</title><rect x="772.2" y="197" width="0.3" height="15.0" fill="rgb(222,15,35)" rx="2" ry="2" />
<text  x="775.19" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (299 samples, 1.51%)</title><rect x="1031.2" y="133" width="17.8" height="15.0" fill="rgb(211,128,15)" rx="2" ry="2" />
<text  x="1034.15" y="143.5" ></text>
</g>
<g >
<title>intr_event_handle (404 samples, 2.04%)</title><rect x="1157.4" y="261" width="24.1" height="15.0" fill="rgb(235,154,5)" rx="2" ry="2" />
<text  x="1160.42" y="271.5" >i..</text>
</g>
<g >
<title>_rm_rlock (255 samples, 1.29%)</title><rect x="476.5" y="69" width="15.2" height="15.0" fill="rgb(225,104,21)" rx="2" ry="2" />
<text  x="479.53" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (209 samples, 1.05%)</title><rect x="1165.6" y="229" width="12.5" height="15.0" fill="rgb(233,82,50)" rx="2" ry="2" />
<text  x="1168.64" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (11 samples, 0.06%)</title><rect x="1176.1" y="181" width="0.6" height="15.0" fill="rgb(247,126,27)" rx="2" ry="2" />
<text  x="1179.06" y="191.5" ></text>
</g>
<g >
<title>ether_demux (495 samples, 2.50%)</title><rect x="1121.6" y="165" width="29.5" height="15.0" fill="rgb(242,145,47)" rx="2" ry="2" />
<text  x="1124.63" y="175.5" >et..</text>
</g>
<g >
<title>cache_alloc (6 samples, 0.03%)</title><rect x="1151.1" y="85" width="0.4" height="15.0" fill="rgb(214,178,40)" rx="2" ry="2" />
<text  x="1154.11" y="95.5" ></text>
</g>
<g >
<title>if_getcapenable (4 samples, 0.02%)</title><rect x="1093.0" y="213" width="0.3" height="15.0" fill="rgb(210,95,20)" rx="2" ry="2" />
<text  x="1096.04" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (6,492 samples, 32.77%)</title><rect x="207.0" y="133" width="386.6" height="15.0" fill="rgb(250,80,4)" rx="2" ry="2" />
<text  x="209.96" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_rxeof (11 samples, 0.06%)</title><rect x="18.8" y="261" width="0.6" height="15.0" fill="rgb(207,92,24)" rx="2" ry="2" />
<text  x="21.76" y="271.5" ></text>
</g>
<g >
<title>intr_execute_handlers (512 samples, 2.58%)</title><rect x="1151.5" y="277" width="30.5" height="15.0" fill="rgb(213,148,36)" rx="2" ry="2" />
<text  x="1154.46" y="287.5" >in..</text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.01%)</title><rect x="1189.1" y="229" width="0.1" height="15.0" fill="rgb(216,164,38)" rx="2" ry="2" />
<text  x="1192.11" y="239.5" ></text>
</g>
<g >
<title>m_pkthdr_init (167 samples, 0.84%)</title><rect x="693.7" y="197" width="9.9" height="15.0" fill="rgb(220,161,26)" rx="2" ry="2" />
<text  x="696.69" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (69 samples, 0.35%)</title><rect x="1174.0" y="213" width="4.1" height="15.0" fill="rgb(217,82,50)" rx="2" ry="2" />
<text  x="1176.98" y="223.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (24 samples, 0.12%)</title><rect x="42.3" y="229" width="1.4" height="15.0" fill="rgb(240,119,26)" rx="2" ry="2" />
<text  x="45.28" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (501 samples, 2.53%)</title><rect x="1121.6" y="229" width="29.9" height="15.0" fill="rgb(240,142,2)" rx="2" ry="2" />
<text  x="1124.63" y="239.5" >if..</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (3 samples, 0.02%)</title><rect x="636.3" y="181" width="0.2" height="15.0" fill="rgb(213,146,3)" rx="2" ry="2" />
<text  x="639.33" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.02%)</title><rect x="1189.2" y="229" width="0.2" height="15.0" fill="rgb(248,177,29)" rx="2" ry="2" />
<text  x="1192.23" y="239.5" ></text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.01%)</title><rect x="600.2" y="197" width="0.2" height="15.0" fill="rgb(213,101,53)" rx="2" ry="2" />
<text  x="603.24" y="207.5" ></text>
</g>
<g >
<title>zone_alloc_limit (2 samples, 0.01%)</title><rect x="630.4" y="149" width="0.2" height="15.0" fill="rgb(249,153,36)" rx="2" ry="2" />
<text  x="633.44" y="159.5" ></text>
</g>
<g >
<title>zone_import (97 samples, 0.49%)</title><rect x="630.6" y="149" width="5.7" height="15.0" fill="rgb(248,70,46)" rx="2" ry="2" />
<text  x="633.55" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (11 samples, 0.06%)</title><rect x="18.8" y="181" width="0.6" height="15.0" fill="rgb(212,26,20)" rx="2" ry="2" />
<text  x="21.76" y="191.5" ></text>
</g>
<g >
<title>lock_delay (12 samples, 0.06%)</title><rect x="1114.5" y="37" width="0.7" height="15.0" fill="rgb(219,141,45)" rx="2" ry="2" />
<text  x="1117.48" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (112 samples, 0.57%)</title><rect x="62.4" y="197" width="6.6" height="15.0" fill="rgb(247,103,18)" rx="2" ry="2" />
<text  x="65.35" y="207.5" ></text>
</g>
<g >
<title>ether_output (2,777 samples, 14.02%)</title><rect x="295.1" y="85" width="165.4" height="15.0" fill="rgb(246,155,26)" rx="2" ry="2" />
<text  x="298.05" y="95.5" >ether_output</text>
</g>
<g >
<title>spinlock_enter (9 samples, 0.05%)</title><rect x="1108.7" y="197" width="0.5" height="15.0" fill="rgb(232,66,45)" rx="2" ry="2" />
<text  x="1111.70" y="207.5" ></text>
</g>
<g >
<title>iflib_encap (2,920 samples, 14.74%)</title><rect x="912.1" y="181" width="173.9" height="15.0" fill="rgb(208,48,15)" rx="2" ry="2" />
<text  x="915.09" y="191.5" >iflib_encap</text>
</g>
<g >
<title>ether_output (495 samples, 2.50%)</title><rect x="1121.6" y="101" width="29.5" height="15.0" fill="rgb(228,46,11)" rx="2" ry="2" />
<text  x="1124.63" y="111.5" >et..</text>
</g>
<g >
<title>ether_input (124 samples, 0.63%)</title><rect x="1114.2" y="229" width="7.4" height="15.0" fill="rgb(229,40,25)" rx="2" ry="2" />
<text  x="1117.24" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (6 samples, 0.03%)</title><rect x="599.9" y="149" width="0.3" height="15.0" fill="rgb(216,175,54)" rx="2" ry="2" />
<text  x="602.88" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (19 samples, 0.10%)</title><rect x="1172.3" y="213" width="1.1" height="15.0" fill="rgb(208,48,24)" rx="2" ry="2" />
<text  x="1175.31" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (495 samples, 2.50%)</title><rect x="1121.6" y="117" width="29.5" height="15.0" fill="rgb(242,131,43)" rx="2" ry="2" />
<text  x="1124.63" y="127.5" >ip..</text>
</g>
<g >
<title>_ck_epoch_addref (5 samples, 0.03%)</title><rect x="43.4" y="213" width="0.3" height="15.0" fill="rgb(250,42,5)" rx="2" ry="2" />
<text  x="46.41" y="223.5" ></text>
</g>
<g >
<title>bus_dmamap_load (4 samples, 0.02%)</title><rect x="629.2" y="181" width="0.3" height="15.0" fill="rgb(216,214,0)" rx="2" ry="2" />
<text  x="632.24" y="191.5" ></text>
</g>
<g >
<title>softclock (9 samples, 0.05%)</title><rect x="1110.2" y="245" width="0.6" height="15.0" fill="rgb(222,79,24)" rx="2" ry="2" />
<text  x="1113.25" y="255.5" ></text>
</g>
<g >
<title>soft_get_config (10 samples, 0.05%)</title><rect x="1187.8" y="181" width="0.6" height="15.0" fill="rgb(248,16,38)" rx="2" ry="2" />
<text  x="1190.80" y="191.5" ></text>
</g>
<g >
<title>tsc_get_timecount_low_lfence (2 samples, 0.01%)</title><rect x="1184.9" y="229" width="0.2" height="15.0" fill="rgb(251,130,52)" rx="2" ry="2" />
<text  x="1187.94" y="239.5" ></text>
</g>
<g >
<title>uma_zfree_arg (351 samples, 1.77%)</title><rect x="891.2" y="133" width="20.9" height="15.0" fill="rgb(223,86,31)" rx="2" ry="2" />
<text  x="894.19" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (18,294 samples, 92.34%)</title><rect x="20.7" y="261" width="1089.5" height="15.0" fill="rgb(213,43,32)" rx="2" ry="2" />
<text  x="23.66" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>timercb (93 samples, 0.47%)</title><rect x="1184.5" y="261" width="5.5" height="15.0" fill="rgb(210,223,7)" rx="2" ry="2" />
<text  x="1187.46" y="271.5" ></text>
</g>
<g >
<title>lock_delay (6 samples, 0.03%)</title><rect x="1151.1" y="37" width="0.4" height="15.0" fill="rgb(224,17,11)" rx="2" ry="2" />
<text  x="1154.11" y="47.5" ></text>
</g>
<g >
<title>iflib_encap (4 samples, 0.02%)</title><rect x="1114.2" y="37" width="0.3" height="15.0" fill="rgb(225,30,2)" rx="2" ry="2" />
<text  x="1117.24" y="47.5" ></text>
</g>
<g >
<title>mac_mbuf_init (69 samples, 0.35%)</title><rect x="703.6" y="197" width="4.1" height="15.0" fill="rgb(212,136,38)" rx="2" ry="2" />
<text  x="706.63" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (495 samples, 2.50%)</title><rect x="1121.6" y="53" width="29.5" height="15.0" fill="rgb(254,88,13)" rx="2" ry="2" />
<text  x="1124.63" y="63.5" >gr..</text>
</g>
<g >
<title>gtaskqueue_thread_loop (501 samples, 2.53%)</title><rect x="1121.6" y="277" width="29.9" height="15.0" fill="rgb(249,226,43)" rx="2" ry="2" />
<text  x="1124.63" y="287.5" >gt..</text>
</g>
<g >
<title>ether_demux (11 samples, 0.06%)</title><rect x="18.8" y="197" width="0.6" height="15.0" fill="rgb(244,133,49)" rx="2" ry="2" />
<text  x="21.76" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (124 samples, 0.63%)</title><rect x="1114.2" y="261" width="7.4" height="15.0" fill="rgb(209,38,49)" rx="2" ry="2" />
<text  x="1117.24" y="271.5" ></text>
</g>
<g >
<title>ether_demux (6,792 samples, 34.28%)</title><rect x="189.1" y="149" width="404.5" height="15.0" fill="rgb(205,161,17)" rx="2" ry="2" />
<text  x="192.10" y="159.5" >ether_demux</text>
</g>
<g >
<title>uma_zfree_arg (2 samples, 0.01%)</title><rect x="630.3" y="149" width="0.1" height="15.0" fill="rgb(236,221,12)" rx="2" ry="2" />
<text  x="633.32" y="159.5" ></text>
</g>
<g >
<title>lapic_handle_timer (100 samples, 0.50%)</title><rect x="1184.0" y="277" width="6.0" height="15.0" fill="rgb(219,62,20)" rx="2" ry="2" />
<text  x="1187.04" y="287.5" ></text>
</g>
<g >
<title>sleepq_signal (5 samples, 0.03%)</title><rect x="1177.1" y="197" width="0.3" height="15.0" fill="rgb(212,115,35)" rx="2" ry="2" />
<text  x="1180.08" y="207.5" ></text>
</g>
<g >
<title>rt_tables_get_rnh (106 samples, 0.54%)</title><rect x="587.3" y="53" width="6.3" height="15.0" fill="rgb(233,146,45)" rx="2" ry="2" />
<text  x="590.31" y="63.5" ></text>
</g>
<g >
<title>binuptime (6 samples, 0.03%)</title><rect x="1184.7" y="245" width="0.4" height="15.0" fill="rgb(226,172,41)" rx="2" ry="2" />
<text  x="1187.70" y="255.5" ></text>
</g>
<g >
<title>ip_tryforward (5,870 samples, 29.63%)</title><rect x="244.0" y="101" width="349.6" height="15.0" fill="rgb(246,174,39)" rx="2" ry="2" />
<text  x="247.01" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>gtaskqueue_run_locked (124 samples, 0.63%)</title><rect x="1114.2" y="277" width="7.4" height="15.0" fill="rgb(215,39,29)" rx="2" ry="2" />
<text  x="1117.24" y="287.5" ></text>
</g>
<g >
<title>pmap_kextract (34 samples, 0.17%)</title><rect x="1046.9" y="117" width="2.1" height="15.0" fill="rgb(234,117,27)" rx="2" ry="2" />
<text  x="1049.94" y="127.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.04%)</title><rect x="843.8" y="181" width="0.5" height="15.0" fill="rgb(221,190,36)" rx="2" ry="2" />
<text  x="846.78" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (31 samples, 0.16%)</title><rect x="1186.7" y="197" width="1.9" height="15.0" fill="rgb(214,32,32)" rx="2" ry="2" />
<text  x="1189.72" y="207.5" ></text>
</g>
<g >
<title>m_adj (85 samples, 0.43%)</title><rect x="201.2" y="133" width="5.0" height="15.0" fill="rgb(243,215,16)" rx="2" ry="2" />
<text  x="204.19" y="143.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (23 samples, 0.12%)</title><rect x="1121.6" y="37" width="1.4" height="15.0" fill="rgb(238,8,52)" rx="2" ry="2" />
<text  x="1124.63" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (11 samples, 0.06%)</title><rect x="18.8" y="229" width="0.6" height="15.0" fill="rgb(213,100,0)" rx="2" ry="2" />
<text  x="21.76" y="239.5" ></text>
</g>
<g >
<title>lock_delay (3 samples, 0.02%)</title><rect x="45.7" y="213" width="0.2" height="15.0" fill="rgb(245,155,27)" rx="2" ry="2" />
<text  x="48.74" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (5 samples, 0.03%)</title><rect x="67.9" y="181" width="0.3" height="15.0" fill="rgb(231,108,40)" rx="2" ry="2" />
<text  x="70.89" y="191.5" ></text>
</g>
<g >
<title>ether_input (7,779 samples, 39.26%)</title><rect x="136.9" y="197" width="463.3" height="15.0" fill="rgb(212,107,20)" rx="2" ry="2" />
<text  x="139.92" y="207.5" >ether_input</text>
</g>
<g >
<title>tcp_lro_flush_all (36 samples, 0.18%)</title><rect x="769.5" y="197" width="2.2" height="15.0" fill="rgb(240,20,0)" rx="2" ry="2" />
<text  x="772.51" y="207.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (32 samples, 0.16%)</title><rect x="907.9" y="117" width="1.9" height="15.0" fill="rgb(221,58,8)" rx="2" ry="2" />
<text  x="910.92" y="127.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (713 samples, 3.60%)</title><rect x="727.0" y="197" width="42.5" height="15.0" fill="rgb(249,224,13)" rx="2" ry="2" />
<text  x="730.04" y="207.5" >rxd..</text>
</g>
<g >
<title>hardclock (51 samples, 0.26%)</title><rect x="1185.8" y="229" width="3.0" height="15.0" fill="rgb(246,186,3)" rx="2" ry="2" />
<text  x="1188.77" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (5 samples, 0.03%)</title><rect x="631.6" y="117" width="0.3" height="15.0" fill="rgb(210,138,35)" rx="2" ry="2" />
<text  x="634.63" y="127.5" ></text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.02%)</title><rect x="1180.0" y="213" width="0.2" height="15.0" fill="rgb(208,39,26)" rx="2" ry="2" />
<text  x="1182.99" y="223.5" ></text>
</g>
<g >
<title>wakeup (103 samples, 0.52%)</title><rect x="1104.1" y="229" width="6.1" height="15.0" fill="rgb(251,136,35)" rx="2" ry="2" />
<text  x="1107.11" y="239.5" ></text>
</g>
<g >
<title>_rm_rlock (179 samples, 0.90%)</title><rect x="517.5" y="53" width="10.6" height="15.0" fill="rgb(240,69,27)" rx="2" ry="2" />
<text  x="520.45" y="63.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (307 samples, 1.55%)</title><rect x="50.7" y="213" width="18.3" height="15.0" fill="rgb(214,160,14)" rx="2" ry="2" />
<text  x="53.74" y="223.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (1,121 samples, 5.66%)</title><rect x="845.3" y="181" width="66.8" height="15.0" fill="rgb(238,28,7)" rx="2" ry="2" />
<text  x="848.33" y="191.5" >iflib_c..</text>
</g>
<g >
<title>ether_output_frame (1,527 samples, 7.71%)</title><rect x="357.9" y="69" width="91.0" height="15.0" fill="rgb(227,16,20)" rx="2" ry="2" />
<text  x="360.95" y="79.5" >ether_outp..</text>
</g>
<g >
<title>sleepq_lock (85 samples, 0.43%)</title><rect x="62.7" y="181" width="5.0" height="15.0" fill="rgb(231,138,35)" rx="2" ry="2" />
<text  x="65.65" y="191.5" ></text>
</g>
<g >
<title>Xtimerint (4 samples, 0.02%)</title><rect x="18.3" y="277" width="0.2" height="15.0" fill="rgb(222,34,32)" rx="2" ry="2" />
<text  x="21.28" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch (20 samples, 0.10%)</title><rect x="147.3" y="181" width="1.2" height="15.0" fill="rgb(239,86,30)" rx="2" ry="2" />
<text  x="150.29" y="191.5" ></text>
</g>
<g >
<title>tsc_get_config (3 samples, 0.02%)</title><rect x="1188.4" y="181" width="0.2" height="15.0" fill="rgb(226,53,38)" rx="2" ry="2" />
<text  x="1191.39" y="191.5" ></text>
</g>
<g >
<title>iflib_rxeof (11,790 samples, 59.51%)</title><rect x="69.4" y="213" width="702.3" height="15.0" fill="rgb(223,100,40)" rx="2" ry="2" />
<text  x="72.44" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>spinlock_exit (12 samples, 0.06%)</title><rect x="1177.4" y="197" width="0.7" height="15.0" fill="rgb(207,53,0)" rx="2" ry="2" />
<text  x="1180.37" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,382 samples, 6.98%)</title><rect x="366.6" y="53" width="82.3" height="15.0" fill="rgb(246,59,20)" rx="2" ry="2" />
<text  x="369.58" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>ip_input (6,328 samples, 31.94%)</title><rect x="216.7" y="117" width="376.9" height="15.0" fill="rgb(232,171,13)" rx="2" ry="2" />
<text  x="219.73" y="127.5" >ip_input</text>
</g>
<g >
<title>sleepq_release (6 samples, 0.03%)</title><rect x="1176.7" y="197" width="0.4" height="15.0" fill="rgb(241,147,53)" rx="2" ry="2" />
<text  x="1179.72" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (20 samples, 0.10%)</title><rect x="600.4" y="197" width="1.1" height="15.0" fill="rgb(206,135,24)" rx="2" ry="2" />
<text  x="603.36" y="207.5" ></text>
</g>
<g >
<title>iflib_fast_intr (332 samples, 1.68%)</title><rect x="1160.9" y="245" width="19.8" height="15.0" fill="rgb(239,96,47)" rx="2" ry="2" />
<text  x="1163.93" y="255.5" ></text>
</g>
<g >
<title>drain_ring_lockless (4 samples, 0.02%)</title><rect x="1114.2" y="69" width="0.3" height="15.0" fill="rgb(237,16,1)" rx="2" ry="2" />
<text  x="1117.24" y="79.5" ></text>
</g>
<g >
<title>iflib_fl_refill (6 samples, 0.03%)</title><rect x="1151.1" y="213" width="0.4" height="15.0" fill="rgb(251,0,41)" rx="2" ry="2" />
<text  x="1154.11" y="223.5" ></text>
</g>
<g >
<title>acpi_cpu_idle_mwait (49 samples, 0.25%)</title><rect x="1111.3" y="197" width="2.9" height="15.0" fill="rgb(233,181,46)" rx="2" ry="2" />
<text  x="1114.26" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (11 samples, 0.06%)</title><rect x="18.8" y="117" width="0.6" height="15.0" fill="rgb(224,18,10)" rx="2" ry="2" />
<text  x="21.76" y="127.5" ></text>
</g>
<g >
<title>rn_match (923 samples, 4.66%)</title><rect x="532.3" y="53" width="55.0" height="15.0" fill="rgb(230,111,52)" rx="2" ry="2" />
<text  x="535.34" y="63.5" >rn_ma..</text>
</g>
<g >
<title>spinlock_exit (42 samples, 0.21%)</title><rect x="59.3" y="197" width="2.5" height="15.0" fill="rgb(230,100,27)" rx="2" ry="2" />
<text  x="62.32" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (501 samples, 2.53%)</title><rect x="1121.6" y="261" width="29.9" height="15.0" fill="rgb(224,113,51)" rx="2" ry="2" />
<text  x="1124.63" y="271.5" >gt..</text>
</g>
<g >
<title>sleepq_release (5 samples, 0.03%)</title><rect x="1120.1" y="37" width="0.3" height="15.0" fill="rgb(214,91,25)" rx="2" ry="2" />
<text  x="1123.08" y="47.5" ></text>
</g>
<g >
<title>all (19,812 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(208,90,21)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>spinlock_exit (14 samples, 0.07%)</title><rect x="68.2" y="181" width="0.8" height="15.0" fill="rgb(244,32,33)" rx="2" ry="2" />
<text  x="71.19" y="191.5" ></text>
</g>
<g >
<title>_bus_dmamap_load_mbuf_sg (456 samples, 2.30%)</title><rect x="1021.8" y="149" width="27.2" height="15.0" fill="rgb(237,62,43)" rx="2" ry="2" />
<text  x="1024.80" y="159.5" >_..</text>
</g>
<g >
<title>ether_nh_input (124 samples, 0.63%)</title><rect x="1114.2" y="197" width="7.4" height="15.0" fill="rgb(215,151,0)" rx="2" ry="2" />
<text  x="1117.24" y="207.5" ></text>
</g>
<g >
<title>handleevents (4 samples, 0.02%)</title><rect x="1110.8" y="213" width="0.3" height="15.0" fill="rgb(244,211,12)" rx="2" ry="2" />
<text  x="1113.84" y="223.5" ></text>
</g>
<g >
<title>vm_page_zone_import (8 samples, 0.04%)</title><rect x="633.6" y="53" width="0.5" height="15.0" fill="rgb(235,17,6)" rx="2" ry="2" />
<text  x="636.59" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (6 samples, 0.03%)</title><rect x="1151.1" y="53" width="0.4" height="15.0" fill="rgb(226,23,5)" rx="2" ry="2" />
<text  x="1154.11" y="63.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="635.4" y="53" width="0.1" height="15.0" fill="rgb(221,38,12)" rx="2" ry="2" />
<text  x="638.38" y="63.5" ></text>
</g>
<g >
<title>memmove_erms (46 samples, 0.23%)</title><rect x="355.2" y="53" width="2.7" height="15.0" fill="rgb(213,102,38)" rx="2" ry="2" />
<text  x="358.21" y="63.5" ></text>
</g>
<g >
<title>lapic_handle_intr (35 samples, 0.18%)</title><rect x="1182.0" y="277" width="2.0" height="15.0" fill="rgb(238,160,19)" rx="2" ry="2" />
<text  x="1184.96" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (124 samples, 0.63%)</title><rect x="1114.2" y="213" width="7.4" height="15.0" fill="rgb(228,201,1)" rx="2" ry="2" />
<text  x="1117.24" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (473 samples, 2.39%)</title><rect x="388.6" y="37" width="28.1" height="15.0" fill="rgb(236,221,7)" rx="2" ry="2" />
<text  x="391.56" y="47.5" >g..</text>
</g>
<g >
<title>arpresolve (476 samples, 2.40%)</title><rect x="329.6" y="69" width="28.3" height="15.0" fill="rgb(224,153,3)" rx="2" ry="2" />
<text  x="332.60" y="79.5" >ar..</text>
</g>
<g >
<title>keg_fetch_free_slab (12 samples, 0.06%)</title><rect x="634.8" y="85" width="0.7" height="15.0" fill="rgb(232,192,7)" rx="2" ry="2" />
<text  x="637.78" y="95.5" ></text>
</g>
<g >
<title>ithread_loop (9 samples, 0.05%)</title><rect x="1110.2" y="261" width="0.6" height="15.0" fill="rgb(239,84,29)" rx="2" ry="2" />
<text  x="1113.25" y="271.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.01%)</title><rect x="1180.7" y="245" width="0.1" height="15.0" fill="rgb(207,124,49)" rx="2" ry="2" />
<text  x="1183.71" y="255.5" ></text>
</g>
<g >
<title>iflib_if_transmit (495 samples, 2.50%)</title><rect x="1121.6" y="69" width="29.5" height="15.0" fill="rgb(215,88,53)" rx="2" ry="2" />
<text  x="1124.63" y="79.5" >if..</text>
</g>
<g >
<title>iflib_if_transmit (124 samples, 0.63%)</title><rect x="1114.2" y="85" width="7.4" height="15.0" fill="rgb(239,71,6)" rx="2" ry="2" />
<text  x="1117.24" y="95.5" ></text>
</g>
<g >
<title>ip_input (495 samples, 2.50%)</title><rect x="1121.6" y="133" width="29.5" height="15.0" fill="rgb(238,201,43)" rx="2" ry="2" />
<text  x="1124.63" y="143.5" >ip..</text>
</g>
<g >
<title>msi_vector (8 samples, 0.04%)</title><rect x="1181.5" y="261" width="0.5" height="15.0" fill="rgb(226,36,42)" rx="2" ry="2" />
<text  x="1184.48" y="271.5" ></text>
</g>
<g >
<title>memcmp (43 samples, 0.22%)</title><rect x="597.3" y="149" width="2.6" height="15.0" fill="rgb(230,119,38)" rx="2" ry="2" />
<text  x="600.32" y="159.5" ></text>
</g>
<g >
<title>ether_demux (124 samples, 0.63%)</title><rect x="1114.2" y="181" width="7.4" height="15.0" fill="rgb(247,214,42)" rx="2" ry="2" />
<text  x="1117.24" y="191.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (3 samples, 0.02%)</title><rect x="1049.0" y="149" width="0.1" height="15.0" fill="rgb(251,179,1)" rx="2" ry="2" />
<text  x="1051.96" y="159.5" ></text>
</g>
<g >
<title>Xtimerint_pti (4 samples, 0.02%)</title><rect x="18.5" y="277" width="0.3" height="15.0" fill="rgb(243,81,33)" rx="2" ry="2" />
<text  x="21.52" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (417 samples, 2.10%)</title><rect x="668.9" y="197" width="24.8" height="15.0" fill="rgb(205,140,29)" rx="2" ry="2" />
<text  x="671.85" y="207.5" >i..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (15 samples, 0.08%)</title><rect x="771.7" y="213" width="0.8" height="15.0" fill="rgb(251,75,6)" rx="2" ry="2" />
<text  x="774.65" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (51 samples, 0.26%)</title><rect x="1089.8" y="181" width="3.0" height="15.0" fill="rgb(250,96,22)" rx="2" ry="2" />
<text  x="1092.76" y="191.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (75 samples, 0.38%)</title><rect x="13.8" y="277" width="4.5" height="15.0" fill="rgb(213,87,28)" rx="2" ry="2" />
<text  x="16.81" y="287.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (61 samples, 0.31%)</title><rect x="1093.3" y="213" width="3.7" height="15.0" fill="rgb(205,5,18)" rx="2" ry="2" />
<text  x="1096.33" y="223.5" ></text>
</g>
<g >
<title>_thread_lock (2 samples, 0.01%)</title><rect x="1110.9" y="181" width="0.1" height="15.0" fill="rgb(231,128,19)" rx="2" ry="2" />
<text  x="1113.90" y="191.5" ></text>
</g>
<g >
<title>ip_input (11 samples, 0.06%)</title><rect x="18.8" y="165" width="0.6" height="15.0" fill="rgb(254,53,2)" rx="2" ry="2" />
<text  x="21.76" y="175.5" ></text>
</g>
<g >
<title>fib4_lookup (1,540 samples, 7.77%)</title><rect x="501.9" y="69" width="91.7" height="15.0" fill="rgb(206,30,19)" rx="2" ry="2" />
<text  x="504.90" y="79.5" >fib4_lookup</text>
</g>
<g >
<title>ether_input (495 samples, 2.50%)</title><rect x="1121.6" y="213" width="29.5" height="15.0" fill="rgb(206,36,21)" rx="2" ry="2" />
<text  x="1124.63" y="223.5" >et..</text>
</g>
<g >
<title>iflib_txq_drain (5,167 samples, 26.08%)</title><rect x="785.1" y="197" width="307.7" height="15.0" fill="rgb(209,118,50)" rx="2" ry="2" />
<text  x="788.05" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>ip_tryforward (124 samples, 0.63%)</title><rect x="1114.2" y="133" width="7.4" height="15.0" fill="rgb(253,178,8)" rx="2" ry="2" />
<text  x="1117.24" y="143.5" ></text>
</g>
<g >
<title>cache_alloc_retry (9 samples, 0.05%)</title><rect x="633.6" y="85" width="0.5" height="15.0" fill="rgb(224,117,37)" rx="2" ry="2" />
<text  x="636.59" y="95.5" ></text>
</g>
<g >
<title>kbdc_data_ready (9 samples, 0.05%)</title><rect x="1110.2" y="197" width="0.6" height="15.0" fill="rgb(246,139,23)" rx="2" ry="2" />
<text  x="1113.25" y="207.5" ></text>
</g>
<g >
<title>sleepq_release (7 samples, 0.04%)</title><rect x="1109.2" y="213" width="0.5" height="15.0" fill="rgb(205,23,41)" rx="2" ry="2" />
<text  x="1112.24" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (10 samples, 0.05%)</title><rect x="1109.7" y="213" width="0.5" height="15.0" fill="rgb(230,122,34)" rx="2" ry="2" />
<text  x="1112.65" y="223.5" ></text>
</g>
<g >
<title>doreti (21 samples, 0.11%)</title><rect x="19.4" y="277" width="1.3" height="15.0" fill="rgb(251,43,40)" rx="2" ry="2" />
<text  x="22.41" y="287.5" ></text>
</g>
<g >
<title>lock_delay (5 samples, 0.03%)</title><rect x="631.6" y="101" width="0.3" height="15.0" fill="rgb(219,152,25)" rx="2" ry="2" />
<text  x="634.63" y="111.5" ></text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.03%)</title><rect x="1151.1" y="149" width="0.4" height="15.0" fill="rgb(222,164,38)" rx="2" ry="2" />
<text  x="1154.11" y="159.5" ></text>
</g>
<g >
<title>vm_page_alloc_domain_after (12 samples, 0.06%)</title><rect x="633.5" y="101" width="0.7" height="15.0" fill="rgb(232,134,53)" rx="2" ry="2" />
<text  x="636.53" y="111.5" ></text>
</g>
<g >
<title>spinlock_exit (260 samples, 1.31%)</title><rect x="1134.7" y="37" width="15.5" height="15.0" fill="rgb(235,136,13)" rx="2" ry="2" />
<text  x="1137.73" y="47.5" ></text>
</g>
<g >
<title>if_inc_counter (21 samples, 0.11%)</title><rect x="601.5" y="197" width="1.3" height="15.0" fill="rgb(208,172,40)" rx="2" ry="2" />
<text  x="604.55" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (495 samples, 2.50%)</title><rect x="1121.6" y="197" width="29.5" height="15.0" fill="rgb(223,114,8)" rx="2" ry="2" />
<text  x="1124.63" y="207.5" >ne..</text>
</g>
<g >
<title>_rm_runlock (75 samples, 0.38%)</title><rect x="491.7" y="69" width="4.5" height="15.0" fill="rgb(232,133,6)" rx="2" ry="2" />
<text  x="494.72" y="79.5" ></text>
</g>
<g >
<title>spinlock_enter (14 samples, 0.07%)</title><rect x="58.5" y="197" width="0.8" height="15.0" fill="rgb(232,88,36)" rx="2" ry="2" />
<text  x="61.48" y="207.5" ></text>
</g>
<g >
<title>cache_alloc_retry (6 samples, 0.03%)</title><rect x="1151.1" y="101" width="0.4" height="15.0" fill="rgb(211,62,3)" rx="2" ry="2" />
<text  x="1154.11" y="111.5" ></text>
</g>
<g >
<title>sleepq_broadcast (26 samples, 0.13%)</title><rect x="1105.2" y="213" width="1.5" height="15.0" fill="rgb(208,168,5)" rx="2" ry="2" />
<text  x="1108.19" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (4 samples, 0.02%)</title><rect x="1092.8" y="197" width="0.2" height="15.0" fill="rgb(213,162,22)" rx="2" ry="2" />
<text  x="1095.80" y="207.5" ></text>
</g>
</g>
</svg>
