<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>acpi_cpu_idle_mwait (55 samples, 0.25%)</title><rect x="1114.5" y="197" width="2.9" height="15.0" fill="rgb(239,224,24)" rx="2" ry="2" />
<text  x="1117.47" y="207.5" ></text>
</g>
<g >
<title>ixgbe_update_stats_counters (3 samples, 0.01%)</title><rect x="48.2" y="197" width="0.1" height="15.0" fill="rgb(224,155,1)" rx="2" ry="2" />
<text  x="51.19" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (457 samples, 2.05%)</title><rect x="369.1" y="37" width="24.2" height="15.0" fill="rgb(248,61,53)" rx="2" ry="2" />
<text  x="372.10" y="47.5" >g..</text>
</g>
<g >
<title>kbdc_data_ready (9 samples, 0.04%)</title><rect x="1113.8" y="197" width="0.5" height="15.0" fill="rgb(234,176,22)" rx="2" ry="2" />
<text  x="1116.84" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (1,714 samples, 7.69%)</title><rect x="335.4" y="69" width="90.8" height="15.0" fill="rgb(220,43,38)" rx="2" ry="2" />
<text  x="338.41" y="79.5" >ether_outp..</text>
</g>
<g >
<title>ether_nh_input (8,152 samples, 36.59%)</title><rect x="165.9" y="165" width="431.7" height="15.0" fill="rgb(239,146,22)" rx="2" ry="2" />
<text  x="168.88" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ixgbe_if_update_admin_status (3 samples, 0.01%)</title><rect x="48.2" y="213" width="0.1" height="15.0" fill="rgb(230,17,26)" rx="2" ry="2" />
<text  x="51.19" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (704 samples, 3.16%)</title><rect x="1053.3" y="165" width="37.3" height="15.0" fill="rgb(211,120,26)" rx="2" ry="2" />
<text  x="1056.30" y="175.5" >ixg..</text>
</g>
<g >
<title>tc_ticktock (4 samples, 0.02%)</title><rect x="1189.2" y="213" width="0.2" height="15.0" fill="rgb(246,226,33)" rx="2" ry="2" />
<text  x="1192.15" y="223.5" ></text>
</g>
<g >
<title>ether_input (8,636 samples, 38.76%)</title><rect x="140.2" y="197" width="457.4" height="15.0" fill="rgb(218,191,40)" rx="2" ry="2" />
<text  x="143.24" y="207.5" >ether_input</text>
</g>
<g >
<title>wakeup_any (13 samples, 0.06%)</title><rect x="19.1" y="69" width="0.6" height="15.0" fill="rgb(245,8,51)" rx="2" ry="2" />
<text  x="22.06" y="79.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.01%)</title><rect x="59.3" y="197" width="0.1" height="15.0" fill="rgb(208,188,39)" rx="2" ry="2" />
<text  x="62.26" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (35 samples, 0.16%)</title><rect x="1170.4" y="213" width="1.9" height="15.0" fill="rgb(232,63,53)" rx="2" ry="2" />
<text  x="1173.40" y="223.5" ></text>
</g>
<g >
<title>cache_alloc (114 samples, 0.51%)</title><rect x="626.3" y="165" width="6.1" height="15.0" fill="rgb(221,194,19)" rx="2" ry="2" />
<text  x="629.35" y="175.5" ></text>
</g>
<g >
<title>sleepq_signal (6 samples, 0.03%)</title><rect x="1122.7" y="37" width="0.3" height="15.0" fill="rgb(247,60,25)" rx="2" ry="2" />
<text  x="1125.68" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (15 samples, 0.07%)</title><rect x="1150.5" y="37" width="0.8" height="15.0" fill="rgb(226,187,40)" rx="2" ry="2" />
<text  x="1153.54" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (15 samples, 0.07%)</title><rect x="19.0" y="117" width="0.7" height="15.0" fill="rgb(238,10,48)" rx="2" ry="2" />
<text  x="21.95" y="127.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (674 samples, 3.03%)</title><rect x="1017.6" y="165" width="35.7" height="15.0" fill="rgb(230,59,23)" rx="2" ry="2" />
<text  x="1020.60" y="175.5" >bus..</text>
</g>
<g >
<title>iaf_get_config (4 samples, 0.02%)</title><rect x="1188.0" y="181" width="0.2" height="15.0" fill="rgb(253,97,4)" rx="2" ry="2" />
<text  x="1190.99" y="191.5" ></text>
</g>
<g >
<title>_task_fn_tx (6,201 samples, 27.83%)</title><rect x="774.3" y="229" width="328.5" height="15.0" fill="rgb(248,208,34)" rx="2" ry="2" />
<text  x="777.33" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>cpu_idle (58 samples, 0.26%)</title><rect x="1114.3" y="245" width="3.1" height="15.0" fill="rgb(213,106,11)" rx="2" ry="2" />
<text  x="1117.31" y="255.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (10 samples, 0.04%)</title><rect x="631.3" y="85" width="0.5" height="15.0" fill="rgb(221,1,0)" rx="2" ry="2" />
<text  x="634.28" y="95.5" ></text>
</g>
<g >
<title>lapic_handle_timer (106 samples, 0.48%)</title><rect x="1184.4" y="277" width="5.6" height="15.0" fill="rgb(246,201,47)" rx="2" ry="2" />
<text  x="1187.39" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (522 samples, 2.34%)</title><rect x="666.0" y="197" width="27.7" height="15.0" fill="rgb(239,192,36)" rx="2" ry="2" />
<text  x="669.02" y="207.5" >i..</text>
</g>
<g >
<title>mac_ifnet_create_mbuf (81 samples, 0.36%)</title><rect x="590.3" y="149" width="4.3" height="15.0" fill="rgb(234,175,51)" rx="2" ry="2" />
<text  x="593.33" y="159.5" ></text>
</g>
<g >
<title>ip6_input (120 samples, 0.54%)</title><rect x="1117.5" y="149" width="6.3" height="15.0" fill="rgb(207,144,50)" rx="2" ry="2" />
<text  x="1120.49" y="159.5" ></text>
</g>
<g >
<title>ether_input (120 samples, 0.54%)</title><rect x="1117.5" y="229" width="6.3" height="15.0" fill="rgb(234,99,54)" rx="2" ry="2" />
<text  x="1120.49" y="239.5" ></text>
</g>
<g >
<title>fork_exit (20,694 samples, 92.89%)</title><rect x="21.4" y="277" width="1096.1" height="15.0" fill="rgb(219,16,4)" rx="2" ry="2" />
<text  x="24.44" y="287.5" >fork_exit</text>
</g>
<g >
<title>binuptime (4 samples, 0.02%)</title><rect x="1185.1" y="245" width="0.2" height="15.0" fill="rgb(218,219,28)" rx="2" ry="2" />
<text  x="1188.13" y="255.5" ></text>
</g>
<g >
<title>ether_output (15 samples, 0.07%)</title><rect x="19.0" y="133" width="0.7" height="15.0" fill="rgb(235,85,33)" rx="2" ry="2" />
<text  x="21.95" y="143.5" ></text>
</g>
<g >
<title>uma_zfree_arg (434 samples, 1.95%)</title><rect x="892.5" y="133" width="23.0" height="15.0" fill="rgb(241,25,7)" rx="2" ry="2" />
<text  x="895.50" y="143.5" >u..</text>
</g>
<g >
<title>memcmp (40 samples, 0.18%)</title><rect x="465.1" y="37" width="2.1" height="15.0" fill="rgb(244,10,6)" rx="2" ry="2" />
<text  x="468.13" y="47.5" ></text>
</g>
<g >
<title>Xtimerint (5 samples, 0.02%)</title><rect x="18.3" y="277" width="0.2" height="15.0" fill="rgb(240,127,24)" rx="2" ry="2" />
<text  x="21.26" y="287.5" ></text>
</g>
<g >
<title>ip6_input (2 samples, 0.01%)</title><rect x="21.3" y="197" width="0.1" height="15.0" fill="rgb(215,220,27)" rx="2" ry="2" />
<text  x="24.33" y="207.5" ></text>
</g>
<g >
<title>lock_delay (11 samples, 0.05%)</title><rect x="1117.6" y="37" width="0.6" height="15.0" fill="rgb(213,224,13)" rx="2" ry="2" />
<text  x="1120.60" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.01%)</title><rect x="21.3" y="245" width="0.1" height="15.0" fill="rgb(248,5,37)" rx="2" ry="2" />
<text  x="24.33" y="255.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (10 samples, 0.04%)</title><rect x="628.7" y="117" width="0.6" height="15.0" fill="rgb(224,95,33)" rx="2" ry="2" />
<text  x="631.73" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (28 samples, 0.13%)</title><rect x="1172.3" y="213" width="1.4" height="15.0" fill="rgb(218,24,33)" rx="2" ry="2" />
<text  x="1175.26" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (519 samples, 2.33%)</title><rect x="1123.8" y="277" width="27.5" height="15.0" fill="rgb(232,29,24)" rx="2" ry="2" />
<text  x="1126.85" y="287.5" >g..</text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.01%)</title><rect x="21.3" y="213" width="0.1" height="15.0" fill="rgb(227,144,38)" rx="2" ry="2" />
<text  x="24.33" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (519 samples, 2.33%)</title><rect x="1123.8" y="197" width="27.5" height="15.0" fill="rgb(226,122,12)" rx="2" ry="2" />
<text  x="1126.85" y="207.5" >n..</text>
</g>
<g >
<title>_ck_epoch_delref (8 samples, 0.04%)</title><rect x="47.3" y="213" width="0.4" height="15.0" fill="rgb(211,202,45)" rx="2" ry="2" />
<text  x="50.29" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (18 samples, 0.08%)</title><rect x="1016.6" y="165" width="1.0" height="15.0" fill="rgb(254,76,35)" rx="2" ry="2" />
<text  x="1019.65" y="175.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (55 samples, 0.25%)</title><rect x="1114.5" y="229" width="2.9" height="15.0" fill="rgb(225,87,42)" rx="2" ry="2" />
<text  x="1117.47" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (152 samples, 0.68%)</title><rect x="63.7" y="197" width="8.0" height="15.0" fill="rgb(217,137,27)" rx="2" ry="2" />
<text  x="66.65" y="207.5" ></text>
</g>
<g >
<title>iflib_txq_drain (5,940 samples, 26.66%)</title><rect x="783.3" y="197" width="314.6" height="15.0" fill="rgb(235,73,20)" rx="2" ry="2" />
<text  x="786.28" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>in6_localip (590 samples, 2.65%)</title><rect x="472.3" y="85" width="31.3" height="15.0" fill="rgb(253,58,12)" rx="2" ry="2" />
<text  x="475.33" y="95.5" >in..</text>
</g>
<g >
<title>gtaskqueue_run_locked (20,618 samples, 92.54%)</title><rect x="21.8" y="245" width="1092.0" height="15.0" fill="rgb(239,50,20)" rx="2" ry="2" />
<text  x="24.81" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>bus_dmamap_load (3 samples, 0.01%)</title><rect x="626.1" y="181" width="0.1" height="15.0" fill="rgb(230,69,9)" rx="2" ry="2" />
<text  x="629.09" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (120 samples, 0.54%)</title><rect x="1117.5" y="261" width="6.3" height="15.0" fill="rgb(229,143,50)" rx="2" ry="2" />
<text  x="1120.49" y="271.5" ></text>
</g>
<g >
<title>ip6_input (7,088 samples, 31.81%)</title><rect x="214.9" y="117" width="375.4" height="15.0" fill="rgb(226,138,9)" rx="2" ry="2" />
<text  x="217.92" y="127.5" >ip6_input</text>
</g>
<g >
<title>iflib_encap (3,306 samples, 14.84%)</title><rect x="915.5" y="181" width="175.1" height="15.0" fill="rgb(215,61,42)" rx="2" ry="2" />
<text  x="918.48" y="191.5" >iflib_encap</text>
</g>
<g >
<title>iflib_encap (2 samples, 0.01%)</title><rect x="19.0" y="53" width="0.1" height="15.0" fill="rgb(228,102,15)" rx="2" ry="2" />
<text  x="21.95" y="63.5" ></text>
</g>
<g >
<title>ether_input (15 samples, 0.07%)</title><rect x="19.0" y="245" width="0.7" height="15.0" fill="rgb(222,209,25)" rx="2" ry="2" />
<text  x="21.95" y="255.5" ></text>
</g>
<g >
<title>drain_ring_lockless (2 samples, 0.01%)</title><rect x="21.3" y="117" width="0.1" height="15.0" fill="rgb(208,18,29)" rx="2" ry="2" />
<text  x="24.33" y="127.5" ></text>
</g>
<g >
<title>ixgbe_read_reg (3 samples, 0.01%)</title><rect x="48.2" y="181" width="0.1" height="15.0" fill="rgb(233,158,5)" rx="2" ry="2" />
<text  x="51.19" y="191.5" ></text>
</g>
<g >
<title>ip6_input (15 samples, 0.07%)</title><rect x="19.0" y="165" width="0.7" height="15.0" fill="rgb(243,77,26)" rx="2" ry="2" />
<text  x="21.95" y="175.5" ></text>
</g>
<g >
<title>ether_output (2 samples, 0.01%)</title><rect x="21.3" y="165" width="0.1" height="15.0" fill="rgb(250,133,33)" rx="2" ry="2" />
<text  x="24.33" y="175.5" ></text>
</g>
<g >
<title>zone_alloc_item (14 samples, 0.06%)</title><rect x="631.1" y="117" width="0.7" height="15.0" fill="rgb(207,82,15)" rx="2" ry="2" />
<text  x="634.06" y="127.5" ></text>
</g>
<g >
<title>cache_alloc_retry (117 samples, 0.53%)</title><rect x="626.2" y="181" width="6.2" height="15.0" fill="rgb(227,160,17)" rx="2" ry="2" />
<text  x="629.24" y="191.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (27 samples, 0.12%)</title><rect x="1117.6" y="53" width="1.4" height="15.0" fill="rgb(234,73,26)" rx="2" ry="2" />
<text  x="1120.60" y="63.5" ></text>
</g>
<g >
<title>ether_nh_input (519 samples, 2.33%)</title><rect x="1123.8" y="181" width="27.5" height="15.0" fill="rgb(230,201,51)" rx="2" ry="2" />
<text  x="1126.85" y="191.5" >e..</text>
</g>
<g >
<title>spinlock_enter (24 samples, 0.11%)</title><rect x="59.4" y="197" width="1.2" height="15.0" fill="rgb(232,35,18)" rx="2" ry="2" />
<text  x="62.36" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (230 samples, 1.03%)</title><rect x="1125.4" y="37" width="12.2" height="15.0" fill="rgb(251,17,11)" rx="2" ry="2" />
<text  x="1128.44" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (91 samples, 0.41%)</title><rect x="1119.0" y="53" width="4.8" height="15.0" fill="rgb(236,79,30)" rx="2" ry="2" />
<text  x="1122.03" y="63.5" ></text>
</g>
<g >
<title>iflib_txq_drain (2 samples, 0.01%)</title><rect x="1117.5" y="53" width="0.1" height="15.0" fill="rgb(229,30,35)" rx="2" ry="2" />
<text  x="1120.49" y="63.5" ></text>
</g>
<g >
<title>netmap_rx_irq (27 samples, 0.12%)</title><rect x="772.9" y="213" width="1.4" height="15.0" fill="rgb(209,45,6)" rx="2" ry="2" />
<text  x="775.90" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (10 samples, 0.04%)</title><rect x="44.8" y="213" width="0.5" height="15.0" fill="rgb(232,85,7)" rx="2" ry="2" />
<text  x="47.80" y="223.5" ></text>
</g>
<g >
<title>ether_output (3,395 samples, 15.24%)</title><rect x="292.5" y="85" width="179.8" height="15.0" fill="rgb(218,45,2)" rx="2" ry="2" />
<text  x="295.51" y="95.5" >ether_output</text>
</g>
<g >
<title>spinlock_exit (63 samples, 0.28%)</title><rect x="1104.7" y="229" width="3.4" height="15.0" fill="rgb(234,105,48)" rx="2" ry="2" />
<text  x="1107.73" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (15 samples, 0.07%)</title><rect x="1176.3" y="181" width="0.8" height="15.0" fill="rgb(215,204,18)" rx="2" ry="2" />
<text  x="1179.28" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (9 samples, 0.04%)</title><rect x="1118.6" y="37" width="0.4" height="15.0" fill="rgb(239,34,21)" rx="2" ry="2" />
<text  x="1121.55" y="47.5" ></text>
</g>
<g >
<title>ip6_tryforward (2 samples, 0.01%)</title><rect x="21.3" y="181" width="0.1" height="15.0" fill="rgb(237,30,15)" rx="2" ry="2" />
<text  x="24.33" y="191.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (52 samples, 0.23%)</title><rect x="1098.2" y="213" width="2.8" height="15.0" fill="rgb(234,92,6)" rx="2" ry="2" />
<text  x="1101.21" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (519 samples, 2.33%)</title><rect x="1123.8" y="69" width="27.5" height="15.0" fill="rgb(218,125,54)" rx="2" ry="2" />
<text  x="1126.85" y="79.5" >i..</text>
</g>
<g >
<title>ixgbe_write_reg (8 samples, 0.04%)</title><rect x="1102.3" y="197" width="0.5" height="15.0" fill="rgb(236,132,52)" rx="2" ry="2" />
<text  x="1105.34" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (265 samples, 1.19%)</title><rect x="1164.7" y="229" width="14.0" height="15.0" fill="rgb(229,153,6)" rx="2" ry="2" />
<text  x="1167.68" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (120 samples, 0.54%)</title><rect x="1117.5" y="245" width="6.3" height="15.0" fill="rgb(241,115,34)" rx="2" ry="2" />
<text  x="1120.49" y="255.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (890 samples, 3.99%)</title><rect x="723.1" y="197" width="47.1" height="15.0" fill="rgb(211,87,21)" rx="2" ry="2" />
<text  x="726.06" y="207.5" >rxd_..</text>
</g>
<g >
<title>pagezero_erms (28 samples, 0.13%)</title><rect x="629.5" y="101" width="1.5" height="15.0" fill="rgb(241,187,23)" rx="2" ry="2" />
<text  x="632.53" y="111.5" ></text>
</g>
<g >
<title>iflib_get_ifp (18 samples, 0.08%)</title><rect x="692.7" y="181" width="1.0" height="15.0" fill="rgb(253,133,40)" rx="2" ry="2" />
<text  x="695.71" y="191.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (31 samples, 0.14%)</title><rect x="770.2" y="197" width="1.6" height="15.0" fill="rgb(223,150,43)" rx="2" ry="2" />
<text  x="773.20" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (118 samples, 0.53%)</title><rect x="1117.6" y="69" width="6.2" height="15.0" fill="rgb(219,146,16)" rx="2" ry="2" />
<text  x="1120.60" y="79.5" ></text>
</g>
<g >
<title>intr_execute_handlers (592 samples, 2.66%)</title><rect x="1151.4" y="277" width="31.3" height="15.0" fill="rgb(226,161,3)" rx="2" ry="2" />
<text  x="1154.39" y="287.5" >in..</text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="47.9" y="213" width="0.2" height="15.0" fill="rgb(253,82,44)" rx="2" ry="2" />
<text  x="50.92" y="223.5" ></text>
</g>
<g >
<title>Xtimerint_pti (8 samples, 0.04%)</title><rect x="18.5" y="277" width="0.5" height="15.0" fill="rgb(237,56,43)" rx="2" ry="2" />
<text  x="21.53" y="287.5" ></text>
</g>
<g >
<title>tc_windup (3 samples, 0.01%)</title><rect x="1189.2" y="197" width="0.2" height="15.0" fill="rgb(251,158,23)" rx="2" ry="2" />
<text  x="1192.21" y="207.5" ></text>
</g>
<g >
<title>all (22,279 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(232,219,7)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>sleepq_release (14 samples, 0.06%)</title><rect x="1112.6" y="213" width="0.7" height="15.0" fill="rgb(240,225,18)" rx="2" ry="2" />
<text  x="1115.57" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (16 samples, 0.07%)</title><rect x="1123.0" y="37" width="0.8" height="15.0" fill="rgb(245,51,40)" rx="2" ry="2" />
<text  x="1126.00" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (65 samples, 0.29%)</title><rect x="1119.0" y="37" width="3.5" height="15.0" fill="rgb(239,34,20)" rx="2" ry="2" />
<text  x="1122.03" y="47.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (27 samples, 0.12%)</title><rect x="1123.9" y="37" width="1.4" height="15.0" fill="rgb(229,139,6)" rx="2" ry="2" />
<text  x="1126.90" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (120 samples, 0.54%)</title><rect x="1117.5" y="277" width="6.3" height="15.0" fill="rgb(228,184,32)" rx="2" ry="2" />
<text  x="1120.49" y="287.5" ></text>
</g>
<g >
<title>ether_demux (519 samples, 2.33%)</title><rect x="1123.8" y="165" width="27.5" height="15.0" fill="rgb(205,214,9)" rx="2" ry="2" />
<text  x="1126.85" y="175.5" >e..</text>
</g>
<g >
<title>_task_fn_rx (519 samples, 2.33%)</title><rect x="1123.8" y="245" width="27.5" height="15.0" fill="rgb(250,16,4)" rx="2" ry="2" />
<text  x="1126.85" y="255.5" >_..</text>
</g>
<g >
<title>netisr_dispatch (12 samples, 0.05%)</title><rect x="203.5" y="133" width="0.7" height="15.0" fill="rgb(238,123,12)" rx="2" ry="2" />
<text  x="206.53" y="143.5" ></text>
</g>
<g >
<title>iflib_fl_refill (1,054 samples, 4.73%)</title><rect x="599.4" y="197" width="55.8" height="15.0" fill="rgb(222,114,19)" rx="2" ry="2" />
<text  x="602.39" y="207.5" >iflib..</text>
</g>
<g >
<title>cpu_search_highest (2 samples, 0.01%)</title><rect x="1117.4" y="229" width="0.1" height="15.0" fill="rgb(234,16,5)" rx="2" ry="2" />
<text  x="1120.39" y="239.5" ></text>
</g>
<g >
<title>iflib_txq_drain (2 samples, 0.01%)</title><rect x="19.0" y="69" width="0.1" height="15.0" fill="rgb(225,106,26)" rx="2" ry="2" />
<text  x="21.95" y="79.5" ></text>
</g>
<g >
<title>rn_match (1,124 samples, 5.05%)</title><rect x="530.8" y="37" width="59.5" height="15.0" fill="rgb(218,138,25)" rx="2" ry="2" />
<text  x="533.80" y="47.5" >rn_match</text>
</g>
<g >
<title>spinlock_enter (19 samples, 0.09%)</title><rect x="68.8" y="165" width="1.0" height="15.0" fill="rgb(216,211,11)" rx="2" ry="2" />
<text  x="71.79" y="175.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (7 samples, 0.03%)</title><rect x="21.4" y="245" width="0.4" height="15.0" fill="rgb(216,177,7)" rx="2" ry="2" />
<text  x="24.44" y="255.5" ></text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.01%)</title><rect x="21.3" y="133" width="0.1" height="15.0" fill="rgb(217,111,18)" rx="2" ry="2" />
<text  x="24.33" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (97 samples, 0.44%)</title><rect x="632.8" y="181" width="5.1" height="15.0" fill="rgb(245,200,28)" rx="2" ry="2" />
<text  x="635.76" y="191.5" ></text>
</g>
<g >
<title>_rm_runlock (82 samples, 0.37%)</title><rect x="499.1" y="69" width="4.4" height="15.0" fill="rgb(238,122,38)" rx="2" ry="2" />
<text  x="502.13" y="79.5" ></text>
</g>
<g >
<title>sleepq_lock (49 samples, 0.22%)</title><rect x="1174.5" y="197" width="2.6" height="15.0" fill="rgb(252,94,26)" rx="2" ry="2" />
<text  x="1177.48" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (105 samples, 0.47%)</title><rect x="64.2" y="181" width="5.6" height="15.0" fill="rgb(239,10,48)" rx="2" ry="2" />
<text  x="67.24" y="191.5" ></text>
</g>
<g >
<title>tsc_get_config (2 samples, 0.01%)</title><rect x="1189.0" y="181" width="0.2" height="15.0" fill="rgb(237,44,45)" rx="2" ry="2" />
<text  x="1192.05" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (15 samples, 0.07%)</title><rect x="19.0" y="277" width="0.7" height="15.0" fill="rgb(235,54,49)" rx="2" ry="2" />
<text  x="21.95" y="287.5" ></text>
</g>
<g >
<title>uma_small_alloc (34 samples, 0.15%)</title><rect x="629.3" y="117" width="1.8" height="15.0" fill="rgb(240,222,45)" rx="2" ry="2" />
<text  x="632.26" y="127.5" ></text>
</g>
<g >
<title>iflib_txq_drain (2 samples, 0.01%)</title><rect x="21.3" y="101" width="0.1" height="15.0" fill="rgb(223,141,23)" rx="2" ry="2" />
<text  x="24.33" y="111.5" ></text>
</g>
<g >
<title>drain_ring_lockless (2 samples, 0.01%)</title><rect x="1117.5" y="69" width="0.1" height="15.0" fill="rgb(239,219,33)" rx="2" ry="2" />
<text  x="1120.49" y="79.5" ></text>
</g>
<g >
<title>Xapic_isr1 (73 samples, 0.33%)</title><rect x="10.0" y="277" width="3.9" height="15.0" fill="rgb(245,179,23)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>nd6_resolve (683 samples, 3.07%)</title><rect x="436.2" y="69" width="36.1" height="15.0" fill="rgb(207,75,17)" rx="2" ry="2" />
<text  x="439.15" y="79.5" >nd6..</text>
</g>
<g >
<title>m_adj (118 samples, 0.53%)</title><rect x="197.3" y="133" width="6.2" height="15.0" fill="rgb(215,178,48)" rx="2" ry="2" />
<text  x="200.28" y="143.5" ></text>
</g>
<g >
<title>mac_ifnet_check_transmit (109 samples, 0.49%)</title><rect x="426.2" y="69" width="5.8" height="15.0" fill="rgb(222,9,10)" rx="2" ry="2" />
<text  x="429.20" y="79.5" ></text>
</g>
<g >
<title>sleepq_release (4 samples, 0.02%)</title><rect x="1122.5" y="37" width="0.2" height="15.0" fill="rgb(221,98,28)" rx="2" ry="2" />
<text  x="1125.47" y="47.5" ></text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.01%)</title><rect x="597.6" y="197" width="0.1" height="15.0" fill="rgb(225,7,28)" rx="2" ry="2" />
<text  x="600.64" y="207.5" ></text>
</g>
<g >
<title>m_pkthdr_init (6 samples, 0.03%)</title><rect x="772.6" y="213" width="0.3" height="15.0" fill="rgb(251,85,6)" rx="2" ry="2" />
<text  x="775.59" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.03%)</title><rect x="1118.2" y="37" width="0.4" height="15.0" fill="rgb(228,110,10)" rx="2" ry="2" />
<text  x="1121.18" y="47.5" ></text>
</g>
<g >
<title>keg_alloc_slab (75 samples, 0.34%)</title><rect x="627.8" y="133" width="4.0" height="15.0" fill="rgb(208,50,20)" rx="2" ry="2" />
<text  x="630.83" y="143.5" ></text>
</g>
<g >
<title>timekeep_push_vdso (2 samples, 0.01%)</title><rect x="1189.3" y="181" width="0.1" height="15.0" fill="rgb(235,164,8)" rx="2" ry="2" />
<text  x="1192.26" y="191.5" ></text>
</g>
<g >
<title>sleepq_broadcast (24 samples, 0.11%)</title><rect x="1108.8" y="213" width="1.3" height="15.0" fill="rgb(235,157,7)" rx="2" ry="2" />
<text  x="1111.81" y="223.5" ></text>
</g>
<g >
<title>iflib_encap (2 samples, 0.01%)</title><rect x="1117.5" y="37" width="0.1" height="15.0" fill="rgb(237,127,46)" rx="2" ry="2" />
<text  x="1120.49" y="47.5" ></text>
</g>
<g >
<title>_task_fn_admin (3 samples, 0.01%)</title><rect x="48.2" y="229" width="0.1" height="15.0" fill="rgb(246,61,35)" rx="2" ry="2" />
<text  x="51.19" y="239.5" ></text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.01%)</title><rect x="21.3" y="149" width="0.1" height="15.0" fill="rgb(209,209,23)" rx="2" ry="2" />
<text  x="24.33" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (20,625 samples, 92.58%)</title><rect x="21.4" y="261" width="1092.4" height="15.0" fill="rgb(247,149,22)" rx="2" ry="2" />
<text  x="24.44" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>ip6_input (519 samples, 2.33%)</title><rect x="1123.8" y="133" width="27.5" height="15.0" fill="rgb(234,197,21)" rx="2" ry="2" />
<text  x="1126.85" y="143.5" >i..</text>
</g>
<g >
<title>ether_demux (2 samples, 0.01%)</title><rect x="21.3" y="229" width="0.1" height="15.0" fill="rgb(217,161,49)" rx="2" ry="2" />
<text  x="24.33" y="239.5" ></text>
</g>
<g >
<title>ether_demux (120 samples, 0.54%)</title><rect x="1117.5" y="181" width="6.3" height="15.0" fill="rgb(208,153,22)" rx="2" ry="2" />
<text  x="1120.49" y="191.5" ></text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.02%)</title><rect x="1180.3" y="213" width="0.2" height="15.0" fill="rgb(225,160,24)" rx="2" ry="2" />
<text  x="1183.25" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.03%)</title><rect x="772.3" y="197" width="0.3" height="15.0" fill="rgb(219,133,24)" rx="2" ry="2" />
<text  x="775.27" y="207.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="503.5" y="69" width="0.1" height="15.0" fill="rgb(205,210,6)" rx="2" ry="2" />
<text  x="506.47" y="79.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (45 samples, 0.20%)</title><rect x="45.3" y="229" width="2.4" height="15.0" fill="rgb(228,229,44)" rx="2" ry="2" />
<text  x="48.33" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (86 samples, 0.39%)</title><rect x="1174.2" y="213" width="4.5" height="15.0" fill="rgb(234,208,16)" rx="2" ry="2" />
<text  x="1177.16" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.02%)</title><rect x="845.1" y="181" width="0.3" height="15.0" fill="rgb(251,205,48)" rx="2" ry="2" />
<text  x="848.15" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (50 samples, 0.22%)</title><rect x="60.6" y="197" width="2.7" height="15.0" fill="rgb(231,152,10)" rx="2" ry="2" />
<text  x="63.63" y="207.5" ></text>
</g>
<g >
<title>lock_delay (7 samples, 0.03%)</title><rect x="628.9" y="101" width="0.4" height="15.0" fill="rgb(240,209,30)" rx="2" ry="2" />
<text  x="631.89" y="111.5" ></text>
</g>
<g >
<title>zone_import (13 samples, 0.06%)</title><rect x="631.1" y="101" width="0.7" height="15.0" fill="rgb(240,129,10)" rx="2" ry="2" />
<text  x="634.12" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (7,291 samples, 32.73%)</title><rect x="204.2" y="133" width="386.1" height="15.0" fill="rgb(213,66,36)" rx="2" ry="2" />
<text  x="207.17" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>__mtx_lock_sleep (7 samples, 0.03%)</title><rect x="632.0" y="117" width="0.4" height="15.0" fill="rgb(250,95,23)" rx="2" ry="2" />
<text  x="635.02" y="127.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3 samples, 0.01%)</title><rect x="626.1" y="165" width="0.1" height="15.0" fill="rgb(243,209,40)" rx="2" ry="2" />
<text  x="629.09" y="175.5" ></text>
</g>
<g >
<title>ip6_tryforward (6,412 samples, 28.78%)</title><rect x="250.7" y="101" width="339.6" height="15.0" fill="rgb(218,179,8)" rx="2" ry="2" />
<text  x="253.72" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>_rm_rlock (213 samples, 0.96%)</title><rect x="487.8" y="69" width="11.3" height="15.0" fill="rgb(222,67,33)" rx="2" ry="2" />
<text  x="490.85" y="79.5" ></text>
</g>
<g >
<title>if_inc_counter (12 samples, 0.05%)</title><rect x="598.8" y="197" width="0.6" height="15.0" fill="rgb(252,109,3)" rx="2" ry="2" />
<text  x="601.76" y="207.5" ></text>
</g>
<g >
<title>fib6_lookup (1,538 samples, 6.90%)</title><rect x="508.9" y="69" width="81.4" height="15.0" fill="rgb(233,228,53)" rx="2" ry="2" />
<text  x="511.87" y="79.5" >fib6_lookup</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (5 samples, 0.02%)</title><rect x="1053.0" y="149" width="0.3" height="15.0" fill="rgb(242,56,2)" rx="2" ry="2" />
<text  x="1056.03" y="159.5" ></text>
</g>
<g >
<title>zone_import (90 samples, 0.40%)</title><rect x="627.6" y="149" width="4.8" height="15.0" fill="rgb(230,29,2)" rx="2" ry="2" />
<text  x="630.62" y="159.5" ></text>
</g>
<g >
<title>cpu_search_highest (2 samples, 0.01%)</title><rect x="1117.4" y="245" width="0.1" height="15.0" fill="rgb(252,128,48)" rx="2" ry="2" />
<text  x="1120.39" y="255.5" ></text>
</g>
<g >
<title>if_getdrvflags (19 samples, 0.09%)</title><rect x="597.7" y="197" width="1.1" height="15.0" fill="rgb(209,84,32)" rx="2" ry="2" />
<text  x="600.75" y="207.5" ></text>
</g>
<g >
<title>doreti (30 samples, 0.13%)</title><rect x="19.7" y="277" width="1.6" height="15.0" fill="rgb(253,148,38)" rx="2" ry="2" />
<text  x="22.75" y="287.5" ></text>
</g>
<g >
<title>lapic_handle_intr (31 samples, 0.14%)</title><rect x="1182.7" y="277" width="1.7" height="15.0" fill="rgb(248,25,51)" rx="2" ry="2" />
<text  x="1185.74" y="287.5" ></text>
</g>
<g >
<title>softclock (9 samples, 0.04%)</title><rect x="1113.8" y="245" width="0.5" height="15.0" fill="rgb(237,18,4)" rx="2" ry="2" />
<text  x="1116.84" y="255.5" ></text>
</g>
<g >
<title>intr_lookup_source (17 samples, 0.08%)</title><rect x="1183.5" y="261" width="0.9" height="15.0" fill="rgb(219,114,54)" rx="2" ry="2" />
<text  x="1186.49" y="271.5" ></text>
</g>
<g >
<title>ip6_tryforward (120 samples, 0.54%)</title><rect x="1117.5" y="133" width="6.3" height="15.0" fill="rgb(218,151,32)" rx="2" ry="2" />
<text  x="1120.49" y="143.5" ></text>
</g>
<g >
<title>ip6_tryforward (519 samples, 2.33%)</title><rect x="1123.8" y="117" width="27.5" height="15.0" fill="rgb(233,226,34)" rx="2" ry="2" />
<text  x="1126.85" y="127.5" >i..</text>
</g>
<g >
<title>uma_zalloc_arg (315 samples, 1.41%)</title><rect x="638.5" y="181" width="16.7" height="15.0" fill="rgb(236,143,49)" rx="2" ry="2" />
<text  x="641.53" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (13,707 samples, 61.52%)</title><rect x="48.3" y="229" width="726.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="51.35" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>gtaskqueue_run_locked (519 samples, 2.33%)</title><rect x="1123.8" y="261" width="27.5" height="15.0" fill="rgb(228,171,17)" rx="2" ry="2" />
<text  x="1126.85" y="271.5" >g..</text>
</g>
<g >
<title>iflib_if_transmit (15 samples, 0.07%)</title><rect x="19.0" y="101" width="0.7" height="15.0" fill="rgb(221,96,29)" rx="2" ry="2" />
<text  x="21.95" y="111.5" ></text>
</g>
<g >
<title>spinlock_exit (10 samples, 0.04%)</title><rect x="1113.3" y="213" width="0.5" height="15.0" fill="rgb(207,8,4)" rx="2" ry="2" />
<text  x="1116.31" y="223.5" ></text>
</g>
<g >
<title>memmove_erms (96 samples, 0.43%)</title><rect x="467.2" y="53" width="5.1" height="15.0" fill="rgb(241,194,43)" rx="2" ry="2" />
<text  x="470.24" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (72 samples, 0.32%)</title><rect x="1090.6" y="181" width="3.8" height="15.0" fill="rgb(248,107,0)" rx="2" ry="2" />
<text  x="1093.59" y="191.5" ></text>
</g>
<g >
<title>ithread_loop (9 samples, 0.04%)</title><rect x="1113.8" y="261" width="0.5" height="15.0" fill="rgb(243,28,13)" rx="2" ry="2" />
<text  x="1116.84" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (4 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.2" height="15.0" fill="rgb(241,71,35)" rx="2" ry="2" />
<text  x="1192.68" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (15 samples, 0.07%)</title><rect x="1177.9" y="197" width="0.8" height="15.0" fill="rgb(249,36,32)" rx="2" ry="2" />
<text  x="1180.92" y="207.5" ></text>
</g>
<g >
<title>msi_vector (9 samples, 0.04%)</title><rect x="1182.3" y="261" width="0.4" height="15.0" fill="rgb(229,17,26)" rx="2" ry="2" />
<text  x="1185.27" y="271.5" ></text>
</g>
<g >
<title>loadtimer (2 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.1" height="15.0" fill="rgb(227,50,43)" rx="2" ry="2" />
<text  x="1192.58" y="239.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (8 samples, 0.04%)</title><rect x="1173.7" y="213" width="0.5" height="15.0" fill="rgb(236,186,5)" rx="2" ry="2" />
<text  x="1176.74" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (345 samples, 1.55%)</title><rect x="1034.8" y="133" width="18.2" height="15.0" fill="rgb(238,25,24)" rx="2" ry="2" />
<text  x="1037.76" y="143.5" ></text>
</g>
<g >
<title>mac_mbuf_init (79 samples, 0.35%)</title><rect x="701.1" y="197" width="4.2" height="15.0" fill="rgb(224,86,34)" rx="2" ry="2" />
<text  x="704.08" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (5 samples, 0.02%)</title><rect x="1097.9" y="197" width="0.3" height="15.0" fill="rgb(227,146,28)" rx="2" ry="2" />
<text  x="1100.89" y="207.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (42 samples, 0.19%)</title><rect x="1178.7" y="229" width="2.2" height="15.0" fill="rgb(227,209,5)" rx="2" ry="2" />
<text  x="1181.72" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (15 samples, 0.07%)</title><rect x="19.0" y="213" width="0.7" height="15.0" fill="rgb(238,80,24)" rx="2" ry="2" />
<text  x="21.95" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (368 samples, 1.65%)</title><rect x="52.2" y="213" width="19.5" height="15.0" fill="rgb(254,182,12)" rx="2" ry="2" />
<text  x="55.21" y="223.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (9 samples, 0.04%)</title><rect x="47.7" y="229" width="0.5" height="15.0" fill="rgb(211,90,25)" rx="2" ry="2" />
<text  x="50.71" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (13 samples, 0.06%)</title><rect x="19.1" y="85" width="0.6" height="15.0" fill="rgb(231,195,52)" rx="2" ry="2" />
<text  x="22.06" y="95.5" ></text>
</g>
<g >
<title>ether_input (2 samples, 0.01%)</title><rect x="21.3" y="277" width="0.1" height="15.0" fill="rgb(244,152,36)" rx="2" ry="2" />
<text  x="24.33" y="287.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (11 samples, 0.05%)</title><rect x="1150.0" y="37" width="0.5" height="15.0" fill="rgb(235,26,14)" rx="2" ry="2" />
<text  x="1152.96" y="47.5" ></text>
</g>
<g >
<title>sched_idletd (60 samples, 0.27%)</title><rect x="1114.3" y="261" width="3.2" height="15.0" fill="rgb(224,216,35)" rx="2" ry="2" />
<text  x="1117.31" y="271.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.01%)</title><rect x="1102.8" y="229" width="0.1" height="15.0" fill="rgb(215,218,32)" rx="2" ry="2" />
<text  x="1105.77" y="239.5" ></text>
</g>
<g >
<title>pmc_hook_handler (60 samples, 0.27%)</title><rect x="1186.0" y="213" width="3.2" height="15.0" fill="rgb(224,210,39)" rx="2" ry="2" />
<text  x="1188.97" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (13,210 samples, 59.29%)</title><rect x="72.2" y="213" width="699.6" height="15.0" fill="rgb(237,126,1)" rx="2" ry="2" />
<text  x="75.18" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>pmap_kextract (35 samples, 0.16%)</title><rect x="1051.2" y="117" width="1.8" height="15.0" fill="rgb(213,204,5)" rx="2" ry="2" />
<text  x="1054.18" y="127.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (7 samples, 0.03%)</title><rect x="1170.0" y="213" width="0.4" height="15.0" fill="rgb(207,51,51)" rx="2" ry="2" />
<text  x="1172.98" y="223.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (7 samples, 0.03%)</title><rect x="63.3" y="197" width="0.4" height="15.0" fill="rgb(242,103,32)" rx="2" ry="2" />
<text  x="66.28" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (325 samples, 1.46%)</title><rect x="866.2" y="165" width="17.2" height="15.0" fill="rgb(214,186,20)" rx="2" ry="2" />
<text  x="869.17" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (233 samples, 1.05%)</title><rect x="1137.6" y="37" width="12.4" height="15.0" fill="rgb(240,208,37)" rx="2" ry="2" />
<text  x="1140.62" y="47.5" ></text>
</g>
<g >
<title>ether_input (519 samples, 2.33%)</title><rect x="1123.8" y="213" width="27.5" height="15.0" fill="rgb(227,181,19)" rx="2" ry="2" />
<text  x="1126.85" y="223.5" >e..</text>
</g>
<g >
<title>mb_ctor_mbuf (76 samples, 0.34%)</title><rect x="651.2" y="165" width="4.0" height="15.0" fill="rgb(245,45,4)" rx="2" ry="2" />
<text  x="654.19" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (15 samples, 0.07%)</title><rect x="19.0" y="261" width="0.7" height="15.0" fill="rgb(209,131,20)" rx="2" ry="2" />
<text  x="21.95" y="271.5" ></text>
</g>
<g >
<title>ip6_tryforward (15 samples, 0.07%)</title><rect x="19.0" y="149" width="0.7" height="15.0" fill="rgb(229,211,4)" rx="2" ry="2" />
<text  x="21.95" y="159.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.01%)</title><rect x="1180.9" y="245" width="0.1" height="15.0" fill="rgb(237,186,48)" rx="2" ry="2" />
<text  x="1183.94" y="255.5" ></text>
</g>
<g >
<title>native_lapic_eoi (3 samples, 0.01%)</title><rect x="1184.7" y="261" width="0.1" height="15.0" fill="rgb(213,102,46)" rx="2" ry="2" />
<text  x="1187.65" y="271.5" ></text>
</g>
<g >
<title>memcmp (52 samples, 0.23%)</title><rect x="594.6" y="149" width="2.8" height="15.0" fill="rgb(227,75,43)" rx="2" ry="2" />
<text  x="597.62" y="159.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (11 samples, 0.05%)</title><rect x="631.8" y="133" width="0.6" height="15.0" fill="rgb(214,177,1)" rx="2" ry="2" />
<text  x="634.81" y="143.5" ></text>
</g>
<g >
<title>sleepq_release (4 samples, 0.02%)</title><rect x="69.8" y="181" width="0.2" height="15.0" fill="rgb(237,80,48)" rx="2" ry="2" />
<text  x="72.80" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (24 samples, 0.11%)</title><rect x="70.4" y="181" width="1.3" height="15.0" fill="rgb(215,133,11)" rx="2" ry="2" />
<text  x="73.43" y="191.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (55 samples, 0.25%)</title><rect x="1114.5" y="213" width="2.9" height="15.0" fill="rgb(237,215,16)" rx="2" ry="2" />
<text  x="1117.47" y="223.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (598 samples, 2.68%)</title><rect x="394.5" y="37" width="31.7" height="15.0" fill="rgb(241,205,50)" rx="2" ry="2" />
<text  x="397.52" y="47.5" >if..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (1,310 samples, 5.88%)</title><rect x="846.1" y="181" width="69.4" height="15.0" fill="rgb(229,135,30)" rx="2" ry="2" />
<text  x="849.10" y="191.5" >iflib_c..</text>
</g>
<g >
<title>pmclog_process_callchain (9 samples, 0.04%)</title><rect x="1188.3" y="181" width="0.4" height="15.0" fill="rgb(236,204,48)" rx="2" ry="2" />
<text  x="1191.25" y="191.5" ></text>
</g>
<g >
<title>if_getsoftc (23 samples, 0.10%)</title><rect x="393.3" y="37" width="1.2" height="15.0" fill="rgb(220,113,4)" rx="2" ry="2" />
<text  x="396.31" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (9 samples, 0.04%)</title><rect x="1180.5" y="213" width="0.4" height="15.0" fill="rgb(228,100,26)" rx="2" ry="2" />
<text  x="1183.47" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (13 samples, 0.06%)</title><rect x="19.1" y="37" width="0.6" height="15.0" fill="rgb(226,144,24)" rx="2" ry="2" />
<text  x="22.06" y="47.5" ></text>
</g>
<g >
<title>cpu_activeclock (3 samples, 0.01%)</title><rect x="1114.3" y="229" width="0.2" height="15.0" fill="rgb(229,169,37)" rx="2" ry="2" />
<text  x="1117.31" y="239.5" ></text>
</g>
<g >
<title>iflib_get_softc (9 samples, 0.04%)</title><rect x="1101.9" y="197" width="0.4" height="15.0" fill="rgb(229,189,5)" rx="2" ry="2" />
<text  x="1104.87" y="207.5" ></text>
</g>
<g >
<title>hardclock (71 samples, 0.32%)</title><rect x="1185.6" y="229" width="3.8" height="15.0" fill="rgb(247,46,4)" rx="2" ry="2" />
<text  x="1188.60" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (22 samples, 0.10%)</title><rect x="150.8" y="181" width="1.1" height="15.0" fill="rgb(222,68,53)" rx="2" ry="2" />
<text  x="153.78" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (34 samples, 0.15%)</title><rect x="1101.0" y="213" width="1.8" height="15.0" fill="rgb(252,198,36)" rx="2" ry="2" />
<text  x="1103.97" y="223.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.01%)</title><rect x="1125.3" y="37" width="0.1" height="15.0" fill="rgb(216,226,23)" rx="2" ry="2" />
<text  x="1128.33" y="47.5" ></text>
</g>
<g >
<title>ip6_findroute (1,638 samples, 7.35%)</title><rect x="503.6" y="85" width="86.7" height="15.0" fill="rgb(213,69,22)" rx="2" ry="2" />
<text  x="506.58" y="95.5" >ip6_findro..</text>
</g>
<g >
<title>memcpy_erms (335 samples, 1.50%)</title><rect x="705.3" y="197" width="17.7" height="15.0" fill="rgb(227,216,13)" rx="2" ry="2" />
<text  x="708.27" y="207.5" ></text>
</g>
<g >
<title>ether_output (120 samples, 0.54%)</title><rect x="1117.5" y="117" width="6.3" height="15.0" fill="rgb(206,69,43)" rx="2" ry="2" />
<text  x="1120.49" y="127.5" ></text>
</g>
<g >
<title>ether_output (519 samples, 2.33%)</title><rect x="1123.8" y="101" width="27.5" height="15.0" fill="rgb(216,11,32)" rx="2" ry="2" />
<text  x="1126.85" y="111.5" >e..</text>
</g>
<g >
<title>handleevents (88 samples, 0.39%)</title><rect x="1185.3" y="245" width="4.7" height="15.0" fill="rgb(241,120,15)" rx="2" ry="2" />
<text  x="1188.34" y="255.5" ></text>
</g>
<g >
<title>pmap_kextract (44 samples, 0.20%)</title><rect x="913.2" y="117" width="2.3" height="15.0" fill="rgb(244,160,29)" rx="2" ry="2" />
<text  x="916.15" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (8,415 samples, 37.77%)</title><rect x="151.9" y="181" width="445.7" height="15.0" fill="rgb(244,9,52)" rx="2" ry="2" />
<text  x="154.95" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>_epoch_enter_preempt (48 samples, 0.22%)</title><rect x="42.8" y="229" width="2.5" height="15.0" fill="rgb(248,202,13)" rx="2" ry="2" />
<text  x="45.79" y="239.5" ></text>
</g>
<g >
<title>m_free (551 samples, 2.47%)</title><rect x="886.3" y="149" width="29.2" height="15.0" fill="rgb(237,180,29)" rx="2" ry="2" />
<text  x="889.30" y="159.5" >m_..</text>
</g>
<g >
<title>softclock_call_cc (9 samples, 0.04%)</title><rect x="1113.8" y="229" width="0.5" height="15.0" fill="rgb(230,173,15)" rx="2" ry="2" />
<text  x="1116.84" y="239.5" ></text>
</g>
<g >
<title>intr_event_handle (470 samples, 2.11%)</title><rect x="1157.3" y="261" width="24.9" height="15.0" fill="rgb(248,53,47)" rx="2" ry="2" />
<text  x="1160.32" y="271.5" >i..</text>
</g>
<g >
<title>atkbd_timeout (9 samples, 0.04%)</title><rect x="1113.8" y="213" width="0.5" height="15.0" fill="rgb(211,135,27)" rx="2" ry="2" />
<text  x="1116.84" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.02%)</title><rect x="597.4" y="149" width="0.2" height="15.0" fill="rgb(224,93,4)" rx="2" ry="2" />
<text  x="600.38" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.03%)</title><rect x="1112.2" y="197" width="0.4" height="15.0" fill="rgb(205,201,29)" rx="2" ry="2" />
<text  x="1115.19" y="207.5" ></text>
</g>
<g >
<title>lradix6_lookup (1,232 samples, 5.53%)</title><rect x="525.1" y="53" width="65.2" height="15.0" fill="rgb(205,111,23)" rx="2" ry="2" />
<text  x="528.08" y="63.5" >lradix6..</text>
</g>
<g >
<title>zone_alloc_limit (4 samples, 0.02%)</title><rect x="627.4" y="149" width="0.2" height="15.0" fill="rgb(223,172,1)" rx="2" ry="2" />
<text  x="630.41" y="159.5" ></text>
</g>
<g >
<title>m_pkthdr_init (140 samples, 0.63%)</title><rect x="693.7" y="197" width="7.4" height="15.0" fill="rgb(209,192,33)" rx="2" ry="2" />
<text  x="696.67" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,524 samples, 6.84%)</title><rect x="345.5" y="53" width="80.7" height="15.0" fill="rgb(250,138,16)" rx="2" ry="2" />
<text  x="348.48" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (6 samples, 0.03%)</title><rect x="632.4" y="181" width="0.4" height="15.0" fill="rgb(226,173,11)" rx="2" ry="2" />
<text  x="635.44" y="191.5" ></text>
</g>
<g >
<title>native_lapic_eoi (22 samples, 0.10%)</title><rect x="1181.0" y="245" width="1.2" height="15.0" fill="rgb(252,21,51)" rx="2" ry="2" />
<text  x="1184.05" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (120 samples, 0.54%)</title><rect x="1117.5" y="165" width="6.3" height="15.0" fill="rgb(254,43,1)" rx="2" ry="2" />
<text  x="1120.49" y="175.5" ></text>
</g>
<g >
<title>sleepq_signal (8 samples, 0.04%)</title><rect x="70.0" y="181" width="0.4" height="15.0" fill="rgb(210,75,53)" rx="2" ry="2" />
<text  x="73.01" y="191.5" ></text>
</g>
<g >
<title>memcpy_erms (79 samples, 0.35%)</title><rect x="432.0" y="69" width="4.2" height="15.0" fill="rgb(222,0,40)" rx="2" ry="2" />
<text  x="434.97" y="79.5" ></text>
</g>
<g >
<title>sleepq_signal (8 samples, 0.04%)</title><rect x="1177.5" y="197" width="0.4" height="15.0" fill="rgb(224,56,30)" rx="2" ry="2" />
<text  x="1180.50" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (519 samples, 2.33%)</title><rect x="1123.8" y="149" width="27.5" height="15.0" fill="rgb(206,162,50)" rx="2" ry="2" />
<text  x="1126.85" y="159.5" >n..</text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="632.2" y="101" width="0.2" height="15.0" fill="rgb(234,7,29)" rx="2" ry="2" />
<text  x="635.18" y="111.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (14 samples, 0.06%)</title><rect x="771.8" y="213" width="0.8" height="15.0" fill="rgb(254,126,48)" rx="2" ry="2" />
<text  x="774.84" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (120 samples, 0.54%)</title><rect x="1117.5" y="197" width="6.3" height="15.0" fill="rgb(251,190,3)" rx="2" ry="2" />
<text  x="1120.49" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (120 samples, 0.54%)</title><rect x="1117.5" y="85" width="6.3" height="15.0" fill="rgb(218,228,26)" rx="2" ry="2" />
<text  x="1120.49" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (15 samples, 0.07%)</title><rect x="19.0" y="229" width="0.7" height="15.0" fill="rgb(217,77,27)" rx="2" ry="2" />
<text  x="21.95" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (3 samples, 0.01%)</title><rect x="631.6" y="69" width="0.2" height="15.0" fill="rgb(251,156,21)" rx="2" ry="2" />
<text  x="634.65" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.01%)</title><rect x="21.3" y="261" width="0.1" height="15.0" fill="rgb(220,2,19)" rx="2" ry="2" />
<text  x="24.33" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (204 samples, 0.92%)</title><rect x="655.2" y="197" width="10.8" height="15.0" fill="rgb(253,170,54)" rx="2" ry="2" />
<text  x="658.22" y="207.5" ></text>
</g>
<g >
<title>drain_ring_lockless (2 samples, 0.01%)</title><rect x="19.0" y="85" width="0.1" height="15.0" fill="rgb(233,116,31)" rx="2" ry="2" />
<text  x="21.95" y="95.5" ></text>
</g>
<g >
<title>if_inc_counter (14 samples, 0.06%)</title><rect x="845.4" y="181" width="0.7" height="15.0" fill="rgb(243,172,28)" rx="2" ry="2" />
<text  x="848.36" y="191.5" ></text>
</g>
<g >
<title>m_freem (606 samples, 2.72%)</title><rect x="883.4" y="165" width="32.1" height="15.0" fill="rgb(253,167,47)" rx="2" ry="2" />
<text  x="886.39" y="175.5" >m_..</text>
</g>
<g >
<title>sleepq_lock (13 samples, 0.06%)</title><rect x="19.1" y="53" width="0.6" height="15.0" fill="rgb(230,141,30)" rx="2" ry="2" />
<text  x="22.06" y="63.5" ></text>
</g>
<g >
<title>drain_ring_lockless (6,060 samples, 27.20%)</title><rect x="777.2" y="213" width="321.0" height="15.0" fill="rgb(223,186,4)" rx="2" ry="2" />
<text  x="780.19" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ether_output_frame (519 samples, 2.33%)</title><rect x="1123.8" y="85" width="27.5" height="15.0" fill="rgb(221,226,5)" rx="2" ry="2" />
<text  x="1126.85" y="95.5" >e..</text>
</g>
<g >
<title>in6_lltable_lookup (255 samples, 1.14%)</title><rect x="453.7" y="53" width="13.5" height="15.0" fill="rgb(221,174,3)" rx="2" ry="2" />
<text  x="456.74" y="63.5" ></text>
</g>
<g >
<title>wakeup (109 samples, 0.49%)</title><rect x="1108.1" y="229" width="5.7" height="15.0" fill="rgb(218,191,45)" rx="2" ry="2" />
<text  x="1111.06" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (83 samples, 0.37%)</title><rect x="13.9" y="277" width="4.4" height="15.0" fill="rgb(225,32,53)" rx="2" ry="2" />
<text  x="16.87" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (15 samples, 0.07%)</title><rect x="19.0" y="181" width="0.7" height="15.0" fill="rgb(245,34,16)" rx="2" ry="2" />
<text  x="21.95" y="191.5" ></text>
</g>
<g >
<title>ether_demux (15 samples, 0.07%)</title><rect x="19.0" y="197" width="0.7" height="15.0" fill="rgb(214,129,26)" rx="2" ry="2" />
<text  x="21.95" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (519 samples, 2.33%)</title><rect x="1123.8" y="229" width="27.5" height="15.0" fill="rgb(251,101,27)" rx="2" ry="2" />
<text  x="1126.85" y="239.5" >i..</text>
</g>
<g >
<title>mb_dtor_mbuf (41 samples, 0.18%)</title><rect x="911.0" y="117" width="2.2" height="15.0" fill="rgb(206,219,37)" rx="2" ry="2" />
<text  x="913.98" y="127.5" ></text>
</g>
<g >
<title>sleepq_lock (47 samples, 0.21%)</title><rect x="1110.1" y="213" width="2.5" height="15.0" fill="rgb(219,71,26)" rx="2" ry="2" />
<text  x="1113.08" y="223.5" ></text>
</g>
<g >
<title>timercb (98 samples, 0.44%)</title><rect x="1184.8" y="261" width="5.2" height="15.0" fill="rgb(237,28,38)" rx="2" ry="2" />
<text  x="1187.81" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (518 samples, 2.33%)</title><rect x="1123.9" y="53" width="27.4" height="15.0" fill="rgb(250,86,21)" rx="2" ry="2" />
<text  x="1126.90" y="63.5" >g..</text>
</g>
<g >
<title>ixgbe_write_reg (66 samples, 0.30%)</title><rect x="1094.4" y="181" width="3.5" height="15.0" fill="rgb(209,142,33)" rx="2" ry="2" />
<text  x="1097.40" y="191.5" ></text>
</g>
<g >
<title>iflib_fast_intr (393 samples, 1.76%)</title><rect x="1160.1" y="245" width="20.8" height="15.0" fill="rgb(250,42,36)" rx="2" ry="2" />
<text  x="1163.13" y="255.5" ></text>
</g>
<g >
<title>sleepq_release (8 samples, 0.04%)</title><rect x="1177.1" y="197" width="0.4" height="15.0" fill="rgb(220,98,44)" rx="2" ry="2" />
<text  x="1180.08" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (120 samples, 0.54%)</title><rect x="1117.5" y="101" width="6.3" height="15.0" fill="rgb(247,69,7)" rx="2" ry="2" />
<text  x="1120.49" y="111.5" ></text>
</g>
<g >
<title>pmc_process_samples (57 samples, 0.26%)</title><rect x="1186.1" y="197" width="3.1" height="15.0" fill="rgb(232,70,48)" rx="2" ry="2" />
<text  x="1189.13" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (9 samples, 0.04%)</title><rect x="71.7" y="213" width="0.5" height="15.0" fill="rgb(208,133,5)" rx="2" ry="2" />
<text  x="74.70" y="223.5" ></text>
</g>
<g >
<title>handleevents (3 samples, 0.01%)</title><rect x="1114.3" y="213" width="0.2" height="15.0" fill="rgb(212,200,37)" rx="2" ry="2" />
<text  x="1117.31" y="223.5" ></text>
</g>
<g >
<title>ether_demux (7,620 samples, 34.20%)</title><rect x="186.7" y="149" width="403.6" height="15.0" fill="rgb(212,213,38)" rx="2" ry="2" />
<text  x="189.74" y="159.5" >ether_demux</text>
</g>
<g >
<title>lapic_et_start (4 samples, 0.02%)</title><rect x="1189.4" y="229" width="0.2" height="15.0" fill="rgb(218,192,17)" rx="2" ry="2" />
<text  x="1192.36" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (12 samples, 0.05%)</title><rect x="637.9" y="181" width="0.6" height="15.0" fill="rgb(240,68,13)" rx="2" ry="2" />
<text  x="640.90" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (120 samples, 0.54%)</title><rect x="1117.5" y="213" width="6.3" height="15.0" fill="rgb(219,0,35)" rx="2" ry="2" />
<text  x="1120.49" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (35 samples, 0.16%)</title><rect x="1102.9" y="229" width="1.8" height="15.0" fill="rgb(223,45,19)" rx="2" ry="2" />
<text  x="1105.87" y="239.5" ></text>
</g>
<g >
<title>_bus_dmamap_load_mbuf_sg (540 samples, 2.42%)</title><rect x="1024.4" y="149" width="28.6" height="15.0" fill="rgb(211,50,54)" rx="2" ry="2" />
<text  x="1027.43" y="159.5" >_b..</text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="631.7" y="53" width="0.1" height="15.0" fill="rgb(229,86,2)" rx="2" ry="2" />
<text  x="634.70" y="63.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (2 samples, 0.01%)</title><rect x="19.0" y="37" width="0.1" height="15.0" fill="rgb(235,178,38)" rx="2" ry="2" />
<text  x="21.95" y="47.5" ></text>
</g>
<g >
<title>soft_get_config (6 samples, 0.03%)</title><rect x="1188.7" y="181" width="0.3" height="15.0" fill="rgb(241,201,11)" rx="2" ry="2" />
<text  x="1191.73" y="191.5" ></text>
</g>
</g>
</svg>
