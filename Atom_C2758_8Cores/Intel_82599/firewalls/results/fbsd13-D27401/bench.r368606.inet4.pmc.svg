<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>spinlock_enter (201 samples, 0.12%)</title><rect x="1174.3" y="213" width="1.5" height="15.0" fill="rgb(212,163,52)" rx="2" ry="2" />
<text  x="1177.31" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (50 samples, 0.03%)</title><rect x="1113.9" y="245" width="0.4" height="15.0" fill="rgb(253,25,51)" rx="2" ry="2" />
<text  x="1116.93" y="255.5" ></text>
</g>
<g >
<title>_task_fn_tx (45,688 samples, 28.08%)</title><rect x="667.5" y="229" width="331.3" height="15.0" fill="rgb(242,77,3)" rx="2" ry="2" />
<text  x="670.47" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>netisr_dispatch_src (794 samples, 0.49%)</title><rect x="1154.6" y="197" width="5.7" height="15.0" fill="rgb(244,125,19)" rx="2" ry="2" />
<text  x="1157.55" y="207.5" ></text>
</g>
<g >
<title>iflib_get_ifp (18 samples, 0.01%)</title><rect x="1182.1" y="213" width="0.1" height="15.0" fill="rgb(239,50,10)" rx="2" ry="2" />
<text  x="1185.06" y="223.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (574 samples, 0.35%)</title><rect x="993.0" y="213" width="4.1" height="15.0" fill="rgb(227,38,17)" rx="2" ry="2" />
<text  x="995.95" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (20 samples, 0.01%)</title><rect x="992.8" y="213" width="0.2" height="15.0" fill="rgb(207,37,50)" rx="2" ry="2" />
<text  x="995.81" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (580 samples, 0.36%)</title><rect x="63.7" y="181" width="4.2" height="15.0" fill="rgb(210,146,8)" rx="2" ry="2" />
<text  x="66.67" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (52,135 samples, 32.04%)</title><rect x="150.9" y="165" width="378.1" height="15.0" fill="rgb(218,189,16)" rx="2" ry="2" />
<text  x="153.88" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>netisr_dispatch (43 samples, 0.03%)</title><rect x="628.2" y="197" width="0.3" height="15.0" fill="rgb(237,6,23)" rx="2" ry="2" />
<text  x="631.19" y="207.5" ></text>
</g>
<g >
<title>msleep_spin_sbt (2,555 samples, 1.57%)</title><rect x="1009.6" y="245" width="18.5" height="15.0" fill="rgb(219,155,51)" rx="2" ry="2" />
<text  x="1012.59" y="255.5" ></text>
</g>
<g >
<title>ip_findroute (10,771 samples, 6.62%)</title><rect x="443.9" y="85" width="78.1" height="15.0" fill="rgb(239,46,17)" rx="2" ry="2" />
<text  x="446.90" y="95.5" >ip_findro..</text>
</g>
<g >
<title>soft_get_config (41 samples, 0.03%)</title><rect x="1188.5" y="181" width="0.3" height="15.0" fill="rgb(251,175,11)" rx="2" ry="2" />
<text  x="1191.55" y="191.5" ></text>
</g>
<g >
<title>ether_input (55,163 samples, 33.90%)</title><rect x="128.9" y="197" width="400.1" height="15.0" fill="rgb(236,184,19)" rx="2" ry="2" />
<text  x="131.92" y="207.5" >ether_input</text>
</g>
<g >
<title>cache_alloc_retry (176 samples, 0.11%)</title><rect x="551.8" y="181" width="1.2" height="15.0" fill="rgb(224,224,2)" rx="2" ry="2" />
<text  x="554.75" y="191.5" ></text>
</g>
<g >
<title>runq_choose (23 samples, 0.01%)</title><rect x="1017.5" y="165" width="0.2" height="15.0" fill="rgb(223,189,11)" rx="2" ry="2" />
<text  x="1020.49" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (65 samples, 0.04%)</title><rect x="1024.2" y="197" width="0.4" height="15.0" fill="rgb(232,15,48)" rx="2" ry="2" />
<text  x="1027.16" y="207.5" ></text>
</g>
<g >
<title>choosethread (137 samples, 0.08%)</title><rect x="1016.9" y="197" width="1.0" height="15.0" fill="rgb(232,218,43)" rx="2" ry="2" />
<text  x="1019.94" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (272 samples, 0.17%)</title><rect x="1006.2" y="213" width="2.0" height="15.0" fill="rgb(212,191,11)" rx="2" ry="2" />
<text  x="1009.22" y="223.5" ></text>
</g>
<g >
<title>fpu_activate_sw (63 samples, 0.04%)</title><rect x="1012.5" y="197" width="0.5" height="15.0" fill="rgb(205,20,17)" rx="2" ry="2" />
<text  x="1015.52" y="207.5" ></text>
</g>
<g >
<title>m_freem (3,559 samples, 2.19%)</title><rect x="813.3" y="165" width="25.8" height="15.0" fill="rgb(236,159,12)" rx="2" ry="2" />
<text  x="816.26" y="175.5" >m..</text>
</g>
<g >
<title>ether_output (3,317 samples, 2.04%)</title><rect x="1130.5" y="101" width="24.1" height="15.0" fill="rgb(234,151,12)" rx="2" ry="2" />
<text  x="1133.49" y="111.5" >e..</text>
</g>
<g >
<title>ether_output_frame (1,895 samples, 1.16%)</title><rect x="1116.8" y="101" width="13.7" height="15.0" fill="rgb(221,95,29)" rx="2" ry="2" />
<text  x="1119.75" y="111.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,474 samples, 1.52%)</title><rect x="821.1" y="133" width="18.0" height="15.0" fill="rgb(242,137,50)" rx="2" ry="2" />
<text  x="824.13" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (138,439 samples, 85.09%)</title><rect x="24.1" y="261" width="1004.0" height="15.0" fill="rgb(246,68,9)" rx="2" ry="2" />
<text  x="27.13" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>doreti (174 samples, 0.11%)</title><rect x="22.8" y="277" width="1.3" height="15.0" fill="rgb(229,217,18)" rx="2" ry="2" />
<text  x="25.81" y="287.5" ></text>
</g>
<g >
<title>rn_match (6,168 samples, 3.79%)</title><rect x="472.5" y="53" width="44.7" height="15.0" fill="rgb(251,26,9)" rx="2" ry="2" />
<text  x="475.51" y="63.5" >rn_m..</text>
</g>
<g >
<title>Xapic_isr1_pti (555 samples, 0.34%)</title><rect x="12.5" y="277" width="4.0" height="15.0" fill="rgb(244,104,21)" rx="2" ry="2" />
<text  x="15.49" y="287.5" ></text>
</g>
<g >
<title>if_getcapenable (14 samples, 0.01%)</title><rect x="992.7" y="213" width="0.1" height="15.0" fill="rgb(231,98,48)" rx="2" ry="2" />
<text  x="995.71" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (427 samples, 0.26%)</title><rect x="553.3" y="181" width="3.1" height="15.0" fill="rgb(243,179,38)" rx="2" ry="2" />
<text  x="556.31" y="191.5" ></text>
</g>
<g >
<title>setrunnable (214 samples, 0.13%)</title><rect x="1120.6" y="37" width="1.5" height="15.0" fill="rgb(252,171,45)" rx="2" ry="2" />
<text  x="1123.55" y="47.5" ></text>
</g>
<g >
<title>iflib_txq_drain (41,757 samples, 25.66%)</title><rect x="689.5" y="197" width="302.8" height="15.0" fill="rgb(234,70,21)" rx="2" ry="2" />
<text  x="692.48" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>_thread_lock (35 samples, 0.02%)</title><rect x="1027.1" y="213" width="0.2" height="15.0" fill="rgb(222,70,7)" rx="2" ry="2" />
<text  x="1030.08" y="223.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (155 samples, 0.10%)</title><rect x="664.7" y="197" width="1.1" height="15.0" fill="rgb(215,106,4)" rx="2" ry="2" />
<text  x="667.66" y="207.5" ></text>
</g>
<g >
<title>cpu_search_highest (430 samples, 0.26%)</title><rect x="1017.9" y="197" width="3.2" height="15.0" fill="rgb(224,226,27)" rx="2" ry="2" />
<text  x="1020.94" y="207.5" ></text>
</g>
<g >
<title>sched_idletd (11,986 samples, 7.37%)</title><rect x="1029.7" y="261" width="86.9" height="15.0" fill="rgb(219,225,39)" rx="2" ry="2" />
<text  x="1032.66" y="271.5" >sched_idletd</text>
</g>
<g >
<title>ether_output_frame (3,317 samples, 2.04%)</title><rect x="1130.5" y="85" width="24.1" height="15.0" fill="rgb(219,31,29)" rx="2" ry="2" />
<text  x="1133.49" y="95.5" >e..</text>
</g>
<g >
<title>rsb_flush (79 samples, 0.05%)</title><rect x="1013.7" y="213" width="0.6" height="15.0" fill="rgb(222,156,4)" rx="2" ry="2" />
<text  x="1016.71" y="223.5" ></text>
</g>
<g >
<title>fib4_lookup (10,255 samples, 6.30%)</title><rect x="447.6" y="69" width="74.4" height="15.0" fill="rgb(249,40,17)" rx="2" ry="2" />
<text  x="450.65" y="79.5" >fib4_loo..</text>
</g>
<g >
<title>ether_output_frame (11,698 samples, 7.19%)</title><rect x="318.7" y="69" width="84.8" height="15.0" fill="rgb(214,35,30)" rx="2" ry="2" />
<text  x="321.66" y="79.5" >ether_out..</text>
</g>
<g >
<title>tc_windup (23 samples, 0.01%)</title><rect x="1189.0" y="197" width="0.2" height="15.0" fill="rgb(228,151,40)" rx="2" ry="2" />
<text  x="1192.00" y="207.5" ></text>
</g>
<g >
<title>handleevents (572 samples, 0.35%)</title><rect x="1185.8" y="245" width="4.2" height="15.0" fill="rgb(251,173,18)" rx="2" ry="2" />
<text  x="1188.82" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (1,649 samples, 1.01%)</title><rect x="1141.6" y="37" width="11.9" height="15.0" fill="rgb(232,144,26)" rx="2" ry="2" />
<text  x="1144.58" y="47.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (53 samples, 0.03%)</title><rect x="1092.5" y="229" width="0.4" height="15.0" fill="rgb(235,193,32)" rx="2" ry="2" />
<text  x="1095.48" y="239.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (16 samples, 0.01%)</title><rect x="1011.8" y="229" width="0.1" height="15.0" fill="rgb(242,139,25)" rx="2" ry="2" />
<text  x="1014.83" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,980 samples, 1.83%)</title><rect x="346.9" y="37" width="21.6" height="15.0" fill="rgb(233,183,42)" rx="2" ry="2" />
<text  x="349.92" y="47.5" >g..</text>
</g>
<g >
<title>netmap_rx_irq (107 samples, 0.07%)</title><rect x="666.7" y="213" width="0.8" height="15.0" fill="rgb(210,102,11)" rx="2" ry="2" />
<text  x="669.70" y="223.5" ></text>
</g>
<g >
<title>intr_lookup_source (85 samples, 0.05%)</title><rect x="1184.3" y="261" width="0.7" height="15.0" fill="rgb(221,218,3)" rx="2" ry="2" />
<text  x="1187.34" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1,894 samples, 1.16%)</title><rect x="1116.8" y="69" width="13.7" height="15.0" fill="rgb(246,226,30)" rx="2" ry="2" />
<text  x="1119.76" y="79.5" ></text>
</g>
<g >
<title>wakeup_any (794 samples, 0.49%)</title><rect x="1154.6" y="85" width="5.7" height="15.0" fill="rgb(232,129,53)" rx="2" ry="2" />
<text  x="1157.55" y="95.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (56 samples, 0.03%)</title><rect x="62.9" y="197" width="0.4" height="15.0" fill="rgb(248,229,16)" rx="2" ry="2" />
<text  x="65.93" y="207.5" ></text>
</g>
<g >
<title>sleepq_release (64 samples, 0.04%)</title><rect x="1125.6" y="37" width="0.5" height="15.0" fill="rgb(209,137,8)" rx="2" ry="2" />
<text  x="1128.65" y="47.5" ></text>
</g>
<g >
<title>lock_delay (453 samples, 0.28%)</title><rect x="1116.8" y="37" width="3.2" height="15.0" fill="rgb(248,11,41)" rx="2" ry="2" />
<text  x="1119.76" y="47.5" ></text>
</g>
<g >
<title>vm_pageout_worker (19 samples, 0.01%)</title><rect x="1116.6" y="245" width="0.2" height="15.0" fill="rgb(241,59,6)" rx="2" ry="2" />
<text  x="1119.61" y="255.5" ></text>
</g>
<g >
<title>sleepq_release (40 samples, 0.02%)</title><rect x="67.9" y="181" width="0.3" height="15.0" fill="rgb(241,172,26)" rx="2" ry="2" />
<text  x="70.87" y="191.5" ></text>
</g>
<g >
<title>setrunnable (794 samples, 0.49%)</title><rect x="1154.6" y="69" width="5.7" height="15.0" fill="rgb(224,100,21)" rx="2" ry="2" />
<text  x="1157.55" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (1,895 samples, 1.16%)</title><rect x="1116.8" y="277" width="13.7" height="15.0" fill="rgb(215,82,20)" rx="2" ry="2" />
<text  x="1119.75" y="287.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (22 samples, 0.01%)</title><rect x="1174.2" y="213" width="0.1" height="15.0" fill="rgb(213,190,30)" rx="2" ry="2" />
<text  x="1177.15" y="223.5" ></text>
</g>
<g >
<title>statclock (35 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(250,141,15)" rx="2" ry="2" />
<text  x="1192.71" y="239.5" ></text>
</g>
<g >
<title>ether_output (1,895 samples, 1.16%)</title><rect x="1116.8" y="117" width="13.7" height="15.0" fill="rgb(225,81,20)" rx="2" ry="2" />
<text  x="1119.75" y="127.5" ></text>
</g>
<g >
<title>cpu_search_highest (1,680 samples, 1.03%)</title><rect x="1092.9" y="245" width="12.1" height="15.0" fill="rgb(219,142,6)" rx="2" ry="2" />
<text  x="1095.86" y="255.5" ></text>
</g>
<g >
<title>sleepq_add (386 samples, 0.24%)</title><rect x="1021.8" y="229" width="2.8" height="15.0" fill="rgb(220,139,40)" rx="2" ry="2" />
<text  x="1024.83" y="239.5" ></text>
</g>
<g >
<title>pmap_activate_sw (69 samples, 0.04%)</title><rect x="1013.0" y="197" width="0.5" height="15.0" fill="rgb(213,184,17)" rx="2" ry="2" />
<text  x="1015.98" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (3,317 samples, 2.04%)</title><rect x="1130.5" y="69" width="24.1" height="15.0" fill="rgb(251,69,17)" rx="2" ry="2" />
<text  x="1133.49" y="79.5" >i..</text>
</g>
<g >
<title>cpu_idle (55 samples, 0.03%)</title><rect x="1092.5" y="245" width="0.4" height="15.0" fill="rgb(205,29,53)" rx="2" ry="2" />
<text  x="1095.46" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (142 samples, 0.09%)</title><rect x="1175.8" y="213" width="1.0" height="15.0" fill="rgb(208,49,40)" rx="2" ry="2" />
<text  x="1178.77" y="223.5" ></text>
</g>
<g >
<title>vn_write (98 samples, 0.06%)</title><rect x="1028.9" y="229" width="0.7" height="15.0" fill="rgb(245,160,33)" rx="2" ry="2" />
<text  x="1031.91" y="239.5" ></text>
</g>
<g >
<title>drain_ring_lockless (44,477 samples, 27.34%)</title><rect x="670.1" y="213" width="322.6" height="15.0" fill="rgb(210,199,15)" rx="2" ry="2" />
<text  x="673.14" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>cpu_switch (416 samples, 0.26%)</title><rect x="1105.4" y="229" width="3.0" height="15.0" fill="rgb(238,64,2)" rx="2" ry="2" />
<text  x="1108.42" y="239.5" ></text>
</g>
<g >
<title>rdtsc (24 samples, 0.01%)</title><rect x="1108.4" y="229" width="0.2" height="15.0" fill="rgb(207,200,21)" rx="2" ry="2" />
<text  x="1111.44" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (21 samples, 0.01%)</title><rect x="1026.7" y="213" width="0.1" height="15.0" fill="rgb(236,142,35)" rx="2" ry="2" />
<text  x="1029.65" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,895 samples, 1.16%)</title><rect x="1116.8" y="213" width="13.7" height="15.0" fill="rgb(230,53,36)" rx="2" ry="2" />
<text  x="1119.75" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (794 samples, 0.49%)</title><rect x="1154.6" y="101" width="5.7" height="15.0" fill="rgb(214,176,28)" rx="2" ry="2" />
<text  x="1157.55" y="111.5" ></text>
</g>
<g >
<title>lapic_handle_intr (131 samples, 0.08%)</title><rect x="1184.0" y="277" width="1.0" height="15.0" fill="rgb(240,229,21)" rx="2" ry="2" />
<text  x="1187.01" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch (43 samples, 0.03%)</title><rect x="528.7" y="149" width="0.3" height="15.0" fill="rgb(229,18,32)" rx="2" ry="2" />
<text  x="531.68" y="159.5" ></text>
</g>
<g >
<title>tdq_notify (472 samples, 0.29%)</title><rect x="1156.8" y="37" width="3.4" height="15.0" fill="rgb(238,58,41)" rx="2" ry="2" />
<text  x="1159.81" y="47.5" ></text>
</g>
<g >
<title>cpu_search_highest (871 samples, 0.54%)</title><rect x="1098.7" y="213" width="6.3" height="15.0" fill="rgb(226,19,53)" rx="2" ry="2" />
<text  x="1101.73" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (38 samples, 0.02%)</title><rect x="1021.1" y="197" width="0.3" height="15.0" fill="rgb(223,82,18)" rx="2" ry="2" />
<text  x="1024.08" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (40 samples, 0.02%)</title><rect x="48.9" y="213" width="0.3" height="15.0" fill="rgb(216,154,41)" rx="2" ry="2" />
<text  x="51.87" y="223.5" ></text>
</g>
<g >
<title>sleepq_wait (44 samples, 0.03%)</title><rect x="1027.0" y="229" width="0.3" height="15.0" fill="rgb(227,100,52)" rx="2" ry="2" />
<text  x="1030.02" y="239.5" ></text>
</g>
<g >
<title>ether_output (794 samples, 0.49%)</title><rect x="1154.6" y="149" width="5.7" height="15.0" fill="rgb(228,77,11)" rx="2" ry="2" />
<text  x="1157.55" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (22 samples, 0.01%)</title><rect x="1156.6" y="37" width="0.1" height="15.0" fill="rgb(238,39,9)" rx="2" ry="2" />
<text  x="1159.57" y="47.5" ></text>
</g>
<g >
<title>lapic_handle_timer (691 samples, 0.42%)</title><rect x="1185.0" y="277" width="5.0" height="15.0" fill="rgb(218,186,5)" rx="2" ry="2" />
<text  x="1187.96" y="287.5" ></text>
</g>
<g >
<title>ether_demux (794 samples, 0.49%)</title><rect x="1154.6" y="213" width="5.7" height="15.0" fill="rgb(240,180,21)" rx="2" ry="2" />
<text  x="1157.55" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (528 samples, 0.32%)</title><rect x="1177.3" y="213" width="3.8" height="15.0" fill="rgb(224,72,12)" rx="2" ry="2" />
<text  x="1180.26" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (41,293 samples, 25.38%)</title><rect x="222.5" y="101" width="299.5" height="15.0" fill="rgb(206,79,41)" rx="2" ry="2" />
<text  x="225.55" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>vm_pageout (19 samples, 0.01%)</title><rect x="1116.6" y="261" width="0.2" height="15.0" fill="rgb(222,11,45)" rx="2" ry="2" />
<text  x="1119.61" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (141 samples, 0.09%)</title><rect x="19.9" y="53" width="1.0" height="15.0" fill="rgb(249,223,6)" rx="2" ry="2" />
<text  x="22.91" y="63.5" ></text>
</g>
<g >
<title>ether_demux (822 samples, 0.51%)</title><rect x="16.8" y="197" width="6.0" height="15.0" fill="rgb(213,186,36)" rx="2" ry="2" />
<text  x="19.85" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (181 samples, 0.11%)</title><rect x="776.2" y="181" width="1.3" height="15.0" fill="rgb(239,123,51)" rx="2" ry="2" />
<text  x="779.16" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (1,375 samples, 0.85%)</title><rect x="1120.5" y="53" width="10.0" height="15.0" fill="rgb(207,204,15)" rx="2" ry="2" />
<text  x="1123.52" y="63.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (102 samples, 0.06%)</title><rect x="929.8" y="165" width="0.7" height="15.0" fill="rgb(239,13,12)" rx="2" ry="2" />
<text  x="932.78" y="175.5" ></text>
</g>
<g >
<title>spinlock_enter (90 samples, 0.06%)</title><rect x="67.2" y="165" width="0.7" height="15.0" fill="rgb(234,134,50)" rx="2" ry="2" />
<text  x="70.22" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (53 samples, 0.03%)</title><rect x="992.3" y="197" width="0.4" height="15.0" fill="rgb(249,29,36)" rx="2" ry="2" />
<text  x="995.32" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (2,720 samples, 1.67%)</title><rect x="580.4" y="197" width="19.7" height="15.0" fill="rgb(232,7,41)" rx="2" ry="2" />
<text  x="583.39" y="207.5" ></text>
</g>
<g >
<title>if_inc_counter (112 samples, 0.07%)</title><rect x="530.0" y="197" width="0.8" height="15.0" fill="rgb(215,211,19)" rx="2" ry="2" />
<text  x="533.03" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (3,645 samples, 2.24%)</title><rect x="959.4" y="165" width="26.4" height="15.0" fill="rgb(228,4,11)" rx="2" ry="2" />
<text  x="962.37" y="175.5" >i..</text>
</g>
<g >
<title>in_lltable_lookup (919 samples, 0.56%)</title><rect x="308.2" y="53" width="6.7" height="15.0" fill="rgb(219,211,32)" rx="2" ry="2" />
<text  x="311.25" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (58 samples, 0.04%)</title><rect x="1021.4" y="197" width="0.4" height="15.0" fill="rgb(253,33,1)" rx="2" ry="2" />
<text  x="1024.35" y="207.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (8,493 samples, 5.22%)</title><rect x="777.5" y="181" width="61.6" height="15.0" fill="rgb(224,63,21)" rx="2" ry="2" />
<text  x="780.48" y="191.5" >iflib_..</text>
</g>
<g >
<title>sleepq_remove_thread (252 samples, 0.15%)</title><rect x="20.9" y="37" width="1.9" height="15.0" fill="rgb(251,13,48)" rx="2" ry="2" />
<text  x="23.93" y="47.5" ></text>
</g>
<g >
<title>pmap_kextract (189 samples, 0.12%)</title><rect x="958.0" y="117" width="1.3" height="15.0" fill="rgb(232,203,44)" rx="2" ry="2" />
<text  x="960.96" y="127.5" ></text>
</g>
<g >
<title>ip_input (1,895 samples, 1.16%)</title><rect x="1116.8" y="149" width="13.7" height="15.0" fill="rgb(206,105,24)" rx="2" ry="2" />
<text  x="1119.75" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (47 samples, 0.03%)</title><rect x="1120.2" y="37" width="0.3" height="15.0" fill="rgb(228,47,54)" rx="2" ry="2" />
<text  x="1123.18" y="47.5" ></text>
</g>
<g >
<title>zone_import (53 samples, 0.03%)</title><rect x="552.6" y="149" width="0.4" height="15.0" fill="rgb(236,228,3)" rx="2" ry="2" />
<text  x="555.62" y="159.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,317 samples, 2.04%)</title><rect x="1130.5" y="245" width="24.1" height="15.0" fill="rgb(227,224,23)" rx="2" ry="2" />
<text  x="1133.49" y="255.5" >_..</text>
</g>
<g >
<title>sleepq_lock (489 samples, 0.30%)</title><rect x="1122.1" y="37" width="3.5" height="15.0" fill="rgb(245,162,52)" rx="2" ry="2" />
<text  x="1125.10" y="47.5" ></text>
</g>
<g >
<title>acpi_cpu_idle_mwait (51 samples, 0.03%)</title><rect x="1092.5" y="197" width="0.4" height="15.0" fill="rgb(248,180,35)" rx="2" ry="2" />
<text  x="1095.49" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (822 samples, 0.51%)</title><rect x="16.8" y="213" width="6.0" height="15.0" fill="rgb(219,205,29)" rx="2" ry="2" />
<text  x="19.85" y="223.5" ></text>
</g>
<g >
<title>runq_choose (153 samples, 0.09%)</title><rect x="1112.3" y="181" width="1.1" height="15.0" fill="rgb(237,37,45)" rx="2" ry="2" />
<text  x="1115.33" y="191.5" ></text>
</g>
<g >
<title>mi_switch (1,225 samples, 0.75%)</title><rect x="1105.0" y="245" width="8.9" height="15.0" fill="rgb(241,30,1)" rx="2" ry="2" />
<text  x="1108.05" y="255.5" ></text>
</g>
<g >
<title>thread_lock_set (29 samples, 0.02%)</title><rect x="1026.8" y="213" width="0.2" height="15.0" fill="rgb(218,223,18)" rx="2" ry="2" />
<text  x="1029.81" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (822 samples, 0.51%)</title><rect x="16.8" y="181" width="6.0" height="15.0" fill="rgb(249,119,27)" rx="2" ry="2" />
<text  x="19.85" y="191.5" ></text>
</g>
<g >
<title>if_getcapenable (20 samples, 0.01%)</title><rect x="529.0" y="197" width="0.1" height="15.0" fill="rgb(239,114,31)" rx="2" ry="2" />
<text  x="531.99" y="207.5" ></text>
</g>
<g >
<title>sleepq_release (109 samples, 0.07%)</title><rect x="1008.2" y="213" width="0.8" height="15.0" fill="rgb(205,223,44)" rx="2" ry="2" />
<text  x="1011.19" y="223.5" ></text>
</g>
<g >
<title>Xtimerint_pti (20 samples, 0.01%)</title><rect x="16.7" y="277" width="0.1" height="15.0" fill="rgb(217,75,38)" rx="2" ry="2" />
<text  x="19.70" y="287.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (64 samples, 0.04%)</title><rect x="1188.1" y="181" width="0.4" height="15.0" fill="rgb(254,126,47)" rx="2" ry="2" />
<text  x="1191.09" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3,317 samples, 2.04%)</title><rect x="1130.5" y="197" width="24.1" height="15.0" fill="rgb(234,17,3)" rx="2" ry="2" />
<text  x="1133.49" y="207.5" >n..</text>
</g>
<g >
<title>ixgbe_write_reg (57 samples, 0.04%)</title><rect x="1182.2" y="213" width="0.4" height="15.0" fill="rgb(228,33,30)" rx="2" ry="2" />
<text  x="1185.19" y="223.5" ></text>
</g>
<g >
<title>sched_sleep (26 samples, 0.02%)</title><rect x="1026.5" y="213" width="0.2" height="15.0" fill="rgb(233,32,24)" rx="2" ry="2" />
<text  x="1029.47" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (234 samples, 0.14%)</title><rect x="837.4" y="117" width="1.7" height="15.0" fill="rgb(244,20,49)" rx="2" ry="2" />
<text  x="840.37" y="127.5" ></text>
</g>
<g >
<title>timekeep_push_vdso (16 samples, 0.01%)</title><rect x="1189.0" y="181" width="0.2" height="15.0" fill="rgb(237,113,5)" rx="2" ry="2" />
<text  x="1192.05" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (53,804 samples, 33.07%)</title><rect x="138.8" y="181" width="390.2" height="15.0" fill="rgb(243,98,44)" rx="2" ry="2" />
<text  x="141.78" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (2,467 samples, 1.52%)</title><rect x="795.4" y="165" width="17.9" height="15.0" fill="rgb(254,103,51)" rx="2" ry="2" />
<text  x="798.37" y="175.5" ></text>
</g>
<g >
<title>ether_input (1,895 samples, 1.16%)</title><rect x="1116.8" y="229" width="13.7" height="15.0" fill="rgb(239,213,16)" rx="2" ry="2" />
<text  x="1119.75" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (171 samples, 0.11%)</title><rect x="47.9" y="229" width="1.3" height="15.0" fill="rgb(240,200,25)" rx="2" ry="2" />
<text  x="50.92" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (46 samples, 0.03%)</title><rect x="1092.1" y="229" width="0.4" height="15.0" fill="rgb(248,5,5)" rx="2" ry="2" />
<text  x="1095.13" y="239.5" ></text>
</g>
<g >
<title>fpu_activate_sw (79 samples, 0.05%)</title><rect x="1107.7" y="213" width="0.6" height="15.0" fill="rgb(227,111,40)" rx="2" ry="2" />
<text  x="1110.71" y="223.5" ></text>
</g>
<g >
<title>sched_switch (21 samples, 0.01%)</title><rect x="1183.8" y="245" width="0.1" height="15.0" fill="rgb(212,227,11)" rx="2" ry="2" />
<text  x="1186.77" y="255.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2,254 samples, 1.39%)</title><rect x="556.7" y="181" width="16.3" height="15.0" fill="rgb(248,61,47)" rx="2" ry="2" />
<text  x="559.66" y="191.5" ></text>
</g>
<g >
<title>timercb (656 samples, 0.40%)</title><rect x="1185.2" y="261" width="4.8" height="15.0" fill="rgb(251,2,37)" rx="2" ry="2" />
<text  x="1188.21" y="271.5" ></text>
</g>
<g >
<title>fork_exit (150,658 samples, 92.60%)</title><rect x="24.1" y="277" width="1092.7" height="15.0" fill="rgb(205,107,4)" rx="2" ry="2" />
<text  x="27.12" y="287.5" >fork_exit</text>
</g>
<g >
<title>_rm_rlock (1,224 samples, 0.75%)</title><rect x="459.8" y="53" width="8.9" height="15.0" fill="rgb(220,100,7)" rx="2" ry="2" />
<text  x="462.78" y="63.5" ></text>
</g>
<g >
<title>tdq_move (17 samples, 0.01%)</title><rect x="1114.3" y="245" width="0.1" height="15.0" fill="rgb(232,198,1)" rx="2" ry="2" />
<text  x="1117.32" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (38 samples, 0.02%)</title><rect x="553.0" y="181" width="0.3" height="15.0" fill="rgb(237,36,5)" rx="2" ry="2" />
<text  x="556.03" y="191.5" ></text>
</g>
<g >
<title>uma_small_alloc (30 samples, 0.02%)</title><rect x="552.7" y="117" width="0.3" height="15.0" fill="rgb(238,191,31)" rx="2" ry="2" />
<text  x="555.74" y="127.5" ></text>
</g>
<g >
<title>mi_switch (1,363 samples, 0.84%)</title><rect x="1011.9" y="229" width="9.9" height="15.0" fill="rgb(232,1,34)" rx="2" ry="2" />
<text  x="1014.95" y="239.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (519 samples, 0.32%)</title><rect x="1116.8" y="53" width="3.7" height="15.0" fill="rgb(248,7,37)" rx="2" ry="2" />
<text  x="1119.76" y="63.5" ></text>
</g>
<g >
<title>keg_alloc_slab (47 samples, 0.03%)</title><rect x="552.7" y="133" width="0.3" height="15.0" fill="rgb(209,35,16)" rx="2" ry="2" />
<text  x="555.65" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch (133 samples, 0.08%)</title><rect x="137.8" y="181" width="1.0" height="15.0" fill="rgb(208,38,26)" rx="2" ry="2" />
<text  x="140.82" y="191.5" ></text>
</g>
<g >
<title>ip_input (794 samples, 0.49%)</title><rect x="1154.6" y="181" width="5.7" height="15.0" fill="rgb(219,158,31)" rx="2" ry="2" />
<text  x="1157.55" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (794 samples, 0.49%)</title><rect x="1154.6" y="229" width="5.7" height="15.0" fill="rgb(227,143,36)" rx="2" ry="2" />
<text  x="1157.55" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (822 samples, 0.51%)</title><rect x="16.8" y="101" width="6.0" height="15.0" fill="rgb(239,176,47)" rx="2" ry="2" />
<text  x="19.85" y="111.5" ></text>
</g>
<g >
<title>sched_add (401 samples, 0.25%)</title><rect x="16.9" y="37" width="2.9" height="15.0" fill="rgb(212,151,13)" rx="2" ry="2" />
<text  x="19.87" y="47.5" ></text>
</g>
<g >
<title>lock_delay (50 samples, 0.03%)</title><rect x="1115.9" y="229" width="0.4" height="15.0" fill="rgb(224,57,4)" rx="2" ry="2" />
<text  x="1118.94" y="239.5" ></text>
</g>
<g >
<title>ffs_alloccg (19 samples, 0.01%)</title><rect x="1029.2" y="149" width="0.1" height="15.0" fill="rgb(241,173,6)" rx="2" ry="2" />
<text  x="1032.18" y="159.5" ></text>
</g>
<g >
<title>sched_priority (84 samples, 0.05%)</title><rect x="1156.0" y="37" width="0.6" height="15.0" fill="rgb(217,180,26)" rx="2" ry="2" />
<text  x="1158.96" y="47.5" ></text>
</g>
<g >
<title>m_adj (611 samples, 0.38%)</title><rect x="180.2" y="133" width="4.4" height="15.0" fill="rgb(254,6,26)" rx="2" ry="2" />
<text  x="183.19" y="143.5" ></text>
</g>
<g >
<title>uma_zfree_arg (18 samples, 0.01%)</title><rect x="552.4" y="149" width="0.2" height="15.0" fill="rgb(248,25,43)" rx="2" ry="2" />
<text  x="555.43" y="159.5" ></text>
</g>
<g >
<title>mi_switch (36 samples, 0.02%)</title><rect x="1183.7" y="261" width="0.2" height="15.0" fill="rgb(250,182,5)" rx="2" ry="2" />
<text  x="1186.66" y="271.5" ></text>
</g>
<g >
<title>cache_free (55 samples, 0.03%)</title><rect x="835.4" y="117" width="0.4" height="15.0" fill="rgb(228,76,18)" rx="2" ry="2" />
<text  x="838.40" y="127.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (35 samples, 0.02%)</title><rect x="556.4" y="181" width="0.3" height="15.0" fill="rgb(233,8,30)" rx="2" ry="2" />
<text  x="559.40" y="191.5" ></text>
</g>
<g >
<title>pmclog_loop (98 samples, 0.06%)</title><rect x="1028.9" y="261" width="0.7" height="15.0" fill="rgb(245,173,40)" rx="2" ry="2" />
<text  x="1031.91" y="271.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (188 samples, 0.12%)</title><rect x="1130.5" y="37" width="1.4" height="15.0" fill="rgb(247,123,31)" rx="2" ry="2" />
<text  x="1133.50" y="47.5" ></text>
</g>
<g >
<title>sched_choose (119 samples, 0.07%)</title><rect x="1017.1" y="181" width="0.8" height="15.0" fill="rgb(234,34,44)" rx="2" ry="2" />
<text  x="1020.07" y="191.5" ></text>
</g>
<g >
<title>sleepq_resume_thread (48 samples, 0.03%)</title><rect x="1126.1" y="37" width="0.4" height="15.0" fill="rgb(215,49,45)" rx="2" ry="2" />
<text  x="1129.11" y="47.5" ></text>
</g>
<g >
<title>hardclock (394 samples, 0.24%)</title><rect x="1186.3" y="229" width="2.9" height="15.0" fill="rgb(229,213,0)" rx="2" ry="2" />
<text  x="1189.31" y="239.5" ></text>
</g>
<g >
<title>ip_input (45,058 samples, 27.69%)</title><rect x="195.2" y="117" width="326.8" height="15.0" fill="rgb(249,198,25)" rx="2" ry="2" />
<text  x="198.24" y="127.5" >ip_input</text>
</g>
<g >
<title>_ck_epoch_delref (31 samples, 0.02%)</title><rect x="50.0" y="213" width="0.2" height="15.0" fill="rgb(231,18,25)" rx="2" ry="2" />
<text  x="53.01" y="223.5" ></text>
</g>
<g >
<title>lock_delay (14 samples, 0.01%)</title><rect x="50.4" y="213" width="0.1" height="15.0" fill="rgb(254,88,52)" rx="2" ry="2" />
<text  x="53.38" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (415 samples, 0.26%)</title><rect x="1126.5" y="37" width="3.0" height="15.0" fill="rgb(225,13,18)" rx="2" ry="2" />
<text  x="1129.46" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (230 samples, 0.14%)</title><rect x="1024.6" y="229" width="1.7" height="15.0" fill="rgb(216,25,5)" rx="2" ry="2" />
<text  x="1027.63" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (19 samples, 0.01%)</title><rect x="1120.0" y="37" width="0.2" height="15.0" fill="rgb(249,59,31)" rx="2" ry="2" />
<text  x="1123.04" y="47.5" ></text>
</g>
<g >
<title>ether_input (3,317 samples, 2.04%)</title><rect x="1130.5" y="213" width="24.1" height="15.0" fill="rgb(253,183,18)" rx="2" ry="2" />
<text  x="1133.49" y="223.5" >e..</text>
</g>
<g >
<title>iflib_get_ifp (156 samples, 0.10%)</title><rect x="599.0" y="181" width="1.1" height="15.0" fill="rgb(208,191,50)" rx="2" ry="2" />
<text  x="601.99" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (1,332 samples, 0.82%)</title><rect x="1131.9" y="37" width="9.7" height="15.0" fill="rgb(219,31,33)" rx="2" ry="2" />
<text  x="1134.92" y="47.5" ></text>
</g>
<g >
<title>sched_pickcpu (24 samples, 0.01%)</title><rect x="1155.8" y="37" width="0.2" height="15.0" fill="rgb(252,166,21)" rx="2" ry="2" />
<text  x="1158.78" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (74 samples, 0.05%)</title><rect x="1179.3" y="181" width="0.6" height="15.0" fill="rgb(216,210,29)" rx="2" ry="2" />
<text  x="1182.32" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3,317 samples, 2.04%)</title><rect x="1130.5" y="149" width="24.1" height="15.0" fill="rgb(235,99,16)" rx="2" ry="2" />
<text  x="1133.49" y="159.5" >n..</text>
</g>
<g >
<title>ixgbe_write_reg (57 samples, 0.04%)</title><rect x="998.4" y="197" width="0.4" height="15.0" fill="rgb(214,189,24)" rx="2" ry="2" />
<text  x="1001.41" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (319 samples, 0.20%)</title><rect x="1177.5" y="197" width="2.4" height="15.0" fill="rgb(216,58,18)" rx="2" ry="2" />
<text  x="1180.54" y="207.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (217 samples, 0.13%)</title><rect x="835.8" y="117" width="1.6" height="15.0" fill="rgb(246,227,42)" rx="2" ry="2" />
<text  x="838.80" y="127.5" ></text>
</g>
<g >
<title>_task_fn_rx (822 samples, 0.51%)</title><rect x="16.8" y="277" width="6.0" height="15.0" fill="rgb(243,82,26)" rx="2" ry="2" />
<text  x="19.85" y="287.5" ></text>
</g>
<g >
<title>sleepq_switch (99 samples, 0.06%)</title><rect x="1026.3" y="229" width="0.7" height="15.0" fill="rgb(226,24,11)" rx="2" ry="2" />
<text  x="1029.30" y="239.5" ></text>
</g>
<g >
<title>ffs_balloc_ufs2 (64 samples, 0.04%)</title><rect x="1029.1" y="181" width="0.4" height="15.0" fill="rgb(226,56,2)" rx="2" ry="2" />
<text  x="1032.08" y="191.5" ></text>
</g>
<g >
<title>_thread_lock (393 samples, 0.24%)</title><rect x="1089.6" y="245" width="2.9" height="15.0" fill="rgb(215,143,38)" rx="2" ry="2" />
<text  x="1092.61" y="255.5" ></text>
</g>
<g >
<title>_bus_dmamap_load_mbuf_sg (3,132 samples, 1.92%)</title><rect x="936.6" y="149" width="22.7" height="15.0" fill="rgb(209,104,14)" rx="2" ry="2" />
<text  x="939.62" y="159.5" >_..</text>
</g>
<g >
<title>all (162,705 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(244,213,46)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>_rm_runlock (532 samples, 0.33%)</title><rect x="468.7" y="53" width="3.8" height="15.0" fill="rgb(250,4,32)" rx="2" ry="2" />
<text  x="471.66" y="63.5" ></text>
</g>
<g >
<title>pmc_hook_handler (321 samples, 0.20%)</title><rect x="1186.7" y="213" width="2.3" height="15.0" fill="rgb(214,219,53)" rx="2" ry="2" />
<text  x="1189.66" y="223.5" ></text>
</g>
<g >
<title>ithread_loop (103 samples, 0.06%)</title><rect x="1028.1" y="261" width="0.8" height="15.0" fill="rgb(247,66,26)" rx="2" ry="2" />
<text  x="1031.14" y="271.5" ></text>
</g>
<g >
<title>spinlock_enter (96 samples, 0.06%)</title><rect x="60.3" y="197" width="0.7" height="15.0" fill="rgb(250,126,14)" rx="2" ry="2" />
<text  x="63.28" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (109 samples, 0.07%)</title><rect x="775.4" y="181" width="0.8" height="15.0" fill="rgb(253,12,36)" rx="2" ry="2" />
<text  x="778.37" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (60 samples, 0.04%)</title><rect x="1027.7" y="229" width="0.4" height="15.0" fill="rgb(206,10,16)" rx="2" ry="2" />
<text  x="1030.68" y="239.5" ></text>
</g>
<g >
<title>m_free (3,201 samples, 1.97%)</title><rect x="815.9" y="149" width="23.2" height="15.0" fill="rgb(228,147,51)" rx="2" ry="2" />
<text  x="818.86" y="159.5" >m..</text>
</g>
<g >
<title>memcmp (334 samples, 0.21%)</title><rect x="526.3" y="149" width="2.4" height="15.0" fill="rgb(210,13,39)" rx="2" ry="2" />
<text  x="529.25" y="159.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (1,018 samples, 0.63%)</title><rect x="573.0" y="197" width="7.4" height="15.0" fill="rgb(237,152,0)" rx="2" ry="2" />
<text  x="576.00" y="207.5" ></text>
</g>
<g >
<title>ether_output (822 samples, 0.51%)</title><rect x="16.8" y="133" width="6.0" height="15.0" fill="rgb(211,169,53)" rx="2" ry="2" />
<text  x="19.85" y="143.5" ></text>
</g>
<g >
<title>_task_fn_rx (1,895 samples, 1.16%)</title><rect x="1116.8" y="261" width="13.7" height="15.0" fill="rgb(212,114,29)" rx="2" ry="2" />
<text  x="1119.75" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (386 samples, 0.24%)</title><rect x="1001.2" y="229" width="2.8" height="15.0" fill="rgb(220,198,15)" rx="2" ry="2" />
<text  x="1004.16" y="239.5" ></text>
</g>
<g >
<title>mac_mbuf_init (474 samples, 0.29%)</title><rect x="611.0" y="197" width="3.5" height="15.0" fill="rgb(246,107,34)" rx="2" ry="2" />
<text  x="614.05" y="207.5" ></text>
</g>
<g >
<title>ether_demux (3,317 samples, 2.04%)</title><rect x="1130.5" y="165" width="24.1" height="15.0" fill="rgb(210,105,43)" rx="2" ry="2" />
<text  x="1133.49" y="175.5" >e..</text>
</g>
<g >
<title>m_pkthdr_init (27 samples, 0.02%)</title><rect x="666.5" y="213" width="0.2" height="15.0" fill="rgb(225,25,3)" rx="2" ry="2" />
<text  x="669.50" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (32 samples, 0.02%)</title><rect x="666.3" y="197" width="0.2" height="15.0" fill="rgb(241,78,43)" rx="2" ry="2" />
<text  x="669.27" y="207.5" ></text>
</g>
<g >
<title>memcpy_erms (1,889 samples, 1.16%)</title><rect x="614.5" y="197" width="13.7" height="15.0" fill="rgb(231,104,20)" rx="2" ry="2" />
<text  x="617.49" y="207.5" ></text>
</g>
<g >
<title>ip_input (822 samples, 0.51%)</title><rect x="16.8" y="165" width="6.0" height="15.0" fill="rgb(234,102,48)" rx="2" ry="2" />
<text  x="19.85" y="175.5" ></text>
</g>
<g >
<title>sleepq_release (39 samples, 0.02%)</title><rect x="1179.9" y="197" width="0.2" height="15.0" fill="rgb(213,86,30)" rx="2" ry="2" />
<text  x="1182.85" y="207.5" ></text>
</g>
<g >
<title>softclock_call_cc (101 samples, 0.06%)</title><rect x="1028.2" y="229" width="0.7" height="15.0" fill="rgb(217,110,44)" rx="2" ry="2" />
<text  x="1031.16" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (822 samples, 0.51%)</title><rect x="16.8" y="85" width="6.0" height="15.0" fill="rgb(229,190,31)" rx="2" ry="2" />
<text  x="19.85" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch (179 samples, 0.11%)</title><rect x="184.6" y="133" width="1.3" height="15.0" fill="rgb(216,94,53)" rx="2" ry="2" />
<text  x="187.62" y="143.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (149 samples, 0.09%)</title><rect x="49.2" y="229" width="1.0" height="15.0" fill="rgb(222,198,1)" rx="2" ry="2" />
<text  x="52.16" y="239.5" ></text>
</g>
<g >
<title>setrunnable (419 samples, 0.26%)</title><rect x="16.9" y="53" width="3.0" height="15.0" fill="rgb(239,187,15)" rx="2" ry="2" />
<text  x="19.87" y="63.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (4,653 samples, 2.86%)</title><rect x="369.8" y="37" width="33.7" height="15.0" fill="rgb(218,40,3)" rx="2" ry="2" />
<text  x="372.75" y="47.5" >if..</text>
</g>
<g >
<title>iflib_rxeof (3,317 samples, 2.04%)</title><rect x="1130.5" y="229" width="24.1" height="15.0" fill="rgb(232,88,46)" rx="2" ry="2" />
<text  x="1133.49" y="239.5" >i..</text>
</g>
<g >
<title>iflib_rxeof (822 samples, 0.51%)</title><rect x="16.8" y="261" width="6.0" height="15.0" fill="rgb(244,139,49)" rx="2" ry="2" />
<text  x="19.85" y="271.5" ></text>
</g>
<g >
<title>intr_execute_handlers (3,219 samples, 1.98%)</title><rect x="1160.3" y="277" width="23.4" height="15.0" fill="rgb(236,122,6)" rx="2" ry="2" />
<text  x="1163.31" y="287.5" >i..</text>
</g>
<g >
<title>taskqueue_thread_enqueue (64 samples, 0.04%)</title><rect x="1176.8" y="213" width="0.5" height="15.0" fill="rgb(237,23,18)" rx="2" ry="2" />
<text  x="1179.80" y="223.5" ></text>
</g>
<g >
<title>sched_choose (434 samples, 0.27%)</title><rect x="1110.5" y="197" width="3.1" height="15.0" fill="rgb(209,120,11)" rx="2" ry="2" />
<text  x="1113.49" y="207.5" ></text>
</g>
<g >
<title>pmap_activate_sw (22 samples, 0.01%)</title><rect x="1108.3" y="213" width="0.1" height="15.0" fill="rgb(221,211,1)" rx="2" ry="2" />
<text  x="1111.28" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (794 samples, 0.49%)</title><rect x="1154.6" y="165" width="5.7" height="15.0" fill="rgb(225,155,40)" rx="2" ry="2" />
<text  x="1157.55" y="175.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (40 samples, 0.02%)</title><rect x="50.2" y="229" width="0.3" height="15.0" fill="rgb(218,138,13)" rx="2" ry="2" />
<text  x="53.24" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (46,343 samples, 28.48%)</title><rect x="185.9" y="133" width="336.1" height="15.0" fill="rgb(207,34,22)" rx="2" ry="2" />
<text  x="188.92" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>spinlock_enter (42 samples, 0.03%)</title><rect x="1007.9" y="197" width="0.3" height="15.0" fill="rgb(219,30,20)" rx="2" ry="2" />
<text  x="1010.89" y="207.5" ></text>
</g>
<g >
<title>memmove_erms (517 samples, 0.32%)</title><rect x="314.9" y="53" width="3.8" height="15.0" fill="rgb(234,105,39)" rx="2" ry="2" />
<text  x="317.91" y="63.5" ></text>
</g>
<g >
<title>sched_clock (18 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(250,69,47)" rx="2" ry="2" />
<text  x="1192.82" y="223.5" ></text>
</g>
<g >
<title>cache_alloc (141 samples, 0.09%)</title><rect x="552.0" y="165" width="1.0" height="15.0" fill="rgb(213,80,4)" rx="2" ry="2" />
<text  x="554.99" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,895 samples, 1.16%)</title><rect x="1116.8" y="245" width="13.7" height="15.0" fill="rgb(232,133,26)" rx="2" ry="2" />
<text  x="1119.75" y="255.5" ></text>
</g>
<g >
<title>iflib_fl_refill (5,813 samples, 3.57%)</title><rect x="530.8" y="197" width="42.2" height="15.0" fill="rgb(221,41,11)" rx="2" ry="2" />
<text  x="533.84" y="207.5" >ifl..</text>
</g>
<g >
<title>runq_remove (27 samples, 0.02%)</title><rect x="1113.4" y="181" width="0.2" height="15.0" fill="rgb(238,42,20)" rx="2" ry="2" />
<text  x="1116.44" y="191.5" ></text>
</g>
<g >
<title>wakeup (774 samples, 0.48%)</title><rect x="1004.0" y="229" width="5.6" height="15.0" fill="rgb(247,222,19)" rx="2" ry="2" />
<text  x="1006.96" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (48 samples, 0.03%)</title><rect x="1027.3" y="229" width="0.4" height="15.0" fill="rgb(208,53,45)" rx="2" ry="2" />
<text  x="1030.34" y="239.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (295 samples, 0.18%)</title><rect x="1114.4" y="245" width="2.2" height="15.0" fill="rgb(233,178,28)" rx="2" ry="2" />
<text  x="1117.44" y="255.5" ></text>
</g>
<g >
<title>if_getdrvflags (40 samples, 0.02%)</title><rect x="69.1" y="213" width="0.3" height="15.0" fill="rgb(242,77,44)" rx="2" ry="2" />
<text  x="72.09" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (3,317 samples, 2.04%)</title><rect x="1130.5" y="261" width="24.1" height="15.0" fill="rgb(208,1,7)" rx="2" ry="2" />
<text  x="1133.49" y="271.5" >g..</text>
</g>
<g >
<title>spinlock_exit (20 samples, 0.01%)</title><rect x="1113.7" y="213" width="0.2" height="15.0" fill="rgb(206,43,18)" rx="2" ry="2" />
<text  x="1116.72" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (30 samples, 0.02%)</title><rect x="1116.3" y="229" width="0.2" height="15.0" fill="rgb(244,33,20)" rx="2" ry="2" />
<text  x="1119.30" y="239.5" ></text>
</g>
<g >
<title>native_lapic_eoi (60 samples, 0.04%)</title><rect x="1182.7" y="245" width="0.5" height="15.0" fill="rgb(242,163,32)" rx="2" ry="2" />
<text  x="1185.73" y="255.5" ></text>
</g>
<g >
<title>_rm_runlock (1,126 samples, 0.69%)</title><rect x="435.7" y="69" width="8.2" height="15.0" fill="rgb(228,116,35)" rx="2" ry="2" />
<text  x="438.74" y="79.5" ></text>
</g>
<g >
<title>cpu_switch (174 samples, 0.11%)</title><rect x="1012.2" y="213" width="1.3" height="15.0" fill="rgb(209,37,2)" rx="2" ry="2" />
<text  x="1015.21" y="223.5" ></text>
</g>
<g >
<title>iflib_fast_intr (2,214 samples, 1.36%)</title><rect x="1166.6" y="245" width="16.0" height="15.0" fill="rgb(217,216,14)" rx="2" ry="2" />
<text  x="1169.57" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (141 samples, 0.09%)</title><rect x="1129.5" y="37" width="1.0" height="15.0" fill="rgb(240,94,33)" rx="2" ry="2" />
<text  x="1132.47" y="47.5" ></text>
</g>
<g >
<title>mac_ifnet_check_transmit (631 samples, 0.39%)</title><rect x="403.5" y="69" width="4.6" height="15.0" fill="rgb(248,145,42)" rx="2" ry="2" />
<text  x="406.50" y="79.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (67 samples, 0.04%)</title><rect x="1153.5" y="37" width="0.5" height="15.0" fill="rgb(217,52,11)" rx="2" ry="2" />
<text  x="1156.54" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (87 samples, 0.05%)</title><rect x="1180.5" y="197" width="0.6" height="15.0" fill="rgb(242,107,29)" rx="2" ry="2" />
<text  x="1183.46" y="207.5" ></text>
</g>
<g >
<title>intr_event_handle (2,591 samples, 1.59%)</title><rect x="1164.4" y="261" width="18.8" height="15.0" fill="rgb(213,11,43)" rx="2" ry="2" />
<text  x="1167.37" y="271.5" ></text>
</g>
<g >
<title>sleepq_signal (45 samples, 0.03%)</title><rect x="1180.1" y="197" width="0.4" height="15.0" fill="rgb(235,97,43)" rx="2" ry="2" />
<text  x="1183.14" y="207.5" ></text>
</g>
<g >
<title>iflib_encap (20,232 samples, 12.43%)</title><rect x="839.1" y="181" width="146.7" height="15.0" fill="rgb(235,75,6)" rx="2" ry="2" />
<text  x="842.07" y="191.5" >iflib_encap</text>
</g>
<g >
<title>iflib_if_transmit (10,649 samples, 6.54%)</title><rect x="326.3" y="53" width="77.2" height="15.0" fill="rgb(208,225,20)" rx="2" ry="2" />
<text  x="329.27" y="63.5" >iflib_if..</text>
</g>
<g >
<title>in_localip (4,390 samples, 2.70%)</title><rect x="412.1" y="85" width="31.8" height="15.0" fill="rgb(252,71,19)" rx="2" ry="2" />
<text  x="415.07" y="95.5" >in..</text>
</g>
<g >
<title>wakeup_any (822 samples, 0.51%)</title><rect x="16.8" y="69" width="6.0" height="15.0" fill="rgb(227,103,4)" rx="2" ry="2" />
<text  x="19.85" y="79.5" ></text>
</g>
<g >
<title>ether_input (822 samples, 0.51%)</title><rect x="16.8" y="245" width="6.0" height="15.0" fill="rgb(215,38,1)" rx="2" ry="2" />
<text  x="19.85" y="255.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,895 samples, 1.16%)</title><rect x="1116.8" y="85" width="13.7" height="15.0" fill="rgb(249,69,34)" rx="2" ry="2" />
<text  x="1119.75" y="95.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (523 samples, 0.32%)</title><rect x="569.2" y="165" width="3.8" height="15.0" fill="rgb(230,148,25)" rx="2" ry="2" />
<text  x="572.21" y="175.5" ></text>
</g>
<g >
<title>Xtimerint (17 samples, 0.01%)</title><rect x="16.6" y="277" width="0.1" height="15.0" fill="rgb(242,108,46)" rx="2" ry="2" />
<text  x="19.58" y="287.5" ></text>
</g>
<g >
<title>ip_tryforward (3,317 samples, 2.04%)</title><rect x="1130.5" y="117" width="24.1" height="15.0" fill="rgb(244,218,12)" rx="2" ry="2" />
<text  x="1133.49" y="127.5" >i..</text>
</g>
<g >
<title>choosethread (447 samples, 0.27%)</title><rect x="1110.4" y="213" width="3.2" height="15.0" fill="rgb(211,88,9)" rx="2" ry="2" />
<text  x="1113.40" y="223.5" ></text>
</g>
<g >
<title>sched_add (794 samples, 0.49%)</title><rect x="1154.6" y="53" width="5.7" height="15.0" fill="rgb(247,74,17)" rx="2" ry="2" />
<text  x="1157.55" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,895 samples, 1.16%)</title><rect x="1116.8" y="165" width="13.7" height="15.0" fill="rgb(248,38,16)" rx="2" ry="2" />
<text  x="1119.75" y="175.5" ></text>
</g>
<g >
<title>VOP_WRITE_APV (95 samples, 0.06%)</title><rect x="1028.9" y="213" width="0.7" height="15.0" fill="rgb(226,66,6)" rx="2" ry="2" />
<text  x="1031.91" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (822 samples, 0.51%)</title><rect x="16.8" y="149" width="6.0" height="15.0" fill="rgb(236,86,16)" rx="2" ry="2" />
<text  x="19.85" y="159.5" ></text>
</g>
<g >
<title>msi_vector (62 samples, 0.04%)</title><rect x="1183.2" y="261" width="0.5" height="15.0" fill="rgb(235,163,1)" rx="2" ry="2" />
<text  x="1186.20" y="271.5" ></text>
</g>
<g >
<title>ether_output (20,521 samples, 12.61%)</title><rect x="263.2" y="85" width="148.9" height="15.0" fill="rgb(247,171,39)" rx="2" ry="2" />
<text  x="266.24" y="95.5" >ether_output</text>
</g>
<g >
<title>mac_ifnet_create_mbuf (584 samples, 0.36%)</title><rect x="522.0" y="149" width="4.3" height="15.0" fill="rgb(241,1,54)" rx="2" ry="2" />
<text  x="525.02" y="159.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (408 samples, 0.25%)</title><rect x="985.8" y="181" width="3.0" height="15.0" fill="rgb(228,175,48)" rx="2" ry="2" />
<text  x="988.80" y="191.5" ></text>
</g>
<g >
<title>kbdc_data_ready (100 samples, 0.06%)</title><rect x="1028.2" y="197" width="0.7" height="15.0" fill="rgb(212,175,14)" rx="2" ry="2" />
<text  x="1031.16" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (85,059 samples, 52.28%)</title><rect x="50.6" y="229" width="616.9" height="15.0" fill="rgb(241,225,30)" rx="2" ry="2" />
<text  x="53.59" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ether_input (794 samples, 0.49%)</title><rect x="1154.6" y="261" width="5.7" height="15.0" fill="rgb(240,191,35)" rx="2" ry="2" />
<text  x="1157.55" y="271.5" ></text>
</g>
<g >
<title>ether_nh_input (3,317 samples, 2.04%)</title><rect x="1130.5" y="181" width="24.1" height="15.0" fill="rgb(229,40,52)" rx="2" ry="2" />
<text  x="1133.49" y="191.5" >e..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (3,316 samples, 2.04%)</title><rect x="1130.5" y="53" width="24.1" height="15.0" fill="rgb(246,156,28)" rx="2" ry="2" />
<text  x="1133.50" y="63.5" >g..</text>
</g>
<g >
<title>runq_add (164 samples, 0.10%)</title><rect x="1154.6" y="37" width="1.2" height="15.0" fill="rgb(212,215,41)" rx="2" ry="2" />
<text  x="1157.59" y="47.5" ></text>
</g>
<g >
<title>sleepq_resume_thread (259 samples, 0.16%)</title><rect x="20.9" y="53" width="1.9" height="15.0" fill="rgb(226,204,35)" rx="2" ry="2" />
<text  x="23.93" y="63.5" ></text>
</g>
<g >
<title>vn_io_fault (98 samples, 0.06%)</title><rect x="1028.9" y="245" width="0.7" height="15.0" fill="rgb(240,166,46)" rx="2" ry="2" />
<text  x="1031.91" y="255.5" ></text>
</g>
<g >
<title>ffs_write (95 samples, 0.06%)</title><rect x="1028.9" y="197" width="0.7" height="15.0" fill="rgb(232,73,51)" rx="2" ry="2" />
<text  x="1031.91" y="207.5" ></text>
</g>
<g >
<title>pmc_process_samples (290 samples, 0.18%)</title><rect x="1186.9" y="197" width="2.1" height="15.0" fill="rgb(243,218,34)" rx="2" ry="2" />
<text  x="1189.89" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (141 samples, 0.09%)</title><rect x="19.9" y="37" width="1.0" height="15.0" fill="rgb(235,7,24)" rx="2" ry="2" />
<text  x="22.91" y="47.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (491 samples, 0.30%)</title><rect x="988.8" y="181" width="3.5" height="15.0" fill="rgb(226,169,20)" rx="2" ry="2" />
<text  x="991.76" y="191.5" ></text>
</g>
<g >
<title>zone_put_bucket (22 samples, 0.01%)</title><rect x="835.6" y="101" width="0.2" height="15.0" fill="rgb(213,124,26)" rx="2" ry="2" />
<text  x="838.64" y="111.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (208 samples, 0.13%)</title><rect x="1181.1" y="229" width="1.5" height="15.0" fill="rgb(238,177,48)" rx="2" ry="2" />
<text  x="1184.09" y="239.5" ></text>
</g>
<g >
<title>sched_switch (1,041 samples, 0.64%)</title><rect x="1014.3" y="213" width="7.5" height="15.0" fill="rgb(241,68,23)" rx="2" ry="2" />
<text  x="1017.28" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1,661 samples, 1.02%)</title><rect x="1169.0" y="229" width="12.1" height="15.0" fill="rgb(228,156,17)" rx="2" ry="2" />
<text  x="1172.05" y="239.5" ></text>
</g>
<g >
<title>cpu_search_highest (185 samples, 0.11%)</title><rect x="1019.7" y="181" width="1.4" height="15.0" fill="rgb(220,155,12)" rx="2" ry="2" />
<text  x="1022.71" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (135,845 samples, 83.49%)</title><rect x="24.4" y="245" width="985.2" height="15.0" fill="rgb(223,177,43)" rx="2" ry="2" />
<text  x="27.37" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_rxeof (82,236 samples, 50.54%)</title><rect x="69.4" y="213" width="596.4" height="15.0" fill="rgb(227,19,3)" rx="2" ry="2" />
<text  x="72.38" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>spinlock_exit (82 samples, 0.05%)</title><rect x="1009.0" y="213" width="0.6" height="15.0" fill="rgb(231,102,34)" rx="2" ry="2" />
<text  x="1011.98" y="223.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (53 samples, 0.03%)</title><rect x="1092.5" y="213" width="0.4" height="15.0" fill="rgb(230,71,20)" rx="2" ry="2" />
<text  x="1095.48" y="223.5" ></text>
</g>
<g >
<title>sched_switch (599 samples, 0.37%)</title><rect x="1109.6" y="229" width="4.3" height="15.0" fill="rgb(225,2,11)" rx="2" ry="2" />
<text  x="1112.59" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (794 samples, 0.49%)</title><rect x="1154.6" y="117" width="5.7" height="15.0" fill="rgb(228,225,30)" rx="2" ry="2" />
<text  x="1157.55" y="127.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (4,986 samples, 3.06%)</title><rect x="628.5" y="197" width="36.2" height="15.0" fill="rgb(232,92,38)" rx="2" ry="2" />
<text  x="631.50" y="207.5" >rxd..</text>
</g>
<g >
<title>lapic_et_start (47 samples, 0.03%)</title><rect x="1189.2" y="229" width="0.3" height="15.0" fill="rgb(208,13,45)" rx="2" ry="2" />
<text  x="1192.17" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (794 samples, 0.49%)</title><rect x="1154.6" y="277" width="5.7" height="15.0" fill="rgb(213,68,0)" rx="2" ry="2" />
<text  x="1157.55" y="287.5" ></text>
</g>
<g >
<title>tc_ticktock (24 samples, 0.01%)</title><rect x="1189.0" y="213" width="0.2" height="15.0" fill="rgb(228,189,32)" rx="2" ry="2" />
<text  x="1191.99" y="223.5" ></text>
</g>
<g >
<title>iap_get_config (19 samples, 0.01%)</title><rect x="1187.9" y="181" width="0.2" height="15.0" fill="rgb(240,39,37)" rx="2" ry="2" />
<text  x="1190.95" y="191.5" ></text>
</g>
<g >
<title>ip_tryforward (1,895 samples, 1.16%)</title><rect x="1116.8" y="133" width="13.7" height="15.0" fill="rgb(226,205,28)" rx="2" ry="2" />
<text  x="1119.75" y="143.5" ></text>
</g>
<g >
<title>binuptime (57 samples, 0.04%)</title><rect x="1185.4" y="245" width="0.4" height="15.0" fill="rgb(212,27,21)" rx="2" ry="2" />
<text  x="1188.40" y="255.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,071 samples, 1.27%)</title><rect x="54.1" y="213" width="15.0" height="15.0" fill="rgb(242,140,27)" rx="2" ry="2" />
<text  x="57.07" y="223.5" ></text>
</g>
<g >
<title>tsc_get_config (20 samples, 0.01%)</title><rect x="1188.8" y="181" width="0.2" height="15.0" fill="rgb(236,122,11)" rx="2" ry="2" />
<text  x="1191.85" y="191.5" ></text>
</g>
<g >
<title>pagezero_erms (22 samples, 0.01%)</title><rect x="552.8" y="101" width="0.1" height="15.0" fill="rgb(221,105,4)" rx="2" ry="2" />
<text  x="555.76" y="111.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (1,960 samples, 1.20%)</title><rect x="945.1" y="133" width="14.2" height="15.0" fill="rgb(246,190,34)" rx="2" ry="2" />
<text  x="948.12" y="143.5" ></text>
</g>
<g >
<title>memcpy_erms (550 samples, 0.34%)</title><rect x="408.1" y="69" width="4.0" height="15.0" fill="rgb(227,197,10)" rx="2" ry="2" />
<text  x="411.08" y="79.5" ></text>
</g>
<g >
<title>_rm_rlock (1,623 samples, 1.00%)</title><rect x="424.0" y="69" width="11.7" height="15.0" fill="rgb(246,7,18)" rx="2" ry="2" />
<text  x="426.97" y="79.5" ></text>
</g>
<g >
<title>ip_input (3,317 samples, 2.04%)</title><rect x="1130.5" y="133" width="24.1" height="15.0" fill="rgb(247,32,42)" rx="2" ry="2" />
<text  x="1133.49" y="143.5" >i..</text>
</g>
<g >
<title>cluster_write (22 samples, 0.01%)</title><rect x="1028.9" y="181" width="0.2" height="15.0" fill="rgb(237,186,26)" rx="2" ry="2" />
<text  x="1031.92" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (124 samples, 0.08%)</title><rect x="529.1" y="197" width="0.9" height="15.0" fill="rgb(238,102,27)" rx="2" ry="2" />
<text  x="532.13" y="207.5" ></text>
</g>
<g >
<title>atkbd_timeout (100 samples, 0.06%)</title><rect x="1028.2" y="213" width="0.7" height="15.0" fill="rgb(214,148,14)" rx="2" ry="2" />
<text  x="1031.16" y="223.5" ></text>
</g>
<g >
<title>rdtsc (32 samples, 0.02%)</title><rect x="1013.5" y="213" width="0.2" height="15.0" fill="rgb(252,108,36)" rx="2" ry="2" />
<text  x="1016.48" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (794 samples, 0.49%)</title><rect x="1154.6" y="245" width="5.7" height="15.0" fill="rgb(206,118,54)" rx="2" ry="2" />
<text  x="1157.55" y="255.5" ></text>
</g>
<g >
<title>ipi_bitmap_handler (49 samples, 0.03%)</title><rect x="1183.7" y="277" width="0.3" height="15.0" fill="rgb(223,212,45)" rx="2" ry="2" />
<text  x="1186.65" y="287.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (98 samples, 0.06%)</title><rect x="665.8" y="213" width="0.7" height="15.0" fill="rgb(210,66,6)" rx="2" ry="2" />
<text  x="668.79" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (794 samples, 0.49%)</title><rect x="63.3" y="197" width="5.8" height="15.0" fill="rgb(206,197,1)" rx="2" ry="2" />
<text  x="66.33" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (39 samples, 0.02%)</title><rect x="68.2" y="181" width="0.2" height="15.0" fill="rgb(210,5,40)" rx="2" ry="2" />
<text  x="71.16" y="191.5" ></text>
</g>
<g >
<title>getblk (23 samples, 0.01%)</title><rect x="1029.3" y="165" width="0.2" height="15.0" fill="rgb(205,145,37)" rx="2" ry="2" />
<text  x="1032.34" y="175.5" ></text>
</g>
<g >
<title>softclock (101 samples, 0.06%)</title><rect x="1028.2" y="245" width="0.7" height="15.0" fill="rgb(213,226,24)" rx="2" ry="2" />
<text  x="1031.16" y="255.5" ></text>
</g>
<g >
<title>wakeup_any (72 samples, 0.04%)</title><rect x="1154.0" y="37" width="0.6" height="15.0" fill="rgb(251,163,52)" rx="2" ry="2" />
<text  x="1157.03" y="47.5" ></text>
</g>
<g >
<title>rsb_flush (134 samples, 0.08%)</title><rect x="1108.6" y="229" width="1.0" height="15.0" fill="rgb(235,86,12)" rx="2" ry="2" />
<text  x="1111.61" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (1,895 samples, 1.16%)</title><rect x="1116.8" y="197" width="13.7" height="15.0" fill="rgb(229,173,30)" rx="2" ry="2" />
<text  x="1119.75" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (794 samples, 0.49%)</title><rect x="1154.6" y="133" width="5.7" height="15.0" fill="rgb(220,192,40)" rx="2" ry="2" />
<text  x="1157.55" y="143.5" ></text>
</g>
<g >
<title>msi_eoi_source (14 samples, 0.01%)</title><rect x="1182.6" y="245" width="0.1" height="15.0" fill="rgb(235,226,21)" rx="2" ry="2" />
<text  x="1185.62" y="255.5" ></text>
</g>
<g >
<title>ether_demux (1,895 samples, 1.16%)</title><rect x="1116.8" y="181" width="13.7" height="15.0" fill="rgb(216,138,46)" rx="2" ry="2" />
<text  x="1119.75" y="191.5" ></text>
</g>
<g >
<title>ether_demux (48,651 samples, 29.90%)</title><rect x="169.2" y="149" width="352.8" height="15.0" fill="rgb(208,174,40)" rx="2" ry="2" />
<text  x="172.18" y="159.5" >ether_demux</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (235 samples, 0.14%)</title><rect x="997.1" y="213" width="1.7" height="15.0" fill="rgb(236,141,0)" rx="2" ry="2" />
<text  x="1000.12" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (35 samples, 0.02%)</title><rect x="1091.9" y="229" width="0.2" height="15.0" fill="rgb(251,202,8)" rx="2" ry="2" />
<text  x="1094.88" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (269 samples, 0.17%)</title><rect x="61.0" y="197" width="1.9" height="15.0" fill="rgb(215,100,51)" rx="2" ry="2" />
<text  x="63.98" y="207.5" ></text>
</g>
<g >
<title>getblkx (23 samples, 0.01%)</title><rect x="1029.3" y="149" width="0.2" height="15.0" fill="rgb(218,43,23)" rx="2" ry="2" />
<text  x="1032.34" y="159.5" ></text>
</g>
<g >
<title>runq_choose_from (38 samples, 0.02%)</title><rect x="1017.7" y="165" width="0.2" height="15.0" fill="rgb(221,63,4)" rx="2" ry="2" />
<text  x="1020.66" y="175.5" ></text>
</g>
<g >
<title>ffs_alloc (24 samples, 0.01%)</title><rect x="1029.2" y="165" width="0.1" height="15.0" fill="rgb(243,20,19)" rx="2" ry="2" />
<text  x="1032.16" y="175.5" ></text>
</g>
<g >
<title>if_getsoftc (169 samples, 0.10%)</title><rect x="368.5" y="37" width="1.3" height="15.0" fill="rgb(214,23,31)" rx="2" ry="2" />
<text  x="371.53" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (313 samples, 0.19%)</title><rect x="998.9" y="229" width="2.3" height="15.0" fill="rgb(251,215,26)" rx="2" ry="2" />
<text  x="1001.89" y="239.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (3,977 samples, 2.44%)</title><rect x="930.5" y="165" width="28.9" height="15.0" fill="rgb(243,79,38)" rx="2" ry="2" />
<text  x="933.52" y="175.5" >bu..</text>
</g>
<g >
<title>netisr_dispatch_src (822 samples, 0.51%)</title><rect x="16.8" y="229" width="6.0" height="15.0" fill="rgb(210,137,39)" rx="2" ry="2" />
<text  x="19.85" y="239.5" ></text>
</g>
<g >
<title>_thread_lock (95 samples, 0.06%)</title><rect x="1023.9" y="213" width="0.7" height="15.0" fill="rgb(243,115,39)" rx="2" ry="2" />
<text  x="1026.94" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (822 samples, 0.51%)</title><rect x="16.8" y="117" width="6.0" height="15.0" fill="rgb(239,37,3)" rx="2" ry="2" />
<text  x="19.85" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (89 samples, 0.05%)</title><rect x="68.4" y="181" width="0.7" height="15.0" fill="rgb(220,160,49)" rx="2" ry="2" />
<text  x="71.45" y="191.5" ></text>
</g>
<g >
<title>arpresolve (3,328 samples, 2.05%)</title><rect x="294.5" y="69" width="24.2" height="15.0" fill="rgb(232,156,37)" rx="2" ry="2" />
<text  x="297.53" y="79.5" >a..</text>
</g>
<g >
<title>sleepq_broadcast (187 samples, 0.11%)</title><rect x="1004.9" y="213" width="1.3" height="15.0" fill="rgb(236,110,23)" rx="2" ry="2" />
<text  x="1007.86" y="223.5" ></text>
</g>
<g >
<title>cpu_search_highest (1,346 samples, 0.83%)</title><rect x="1095.3" y="229" width="9.7" height="15.0" fill="rgb(234,203,33)" rx="2" ry="2" />
<text  x="1098.28" y="239.5" ></text>
</g>
<g >
<title>rt_tables_get_rnh (658 samples, 0.40%)</title><rect x="517.2" y="53" width="4.8" height="15.0" fill="rgb(209,151,51)" rx="2" ry="2" />
<text  x="520.25" y="63.5" ></text>
</g>
<g >
<title>m_pkthdr_init (1,507 samples, 0.93%)</title><rect x="600.1" y="197" width="10.9" height="15.0" fill="rgb(209,5,47)" rx="2" ry="2" />
<text  x="603.12" y="207.5" ></text>
</g>
<g >
<title>Xapic_isr1 (343 samples, 0.21%)</title><rect x="10.0" y="277" width="2.5" height="15.0" fill="rgb(226,132,15)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,317 samples, 2.04%)</title><rect x="1130.5" y="277" width="24.1" height="15.0" fill="rgb(239,40,21)" rx="2" ry="2" />
<text  x="1133.49" y="287.5" >g..</text>
</g>
<g >
<title>iflib_get_softc (29 samples, 0.02%)</title><rect x="998.2" y="197" width="0.2" height="15.0" fill="rgb(250,223,13)" rx="2" ry="2" />
<text  x="1001.20" y="207.5" ></text>
</g>
</g>
</svg>
