<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>uma_zalloc_arg (365 samples, 1.60%)</title><rect x="609.1" y="181" width="18.9" height="15.0" fill="rgb(223,173,2)" rx="2" ry="2" />
<text  x="612.09" y="191.5" ></text>
</g>
<g >
<title>fib4_lookup (682 samples, 2.99%)</title><rect x="522.2" y="69" width="35.3" height="15.0" fill="rgb(244,22,13)" rx="2" ry="2" />
<text  x="525.23" y="79.5" >fi..</text>
</g>
<g >
<title>wakeup (126 samples, 0.55%)</title><rect x="1104.0" y="229" width="6.5" height="15.0" fill="rgb(229,182,30)" rx="2" ry="2" />
<text  x="1106.96" y="239.5" ></text>
</g>
<g >
<title>iflib_fast_intr (413 samples, 1.81%)</title><rect x="1160.1" y="245" width="21.3" height="15.0" fill="rgb(226,183,22)" rx="2" ry="2" />
<text  x="1163.08" y="255.5" >i..</text>
</g>
<g >
<title>pmc_process_samples (29 samples, 0.13%)</title><rect x="1187.6" y="197" width="1.5" height="15.0" fill="rgb(212,8,1)" rx="2" ry="2" />
<text  x="1190.57" y="207.5" ></text>
</g>
<g >
<title>sleepq_timeout (2 samples, 0.01%)</title><rect x="1186.7" y="197" width="0.1" height="15.0" fill="rgb(231,23,10)" rx="2" ry="2" />
<text  x="1189.69" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (187 samples, 0.82%)</title><rect x="628.0" y="197" width="9.6" height="15.0" fill="rgb(218,102,28)" rx="2" ry="2" />
<text  x="630.95" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (613 samples, 2.68%)</title><rect x="1120.2" y="181" width="31.7" height="15.0" fill="rgb(210,9,19)" rx="2" ry="2" />
<text  x="1123.24" y="191.5" >et..</text>
</g>
<g >
<title>wakeup_any (10 samples, 0.04%)</title><rect x="1151.4" y="37" width="0.5" height="15.0" fill="rgb(224,106,13)" rx="2" ry="2" />
<text  x="1154.40" y="47.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (9 samples, 0.04%)</title><rect x="49.6" y="229" width="0.4" height="15.0" fill="rgb(254,120,17)" rx="2" ry="2" />
<text  x="52.58" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (61 samples, 0.27%)</title><rect x="1100.8" y="229" width="3.2" height="15.0" fill="rgb(253,24,45)" rx="2" ry="2" />
<text  x="1103.81" y="239.5" ></text>
</g>
<g >
<title>pagezero_erms (45 samples, 0.20%)</title><rect x="599.3" y="101" width="2.4" height="15.0" fill="rgb(249,135,54)" rx="2" ry="2" />
<text  x="602.33" y="111.5" ></text>
</g>
<g >
<title>cpu_idle (49 samples, 0.21%)</title><rect x="1110.9" y="245" width="2.5" height="15.0" fill="rgb(205,40,46)" rx="2" ry="2" />
<text  x="1113.89" y="255.5" ></text>
</g>
<g >
<title>lapic_handle_timer (94 samples, 0.41%)</title><rect x="1185.1" y="277" width="4.9" height="15.0" fill="rgb(236,106,53)" rx="2" ry="2" />
<text  x="1188.14" y="287.5" ></text>
</g>
<g >
<title>ip_tryforward (21 samples, 0.09%)</title><rect x="19.0" y="149" width="1.1" height="15.0" fill="rgb(224,118,40)" rx="2" ry="2" />
<text  x="21.99" y="159.5" ></text>
</g>
<g >
<title>hardclock (44 samples, 0.19%)</title><rect x="1187.0" y="229" width="2.2" height="15.0" fill="rgb(213,7,48)" rx="2" ry="2" />
<text  x="1189.95" y="239.5" ></text>
</g>
<g >
<title>cpu_idleclock (4 samples, 0.02%)</title><rect x="1113.2" y="229" width="0.2" height="15.0" fill="rgb(233,91,9)" rx="2" ry="2" />
<text  x="1116.21" y="239.5" ></text>
</g>
<g >
<title>_task_fn_tx (6,793 samples, 29.75%)</title><rect x="747.1" y="229" width="351.0" height="15.0" fill="rgb(228,16,34)" rx="2" ry="2" />
<text  x="750.06" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>cache_alloc_retry (2 samples, 0.01%)</title><rect x="601.8" y="85" width="0.1" height="15.0" fill="rgb(232,103,32)" rx="2" ry="2" />
<text  x="604.81" y="95.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (7 samples, 0.03%)</title><rect x="608.7" y="181" width="0.4" height="15.0" fill="rgb(224,170,47)" rx="2" ry="2" />
<text  x="611.73" y="191.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (4 samples, 0.02%)</title><rect x="1171.3" y="213" width="0.3" height="15.0" fill="rgb(224,36,29)" rx="2" ry="2" />
<text  x="1174.35" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (3 samples, 0.01%)</title><rect x="1043.8" y="149" width="0.1" height="15.0" fill="rgb(237,93,37)" rx="2" ry="2" />
<text  x="1046.77" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (11 samples, 0.05%)</title><rect x="73.1" y="213" width="0.6" height="15.0" fill="rgb(229,116,42)" rx="2" ry="2" />
<text  x="76.14" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (15 samples, 0.07%)</title><rect x="1006.8" y="165" width="0.8" height="15.0" fill="rgb(216,44,25)" rx="2" ry="2" />
<text  x="1009.82" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (614 samples, 2.69%)</title><rect x="1120.2" y="261" width="31.8" height="15.0" fill="rgb(222,185,16)" rx="2" ry="2" />
<text  x="1123.24" y="271.5" >gt..</text>
</g>
<g >
<title>ip_input (127 samples, 0.56%)</title><rect x="1113.7" y="149" width="6.5" height="15.0" fill="rgb(252,3,34)" rx="2" ry="2" />
<text  x="1116.68" y="159.5" ></text>
</g>
<g >
<title>iflib_rxeof (12,986 samples, 56.87%)</title><rect x="73.7" y="213" width="671.0" height="15.0" fill="rgb(219,145,22)" rx="2" ry="2" />
<text  x="76.71" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>_epoch_enter_preempt (37 samples, 0.16%)</title><rect x="45.7" y="229" width="1.9" height="15.0" fill="rgb(234,74,15)" rx="2" ry="2" />
<text  x="48.71" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (127 samples, 0.56%)</title><rect x="1113.7" y="261" width="6.5" height="15.0" fill="rgb(217,32,47)" rx="2" ry="2" />
<text  x="1116.68" y="271.5" ></text>
</g>
<g >
<title>iflib_txq_drain (6,464 samples, 28.31%)</title><rect x="758.1" y="197" width="334.0" height="15.0" fill="rgb(222,103,40)" rx="2" ry="2" />
<text  x="761.12" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>pmap_kextract (40 samples, 0.18%)</title><rect x="894.8" y="117" width="2.1" height="15.0" fill="rgb(210,170,31)" rx="2" ry="2" />
<text  x="897.79" y="127.5" ></text>
</g>
<g >
<title>tc_windup (2 samples, 0.01%)</title><rect x="1189.1" y="197" width="0.1" height="15.0" fill="rgb(247,170,19)" rx="2" ry="2" />
<text  x="1192.12" y="207.5" ></text>
</g>
<g >
<title>soft_get_config (9 samples, 0.04%)</title><rect x="1188.5" y="181" width="0.5" height="15.0" fill="rgb(251,80,52)" rx="2" ry="2" />
<text  x="1191.50" y="191.5" ></text>
</g>
<g >
<title>fork_exit (21,142 samples, 92.58%)</title><rect x="21.2" y="277" width="1092.5" height="15.0" fill="rgb(229,223,34)" rx="2" ry="2" />
<text  x="24.21" y="287.5" >fork_exit</text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.02%)</title><rect x="1180.7" y="213" width="0.2" height="15.0" fill="rgb(216,58,36)" rx="2" ry="2" />
<text  x="1183.70" y="223.5" ></text>
</g>
<g >
<title>ether_input (613 samples, 2.68%)</title><rect x="1120.2" y="213" width="31.7" height="15.0" fill="rgb(211,20,27)" rx="2" ry="2" />
<text  x="1123.24" y="223.5" >et..</text>
</g>
<g >
<title>sleepq_lock (20 samples, 0.09%)</title><rect x="19.0" y="53" width="1.1" height="15.0" fill="rgb(232,135,24)" rx="2" ry="2" />
<text  x="22.04" y="63.5" ></text>
</g>
<g >
<title>pmap_kextract (40 samples, 0.18%)</title><rect x="1041.7" y="117" width="2.1" height="15.0" fill="rgb(221,201,12)" rx="2" ry="2" />
<text  x="1044.70" y="127.5" ></text>
</g>
<g >
<title>memcpy_erms (87 samples, 0.38%)</title><rect x="474.0" y="69" width="4.5" height="15.0" fill="rgb(218,156,45)" rx="2" ry="2" />
<text  x="476.97" y="79.5" ></text>
</g>
<g >
<title>drain_ring_lockless (3 samples, 0.01%)</title><rect x="1113.7" y="69" width="0.1" height="15.0" fill="rgb(243,186,0)" rx="2" ry="2" />
<text  x="1116.68" y="79.5" ></text>
</g>
<g >
<title>ixgbe_if_update_admin_status (3 samples, 0.01%)</title><rect x="50.0" y="213" width="0.2" height="15.0" fill="rgb(218,17,24)" rx="2" ry="2" />
<text  x="53.05" y="223.5" ></text>
</g>
<g >
<title>sleepq_broadcast (39 samples, 0.17%)</title><rect x="1105.0" y="213" width="2.0" height="15.0" fill="rgb(228,218,31)" rx="2" ry="2" />
<text  x="1108.00" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (21 samples, 0.09%)</title><rect x="19.0" y="229" width="1.1" height="15.0" fill="rgb(235,90,21)" rx="2" ry="2" />
<text  x="21.99" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.01%)</title><rect x="1189.7" y="229" width="0.1" height="15.0" fill="rgb(254,37,43)" rx="2" ry="2" />
<text  x="1192.69" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (797 samples, 3.49%)</title><rect x="1043.9" y="165" width="41.2" height="15.0" fill="rgb(230,52,37)" rx="2" ry="2" />
<text  x="1046.92" y="175.5" >ixg..</text>
</g>
<g >
<title>handleevents (72 samples, 0.32%)</title><rect x="1186.3" y="245" width="3.7" height="15.0" fill="rgb(251,180,41)" rx="2" ry="2" />
<text  x="1189.28" y="255.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (906 samples, 3.97%)</title><rect x="696.4" y="197" width="46.8" height="15.0" fill="rgb(223,145,18)" rx="2" ry="2" />
<text  x="699.42" y="207.5" >rxd_..</text>
</g>
<g >
<title>msi_vector (20 samples, 0.09%)</title><rect x="1182.8" y="261" width="1.1" height="15.0" fill="rgb(206,186,7)" rx="2" ry="2" />
<text  x="1185.82" y="271.5" ></text>
</g>
<g >
<title>ip_tryforward (5,811 samples, 25.45%)</title><rect x="257.2" y="101" width="300.3" height="15.0" fill="rgb(218,189,18)" rx="2" ry="2" />
<text  x="260.20" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ixgbe_read_reg (3 samples, 0.01%)</title><rect x="50.0" y="181" width="0.2" height="15.0" fill="rgb(232,154,18)" rx="2" ry="2" />
<text  x="53.05" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (15 samples, 0.07%)</title><rect x="62.8" y="197" width="0.8" height="15.0" fill="rgb(220,182,8)" rx="2" ry="2" />
<text  x="65.81" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (614 samples, 2.69%)</title><rect x="1120.2" y="245" width="31.8" height="15.0" fill="rgb(227,121,23)" rx="2" ry="2" />
<text  x="1123.24" y="255.5" >_t..</text>
</g>
<g >
<title>spinlock_enter (6 samples, 0.03%)</title><rect x="1114.8" y="37" width="0.3" height="15.0" fill="rgb(242,7,8)" rx="2" ry="2" />
<text  x="1117.82" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (614 samples, 2.69%)</title><rect x="1120.2" y="229" width="31.8" height="15.0" fill="rgb(254,112,17)" rx="2" ry="2" />
<text  x="1123.24" y="239.5" >if..</text>
</g>
<g >
<title>ixgbe_update_stats_counters (3 samples, 0.01%)</title><rect x="50.0" y="197" width="0.2" height="15.0" fill="rgb(211,189,36)" rx="2" ry="2" />
<text  x="53.05" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (20 samples, 0.09%)</title><rect x="19.0" y="37" width="1.1" height="15.0" fill="rgb(233,94,45)" rx="2" ry="2" />
<text  x="22.04" y="47.5" ></text>
</g>
<g >
<title>pmc_hook_handler (31 samples, 0.14%)</title><rect x="1187.5" y="213" width="1.6" height="15.0" fill="rgb(244,168,36)" rx="2" ry="2" />
<text  x="1190.47" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (41 samples, 0.18%)</title><rect x="1107.0" y="213" width="2.1" height="15.0" fill="rgb(243,204,3)" rx="2" ry="2" />
<text  x="1110.01" y="223.5" ></text>
</g>
<g >
<title>callout_process (4 samples, 0.02%)</title><rect x="1186.6" y="229" width="0.2" height="15.0" fill="rgb(228,179,54)" rx="2" ry="2" />
<text  x="1189.64" y="239.5" ></text>
</g>
<g >
<title>timercb (85 samples, 0.37%)</title><rect x="1185.6" y="261" width="4.4" height="15.0" fill="rgb(249,197,34)" rx="2" ry="2" />
<text  x="1188.61" y="271.5" ></text>
</g>
<g >
<title>intr_execute_handlers (617 samples, 2.70%)</title><rect x="1152.0" y="277" width="31.9" height="15.0" fill="rgb(254,185,10)" rx="2" ry="2" />
<text  x="1154.97" y="287.5" >in..</text>
</g>
<g >
<title>ether_nh_input (127 samples, 0.56%)</title><rect x="1113.7" y="197" width="6.5" height="15.0" fill="rgb(229,201,42)" rx="2" ry="2" />
<text  x="1116.68" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (92 samples, 0.40%)</title><rect x="1115.5" y="53" width="4.7" height="15.0" fill="rgb(246,132,8)" rx="2" ry="2" />
<text  x="1118.49" y="63.5" ></text>
</g>
<g >
<title>ip_tryforward (127 samples, 0.56%)</title><rect x="1113.7" y="133" width="6.5" height="15.0" fill="rgb(235,35,19)" rx="2" ry="2" />
<text  x="1116.68" y="143.5" ></text>
</g>
<g >
<title>Xtimerint (2 samples, 0.01%)</title><rect x="18.6" y="277" width="0.1" height="15.0" fill="rgb(218,44,15)" rx="2" ry="2" />
<text  x="21.63" y="287.5" ></text>
</g>
<g >
<title>uma_small_alloc (53 samples, 0.23%)</title><rect x="599.3" y="117" width="2.7" height="15.0" fill="rgb(214,123,34)" rx="2" ry="2" />
<text  x="602.28" y="127.5" ></text>
</g>
<g >
<title>zone_import (102 samples, 0.45%)</title><rect x="597.9" y="149" width="5.3" height="15.0" fill="rgb(215,113,32)" rx="2" ry="2" />
<text  x="600.88" y="159.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (21,074 samples, 92.28%)</title><rect x="21.5" y="245" width="1089.0" height="15.0" fill="rgb(247,48,2)" rx="2" ry="2" />
<text  x="24.52" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>gtaskqueue_thread_loop (21,080 samples, 92.31%)</title><rect x="21.2" y="261" width="1089.3" height="15.0" fill="rgb(227,52,28)" rx="2" ry="2" />
<text  x="24.21" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>sched_clock (2 samples, 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(222,22,48)" rx="2" ry="2" />
<text  x="1192.90" y="223.5" ></text>
</g>
<g >
<title>ether_input (8,086 samples, 35.41%)</title><rect x="148.2" y="197" width="417.9" height="15.0" fill="rgb(205,45,6)" rx="2" ry="2" />
<text  x="151.22" y="207.5" >ether_input</text>
</g>
<g >
<title>netisr_dispatch (13 samples, 0.06%)</title><rect x="695.7" y="197" width="0.7" height="15.0" fill="rgb(206,31,43)" rx="2" ry="2" />
<text  x="698.75" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (127 samples, 0.56%)</title><rect x="1113.7" y="245" width="6.5" height="15.0" fill="rgb(245,191,50)" rx="2" ry="2" />
<text  x="1116.68" y="255.5" ></text>
</g>
<g >
<title>lock_delay (5 samples, 0.02%)</title><rect x="599.0" y="101" width="0.2" height="15.0" fill="rgb(225,59,52)" rx="2" ry="2" />
<text  x="601.97" y="111.5" ></text>
</g>
<g >
<title>cache_free (3 samples, 0.01%)</title><rect x="892.6" y="117" width="0.2" height="15.0" fill="rgb(246,224,20)" rx="2" ry="2" />
<text  x="895.62" y="127.5" ></text>
</g>
<g >
<title>ether_input (127 samples, 0.56%)</title><rect x="1113.7" y="229" width="6.5" height="15.0" fill="rgb(245,86,33)" rx="2" ry="2" />
<text  x="1116.68" y="239.5" ></text>
</g>
<g >
<title>sleepq_lock (60 samples, 0.26%)</title><rect x="1175.0" y="197" width="3.1" height="15.0" fill="rgb(240,51,7)" rx="2" ry="2" />
<text  x="1177.96" y="207.5" ></text>
</g>
<g >
<title>m_freem (631 samples, 2.76%)</title><rect x="864.3" y="165" width="32.6" height="15.0" fill="rgb(220,225,41)" rx="2" ry="2" />
<text  x="867.25" y="175.5" >m_..</text>
</g>
<g >
<title>m_free (587 samples, 2.57%)</title><rect x="866.5" y="149" width="30.4" height="15.0" fill="rgb(234,66,3)" rx="2" ry="2" />
<text  x="869.53" y="159.5" >m_..</text>
</g>
<g >
<title>acpi_cpu_idle_mwait (43 samples, 0.19%)</title><rect x="1111.0" y="197" width="2.2" height="15.0" fill="rgb(240,37,2)" rx="2" ry="2" />
<text  x="1113.99" y="207.5" ></text>
</g>
<g >
<title>zone_import (15 samples, 0.07%)</title><rect x="602.0" y="101" width="0.8" height="15.0" fill="rgb(227,20,30)" rx="2" ry="2" />
<text  x="605.02" y="111.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (127 samples, 0.56%)</title><rect x="1113.7" y="277" width="6.5" height="15.0" fill="rgb(216,33,33)" rx="2" ry="2" />
<text  x="1116.68" y="287.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (28 samples, 0.12%)</title><rect x="743.2" y="197" width="1.5" height="15.0" fill="rgb(240,195,26)" rx="2" ry="2" />
<text  x="746.24" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (26 samples, 0.11%)</title><rect x="1172.6" y="213" width="1.3" height="15.0" fill="rgb(252,68,31)" rx="2" ry="2" />
<text  x="1175.59" y="223.5" ></text>
</g>
<g >
<title>mac_mbuf_init (78 samples, 0.34%)</title><rect x="672.7" y="197" width="4.0" height="15.0" fill="rgb(234,55,51)" rx="2" ry="2" />
<text  x="675.65" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (613 samples, 2.68%)</title><rect x="1120.2" y="117" width="31.7" height="15.0" fill="rgb(227,79,20)" rx="2" ry="2" />
<text  x="1123.24" y="127.5" >ip..</text>
</g>
<g >
<title>softclock (7 samples, 0.03%)</title><rect x="1110.5" y="245" width="0.3" height="15.0" fill="rgb(230,1,47)" rx="2" ry="2" />
<text  x="1113.48" y="255.5" ></text>
</g>
<g >
<title>spinlock_enter (20 samples, 0.09%)</title><rect x="70.5" y="165" width="1.0" height="15.0" fill="rgb(217,158,26)" rx="2" ry="2" />
<text  x="73.51" y="175.5" ></text>
</g>
<g >
<title>ether_demux (613 samples, 2.68%)</title><rect x="1120.2" y="165" width="31.7" height="15.0" fill="rgb(211,154,11)" rx="2" ry="2" />
<text  x="1123.24" y="175.5" >et..</text>
</g>
<g >
<title>keg_alloc_slab (90 samples, 0.39%)</title><rect x="598.1" y="133" width="4.7" height="15.0" fill="rgb(224,92,24)" rx="2" ry="2" />
<text  x="601.14" y="143.5" ></text>
</g>
<g >
<title>setrunnable (2 samples, 0.01%)</title><rect x="1186.7" y="181" width="0.1" height="15.0" fill="rgb(232,50,4)" rx="2" ry="2" />
<text  x="1189.69" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_intr (25 samples, 0.11%)</title><rect x="1183.9" y="277" width="1.2" height="15.0" fill="rgb(231,199,14)" rx="2" ry="2" />
<text  x="1186.85" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (252 samples, 1.10%)</title><rect x="1122.2" y="37" width="13.0" height="15.0" fill="rgb(254,110,2)" rx="2" ry="2" />
<text  x="1125.15" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (1,896 samples, 8.30%)</title><rect x="369.5" y="69" width="98.0" height="15.0" fill="rgb(221,160,40)" rx="2" ry="2" />
<text  x="372.54" y="79.5" >ether_outpu..</text>
</g>
<g >
<title>iflib_txq_drain (3 samples, 0.01%)</title><rect x="1113.7" y="53" width="0.1" height="15.0" fill="rgb(235,178,8)" rx="2" ry="2" />
<text  x="1116.68" y="63.5" ></text>
</g>
<g >
<title>iflib_encap (3,643 samples, 15.95%)</title><rect x="896.9" y="181" width="188.2" height="15.0" fill="rgb(207,148,1)" rx="2" ry="2" />
<text  x="899.86" y="191.5" >iflib_encap</text>
</g>
<g >
<title>spinlock_exit (25 samples, 0.11%)</title><rect x="71.9" y="181" width="1.2" height="15.0" fill="rgb(210,146,4)" rx="2" ry="2" />
<text  x="74.85" y="191.5" ></text>
</g>
<g >
<title>doreti (21 samples, 0.09%)</title><rect x="20.1" y="277" width="1.1" height="15.0" fill="rgb(234,57,30)" rx="2" ry="2" />
<text  x="23.08" y="287.5" ></text>
</g>
<g >
<title>iflib_get_ifp (20 samples, 0.09%)</title><rect x="662.7" y="181" width="1.1" height="15.0" fill="rgb(209,145,26)" rx="2" ry="2" />
<text  x="665.73" y="191.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (38 samples, 0.17%)</title><rect x="47.6" y="229" width="2.0" height="15.0" fill="rgb(250,189,54)" rx="2" ry="2" />
<text  x="50.62" y="239.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (39 samples, 0.17%)</title><rect x="892.8" y="117" width="2.0" height="15.0" fill="rgb(237,55,32)" rx="2" ry="2" />
<text  x="895.78" y="127.5" ></text>
</g>
<g >
<title>ip_input (21 samples, 0.09%)</title><rect x="19.0" y="165" width="1.1" height="15.0" fill="rgb(226,160,38)" rx="2" ry="2" />
<text  x="21.99" y="175.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (106 samples, 0.46%)</title><rect x="622.5" y="165" width="5.5" height="15.0" fill="rgb(221,183,20)" rx="2" ry="2" />
<text  x="625.48" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (611 samples, 2.68%)</title><rect x="1120.3" y="53" width="31.6" height="15.0" fill="rgb(220,193,8)" rx="2" ry="2" />
<text  x="1123.35" y="63.5" >gr..</text>
</g>
<g >
<title>Xtimerint_pti (5 samples, 0.02%)</title><rect x="18.7" y="277" width="0.3" height="15.0" fill="rgb(220,191,10)" rx="2" ry="2" />
<text  x="21.73" y="287.5" ></text>
</g>
<g >
<title>ether_output (127 samples, 0.56%)</title><rect x="1113.7" y="117" width="6.5" height="15.0" fill="rgb(253,75,35)" rx="2" ry="2" />
<text  x="1116.68" y="127.5" ></text>
</g>
<g >
<title>spinlock_exit (22 samples, 0.10%)</title><rect x="1119.1" y="37" width="1.1" height="15.0" fill="rgb(242,167,41)" rx="2" ry="2" />
<text  x="1122.10" y="47.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (43 samples, 0.19%)</title><rect x="1111.0" y="229" width="2.2" height="15.0" fill="rgb(219,212,33)" rx="2" ry="2" />
<text  x="1113.99" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (13 samples, 0.06%)</title><rect x="823.6" y="181" width="0.7" height="15.0" fill="rgb(225,109,0)" rx="2" ry="2" />
<text  x="826.59" y="191.5" ></text>
</g>
<g >
<title>loadtimer (3 samples, 0.01%)</title><rect x="1189.5" y="229" width="0.2" height="15.0" fill="rgb(207,60,24)" rx="2" ry="2" />
<text  x="1192.53" y="239.5" ></text>
</g>
<g >
<title>mac_ifnet_create_mbuf (94 samples, 0.41%)</title><rect x="557.5" y="149" width="4.8" height="15.0" fill="rgb(249,121,24)" rx="2" ry="2" />
<text  x="560.47" y="159.5" ></text>
</g>
<g >
<title>ip_input (6,333 samples, 27.73%)</title><rect x="230.2" y="117" width="327.3" height="15.0" fill="rgb(234,1,41)" rx="2" ry="2" />
<text  x="233.23" y="127.5" >ip_input</text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.02%)</title><rect x="745.4" y="197" width="0.2" height="15.0" fill="rgb(223,136,15)" rx="2" ry="2" />
<text  x="748.36" y="207.5" ></text>
</g>
<g >
<title>tc_ticktock (3 samples, 0.01%)</title><rect x="1189.1" y="213" width="0.1" height="15.0" fill="rgb(245,140,40)" rx="2" ry="2" />
<text  x="1192.07" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (132 samples, 0.58%)</title><rect x="66.3" y="197" width="6.8" height="15.0" fill="rgb(237,60,41)" rx="2" ry="2" />
<text  x="69.32" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (87 samples, 0.38%)</title><rect x="67.0" y="181" width="4.5" height="15.0" fill="rgb(252,188,0)" rx="2" ry="2" />
<text  x="70.05" y="191.5" ></text>
</g>
<g >
<title>ether_demux (21 samples, 0.09%)</title><rect x="19.0" y="197" width="1.1" height="15.0" fill="rgb(250,52,44)" rx="2" ry="2" />
<text  x="21.99" y="207.5" ></text>
</g>
<g >
<title>zone_alloc_item (15 samples, 0.07%)</title><rect x="602.0" y="117" width="0.8" height="15.0" fill="rgb(230,98,18)" rx="2" ry="2" />
<text  x="605.02" y="127.5" ></text>
</g>
<g >
<title>mi_switch (2 samples, 0.01%)</title><rect x="1113.5" y="245" width="0.1" height="15.0" fill="rgb(231,43,12)" rx="2" ry="2" />
<text  x="1116.47" y="255.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="49.8" y="213" width="0.1" height="15.0" fill="rgb(212,217,10)" rx="2" ry="2" />
<text  x="52.79" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (20 samples, 0.09%)</title><rect x="19.0" y="85" width="1.1" height="15.0" fill="rgb(253,188,22)" rx="2" ry="2" />
<text  x="22.04" y="95.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (506 samples, 2.22%)</title><rect x="637.6" y="197" width="26.2" height="15.0" fill="rgb(236,32,15)" rx="2" ry="2" />
<text  x="640.62" y="207.5" >i..</text>
</g>
<g >
<title>handleevents (2 samples, 0.01%)</title><rect x="1110.9" y="213" width="0.1" height="15.0" fill="rgb(253,30,5)" rx="2" ry="2" />
<text  x="1113.89" y="223.5" ></text>
</g>
<g >
<title>ether_demux (127 samples, 0.56%)</title><rect x="1113.7" y="181" width="6.5" height="15.0" fill="rgb(218,19,52)" rx="2" ry="2" />
<text  x="1116.68" y="191.5" ></text>
</g>
<g >
<title>vm_page_alloc_domain_after (6 samples, 0.03%)</title><rect x="601.7" y="101" width="0.3" height="15.0" fill="rgb(227,209,53)" rx="2" ry="2" />
<text  x="604.71" y="111.5" ></text>
</g>
<g >
<title>softclock_call_cc (6 samples, 0.03%)</title><rect x="1110.5" y="229" width="0.3" height="15.0" fill="rgb(214,111,47)" rx="2" ry="2" />
<text  x="1113.53" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (2 samples, 0.01%)</title><rect x="596.6" y="165" width="0.1" height="15.0" fill="rgb(234,0,10)" rx="2" ry="2" />
<text  x="599.59" y="175.5" ></text>
</g>
<g >
<title>kbdc_data_ready (6 samples, 0.03%)</title><rect x="1110.5" y="197" width="0.3" height="15.0" fill="rgb(227,59,47)" rx="2" ry="2" />
<text  x="1113.53" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (5 samples, 0.02%)</title><rect x="47.4" y="213" width="0.2" height="15.0" fill="rgb(210,45,5)" rx="2" ry="2" />
<text  x="50.36" y="223.5" ></text>
</g>
<g >
<title>drain_ring_lockless (2 samples, 0.01%)</title><rect x="1120.2" y="53" width="0.1" height="15.0" fill="rgb(239,166,13)" rx="2" ry="2" />
<text  x="1123.24" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (6,546 samples, 28.67%)</title><rect x="219.2" y="133" width="338.3" height="15.0" fill="rgb(244,184,44)" rx="2" ry="2" />
<text  x="222.22" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>netmap_rx_irq (26 samples, 0.11%)</title><rect x="745.7" y="213" width="1.4" height="15.0" fill="rgb(222,183,48)" rx="2" ry="2" />
<text  x="748.72" y="223.5" ></text>
</g>
<g >
<title>sched_add (2 samples, 0.01%)</title><rect x="1186.7" y="165" width="0.1" height="15.0" fill="rgb(208,111,1)" rx="2" ry="2" />
<text  x="1189.69" y="175.5" ></text>
</g>
<g >
<title>zone_put_bucket (2 samples, 0.01%)</title><rect x="892.7" y="101" width="0.1" height="15.0" fill="rgb(213,139,22)" rx="2" ry="2" />
<text  x="895.67" y="111.5" ></text>
</g>
<g >
<title>bsearch4_lookup (424 samples, 1.86%)</title><rect x="535.6" y="53" width="21.9" height="15.0" fill="rgb(252,172,19)" rx="2" ry="2" />
<text  x="538.56" y="63.5" >b..</text>
</g>
<g >
<title>netisr_dispatch (32 samples, 0.14%)</title><rect x="217.6" y="133" width="1.6" height="15.0" fill="rgb(217,35,4)" rx="2" ry="2" />
<text  x="220.57" y="143.5" ></text>
</g>
<g >
<title>native_lapic_eoi (20 samples, 0.09%)</title><rect x="1181.7" y="245" width="1.1" height="15.0" fill="rgb(233,229,33)" rx="2" ry="2" />
<text  x="1184.73" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (44 samples, 0.19%)</title><rect x="63.6" y="197" width="2.3" height="15.0" fill="rgb(239,35,15)" rx="2" ry="2" />
<text  x="66.58" y="207.5" ></text>
</g>
<g >
<title>sched_pickcpu (2 samples, 0.01%)</title><rect x="1186.7" y="149" width="0.1" height="15.0" fill="rgb(231,111,29)" rx="2" ry="2" />
<text  x="1189.69" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (7,576 samples, 33.18%)</title><rect x="174.6" y="165" width="391.5" height="15.0" fill="rgb(214,206,15)" rx="2" ry="2" />
<text  x="177.58" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>if_inc_counter (20 samples, 0.09%)</title><rect x="567.1" y="197" width="1.0" height="15.0" fill="rgb(206,63,37)" rx="2" ry="2" />
<text  x="570.08" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (21 samples, 0.09%)</title><rect x="1178.5" y="197" width="1.1" height="15.0" fill="rgb(241,136,2)" rx="2" ry="2" />
<text  x="1181.48" y="207.5" ></text>
</g>
<g >
<title>cache_alloc (2 samples, 0.01%)</title><rect x="601.8" y="69" width="0.1" height="15.0" fill="rgb(216,199,25)" rx="2" ry="2" />
<text  x="604.81" y="79.5" ></text>
</g>
<g >
<title>sleepq_signal (6 samples, 0.03%)</title><rect x="1118.8" y="37" width="0.3" height="15.0" fill="rgb(244,153,1)" rx="2" ry="2" />
<text  x="1121.79" y="47.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="603.0" y="101" width="0.2" height="15.0" fill="rgb(211,13,2)" rx="2" ry="2" />
<text  x="606.05" y="111.5" ></text>
</g>
<g >
<title>cache_alloc_retry (125 samples, 0.55%)</title><rect x="596.7" y="181" width="6.5" height="15.0" fill="rgb(247,161,43)" rx="2" ry="2" />
<text  x="599.69" y="191.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (43 samples, 0.19%)</title><rect x="1111.0" y="213" width="2.2" height="15.0" fill="rgb(233,66,5)" rx="2" ry="2" />
<text  x="1113.99" y="223.5" ></text>
</g>
<g >
<title>drain_ring_lockless (6,618 samples, 28.98%)</title><rect x="750.4" y="213" width="342.0" height="15.0" fill="rgb(225,1,13)" rx="2" ry="2" />
<text  x="753.42" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ifmp_ring_check_drainage (75 samples, 0.33%)</title><rect x="1092.7" y="213" width="3.9" height="15.0" fill="rgb(209,168,36)" rx="2" ry="2" />
<text  x="1095.70" y="223.5" ></text>
</g>
<g >
<title>zone_alloc_limit (5 samples, 0.02%)</title><rect x="597.6" y="149" width="0.2" height="15.0" fill="rgb(206,81,38)" rx="2" ry="2" />
<text  x="600.57" y="159.5" ></text>
</g>
<g >
<title>m_pkthdr_init (172 samples, 0.75%)</title><rect x="663.8" y="197" width="8.9" height="15.0" fill="rgb(214,0,21)" rx="2" ry="2" />
<text  x="666.76" y="207.5" ></text>
</g>
<g >
<title>ether_nh_input (21 samples, 0.09%)</title><rect x="19.0" y="213" width="1.1" height="15.0" fill="rgb(251,56,32)" rx="2" ry="2" />
<text  x="21.99" y="223.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (7 samples, 0.03%)</title><rect x="598.9" y="117" width="0.3" height="15.0" fill="rgb(239,114,28)" rx="2" ry="2" />
<text  x="601.86" y="127.5" ></text>
</g>
<g >
<title>sleepq_release (3 samples, 0.01%)</title><rect x="71.5" y="181" width="0.2" height="15.0" fill="rgb(231,25,52)" rx="2" ry="2" />
<text  x="74.54" y="191.5" ></text>
</g>
<g >
<title>sleepq_release (5 samples, 0.02%)</title><rect x="1118.5" y="37" width="0.3" height="15.0" fill="rgb(215,34,44)" rx="2" ry="2" />
<text  x="1121.54" y="47.5" ></text>
</g>
<g >
<title>intr_lookup_source (14 samples, 0.06%)</title><rect x="1184.4" y="261" width="0.7" height="15.0" fill="rgb(225,9,49)" rx="2" ry="2" />
<text  x="1187.42" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (7 samples, 0.03%)</title><rect x="1115.1" y="37" width="0.4" height="15.0" fill="rgb(214,115,8)" rx="2" ry="2" />
<text  x="1118.13" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (460 samples, 2.01%)</title><rect x="406.1" y="37" width="23.7" height="15.0" fill="rgb(217,69,41)" rx="2" ry="2" />
<text  x="409.07" y="47.5" >g..</text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.02%)</title><rect x="1097.9" y="197" width="0.2" height="15.0" fill="rgb(233,143,2)" rx="2" ry="2" />
<text  x="1100.87" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,695 samples, 7.42%)</title><rect x="379.9" y="53" width="87.6" height="15.0" fill="rgb(227,26,28)" rx="2" ry="2" />
<text  x="382.93" y="63.5" >iflib_if_t..</text>
</g>
<g >
<title>netisr_dispatch_src (127 samples, 0.56%)</title><rect x="1113.7" y="213" width="6.5" height="15.0" fill="rgb(206,93,2)" rx="2" ry="2" />
<text  x="1116.68" y="223.5" ></text>
</g>
<g >
<title>statclock (3 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(250,165,48)" rx="2" ry="2" />
<text  x="1192.84" y="239.5" ></text>
</g>
<g >
<title>iflib_get_softc (2 samples, 0.01%)</title><rect x="745.3" y="197" width="0.1" height="15.0" fill="rgb(214,91,6)" rx="2" ry="2" />
<text  x="748.25" y="207.5" ></text>
</g>
<g >
<title>ether_demux (6,950 samples, 30.43%)</title><rect x="198.3" y="149" width="359.2" height="15.0" fill="rgb(221,19,19)" rx="2" ry="2" />
<text  x="201.35" y="159.5" >ether_demux</text>
</g>
<g >
<title>iflib_if_transmit (21 samples, 0.09%)</title><rect x="19.0" y="101" width="1.1" height="15.0" fill="rgb(239,57,6)" rx="2" ry="2" />
<text  x="21.99" y="111.5" ></text>
</g>
<g >
<title>lapic_et_start (2 samples, 0.01%)</title><rect x="1113.3" y="213" width="0.1" height="15.0" fill="rgb(237,217,30)" rx="2" ry="2" />
<text  x="1116.32" y="223.5" ></text>
</g>
<g >
<title>if_getcapenable (4 samples, 0.02%)</title><rect x="566.1" y="197" width="0.2" height="15.0" fill="rgb(229,204,16)" rx="2" ry="2" />
<text  x="569.05" y="207.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (7 samples, 0.03%)</title><rect x="602.4" y="69" width="0.4" height="15.0" fill="rgb(206,80,34)" rx="2" ry="2" />
<text  x="605.43" y="79.5" ></text>
</g>
<g >
<title>all (22,836 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(221,50,20)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ithread_loop (7 samples, 0.03%)</title><rect x="1110.5" y="261" width="0.3" height="15.0" fill="rgb(225,16,30)" rx="2" ry="2" />
<text  x="1113.48" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (5 samples, 0.02%)</title><rect x="1092.1" y="197" width="0.3" height="15.0" fill="rgb(232,63,41)" rx="2" ry="2" />
<text  x="1095.13" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (127 samples, 0.56%)</title><rect x="1113.7" y="85" width="6.5" height="15.0" fill="rgb(254,53,29)" rx="2" ry="2" />
<text  x="1116.68" y="95.5" ></text>
</g>
<g >
<title>iflib_rxeof (21 samples, 0.09%)</title><rect x="19.0" y="261" width="1.1" height="15.0" fill="rgb(219,35,29)" rx="2" ry="2" />
<text  x="21.99" y="271.5" ></text>
</g>
<g >
<title>sleepq_release (12 samples, 0.05%)</title><rect x="1109.1" y="213" width="0.7" height="15.0" fill="rgb(236,199,36)" rx="2" ry="2" />
<text  x="1112.13" y="223.5" ></text>
</g>
<g >
<title>sched_idletd (52 samples, 0.23%)</title><rect x="1110.9" y="261" width="2.7" height="15.0" fill="rgb(245,123,5)" rx="2" ry="2" />
<text  x="1113.89" y="271.5" ></text>
</g>
<g >
<title>mac_ifnet_check_transmit (125 samples, 0.55%)</title><rect x="467.5" y="69" width="6.5" height="15.0" fill="rgb(218,115,29)" rx="2" ry="2" />
<text  x="470.51" y="79.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (8 samples, 0.04%)</title><rect x="49.2" y="213" width="0.4" height="15.0" fill="rgb(239,97,1)" rx="2" ry="2" />
<text  x="52.17" y="223.5" ></text>
</g>
<g >
<title>_task_fn_admin (3 samples, 0.01%)</title><rect x="50.0" y="229" width="0.2" height="15.0" fill="rgb(246,190,53)" rx="2" ry="2" />
<text  x="53.05" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (13,486 samples, 59.06%)</title><rect x="50.2" y="229" width="696.9" height="15.0" fill="rgb(236,144,1)" rx="2" ry="2" />
<text  x="53.20" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>uma_zalloc_arg (2 samples, 0.01%)</title><rect x="601.9" y="85" width="0.1" height="15.0" fill="rgb(216,3,30)" rx="2" ry="2" />
<text  x="604.91" y="95.5" ></text>
</g>
<g >
<title>iflib_if_transmit (613 samples, 2.68%)</title><rect x="1120.2" y="69" width="31.7" height="15.0" fill="rgb(213,98,34)" rx="2" ry="2" />
<text  x="1123.24" y="79.5" >if..</text>
</g>
<g >
<title>netisr_dispatch_src (7,851 samples, 34.38%)</title><rect x="160.4" y="181" width="405.7" height="15.0" fill="rgb(217,109,23)" rx="2" ry="2" />
<text  x="163.37" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>spinlock_enter (53 samples, 0.23%)</title><rect x="1098.1" y="229" width="2.7" height="15.0" fill="rgb(242,46,40)" rx="2" ry="2" />
<text  x="1101.07" y="239.5" ></text>
</g>
<g >
<title>softclock_call_cc (2 samples, 0.01%)</title><rect x="1186.7" y="213" width="0.1" height="15.0" fill="rgb(218,219,53)" rx="2" ry="2" />
<text  x="1189.69" y="223.5" ></text>
</g>
<g >
<title>iflib_get_softc (4 samples, 0.02%)</title><rect x="1097.7" y="197" width="0.2" height="15.0" fill="rgb(207,65,49)" rx="2" ry="2" />
<text  x="1100.66" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (20 samples, 0.09%)</title><rect x="1171.6" y="213" width="1.0" height="15.0" fill="rgb(211,200,41)" rx="2" ry="2" />
<text  x="1174.55" y="223.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (703 samples, 3.08%)</title><rect x="431.2" y="37" width="36.3" height="15.0" fill="rgb(228,127,40)" rx="2" ry="2" />
<text  x="434.18" y="47.5" >ifm..</text>
</g>
<g >
<title>ip_input (613 samples, 2.68%)</title><rect x="1120.2" y="133" width="31.7" height="15.0" fill="rgb(214,224,52)" rx="2" ry="2" />
<text  x="1123.24" y="143.5" >ip..</text>
</g>
<g >
<title>in_lltable_lookup (173 samples, 0.76%)</title><rect x="357.5" y="53" width="8.9" height="15.0" fill="rgb(223,69,31)" rx="2" ry="2" />
<text  x="360.50" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch (30 samples, 0.13%)</title><rect x="158.8" y="181" width="1.6" height="15.0" fill="rgb(231,218,15)" rx="2" ry="2" />
<text  x="161.82" y="191.5" ></text>
</g>
<g >
<title>_bus_dmamap_load_mbuf_sg (567 samples, 2.48%)</title><rect x="1014.5" y="149" width="29.3" height="15.0" fill="rgb(215,226,8)" rx="2" ry="2" />
<text  x="1017.47" y="159.5" >_b..</text>
</g>
<g >
<title>iflib_txq_drain (2 samples, 0.01%)</title><rect x="1120.2" y="37" width="0.1" height="15.0" fill="rgb(235,178,52)" rx="2" ry="2" />
<text  x="1123.24" y="47.5" ></text>
</g>
<g >
<title>_rm_rlock (272 samples, 1.19%)</title><rect x="493.6" y="69" width="14.1" height="15.0" fill="rgb(220,148,42)" rx="2" ry="2" />
<text  x="496.61" y="79.5" ></text>
</g>
<g >
<title>msi_eoi_source (6 samples, 0.03%)</title><rect x="1181.4" y="245" width="0.3" height="15.0" fill="rgb(231,10,32)" rx="2" ry="2" />
<text  x="1184.42" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (345 samples, 1.51%)</title><rect x="846.4" y="165" width="17.9" height="15.0" fill="rgb(242,102,35)" rx="2" ry="2" />
<text  x="849.43" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.02%)</title><rect x="565.8" y="149" width="0.3" height="15.0" fill="rgb(221,108,34)" rx="2" ry="2" />
<text  x="568.79" y="159.5" ></text>
</g>
<g >
<title>intr_event_handle (2 samples, 0.01%)</title><rect x="1187.4" y="213" width="0.1" height="15.0" fill="rgb(212,127,25)" rx="2" ry="2" />
<text  x="1190.36" y="223.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (6 samples, 0.03%)</title><rect x="1188.2" y="181" width="0.3" height="15.0" fill="rgb(214,63,23)" rx="2" ry="2" />
<text  x="1191.19" y="191.5" ></text>
</g>
<g >
<title>ether_input (21 samples, 0.09%)</title><rect x="19.0" y="245" width="1.1" height="15.0" fill="rgb(236,162,45)" rx="2" ry="2" />
<text  x="21.99" y="255.5" ></text>
</g>
<g >
<title>_task_fn_rx (21 samples, 0.09%)</title><rect x="19.0" y="277" width="1.1" height="15.0" fill="rgb(242,200,47)" rx="2" ry="2" />
<text  x="21.99" y="287.5" ></text>
</g>
<g >
<title>ether_output (21 samples, 0.09%)</title><rect x="19.0" y="133" width="1.1" height="15.0" fill="rgb(213,80,29)" rx="2" ry="2" />
<text  x="21.99" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (288 samples, 1.26%)</title><rect x="1164.7" y="229" width="14.9" height="15.0" fill="rgb(215,45,21)" rx="2" ry="2" />
<text  x="1167.68" y="239.5" ></text>
</g>
<g >
<title>Xapic_isr1 (67 samples, 0.29%)</title><rect x="10.0" y="277" width="3.5" height="15.0" fill="rgb(222,107,36)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>memmove_erms (60 samples, 0.26%)</title><rect x="366.4" y="53" width="3.1" height="15.0" fill="rgb(254,93,51)" rx="2" ry="2" />
<text  x="369.44" y="63.5" ></text>
</g>
<g >
<title>wakeup_any (20 samples, 0.09%)</title><rect x="19.0" y="69" width="1.1" height="15.0" fill="rgb(243,100,8)" rx="2" ry="2" />
<text  x="22.04" y="79.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (21 samples, 0.09%)</title><rect x="19.0" y="181" width="1.1" height="15.0" fill="rgb(226,127,40)" rx="2" ry="2" />
<text  x="21.99" y="191.5" ></text>
</g>
<g >
<title>tsc_get_config (2 samples, 0.01%)</title><rect x="1189.0" y="181" width="0.1" height="15.0" fill="rgb(216,151,13)" rx="2" ry="2" />
<text  x="1191.97" y="191.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (69 samples, 0.30%)</title><rect x="1088.6" y="181" width="3.5" height="15.0" fill="rgb(223,90,28)" rx="2" ry="2" />
<text  x="1091.57" y="191.5" ></text>
</g>
<g >
<title>iflib_encap (2 samples, 0.01%)</title><rect x="1113.7" y="37" width="0.1" height="15.0" fill="rgb(215,111,3)" rx="2" ry="2" />
<text  x="1116.68" y="47.5" ></text>
</g>
<g >
<title>arpresolve (523 samples, 2.29%)</title><rect x="342.5" y="69" width="27.0" height="15.0" fill="rgb(243,9,20)" rx="2" ry="2" />
<text  x="345.51" y="79.5" >a..</text>
</g>
<g >
<title>uma_zfree_arg (452 samples, 1.98%)</title><rect x="873.5" y="133" width="23.4" height="15.0" fill="rgb(223,37,36)" rx="2" ry="2" />
<text  x="876.50" y="143.5" >u..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (16 samples, 0.07%)</title><rect x="744.7" y="213" width="0.9" height="15.0" fill="rgb(217,229,14)" rx="2" ry="2" />
<text  x="747.74" y="223.5" ></text>
</g>
<g >
<title>in_localip (774 samples, 3.39%)</title><rect x="478.5" y="85" width="40.0" height="15.0" fill="rgb(238,172,51)" rx="2" ry="2" />
<text  x="481.47" y="95.5" >in_..</text>
</g>
<g >
<title>spinlock_exit (14 samples, 0.06%)</title><rect x="1109.8" y="213" width="0.7" height="15.0" fill="rgb(232,45,9)" rx="2" ry="2" />
<text  x="1112.75" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (124 samples, 0.54%)</title><rect x="1113.8" y="69" width="6.4" height="15.0" fill="rgb(246,24,26)" rx="2" ry="2" />
<text  x="1116.83" y="79.5" ></text>
</g>
<g >
<title>bus_dmamap_load (2 samples, 0.01%)</title><rect x="596.6" y="181" width="0.1" height="15.0" fill="rgb(252,52,9)" rx="2" ry="2" />
<text  x="599.59" y="191.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (29 samples, 0.13%)</title><rect x="1096.6" y="213" width="1.5" height="15.0" fill="rgb(226,179,8)" rx="2" ry="2" />
<text  x="1099.58" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (293 samples, 1.28%)</title><rect x="1135.2" y="37" width="15.1" height="15.0" fill="rgb(232,160,10)" rx="2" ry="2" />
<text  x="1138.18" y="47.5" ></text>
</g>
<g >
<title>if_getsoftc (26 samples, 0.11%)</title><rect x="429.8" y="37" width="1.4" height="15.0" fill="rgb(227,61,31)" rx="2" ry="2" />
<text  x="432.84" y="47.5" ></text>
</g>
<g >
<title>cache_alloc (122 samples, 0.53%)</title><rect x="596.8" y="165" width="6.4" height="15.0" fill="rgb(209,160,51)" rx="2" ry="2" />
<text  x="599.85" y="175.5" ></text>
</g>
<g >
<title>intr_event_handle (498 samples, 2.18%)</title><rect x="1157.0" y="261" width="25.8" height="15.0" fill="rgb(219,8,35)" rx="2" ry="2" />
<text  x="1160.03" y="271.5" >i..</text>
</g>
<g >
<title>if_getcapenable (5 samples, 0.02%)</title><rect x="1092.4" y="213" width="0.2" height="15.0" fill="rgb(241,84,15)" rx="2" ry="2" />
<text  x="1095.39" y="223.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (1,387 samples, 6.07%)</title><rect x="825.2" y="181" width="71.7" height="15.0" fill="rgb(250,67,22)" rx="2" ry="2" />
<text  x="828.19" y="191.5" >iflib_co..</text>
</g>
<g >
<title>lock_delay (19 samples, 0.08%)</title><rect x="1113.8" y="37" width="1.0" height="15.0" fill="rgb(228,63,15)" rx="2" ry="2" />
<text  x="1116.83" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (703 samples, 3.08%)</title><rect x="1007.6" y="165" width="36.3" height="15.0" fill="rgb(212,109,30)" rx="2" ry="2" />
<text  x="1010.60" y="175.5" >bus..</text>
</g>
<g >
<title>spinlock_exit (2 samples, 0.01%)</title><rect x="49.9" y="213" width="0.1" height="15.0" fill="rgb(253,185,24)" rx="2" ry="2" />
<text  x="52.94" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (67 samples, 0.29%)</title><rect x="1085.1" y="181" width="3.5" height="15.0" fill="rgb(211,113,20)" rx="2" ry="2" />
<text  x="1088.10" y="191.5" ></text>
</g>
<g >
<title>m_adj (120 samples, 0.53%)</title><rect x="211.4" y="133" width="6.2" height="15.0" fill="rgb(209,149,11)" rx="2" ry="2" />
<text  x="214.37" y="143.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (371 samples, 1.62%)</title><rect x="1024.6" y="133" width="19.2" height="15.0" fill="rgb(235,86,14)" rx="2" ry="2" />
<text  x="1027.60" y="143.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (100 samples, 0.44%)</title><rect x="13.5" y="277" width="5.1" height="15.0" fill="rgb(227,101,36)" rx="2" ry="2" />
<text  x="16.46" y="287.5" ></text>
</g>
<g >
<title>ether_output_frame (613 samples, 2.68%)</title><rect x="1120.2" y="85" width="31.7" height="15.0" fill="rgb(249,221,20)" rx="2" ry="2" />
<text  x="1123.24" y="95.5" >et..</text>
</g>
<g >
<title>atkbd_timeout (6 samples, 0.03%)</title><rect x="1110.5" y="213" width="0.3" height="15.0" fill="rgb(236,116,32)" rx="2" ry="2" />
<text  x="1113.53" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (8 samples, 0.04%)</title><rect x="603.2" y="181" width="0.4" height="15.0" fill="rgb(239,131,32)" rx="2" ry="2" />
<text  x="606.15" y="191.5" ></text>
</g>
<g >
<title>iflib_fl_refill (1,158 samples, 5.07%)</title><rect x="568.1" y="197" width="59.9" height="15.0" fill="rgb(214,153,29)" rx="2" ry="2" />
<text  x="571.12" y="207.5" >iflib_..</text>
</g>
<g >
<title>keg_fetch_free_slab (11 samples, 0.05%)</title><rect x="602.2" y="85" width="0.6" height="15.0" fill="rgb(225,88,48)" rx="2" ry="2" />
<text  x="605.22" y="95.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (10 samples, 0.04%)</title><rect x="1180.9" y="213" width="0.5" height="15.0" fill="rgb(229,197,51)" rx="2" ry="2" />
<text  x="1183.91" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (19 samples, 0.08%)</title><rect x="1177.1" y="181" width="1.0" height="15.0" fill="rgb(211,151,46)" rx="2" ry="2" />
<text  x="1180.08" y="191.5" ></text>
</g>
<g >
<title>binuptime (9 samples, 0.04%)</title><rect x="1185.8" y="245" width="0.5" height="15.0" fill="rgb(238,60,52)" rx="2" ry="2" />
<text  x="1188.81" y="255.5" ></text>
</g>
<g >
<title>ether_output (613 samples, 2.68%)</title><rect x="1120.2" y="101" width="31.7" height="15.0" fill="rgb(253,173,40)" rx="2" ry="2" />
<text  x="1123.24" y="111.5" >et..</text>
</g>
<g >
<title>memcmp (67 samples, 0.29%)</title><rect x="562.3" y="149" width="3.5" height="15.0" fill="rgb(236,151,51)" rx="2" ry="2" />
<text  x="565.33" y="159.5" ></text>
</g>
<g >
<title>ether_output (3,344 samples, 14.64%)</title><rect x="305.7" y="85" width="172.8" height="15.0" fill="rgb(234,177,34)" rx="2" ry="2" />
<text  x="308.67" y="95.5" >ether_output</text>
</g>
<g >
<title>lapic_et_start (6 samples, 0.03%)</title><rect x="1189.2" y="229" width="0.3" height="15.0" fill="rgb(228,18,52)" rx="2" ry="2" />
<text  x="1192.22" y="239.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (34 samples, 0.15%)</title><rect x="1120.3" y="37" width="1.8" height="15.0" fill="rgb(217,218,5)" rx="2" ry="2" />
<text  x="1123.35" y="47.5" ></text>
</g>
<g >
<title>sleepq_signal (6 samples, 0.03%)</title><rect x="1178.2" y="197" width="0.3" height="15.0" fill="rgb(223,211,28)" rx="2" ry="2" />
<text  x="1181.17" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (127 samples, 0.56%)</title><rect x="1113.7" y="101" width="6.5" height="15.0" fill="rgb(225,87,3)" rx="2" ry="2" />
<text  x="1116.68" y="111.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (358 samples, 1.57%)</title><rect x="54.6" y="213" width="18.5" height="15.0" fill="rgb(227,153,8)" rx="2" ry="2" />
<text  x="57.65" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (613 samples, 2.68%)</title><rect x="1120.2" y="149" width="31.7" height="15.0" fill="rgb(233,62,53)" rx="2" ry="2" />
<text  x="1123.24" y="159.5" >ne..</text>
</g>
<g >
<title>if_inc_counter (18 samples, 0.08%)</title><rect x="824.3" y="181" width="0.9" height="15.0" fill="rgb(223,61,3)" rx="2" ry="2" />
<text  x="827.26" y="191.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.01%)</title><rect x="1178.1" y="197" width="0.1" height="15.0" fill="rgb(243,104,33)" rx="2" ry="2" />
<text  x="1181.06" y="207.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (21 samples, 0.09%)</title><rect x="1150.3" y="37" width="1.1" height="15.0" fill="rgb(210,54,24)" rx="2" ry="2" />
<text  x="1153.32" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (614 samples, 2.69%)</title><rect x="1120.2" y="277" width="31.8" height="15.0" fill="rgb(211,227,15)" rx="2" ry="2" />
<text  x="1123.24" y="287.5" >gt..</text>
</g>
<g >
<title>lock_delay (6 samples, 0.03%)</title><rect x="602.5" y="53" width="0.3" height="15.0" fill="rgb(205,205,22)" rx="2" ry="2" />
<text  x="605.48" y="63.5" ></text>
</g>
<g >
<title>memcpy_erms (369 samples, 1.62%)</title><rect x="676.7" y="197" width="19.0" height="15.0" fill="rgb(224,164,53)" rx="2" ry="2" />
<text  x="679.68" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (3 samples, 0.01%)</title><rect x="71.7" y="181" width="0.2" height="15.0" fill="rgb(241,174,41)" rx="2" ry="2" />
<text  x="74.70" y="191.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2 samples, 0.01%)</title><rect x="597.5" y="149" width="0.1" height="15.0" fill="rgb(248,162,39)" rx="2" ry="2" />
<text  x="600.47" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (127 samples, 0.56%)</title><rect x="1113.7" y="165" width="6.5" height="15.0" fill="rgb(215,65,15)" rx="2" ry="2" />
<text  x="1116.68" y="175.5" ></text>
</g>
<g >
<title>if_getdrvflags (16 samples, 0.07%)</title><rect x="566.3" y="197" width="0.8" height="15.0" fill="rgb(221,216,10)" rx="2" ry="2" />
<text  x="569.26" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (6 samples, 0.03%)</title><rect x="21.2" y="245" width="0.3" height="15.0" fill="rgb(220,127,10)" rx="2" ry="2" />
<text  x="24.21" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (100 samples, 0.44%)</title><rect x="603.6" y="181" width="5.1" height="15.0" fill="rgb(224,147,10)" rx="2" ry="2" />
<text  x="606.57" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (613 samples, 2.68%)</title><rect x="1120.2" y="197" width="31.7" height="15.0" fill="rgb(223,40,47)" rx="2" ry="2" />
<text  x="1123.24" y="207.5" >ne..</text>
</g>
<g >
<title>__mtx_lock_sleep (4 samples, 0.02%)</title><rect x="602.9" y="117" width="0.3" height="15.0" fill="rgb(225,68,0)" rx="2" ry="2" />
<text  x="605.95" y="127.5" ></text>
</g>
<g >
<title>ether_output_frame (21 samples, 0.09%)</title><rect x="19.0" y="117" width="1.1" height="15.0" fill="rgb(239,98,7)" rx="2" ry="2" />
<text  x="21.99" y="127.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (36 samples, 0.16%)</title><rect x="1179.6" y="229" width="1.8" height="15.0" fill="rgb(226,74,41)" rx="2" ry="2" />
<text  x="1182.56" y="239.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (7 samples, 0.03%)</title><rect x="602.8" y="133" width="0.4" height="15.0" fill="rgb(222,21,25)" rx="2" ry="2" />
<text  x="605.79" y="143.5" ></text>
</g>
<g >
<title>m_pkthdr_init (3 samples, 0.01%)</title><rect x="745.6" y="213" width="0.1" height="15.0" fill="rgb(217,148,12)" rx="2" ry="2" />
<text  x="748.56" y="223.5" ></text>
</g>
<g >
<title>cpu_activeclock (2 samples, 0.01%)</title><rect x="1110.9" y="229" width="0.1" height="15.0" fill="rgb(209,22,28)" rx="2" ry="2" />
<text  x="1113.89" y="239.5" ></text>
</g>
<g >
<title>_rm_runlock (209 samples, 0.92%)</title><rect x="507.7" y="69" width="10.8" height="15.0" fill="rgb(228,203,36)" rx="2" ry="2" />
<text  x="510.66" y="79.5" ></text>
</g>
<g >
<title>tsc_get_timecount_low_lfence (2 samples, 0.01%)</title><rect x="1186.2" y="229" width="0.1" height="15.0" fill="rgb(208,135,6)" rx="2" ry="2" />
<text  x="1189.18" y="239.5" ></text>
</g>
<g >
<title>ip_findroute (755 samples, 3.31%)</title><rect x="518.5" y="85" width="39.0" height="15.0" fill="rgb(221,51,48)" rx="2" ry="2" />
<text  x="521.46" y="95.5" >ip_..</text>
</g>
<g >
<title>sleepq_lock (59 samples, 0.26%)</title><rect x="1115.5" y="37" width="3.0" height="15.0" fill="rgb(242,176,25)" rx="2" ry="2" />
<text  x="1118.49" y="47.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (9 samples, 0.04%)</title><rect x="65.9" y="197" width="0.4" height="15.0" fill="rgb(248,50,43)" rx="2" ry="2" />
<text  x="68.86" y="207.5" ></text>
</g>
<g >
<title>et_start (2 samples, 0.01%)</title><rect x="1186.8" y="229" width="0.2" height="15.0" fill="rgb(249,206,54)" rx="2" ry="2" />
<text  x="1189.85" y="239.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (32 samples, 0.14%)</title><rect x="1113.8" y="53" width="1.7" height="15.0" fill="rgb(225,39,21)" rx="2" ry="2" />
<text  x="1116.83" y="63.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (12 samples, 0.05%)</title><rect x="1173.9" y="213" width="0.6" height="15.0" fill="rgb(238,227,54)" rx="2" ry="2" />
<text  x="1176.93" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (97 samples, 0.42%)</title><rect x="1174.5" y="213" width="5.1" height="15.0" fill="rgb(224,21,26)" rx="2" ry="2" />
<text  x="1177.55" y="223.5" ></text>
</g>
</g>
</svg>
