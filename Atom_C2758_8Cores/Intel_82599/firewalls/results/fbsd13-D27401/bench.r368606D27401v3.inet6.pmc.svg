<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>netisr_dispatch_src (1,244 samples, 0.76%)</title><rect x="1107.7" y="165" width="9.0" height="15.0" fill="rgb(225,135,36)" rx="2" ry="2" />
<text  x="1110.67" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (169 samples, 0.10%)</title><rect x="1115.5" y="37" width="1.2" height="15.0" fill="rgb(225,59,30)" rx="2" ry="2" />
<text  x="1118.46" y="47.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (549 samples, 0.34%)</title><rect x="1051.0" y="213" width="4.0" height="15.0" fill="rgb(245,163,36)" rx="2" ry="2" />
<text  x="1054.02" y="223.5" ></text>
</g>
<g >
<title>cache_free (50 samples, 0.03%)</title><rect x="885.9" y="117" width="0.4" height="15.0" fill="rgb(219,86,40)" rx="2" ry="2" />
<text  x="888.93" y="127.5" ></text>
</g>
<g >
<title>ether_demux (50,060 samples, 30.72%)</title><rect x="194.9" y="149" width="362.5" height="15.0" fill="rgb(209,197,0)" rx="2" ry="2" />
<text  x="197.90" y="159.5" >ether_demux</text>
</g>
<g >
<title>ether_output_frame (216 samples, 0.13%)</title><rect x="1141.0" y="133" width="1.6" height="15.0" fill="rgb(225,56,10)" rx="2" ry="2" />
<text  x="1144.01" y="143.5" ></text>
</g>
<g >
<title>ip6_findroute (10,167 samples, 6.24%)</title><rect x="483.8" y="85" width="73.6" height="15.0" fill="rgb(210,136,17)" rx="2" ry="2" />
<text  x="486.76" y="95.5" >ip6_find..</text>
</g>
<g >
<title>spinlock_exit (37 samples, 0.02%)</title><rect x="1078.5" y="197" width="0.3" height="15.0" fill="rgb(208,11,39)" rx="2" ry="2" />
<text  x="1081.48" y="207.5" ></text>
</g>
<g >
<title>lock_delay (14 samples, 0.01%)</title><rect x="1189.9" y="181" width="0.1" height="15.0" fill="rgb(206,124,41)" rx="2" ry="2" />
<text  x="1192.87" y="191.5" ></text>
</g>
<g >
<title>sched_switch (18 samples, 0.01%)</title><rect x="1182.5" y="245" width="0.1" height="15.0" fill="rgb(254,216,37)" rx="2" ry="2" />
<text  x="1185.49" y="255.5" ></text>
</g>
<g >
<title>ether_nh_input (53,760 samples, 32.99%)</title><rect x="174.7" y="165" width="389.3" height="15.0" fill="rgb(251,175,12)" rx="2" ry="2" />
<text  x="177.74" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>if_getdrvflags (93 samples, 0.06%)</title><rect x="84.9" y="213" width="0.6" height="15.0" fill="rgb(245,58,9)" rx="2" ry="2" />
<text  x="87.86" y="223.5" ></text>
</g>
<g >
<title>uma_zfree_arg (2,723 samples, 1.67%)</title><rect x="870.5" y="133" width="19.8" height="15.0" fill="rgb(228,35,33)" rx="2" ry="2" />
<text  x="873.55" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (216 samples, 0.13%)</title><rect x="1141.0" y="197" width="1.6" height="15.0" fill="rgb(212,36,24)" rx="2" ry="2" />
<text  x="1144.01" y="207.5" ></text>
</g>
<g >
<title>mi_switch (30 samples, 0.02%)</title><rect x="1182.4" y="261" width="0.2" height="15.0" fill="rgb(236,90,30)" rx="2" ry="2" />
<text  x="1185.40" y="271.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (97 samples, 0.06%)</title><rect x="1106.9" y="245" width="0.7" height="15.0" fill="rgb(229,154,5)" rx="2" ry="2" />
<text  x="1109.93" y="255.5" ></text>
</g>
<g >
<title>all (162,965 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(252,29,36)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (2,718 samples, 1.67%)</title><rect x="842.3" y="165" width="19.7" height="15.0" fill="rgb(231,187,28)" rx="2" ry="2" />
<text  x="845.33" y="175.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (60 samples, 0.04%)</title><rect x="77.9" y="197" width="0.4" height="15.0" fill="rgb(205,221,28)" rx="2" ry="2" />
<text  x="80.88" y="207.5" ></text>
</g>
<g >
<title>fpu_activate_sw (56 samples, 0.03%)</title><rect x="1103.1" y="213" width="0.4" height="15.0" fill="rgb(218,170,17)" rx="2" ry="2" />
<text  x="1106.14" y="223.5" ></text>
</g>
<g >
<title>iflib_get_ifp (158 samples, 0.10%)</title><rect x="649.7" y="181" width="1.1" height="15.0" fill="rgb(251,111,4)" rx="2" ry="2" />
<text  x="652.68" y="191.5" ></text>
</g>
<g >
<title>ether_demux (3,360 samples, 2.06%)</title><rect x="1116.7" y="165" width="24.3" height="15.0" fill="rgb(227,131,24)" rx="2" ry="2" />
<text  x="1119.68" y="175.5" >e..</text>
</g>
<g >
<title>spinlock_enter (26 samples, 0.02%)</title><rect x="1108.9" y="37" width="0.2" height="15.0" fill="rgb(218,97,32)" rx="2" ry="2" />
<text  x="1111.90" y="47.5" ></text>
</g>
<g >
<title>msleep_spin_sbt (1,658 samples, 1.02%)</title><rect x="1070.4" y="245" width="12.0" height="15.0" fill="rgb(251,89,0)" rx="2" ry="2" />
<text  x="1073.40" y="255.5" ></text>
</g>
<g >
<title>softclock (119 samples, 0.07%)</title><rect x="1082.5" y="245" width="0.8" height="15.0" fill="rgb(224,96,49)" rx="2" ry="2" />
<text  x="1085.49" y="255.5" ></text>
</g>
<g >
<title>Xapic_isr1 (580 samples, 0.36%)</title><rect x="10.0" y="277" width="4.2" height="15.0" fill="rgb(239,218,24)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>sleepq_remove_thread (52 samples, 0.03%)</title><rect x="1174.2" y="181" width="0.3" height="15.0" fill="rgb(244,4,16)" rx="2" ry="2" />
<text  x="1177.16" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (41 samples, 0.03%)</title><rect x="563.7" y="149" width="0.3" height="15.0" fill="rgb(254,188,47)" rx="2" ry="2" />
<text  x="566.71" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (66 samples, 0.04%)</title><rect x="1068.2" y="197" width="0.5" height="15.0" fill="rgb(205,140,47)" rx="2" ry="2" />
<text  x="1071.19" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (1,016 samples, 0.62%)</title><rect x="1109.3" y="53" width="7.4" height="15.0" fill="rgb(253,89,32)" rx="2" ry="2" />
<text  x="1112.32" y="63.5" ></text>
</g>
<g >
<title>rsb_flush (95 samples, 0.06%)</title><rect x="1103.7" y="229" width="0.7" height="15.0" fill="rgb(249,202,50)" rx="2" ry="2" />
<text  x="1106.73" y="239.5" ></text>
</g>
<g >
<title>ip6_tryforward (395 samples, 0.24%)</title><rect x="21.4" y="149" width="2.9" height="15.0" fill="rgb(223,172,15)" rx="2" ry="2" />
<text  x="24.43" y="159.5" ></text>
</g>
<g >
<title>sched_switch (686 samples, 0.42%)</title><rect x="1073.8" y="213" width="5.0" height="15.0" fill="rgb(210,46,22)" rx="2" ry="2" />
<text  x="1076.81" y="223.5" ></text>
</g>
<g >
<title>sched_switch (304 samples, 0.19%)</title><rect x="1104.4" y="229" width="2.2" height="15.0" fill="rgb(249,224,29)" rx="2" ry="2" />
<text  x="1107.42" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (87,972 samples, 53.98%)</title><rect x="85.5" y="213" width="637.0" height="15.0" fill="rgb(254,42,33)" rx="2" ry="2" />
<text  x="88.54" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>_mtx_lock_spin_cookie (14 samples, 0.01%)</title><rect x="74.7" y="197" width="0.1" height="15.0" fill="rgb(208,151,54)" rx="2" ry="2" />
<text  x="77.73" y="207.5" ></text>
</g>
<g >
<title>iaf_get_config (14 samples, 0.01%)</title><rect x="1187.8" y="181" width="0.1" height="15.0" fill="rgb(245,51,52)" rx="2" ry="2" />
<text  x="1190.78" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (130 samples, 0.08%)</title><rect x="22.5" y="53" width="0.9" height="15.0" fill="rgb(218,144,51)" rx="2" ry="2" />
<text  x="25.46" y="63.5" ></text>
</g>
<g >
<title>cpu_switch (152 samples, 0.09%)</title><rect x="1072.0" y="213" width="1.1" height="15.0" fill="rgb(247,174,43)" rx="2" ry="2" />
<text  x="1075.03" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (112 samples, 0.07%)</title><rect x="61.3" y="213" width="0.8" height="15.0" fill="rgb(238,154,6)" rx="2" ry="2" />
<text  x="64.33" y="223.5" ></text>
</g>
<g >
<title>tdq_notify (110 samples, 0.07%)</title><rect x="1141.7" y="37" width="0.8" height="15.0" fill="rgb(251,47,5)" rx="2" ry="2" />
<text  x="1144.70" y="47.5" ></text>
</g>
<g >
<title>ether_output_frame (12,698 samples, 7.79%)</title><rect x="320.4" y="69" width="91.9" height="15.0" fill="rgb(237,124,11)" rx="2" ry="2" />
<text  x="323.36" y="79.5" >ether_outp..</text>
</g>
<g >
<title>_task_fn_rx (91,513 samples, 56.16%)</title><rect x="62.9" y="229" width="662.7" height="15.0" fill="rgb(208,75,42)" rx="2" ry="2" />
<text  x="65.92" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>ip6_tryforward (1,244 samples, 0.76%)</title><rect x="1107.7" y="133" width="9.0" height="15.0" fill="rgb(245,85,23)" rx="2" ry="2" />
<text  x="1110.67" y="143.5" ></text>
</g>
<g >
<title>mac_mbuf_init (526 samples, 0.32%)</title><rect x="659.0" y="197" width="3.8" height="15.0" fill="rgb(225,87,35)" rx="2" ry="2" />
<text  x="662.02" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (86 samples, 0.05%)</title><rect x="58.5" y="213" width="0.6" height="15.0" fill="rgb(215,34,16)" rx="2" ry="2" />
<text  x="61.51" y="223.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (93 samples, 0.06%)</title><rect x="1167.3" y="213" width="0.7" height="15.0" fill="rgb(244,29,0)" rx="2" ry="2" />
<text  x="1170.29" y="223.5" ></text>
</g>
<g >
<title>tc_windup (21 samples, 0.01%)</title><rect x="1188.9" y="197" width="0.2" height="15.0" fill="rgb(248,33,26)" rx="2" ry="2" />
<text  x="1191.94" y="207.5" ></text>
</g>
<g >
<title>pmap_activate_sw (51 samples, 0.03%)</title><rect x="1072.8" y="197" width="0.3" height="15.0" fill="rgb(207,59,15)" rx="2" ry="2" />
<text  x="1075.76" y="207.5" ></text>
</g>
<g >
<title>_thread_lock (35 samples, 0.02%)</title><rect x="1079.9" y="213" width="0.2" height="15.0" fill="rgb(222,127,9)" rx="2" ry="2" />
<text  x="1082.87" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (216 samples, 0.13%)</title><rect x="1141.0" y="117" width="1.6" height="15.0" fill="rgb(208,223,53)" rx="2" ry="2" />
<text  x="1144.01" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,360 samples, 1.45%)</title><rect x="67.8" y="213" width="17.1" height="15.0" fill="rgb(253,14,3)" rx="2" ry="2" />
<text  x="70.77" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (917 samples, 0.56%)</title><rect x="14.2" y="277" width="6.6" height="15.0" fill="rgb(212,109,10)" rx="2" ry="2" />
<text  x="17.20" y="287.5" ></text>
</g>
<g >
<title>sleepq_lock (99 samples, 0.06%)</title><rect x="1080.1" y="229" width="0.8" height="15.0" fill="rgb(243,58,42)" rx="2" ry="2" />
<text  x="1083.14" y="239.5" ></text>
</g>
<g >
<title>runq_choose (30 samples, 0.02%)</title><rect x="1076.0" y="165" width="0.2" height="15.0" fill="rgb(210,78,20)" rx="2" ry="2" />
<text  x="1079.02" y="175.5" ></text>
</g>
<g >
<title>iflib_fl_refill (6,845 samples, 4.20%)</title><rect x="566.4" y="197" width="49.6" height="15.0" fill="rgb(235,228,13)" rx="2" ry="2" />
<text  x="569.41" y="207.5" >iflib..</text>
</g>
<g >
<title>binuptime (40 samples, 0.02%)</title><rect x="1184.9" y="245" width="0.3" height="15.0" fill="rgb(241,226,20)" rx="2" ry="2" />
<text  x="1187.95" y="255.5" ></text>
</g>
<g >
<title>sleepq_resume_thread (90 samples, 0.06%)</title><rect x="1174.1" y="197" width="0.6" height="15.0" fill="rgb(229,216,32)" rx="2" ry="2" />
<text  x="1177.06" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (313 samples, 0.19%)</title><rect x="1163.3" y="213" width="2.3" height="15.0" fill="rgb(245,127,16)" rx="2" ry="2" />
<text  x="1166.29" y="223.5" ></text>
</g>
<g >
<title>cache_alloc_retry (184 samples, 0.11%)</title><rect x="591.4" y="181" width="1.4" height="15.0" fill="rgb(229,151,51)" rx="2" ry="2" />
<text  x="594.42" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (33 samples, 0.02%)</title><rect x="1106.6" y="245" width="0.3" height="15.0" fill="rgb(218,73,14)" rx="2" ry="2" />
<text  x="1109.62" y="255.5" ></text>
</g>
<g >
<title>thread_lock_set (26 samples, 0.02%)</title><rect x="1081.5" y="213" width="0.2" height="15.0" fill="rgb(219,154,29)" rx="2" ry="2" />
<text  x="1084.53" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (395 samples, 0.24%)</title><rect x="21.4" y="277" width="2.9" height="15.0" fill="rgb(213,183,17)" rx="2" ry="2" />
<text  x="24.43" y="287.5" ></text>
</g>
<g >
<title>statclock (35 samples, 0.02%)</title><rect x="1189.6" y="229" width="0.2" height="15.0" fill="rgb(228,177,2)" rx="2" ry="2" />
<text  x="1192.58" y="239.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (41 samples, 0.03%)</title><rect x="1096.0" y="213" width="0.3" height="15.0" fill="rgb(253,122,15)" rx="2" ry="2" />
<text  x="1099.02" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (286 samples, 0.18%)</title><rect x="888.2" y="117" width="2.1" height="15.0" fill="rgb(220,162,4)" rx="2" ry="2" />
<text  x="891.20" y="127.5" ></text>
</g>
<g >
<title>msi_eoi_source (46 samples, 0.03%)</title><rect x="1180.0" y="245" width="0.3" height="15.0" fill="rgb(253,125,41)" rx="2" ry="2" />
<text  x="1182.98" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (395 samples, 0.24%)</title><rect x="21.4" y="229" width="2.9" height="15.0" fill="rgb(207,46,25)" rx="2" ry="2" />
<text  x="24.43" y="239.5" ></text>
</g>
<g >
<title>sleepq_release (27 samples, 0.02%)</title><rect x="83.5" y="181" width="0.2" height="15.0" fill="rgb(238,35,44)" rx="2" ry="2" />
<text  x="86.47" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (658 samples, 0.40%)</title><rect x="78.7" y="181" width="4.8" height="15.0" fill="rgb(216,104,32)" rx="2" ry="2" />
<text  x="81.70" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (15 samples, 0.01%)</title><rect x="1080.0" y="197" width="0.1" height="15.0" fill="rgb(229,221,47)" rx="2" ry="2" />
<text  x="1083.02" y="207.5" ></text>
</g>
<g >
<title>if_getdrvflags (86 samples, 0.05%)</title><rect x="820.1" y="181" width="0.7" height="15.0" fill="rgb(213,63,2)" rx="2" ry="2" />
<text  x="823.14" y="191.5" ></text>
</g>
<g >
<title>sched_priority (24 samples, 0.01%)</title><rect x="1170.1" y="165" width="0.2" height="15.0" fill="rgb(211,175,4)" rx="2" ry="2" />
<text  x="1173.08" y="175.5" ></text>
</g>
<g >
<title>_thread_lock (157 samples, 0.10%)</title><rect x="1094.2" y="245" width="1.1" height="15.0" fill="rgb(230,206,4)" rx="2" ry="2" />
<text  x="1097.18" y="255.5" ></text>
</g>
<g >
<title>_rm_runlock (648 samples, 0.40%)</title><rect x="478.7" y="69" width="4.7" height="15.0" fill="rgb(206,202,17)" rx="2" ry="2" />
<text  x="481.71" y="79.5" ></text>
</g>
<g >
<title>ip6_tryforward (42,218 samples, 25.91%)</title><rect x="251.7" y="101" width="305.7" height="15.0" fill="rgb(242,47,14)" rx="2" ry="2" />
<text  x="254.68" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>sched_clock (21 samples, 0.01%)</title><rect x="1189.7" y="213" width="0.1" height="15.0" fill="rgb(240,117,39)" rx="2" ry="2" />
<text  x="1192.66" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2,768 samples, 1.70%)</title><rect x="1156.6" y="229" width="20.1" height="15.0" fill="rgb(238,9,21)" rx="2" ry="2" />
<text  x="1159.65" y="239.5" ></text>
</g>
<g >
<title>_task_fn_admin (16 samples, 0.01%)</title><rect x="62.8" y="229" width="0.1" height="15.0" fill="rgb(245,64,22)" rx="2" ry="2" />
<text  x="65.81" y="239.5" ></text>
</g>
<g >
<title>sleepq_release (56 samples, 0.03%)</title><rect x="1173.7" y="197" width="0.4" height="15.0" fill="rgb(207,219,8)" rx="2" ry="2" />
<text  x="1176.66" y="207.5" ></text>
</g>
<g >
<title>memcmp (297 samples, 0.18%)</title><rect x="449.0" y="37" width="2.1" height="15.0" fill="rgb(227,136,14)" rx="2" ry="2" />
<text  x="451.97" y="47.5" ></text>
</g>
<g >
<title>mi_switch (675 samples, 0.41%)</title><rect x="1101.7" y="245" width="4.9" height="15.0" fill="rgb(241,50,46)" rx="2" ry="2" />
<text  x="1104.73" y="255.5" ></text>
</g>
<g >
<title>cpu_search_highest (362 samples, 0.22%)</title><rect x="1099.1" y="213" width="2.6" height="15.0" fill="rgb(217,112,37)" rx="2" ry="2" />
<text  x="1102.11" y="223.5" ></text>
</g>
<g >
<title>ip6_input (46,568 samples, 28.58%)</title><rect x="220.2" y="117" width="337.2" height="15.0" fill="rgb(215,149,50)" rx="2" ry="2" />
<text  x="223.19" y="127.5" >ip6_input</text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,360 samples, 2.06%)</title><rect x="1116.7" y="277" width="24.3" height="15.0" fill="rgb(218,109,42)" rx="2" ry="2" />
<text  x="1119.68" y="287.5" >g..</text>
</g>
<g >
<title>spinlock_exit (312 samples, 0.19%)</title><rect x="75.6" y="197" width="2.3" height="15.0" fill="rgb(243,176,10)" rx="2" ry="2" />
<text  x="78.62" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (84 samples, 0.05%)</title><rect x="1057.0" y="197" width="0.6" height="15.0" fill="rgb(218,124,35)" rx="2" ry="2" />
<text  x="1060.03" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (3,244 samples, 1.99%)</title><rect x="627.3" y="197" width="23.5" height="15.0" fill="rgb(226,157,32)" rx="2" ry="2" />
<text  x="630.33" y="207.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (608 samples, 0.37%)</title><rect x="593.3" y="181" width="4.4" height="15.0" fill="rgb(236,152,18)" rx="2" ry="2" />
<text  x="596.32" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1,243 samples, 0.76%)</title><rect x="1107.7" y="69" width="9.0" height="15.0" fill="rgb(229,44,3)" rx="2" ry="2" />
<text  x="1110.68" y="79.5" ></text>
</g>
<g >
<title>cluster_write (17 samples, 0.01%)</title><rect x="1083.4" y="181" width="0.1" height="15.0" fill="rgb(245,133,43)" rx="2" ry="2" />
<text  x="1086.36" y="191.5" ></text>
</g>
<g >
<title>choosethread (238 samples, 0.15%)</title><rect x="1104.8" y="213" width="1.7" height="15.0" fill="rgb(253,183,40)" rx="2" ry="2" />
<text  x="1107.78" y="223.5" ></text>
</g>
<g >
<title>ether_input (216 samples, 0.13%)</title><rect x="1141.0" y="261" width="1.6" height="15.0" fill="rgb(233,91,45)" rx="2" ry="2" />
<text  x="1144.01" y="271.5" ></text>
</g>
<g >
<title>intr_execute_handlers (5,495 samples, 3.37%)</title><rect x="1142.6" y="277" width="39.8" height="15.0" fill="rgb(238,46,16)" rx="2" ry="2" />
<text  x="1145.57" y="287.5" >int..</text>
</g>
<g >
<title>ether_input (1,244 samples, 0.76%)</title><rect x="1107.7" y="229" width="9.0" height="15.0" fill="rgb(218,44,30)" rx="2" ry="2" />
<text  x="1110.67" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (1,598 samples, 0.98%)</title><rect x="1128.0" y="37" width="11.6" height="15.0" fill="rgb(250,201,19)" rx="2" ry="2" />
<text  x="1131.03" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (51 samples, 0.03%)</title><rect x="1050.2" y="197" width="0.4" height="15.0" fill="rgb(213,31,43)" rx="2" ry="2" />
<text  x="1053.22" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (55,630 samples, 34.14%)</title><rect x="161.2" y="181" width="402.8" height="15.0" fill="rgb(215,210,21)" rx="2" ry="2" />
<text  x="164.20" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>drain_ring_lockless (44,310 samples, 27.19%)</title><rect x="729.8" y="213" width="320.8" height="15.0" fill="rgb(239,103,30)" rx="2" ry="2" />
<text  x="732.75" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>loadtimer (22 samples, 0.01%)</title><rect x="1189.4" y="229" width="0.1" height="15.0" fill="rgb(251,152,17)" rx="2" ry="2" />
<text  x="1192.36" y="239.5" ></text>
</g>
<g >
<title>ithread_loop (129 samples, 0.08%)</title><rect x="1082.4" y="261" width="1.0" height="15.0" fill="rgb(218,53,44)" rx="2" ry="2" />
<text  x="1085.42" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (418 samples, 0.26%)</title><rect x="1060.7" y="229" width="3.0" height="15.0" fill="rgb(241,186,46)" rx="2" ry="2" />
<text  x="1063.67" y="239.5" ></text>
</g>
<g >
<title>cpu_idle (143 samples, 0.09%)</title><rect x="1095.3" y="245" width="1.0" height="15.0" fill="rgb(235,226,12)" rx="2" ry="2" />
<text  x="1098.31" y="255.5" ></text>
</g>
<g >
<title>ffs_balloc_ufs2 (60 samples, 0.04%)</title><rect x="1083.5" y="181" width="0.4" height="15.0" fill="rgb(254,153,53)" rx="2" ry="2" />
<text  x="1086.48" y="191.5" ></text>
</g>
<g >
<title>sleepq_broadcast (202 samples, 0.12%)</title><rect x="1064.7" y="213" width="1.4" height="15.0" fill="rgb(232,96,19)" rx="2" ry="2" />
<text  x="1067.67" y="223.5" ></text>
</g>
<g >
<title>Xtimerint_pti (33 samples, 0.02%)</title><rect x="21.2" y="277" width="0.2" height="15.0" fill="rgb(246,211,40)" rx="2" ry="2" />
<text  x="24.19" y="287.5" ></text>
</g>
<g >
<title>iflib_get_ifp (47 samples, 0.03%)</title><rect x="1178.9" y="213" width="0.3" height="15.0" fill="rgb(206,107,35)" rx="2" ry="2" />
<text  x="1181.90" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (144,034 samples, 88.38%)</title><rect x="27.5" y="245" width="1042.9" height="15.0" fill="rgb(250,50,14)" rx="2" ry="2" />
<text  x="30.46" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>if_getcapenable (35 samples, 0.02%)</title><rect x="1050.6" y="213" width="0.2" height="15.0" fill="rgb(235,129,44)" rx="2" ry="2" />
<text  x="1053.59" y="223.5" ></text>
</g>
<g >
<title>choosethread (124 samples, 0.08%)</title><rect x="1075.6" y="197" width="0.9" height="15.0" fill="rgb(211,167,15)" rx="2" ry="2" />
<text  x="1078.57" y="207.5" ></text>
</g>
<g >
<title>_rm_rlock (1,540 samples, 0.94%)</title><rect x="467.6" y="69" width="11.1" height="15.0" fill="rgb(239,8,2)" rx="2" ry="2" />
<text  x="470.56" y="79.5" ></text>
</g>
<g >
<title>ip6_input (3,360 samples, 2.06%)</title><rect x="1116.7" y="133" width="24.3" height="15.0" fill="rgb(247,63,47)" rx="2" ry="2" />
<text  x="1119.68" y="143.5" >i..</text>
</g>
<g >
<title>ixgbe_msix_que (449 samples, 0.28%)</title><rect x="1176.7" y="229" width="3.2" height="15.0" fill="rgb(216,129,54)" rx="2" ry="2" />
<text  x="1179.69" y="239.5" ></text>
</g>
<g >
<title>pmap_activate_sw (17 samples, 0.01%)</title><rect x="1103.5" y="213" width="0.2" height="15.0" fill="rgb(221,1,23)" rx="2" ry="2" />
<text  x="1106.54" y="223.5" ></text>
</g>
<g >
<title>sched_choose (228 samples, 0.14%)</title><rect x="1104.8" y="197" width="1.7" height="15.0" fill="rgb(228,1,13)" rx="2" ry="2" />
<text  x="1107.85" y="207.5" ></text>
</g>
<g >
<title>cpu_search_highest (94 samples, 0.06%)</title><rect x="1077.7" y="181" width="0.7" height="15.0" fill="rgb(227,189,10)" rx="2" ry="2" />
<text  x="1080.69" y="191.5" ></text>
</g>
<g >
<title>if_inc_counter (174 samples, 0.11%)</title><rect x="565.1" y="197" width="1.3" height="15.0" fill="rgb(225,6,12)" rx="2" ry="2" />
<text  x="568.15" y="207.5" ></text>
</g>
<g >
<title>_task_fn_tx (45,863 samples, 28.14%)</title><rect x="725.6" y="229" width="332.0" height="15.0" fill="rgb(207,177,4)" rx="2" ry="2" />
<text  x="728.55" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>gtaskqueue_run_locked (3,360 samples, 2.06%)</title><rect x="1116.7" y="261" width="24.3" height="15.0" fill="rgb(215,104,3)" rx="2" ry="2" />
<text  x="1119.68" y="271.5" >g..</text>
</g>
<g >
<title>sleepq_lock (364 samples, 0.22%)</title><rect x="1171.0" y="197" width="2.7" height="15.0" fill="rgb(220,216,6)" rx="2" ry="2" />
<text  x="1174.02" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3,360 samples, 2.06%)</title><rect x="1116.7" y="149" width="24.3" height="15.0" fill="rgb(238,131,54)" rx="2" ry="2" />
<text  x="1119.68" y="159.5" >n..</text>
</g>
<g >
<title>gtaskqueue_run_locked (1,244 samples, 0.76%)</title><rect x="1107.7" y="277" width="9.0" height="15.0" fill="rgb(212,90,22)" rx="2" ry="2" />
<text  x="1110.67" y="287.5" ></text>
</g>
<g >
<title>lock_delay (16 samples, 0.01%)</title><rect x="1163.1" y="197" width="0.1" height="15.0" fill="rgb(211,181,4)" rx="2" ry="2" />
<text  x="1166.07" y="207.5" ></text>
</g>
<g >
<title>timekeep_push_vdso (17 samples, 0.01%)</title><rect x="1189.0" y="181" width="0.1" height="15.0" fill="rgb(235,64,42)" rx="2" ry="2" />
<text  x="1191.96" y="191.5" ></text>
</g>
<g >
<title>softclock_call_cc (118 samples, 0.07%)</title><rect x="1082.5" y="229" width="0.8" height="15.0" fill="rgb(246,23,46)" rx="2" ry="2" />
<text  x="1085.49" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (1,244 samples, 0.76%)</title><rect x="1107.7" y="197" width="9.0" height="15.0" fill="rgb(221,65,52)" rx="2" ry="2" />
<text  x="1110.67" y="207.5" ></text>
</g>
<g >
<title>vn_io_fault (93 samples, 0.06%)</title><rect x="1083.4" y="245" width="0.6" height="15.0" fill="rgb(219,43,3)" rx="2" ry="2" />
<text  x="1086.36" y="255.5" ></text>
</g>
<g >
<title>sleepq_release (136 samples, 0.08%)</title><rect x="1068.7" y="213" width="1.0" height="15.0" fill="rgb(233,216,32)" rx="2" ry="2" />
<text  x="1071.67" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,244 samples, 0.76%)</title><rect x="1107.7" y="213" width="9.0" height="15.0" fill="rgb(237,85,7)" rx="2" ry="2" />
<text  x="1110.67" y="223.5" ></text>
</g>
<g >
<title>msi_vector (104 samples, 0.06%)</title><rect x="1181.6" y="261" width="0.8" height="15.0" fill="rgb(230,77,39)" rx="2" ry="2" />
<text  x="1184.61" y="271.5" ></text>
</g>
<g >
<title>m_freem (3,902 samples, 2.39%)</title><rect x="862.0" y="165" width="28.3" height="15.0" fill="rgb(243,40,50)" rx="2" ry="2" />
<text  x="865.01" y="175.5" >m..</text>
</g>
<g >
<title>spinlock_exit (133 samples, 0.08%)</title><rect x="1175.7" y="197" width="1.0" height="15.0" fill="rgb(214,1,2)" rx="2" ry="2" />
<text  x="1178.73" y="207.5" ></text>
</g>
<g >
<title>tc_ticktock (23 samples, 0.01%)</title><rect x="1188.9" y="213" width="0.2" height="15.0" fill="rgb(247,52,18)" rx="2" ry="2" />
<text  x="1191.92" y="223.5" ></text>
</g>
<g >
<title>ether_output (216 samples, 0.13%)</title><rect x="1141.0" y="149" width="1.6" height="15.0" fill="rgb(208,205,10)" rx="2" ry="2" />
<text  x="1144.01" y="159.5" ></text>
</g>
<g >
<title>zone_import (77 samples, 0.05%)</title><rect x="592.1" y="149" width="0.6" height="15.0" fill="rgb(221,162,22)" rx="2" ry="2" />
<text  x="595.14" y="159.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (2,434 samples, 1.49%)</title><rect x="598.3" y="181" width="17.7" height="15.0" fill="rgb(249,48,24)" rx="2" ry="2" />
<text  x="601.35" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (1,244 samples, 0.76%)</title><rect x="1107.7" y="101" width="9.0" height="15.0" fill="rgb(225,194,33)" rx="2" ry="2" />
<text  x="1110.67" y="111.5" ></text>
</g>
<g >
<title>cpu_search_highest (602 samples, 0.37%)</title><rect x="1097.4" y="229" width="4.3" height="15.0" fill="rgb(220,177,34)" rx="2" ry="2" />
<text  x="1100.38" y="239.5" ></text>
</g>
<g >
<title>mac_ifnet_check_transmit (674 samples, 0.41%)</title><rect x="412.3" y="69" width="4.9" height="15.0" fill="rgb(251,171,41)" rx="2" ry="2" />
<text  x="415.31" y="79.5" ></text>
</g>
<g >
<title>cpu_search_highest (262 samples, 0.16%)</title><rect x="1076.5" y="197" width="1.9" height="15.0" fill="rgb(234,87,53)" rx="2" ry="2" />
<text  x="1079.47" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (395 samples, 0.24%)</title><rect x="21.4" y="181" width="2.9" height="15.0" fill="rgb(229,32,34)" rx="2" ry="2" />
<text  x="24.43" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (161 samples, 0.10%)</title><rect x="160.0" y="181" width="1.2" height="15.0" fill="rgb(238,221,46)" rx="2" ry="2" />
<text  x="163.04" y="191.5" ></text>
</g>
<g >
<title>lapic_handle_timer (753 samples, 0.46%)</title><rect x="1184.5" y="277" width="5.5" height="15.0" fill="rgb(213,153,40)" rx="2" ry="2" />
<text  x="1187.55" y="287.5" ></text>
</g>
<g >
<title>iflib_txq_drain (42,255 samples, 25.93%)</title><rect x="744.3" y="197" width="305.9" height="15.0" fill="rgb(207,195,32)" rx="2" ry="2" />
<text  x="747.26" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>swi_sched (22 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(254,122,4)" rx="2" ry="2" />
<text  x="1192.83" y="239.5" ></text>
</g>
<g >
<title>ip6_input (1,244 samples, 0.76%)</title><rect x="1107.7" y="149" width="9.0" height="15.0" fill="rgb(215,169,16)" rx="2" ry="2" />
<text  x="1110.67" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3,359 samples, 2.06%)</title><rect x="1116.7" y="53" width="24.3" height="15.0" fill="rgb(243,55,13)" rx="2" ry="2" />
<text  x="1119.69" y="63.5" >g..</text>
</g>
<g >
<title>if_getsoftc (182 samples, 0.11%)</title><rect x="376.9" y="37" width="1.3" height="15.0" fill="rgb(213,35,33)" rx="2" ry="2" />
<text  x="379.92" y="47.5" ></text>
</g>
<g >
<title>ffs_write (93 samples, 0.06%)</title><rect x="1083.4" y="197" width="0.6" height="15.0" fill="rgb(234,138,53)" rx="2" ry="2" />
<text  x="1086.36" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (4,701 samples, 2.88%)</title><rect x="378.2" y="37" width="34.1" height="15.0" fill="rgb(241,51,33)" rx="2" ry="2" />
<text  x="381.24" y="47.5" >if..</text>
</g>
<g >
<title>ether_output (23,370 samples, 14.34%)</title><rect x="286.5" y="85" width="169.2" height="15.0" fill="rgb(211,144,5)" rx="2" ry="2" />
<text  x="289.45" y="95.5" >ether_output</text>
</g>
<g >
<title>if_getdrvflags (123 samples, 0.08%)</title><rect x="564.3" y="197" width="0.8" height="15.0" fill="rgb(209,117,20)" rx="2" ry="2" />
<text  x="567.26" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (395 samples, 0.24%)</title><rect x="21.4" y="101" width="2.9" height="15.0" fill="rgb(247,136,23)" rx="2" ry="2" />
<text  x="24.43" y="111.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (107 samples, 0.07%)</title><rect x="1139.6" y="37" width="0.8" height="15.0" fill="rgb(218,177,38)" rx="2" ry="2" />
<text  x="1142.60" y="47.5" ></text>
</g>
<g >
<title>sleepq_remove_thread (87 samples, 0.05%)</title><rect x="23.4" y="37" width="0.6" height="15.0" fill="rgb(244,210,52)" rx="2" ry="2" />
<text  x="26.40" y="47.5" ></text>
</g>
<g >
<title>fork_exit (149,247 samples, 91.58%)</title><rect x="27.0" y="277" width="1080.7" height="15.0" fill="rgb(220,22,33)" rx="2" ry="2" />
<text  x="30.00" y="287.5" >fork_exit</text>
</g>
<g >
<title>pmc_hook_handler (353 samples, 0.22%)</title><rect x="1186.4" y="213" width="2.5" height="15.0" fill="rgb(216,221,18)" rx="2" ry="2" />
<text  x="1189.36" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (3,360 samples, 2.06%)</title><rect x="1116.7" y="197" width="24.3" height="15.0" fill="rgb(229,195,31)" rx="2" ry="2" />
<text  x="1119.68" y="207.5" >n..</text>
</g>
<g >
<title>vn_write (93 samples, 0.06%)</title><rect x="1083.4" y="229" width="0.6" height="15.0" fill="rgb(236,53,28)" rx="2" ry="2" />
<text  x="1086.36" y="239.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (51 samples, 0.03%)</title><rect x="1162.9" y="213" width="0.4" height="15.0" fill="rgb(243,11,0)" rx="2" ry="2" />
<text  x="1165.90" y="223.5" ></text>
</g>
<g >
<title>soft_get_config (41 samples, 0.03%)</title><rect x="1188.5" y="181" width="0.3" height="15.0" fill="rgb(248,52,38)" rx="2" ry="2" />
<text  x="1191.46" y="191.5" ></text>
</g>
<g >
<title>sleepq_resume_thread (17 samples, 0.01%)</title><rect x="1114.3" y="37" width="0.1" height="15.0" fill="rgb(236,227,15)" rx="2" ry="2" />
<text  x="1117.28" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,244 samples, 0.76%)</title><rect x="1107.7" y="85" width="9.0" height="15.0" fill="rgb(233,210,50)" rx="2" ry="2" />
<text  x="1110.67" y="95.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (86 samples, 0.05%)</title><rect x="597.7" y="181" width="0.6" height="15.0" fill="rgb(232,95,40)" rx="2" ry="2" />
<text  x="600.72" y="191.5" ></text>
</g>
<g >
<title>zone_import (16 samples, 0.01%)</title><rect x="592.5" y="101" width="0.1" height="15.0" fill="rgb(225,221,46)" rx="2" ry="2" />
<text  x="595.50" y="111.5" ></text>
</g>
<g >
<title>m_pkthdr_init (1,131 samples, 0.69%)</title><rect x="650.8" y="197" width="8.2" height="15.0" fill="rgb(210,49,30)" rx="2" ry="2" />
<text  x="653.83" y="207.5" ></text>
</g>
<g >
<title>sched_sleep (43 samples, 0.03%)</title><rect x="1081.1" y="213" width="0.3" height="15.0" fill="rgb(217,44,35)" rx="2" ry="2" />
<text  x="1084.13" y="223.5" ></text>
</g>
<g >
<title>timercb (722 samples, 0.44%)</title><rect x="1184.8" y="261" width="5.2" height="15.0" fill="rgb(219,96,41)" rx="2" ry="2" />
<text  x="1187.77" y="271.5" ></text>
</g>
<g >
<title>ether_output (3,360 samples, 2.06%)</title><rect x="1116.7" y="101" width="24.3" height="15.0" fill="rgb(222,67,25)" rx="2" ry="2" />
<text  x="1119.68" y="111.5" >e..</text>
</g>
<g >
<title>runq_choose_from (32 samples, 0.02%)</title><rect x="1076.2" y="165" width="0.3" height="15.0" fill="rgb(214,15,50)" rx="2" ry="2" />
<text  x="1079.24" y="175.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (660 samples, 0.40%)</title><rect x="611.2" y="165" width="4.8" height="15.0" fill="rgb(226,40,41)" rx="2" ry="2" />
<text  x="614.19" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,360 samples, 2.06%)</title><rect x="1116.7" y="229" width="24.3" height="15.0" fill="rgb(247,146,52)" rx="2" ry="2" />
<text  x="1119.68" y="239.5" >i..</text>
</g>
<g >
<title>ixgbe_write_reg (460 samples, 0.28%)</title><rect x="1046.9" y="181" width="3.3" height="15.0" fill="rgb(244,165,53)" rx="2" ry="2" />
<text  x="1049.89" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (118 samples, 0.07%)</title><rect x="1172.8" y="181" width="0.9" height="15.0" fill="rgb(214,131,28)" rx="2" ry="2" />
<text  x="1175.80" y="191.5" ></text>
</g>
<g >
<title>if_inc_counter (188 samples, 0.12%)</title><rect x="820.8" y="181" width="1.3" height="15.0" fill="rgb(250,186,23)" rx="2" ry="2" />
<text  x="823.76" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (115 samples, 0.07%)</title><rect x="84.0" y="181" width="0.9" height="15.0" fill="rgb(224,127,52)" rx="2" ry="2" />
<text  x="87.03" y="191.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (227 samples, 0.14%)</title><rect x="1107.7" y="53" width="1.6" height="15.0" fill="rgb(243,164,49)" rx="2" ry="2" />
<text  x="1110.68" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (216 samples, 0.13%)</title><rect x="1141.0" y="245" width="1.6" height="15.0" fill="rgb(229,29,26)" rx="2" ry="2" />
<text  x="1144.01" y="255.5" ></text>
</g>
<g >
<title>sched_add (215 samples, 0.13%)</title><rect x="1141.0" y="53" width="1.6" height="15.0" fill="rgb(231,0,43)" rx="2" ry="2" />
<text  x="1144.02" y="63.5" ></text>
</g>
<g >
<title>acpi_cpu_idle_mwait (41 samples, 0.03%)</title><rect x="1096.0" y="197" width="0.3" height="15.0" fill="rgb(253,137,14)" rx="2" ry="2" />
<text  x="1099.02" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (97 samples, 0.06%)</title><rect x="1179.2" y="213" width="0.7" height="15.0" fill="rgb(214,50,52)" rx="2" ry="2" />
<text  x="1182.24" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (408 samples, 0.25%)</title><rect x="1057.7" y="229" width="3.0" height="15.0" fill="rgb(226,212,48)" rx="2" ry="2" />
<text  x="1060.72" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (395 samples, 0.24%)</title><rect x="21.4" y="213" width="2.9" height="15.0" fill="rgb(210,85,8)" rx="2" ry="2" />
<text  x="24.43" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (140 samples, 0.09%)</title><rect x="1174.7" y="197" width="1.0" height="15.0" fill="rgb(242,129,8)" rx="2" ry="2" />
<text  x="1177.71" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (192 samples, 0.12%)</title><rect x="722.5" y="213" width="1.4" height="15.0" fill="rgb(217,111,0)" rx="2" ry="2" />
<text  x="725.53" y="223.5" ></text>
</g>
<g >
<title>atkbd_timeout (106 samples, 0.07%)</title><rect x="1082.5" y="213" width="0.8" height="15.0" fill="rgb(245,53,25)" rx="2" ry="2" />
<text  x="1085.50" y="223.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (37 samples, 0.02%)</title><rect x="27.2" y="245" width="0.3" height="15.0" fill="rgb(209,1,3)" rx="2" ry="2" />
<text  x="30.20" y="255.5" ></text>
</g>
<g >
<title>runq_remove (19 samples, 0.01%)</title><rect x="1106.4" y="181" width="0.1" height="15.0" fill="rgb(251,12,4)" rx="2" ry="2" />
<text  x="1109.36" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (583 samples, 0.36%)</title><rect x="1109.7" y="37" width="4.2" height="15.0" fill="rgb(248,180,17)" rx="2" ry="2" />
<text  x="1112.66" y="47.5" ></text>
</g>
<g >
<title>sched_priority (22 samples, 0.01%)</title><rect x="1141.5" y="37" width="0.1" height="15.0" fill="rgb(222,156,9)" rx="2" ry="2" />
<text  x="1144.46" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (145,757 samples, 89.44%)</title><rect x="27.0" y="261" width="1055.4" height="15.0" fill="rgb(214,82,21)" rx="2" ry="2" />
<text  x="30.02" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>intr_event_handle (4,539 samples, 2.79%)</title><rect x="1148.7" y="261" width="32.9" height="15.0" fill="rgb(251,198,41)" rx="2" ry="2" />
<text  x="1151.71" y="271.5" >in..</text>
</g>
<g >
<title>netisr_dispatch (43 samples, 0.03%)</title><rect x="681.1" y="197" width="0.3" height="15.0" fill="rgb(241,41,3)" rx="2" ry="2" />
<text  x="684.10" y="207.5" ></text>
</g>
<g >
<title>ip6_input (216 samples, 0.13%)</title><rect x="1141.0" y="181" width="1.6" height="15.0" fill="rgb(210,12,52)" rx="2" ry="2" />
<text  x="1144.01" y="191.5" ></text>
</g>
<g >
<title>ip6_input (395 samples, 0.24%)</title><rect x="21.4" y="165" width="2.9" height="15.0" fill="rgb(236,18,24)" rx="2" ry="2" />
<text  x="24.43" y="175.5" ></text>
</g>
<g >
<title>sched_add (304 samples, 0.19%)</title><rect x="1168.8" y="181" width="2.2" height="15.0" fill="rgb(219,6,44)" rx="2" ry="2" />
<text  x="1171.81" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (351 samples, 0.22%)</title><rect x="1066.1" y="213" width="2.6" height="15.0" fill="rgb(215,144,12)" rx="2" ry="2" />
<text  x="1069.13" y="223.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (273 samples, 0.17%)</title><rect x="720.5" y="197" width="2.0" height="15.0" fill="rgb(212,198,14)" rx="2" ry="2" />
<text  x="723.55" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (21 samples, 0.01%)</title><rect x="1012.2" y="149" width="0.2" height="15.0" fill="rgb(239,182,32)" rx="2" ry="2" />
<text  x="1015.22" y="159.5" ></text>
</g>
<g >
<title>native_lapic_eoi (174 samples, 0.11%)</title><rect x="1180.3" y="245" width="1.3" height="15.0" fill="rgb(236,24,44)" rx="2" ry="2" />
<text  x="1183.31" y="255.5" ></text>
</g>
<g >
<title>ether_input (57,116 samples, 35.05%)</title><rect x="150.4" y="197" width="413.6" height="15.0" fill="rgb(232,139,25)" rx="2" ry="2" />
<text  x="153.44" y="207.5" >ether_input</text>
</g>
<g >
<title>handleevents (657 samples, 0.40%)</title><rect x="1185.2" y="245" width="4.8" height="15.0" fill="rgb(254,76,36)" rx="2" ry="2" />
<text  x="1188.24" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (40 samples, 0.02%)</title><rect x="1082.1" y="229" width="0.3" height="15.0" fill="rgb(208,44,4)" rx="2" ry="2" />
<text  x="1085.10" y="239.5" ></text>
</g>
<g >
<title>rdtsc (38 samples, 0.02%)</title><rect x="1073.1" y="213" width="0.3" height="15.0" fill="rgb(244,139,6)" rx="2" ry="2" />
<text  x="1076.13" y="223.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (57 samples, 0.03%)</title><rect x="1188.1" y="181" width="0.4" height="15.0" fill="rgb(221,45,0)" rx="2" ry="2" />
<text  x="1191.05" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (95 samples, 0.06%)</title><rect x="82.8" y="165" width="0.7" height="15.0" fill="rgb(209,15,33)" rx="2" ry="2" />
<text  x="85.78" y="175.5" ></text>
</g>
<g >
<title>m_adj (729 samples, 0.45%)</title><rect x="204.5" y="133" width="5.3" height="15.0" fill="rgb(229,134,5)" rx="2" ry="2" />
<text  x="207.50" y="143.5" ></text>
</g>
<g >
<title>thread_lock_block_wait (35 samples, 0.02%)</title><rect x="24.0" y="37" width="0.3" height="15.0" fill="rgb(211,211,34)" rx="2" ry="2" />
<text  x="27.03" y="47.5" ></text>
</g>
<g >
<title>iflib_fast_intr (3,791 samples, 2.33%)</title><rect x="1152.5" y="245" width="27.5" height="15.0" fill="rgb(230,184,33)" rx="2" ry="2" />
<text  x="1155.53" y="255.5" >i..</text>
</g>
<g >
<title>nd6_resolve (4,659 samples, 2.86%)</title><rect x="421.9" y="69" width="33.8" height="15.0" fill="rgb(251,156,33)" rx="2" ry="2" />
<text  x="424.94" y="79.5" >nd..</text>
</g>
<g >
<title>_task_fn_rx (1,244 samples, 0.76%)</title><rect x="1107.7" y="261" width="9.0" height="15.0" fill="rgb(215,200,43)" rx="2" ry="2" />
<text  x="1110.67" y="271.5" ></text>
</g>
<g >
<title>ffs_alloc (17 samples, 0.01%)</title><rect x="1083.6" y="165" width="0.1" height="15.0" fill="rgb(227,51,50)" rx="2" ry="2" />
<text  x="1086.60" y="175.5" ></text>
</g>
<g >
<title>iflib_if_transmit (11,528 samples, 7.07%)</title><rect x="328.8" y="53" width="83.5" height="15.0" fill="rgb(238,64,8)" rx="2" ry="2" />
<text  x="331.83" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (2,316 samples, 1.42%)</title><rect x="995.5" y="133" width="16.7" height="15.0" fill="rgb(206,196,23)" rx="2" ry="2" />
<text  x="998.45" y="143.5" ></text>
</g>
<g >
<title>sleepq_release (55 samples, 0.03%)</title><rect x="1113.9" y="37" width="0.4" height="15.0" fill="rgb(215,38,32)" rx="2" ry="2" />
<text  x="1116.88" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (47,897 samples, 29.39%)</title><rect x="210.6" y="133" width="346.8" height="15.0" fill="rgb(229,44,25)" rx="2" ry="2" />
<text  x="213.56" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>m_pkthdr_init (38 samples, 0.02%)</title><rect x="723.9" y="213" width="0.3" height="15.0" fill="rgb(210,149,23)" rx="2" ry="2" />
<text  x="726.92" y="223.5" ></text>
</g>
<g >
<title>doreti (371 samples, 0.23%)</title><rect x="24.3" y="277" width="2.7" height="15.0" fill="rgb(250,120,9)" rx="2" ry="2" />
<text  x="27.29" y="287.5" ></text>
</g>
<g >
<title>mac_ifnet_create_mbuf (518 samples, 0.32%)</title><rect x="557.4" y="149" width="3.7" height="15.0" fill="rgb(234,81,21)" rx="2" ry="2" />
<text  x="560.38" y="159.5" ></text>
</g>
<g >
<title>sched_add (125 samples, 0.08%)</title><rect x="21.5" y="37" width="0.9" height="15.0" fill="rgb(245,151,33)" rx="2" ry="2" />
<text  x="24.51" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (365 samples, 0.22%)</title><rect x="1055.0" y="213" width="2.6" height="15.0" fill="rgb(239,157,17)" rx="2" ry="2" />
<text  x="1057.99" y="223.5" ></text>
</g>
<g >
<title>setrunnable (132 samples, 0.08%)</title><rect x="21.5" y="53" width="1.0" height="15.0" fill="rgb(248,191,17)" rx="2" ry="2" />
<text  x="24.51" y="63.5" ></text>
</g>
<g >
<title>cpu_search_highest (744 samples, 0.46%)</title><rect x="1096.3" y="245" width="5.4" height="15.0" fill="rgb(216,27,41)" rx="2" ry="2" />
<text  x="1099.35" y="255.5" ></text>
</g>
<g >
<title>sched_choose (108 samples, 0.07%)</title><rect x="1075.7" y="181" width="0.8" height="15.0" fill="rgb(231,140,39)" rx="2" ry="2" />
<text  x="1078.69" y="191.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (415 samples, 0.25%)</title><rect x="59.1" y="229" width="3.0" height="15.0" fill="rgb(229,111,22)" rx="2" ry="2" />
<text  x="62.14" y="239.5" ></text>
</g>
<g >
<title>lapic_handle_intr (252 samples, 0.15%)</title><rect x="1182.7" y="277" width="1.8" height="15.0" fill="rgb(237,32,5)" rx="2" ry="2" />
<text  x="1185.72" y="287.5" ></text>
</g>
<g >
<title>fib6_lookup (9,535 samples, 5.85%)</title><rect x="488.3" y="69" width="69.1" height="15.0" fill="rgb(216,60,18)" rx="2" ry="2" />
<text  x="491.34" y="79.5" >fib6_lo..</text>
</g>
<g >
<title>sleepq_add (187 samples, 0.11%)</title><rect x="1078.8" y="229" width="1.3" height="15.0" fill="rgb(253,5,29)" rx="2" ry="2" />
<text  x="1081.78" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (16 samples, 0.01%)</title><rect x="1078.4" y="197" width="0.1" height="15.0" fill="rgb(239,226,2)" rx="2" ry="2" />
<text  x="1081.37" y="207.5" ></text>
</g>
<g >
<title>intr_event_schedule_thread (19 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(251,71,33)" rx="2" ry="2" />
<text  x="1192.83" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (16 samples, 0.01%)</title><rect x="1095.1" y="229" width="0.2" height="15.0" fill="rgb(227,172,47)" rx="2" ry="2" />
<text  x="1098.14" y="239.5" ></text>
</g>
<g >
<title>sleepq_wait (31 samples, 0.02%)</title><rect x="1081.7" y="229" width="0.2" height="15.0" fill="rgb(237,126,49)" rx="2" ry="2" />
<text  x="1084.72" y="239.5" ></text>
</g>
<g >
<title>ether_input (3,360 samples, 2.06%)</title><rect x="1116.7" y="213" width="24.3" height="15.0" fill="rgb(244,135,44)" rx="2" ry="2" />
<text  x="1119.68" y="223.5" >e..</text>
</g>
<g >
<title>spinlock_enter (109 samples, 0.07%)</title><rect x="74.8" y="197" width="0.8" height="15.0" fill="rgb(223,55,16)" rx="2" ry="2" />
<text  x="77.83" y="207.5" ></text>
</g>
<g >
<title>sleepq_signal (51 samples, 0.03%)</title><rect x="83.7" y="181" width="0.3" height="15.0" fill="rgb(249,185,38)" rx="2" ry="2" />
<text  x="86.66" y="191.5" ></text>
</g>
<g >
<title>keg_alloc_slab (62 samples, 0.04%)</title><rect x="592.2" y="133" width="0.4" height="15.0" fill="rgb(232,226,42)" rx="2" ry="2" />
<text  x="595.17" y="143.5" ></text>
</g>
<g >
<title>wakeup_any (394 samples, 0.24%)</title><rect x="21.4" y="69" width="2.9" height="15.0" fill="rgb(239,69,37)" rx="2" ry="2" />
<text  x="24.43" y="79.5" ></text>
</g>
<g >
<title>mi_switch (986 samples, 0.61%)</title><rect x="1071.6" y="229" width="7.2" height="15.0" fill="rgb(242,54,24)" rx="2" ry="2" />
<text  x="1074.64" y="239.5" ></text>
</g>
<g >
<title>uiomove_fromphys (16 samples, 0.01%)</title><rect x="1083.9" y="181" width="0.1" height="15.0" fill="rgb(208,36,44)" rx="2" ry="2" />
<text  x="1086.91" y="191.5" ></text>
</g>
<g >
<title>sched_idletd (3,249 samples, 1.99%)</title><rect x="1084.1" y="261" width="23.5" height="15.0" fill="rgb(244,11,41)" rx="2" ry="2" />
<text  x="1087.10" y="271.5" >s..</text>
</g>
<g >
<title>mb_dtor_mbuf (263 samples, 0.16%)</title><rect x="886.3" y="117" width="1.9" height="15.0" fill="rgb(226,195,6)" rx="2" ry="2" />
<text  x="889.29" y="127.5" ></text>
</g>
<g >
<title>netisr_dispatch (108 samples, 0.07%)</title><rect x="209.8" y="133" width="0.8" height="15.0" fill="rgb(213,159,42)" rx="2" ry="2" />
<text  x="212.78" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (4,236 samples, 2.60%)</title><rect x="1012.4" y="165" width="30.6" height="15.0" fill="rgb(239,58,9)" rx="2" ry="2" />
<text  x="1015.38" y="175.5" >ix..</text>
</g>
<g >
<title>ether_demux (216 samples, 0.13%)</title><rect x="1141.0" y="213" width="1.6" height="15.0" fill="rgb(225,7,44)" rx="2" ry="2" />
<text  x="1144.01" y="223.5" ></text>
</g>
<g >
<title>iflib_get_softc (33 samples, 0.02%)</title><rect x="1056.8" y="197" width="0.2" height="15.0" fill="rgb(225,20,2)" rx="2" ry="2" />
<text  x="1059.79" y="207.5" ></text>
</g>
<g >
<title>zone_put_bucket (16 samples, 0.01%)</title><rect x="886.2" y="101" width="0.1" height="15.0" fill="rgb(240,200,49)" rx="2" ry="2" />
<text  x="889.18" y="111.5" ></text>
</g>
<g >
<title>pmc_process_samples (326 samples, 0.20%)</title><rect x="1186.6" y="197" width="2.3" height="15.0" fill="rgb(236,86,52)" rx="2" ry="2" />
<text  x="1189.55" y="207.5" ></text>
</g>
<g >
<title>uma_zfree_arg (20 samples, 0.01%)</title><rect x="592.0" y="149" width="0.1" height="15.0" fill="rgb(218,150,52)" rx="2" ry="2" />
<text  x="594.95" y="159.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (215 samples, 0.13%)</title><rect x="1141.0" y="101" width="1.6" height="15.0" fill="rgb(248,226,13)" rx="2" ry="2" />
<text  x="1144.02" y="111.5" ></text>
</g>
<g >
<title>runq_choose (90 samples, 0.06%)</title><rect x="1105.7" y="181" width="0.7" height="15.0" fill="rgb(208,203,28)" rx="2" ry="2" />
<text  x="1108.71" y="191.5" ></text>
</g>
<g >
<title>memcpy_erms (2,523 samples, 1.55%)</title><rect x="662.8" y="197" width="18.3" height="15.0" fill="rgb(233,149,15)" rx="2" ry="2" />
<text  x="665.83" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (68 samples, 0.04%)</title><rect x="723.4" y="197" width="0.5" height="15.0" fill="rgb(244,96,54)" rx="2" ry="2" />
<text  x="726.42" y="207.5" ></text>
</g>
<g >
<title>ip6_tryforward (3,360 samples, 2.06%)</title><rect x="1116.7" y="117" width="24.3" height="15.0" fill="rgb(219,154,8)" rx="2" ry="2" />
<text  x="1119.68" y="127.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (1,568 samples, 0.96%)</title><rect x="616.0" y="197" width="11.3" height="15.0" fill="rgb(224,170,21)" rx="2" ry="2" />
<text  x="618.97" y="207.5" ></text>
</g>
<g >
<title>ipi_bitmap_handler (50 samples, 0.03%)</title><rect x="1182.4" y="277" width="0.3" height="15.0" fill="rgb(223,140,42)" rx="2" ry="2" />
<text  x="1185.36" y="287.5" ></text>
</g>
<g >
<title>iflib_rxeof (1,244 samples, 0.76%)</title><rect x="1107.7" y="245" width="9.0" height="15.0" fill="rgb(247,73,7)" rx="2" ry="2" />
<text  x="1110.67" y="255.5" ></text>
</g>
<g >
<title>lapic_et_start (38 samples, 0.02%)</title><rect x="1189.1" y="229" width="0.3" height="15.0" fill="rgb(233,121,29)" rx="2" ry="2" />
<text  x="1192.09" y="239.5" ></text>
</g>
<g >
<title>memcmp (49 samples, 0.03%)</title><rect x="483.4" y="69" width="0.4" height="15.0" fill="rgb(242,99,21)" rx="2" ry="2" />
<text  x="486.40" y="79.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (3,334 samples, 2.05%)</title><rect x="352.8" y="37" width="24.1" height="15.0" fill="rgb(243,49,20)" rx="2" ry="2" />
<text  x="355.78" y="47.5" >g..</text>
</g>
<g >
<title>rsb_flush (57 samples, 0.03%)</title><rect x="1073.4" y="213" width="0.4" height="15.0" fill="rgb(219,128,54)" rx="2" ry="2" />
<text  x="1076.40" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (130 samples, 0.08%)</title><rect x="22.5" y="37" width="0.9" height="15.0" fill="rgb(206,5,18)" rx="2" ry="2" />
<text  x="25.46" y="47.5" ></text>
</g>
<g >
<title>pagezero_erms (18 samples, 0.01%)</title><rect x="592.4" y="101" width="0.1" height="15.0" fill="rgb(250,74,40)" rx="2" ry="2" />
<text  x="595.36" y="111.5" ></text>
</g>
<g >
<title>setrunnable (215 samples, 0.13%)</title><rect x="1141.0" y="69" width="1.6" height="15.0" fill="rgb(231,194,34)" rx="2" ry="2" />
<text  x="1144.02" y="79.5" ></text>
</g>
<g >
<title>wakeup_any (215 samples, 0.13%)</title><rect x="1141.0" y="85" width="1.6" height="15.0" fill="rgb(235,49,39)" rx="2" ry="2" />
<text  x="1144.02" y="95.5" ></text>
</g>
<g >
<title>memmove_erms (629 samples, 0.39%)</title><rect x="451.1" y="53" width="4.6" height="15.0" fill="rgb(217,54,53)" rx="2" ry="2" />
<text  x="454.12" y="63.5" ></text>
</g>
<g >
<title>hardclock (453 samples, 0.28%)</title><rect x="1185.8" y="229" width="3.3" height="15.0" fill="rgb(247,13,41)" rx="2" ry="2" />
<text  x="1188.81" y="239.5" ></text>
</g>
<g >
<title>getblkx (23 samples, 0.01%)</title><rect x="1083.7" y="149" width="0.2" height="15.0" fill="rgb(246,40,17)" rx="2" ry="2" />
<text  x="1086.73" y="159.5" ></text>
</g>
<g >
<title>ip6_tryforward (216 samples, 0.13%)</title><rect x="1141.0" y="165" width="1.6" height="15.0" fill="rgb(242,37,5)" rx="2" ry="2" />
<text  x="1144.01" y="175.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (92 samples, 0.06%)</title><rect x="62.1" y="229" width="0.7" height="15.0" fill="rgb(223,59,5)" rx="2" ry="2" />
<text  x="65.14" y="239.5" ></text>
</g>
<g >
<title>thread_lock_block_wait (25 samples, 0.02%)</title><rect x="1174.5" y="181" width="0.2" height="15.0" fill="rgb(233,36,15)" rx="2" ry="2" />
<text  x="1177.53" y="191.5" ></text>
</g>
<g >
<title>rxd_frag_to_sd (5,405 samples, 3.32%)</title><rect x="681.4" y="197" width="39.1" height="15.0" fill="rgb(245,44,8)" rx="2" ry="2" />
<text  x="684.41" y="207.5" >rxd..</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (9,411 samples, 5.77%)</title><rect x="822.1" y="181" width="68.2" height="15.0" fill="rgb(222,100,13)" rx="2" ry="2" />
<text  x="825.12" y="191.5" >iflib_c..</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (530 samples, 0.33%)</title><rect x="1043.0" y="181" width="3.9" height="15.0" fill="rgb(208,204,38)" rx="2" ry="2" />
<text  x="1046.05" y="191.5" ></text>
</g>
<g >
<title>iflib_if_transmit (3,360 samples, 2.06%)</title><rect x="1116.7" y="69" width="24.3" height="15.0" fill="rgb(254,207,54)" rx="2" ry="2" />
<text  x="1119.68" y="79.5" >i..</text>
</g>
<g >
<title>lock_delay (18 samples, 0.01%)</title><rect x="1107.3" y="229" width="0.1" height="15.0" fill="rgb(217,51,3)" rx="2" ry="2" />
<text  x="1110.30" y="239.5" ></text>
</g>
<g >
<title>thread_lock_flags_ (14 samples, 0.01%)</title><rect x="1189.9" y="197" width="0.1" height="15.0" fill="rgb(237,87,32)" rx="2" ry="2" />
<text  x="1192.87" y="207.5" ></text>
</g>
<g >
<title>fpu_activate_sw (44 samples, 0.03%)</title><rect x="1072.4" y="197" width="0.4" height="15.0" fill="rgb(249,111,52)" rx="2" ry="2" />
<text  x="1075.44" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (87 samples, 0.05%)</title><rect x="1140.4" y="37" width="0.6" height="15.0" fill="rgb(234,40,52)" rx="2" ry="2" />
<text  x="1143.38" y="47.5" ></text>
</g>
<g >
<title>cpu_switch (222 samples, 0.14%)</title><rect x="1102.1" y="229" width="1.6" height="15.0" fill="rgb(253,156,19)" rx="2" ry="2" />
<text  x="1105.06" y="239.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (4,393 samples, 2.70%)</title><rect x="980.6" y="165" width="31.8" height="15.0" fill="rgb(221,207,28)" rx="2" ry="2" />
<text  x="983.57" y="175.5" >bu..</text>
</g>
<g >
<title>Xtimerint (38 samples, 0.02%)</title><rect x="20.9" y="277" width="0.3" height="15.0" fill="rgb(235,83,8)" rx="2" ry="2" />
<text  x="23.91" y="287.5" ></text>
</g>
<g >
<title>setrunnable (39 samples, 0.02%)</title><rect x="1109.4" y="37" width="0.3" height="15.0" fill="rgb(229,166,11)" rx="2" ry="2" />
<text  x="1112.38" y="47.5" ></text>
</g>
<g >
<title>wakeup (924 samples, 0.57%)</title><rect x="1063.7" y="229" width="6.7" height="15.0" fill="rgb(208,198,32)" rx="2" ry="2" />
<text  x="1066.70" y="239.5" ></text>
</g>
<g >
<title>pmclog_loop (93 samples, 0.06%)</title><rect x="1083.4" y="261" width="0.6" height="15.0" fill="rgb(224,42,12)" rx="2" ry="2" />
<text  x="1086.36" y="271.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (41 samples, 0.03%)</title><rect x="1096.0" y="229" width="0.3" height="15.0" fill="rgb(211,69,8)" rx="2" ry="2" />
<text  x="1099.02" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (395 samples, 0.24%)</title><rect x="21.4" y="261" width="2.9" height="15.0" fill="rgb(213,119,23)" rx="2" ry="2" />
<text  x="24.43" y="271.5" ></text>
</g>
<g >
<title>ether_output (1,244 samples, 0.76%)</title><rect x="1107.7" y="117" width="9.0" height="15.0" fill="rgb(229,43,34)" rx="2" ry="2" />
<text  x="1110.67" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (78 samples, 0.05%)</title><rect x="592.8" y="181" width="0.5" height="15.0" fill="rgb(209,143,44)" rx="2" ry="2" />
<text  x="595.76" y="191.5" ></text>
</g>
<g >
<title>tdq_notify (93 samples, 0.06%)</title><rect x="1170.3" y="165" width="0.7" height="15.0" fill="rgb(234,137,12)" rx="2" ry="2" />
<text  x="1173.30" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (3,360 samples, 2.06%)</title><rect x="1116.7" y="85" width="24.3" height="15.0" fill="rgb(250,47,47)" rx="2" ry="2" />
<text  x="1119.68" y="95.5" >e..</text>
</g>
<g >
<title>_task_fn_rx (3,360 samples, 2.06%)</title><rect x="1116.7" y="245" width="24.3" height="15.0" fill="rgb(253,102,41)" rx="2" ry="2" />
<text  x="1119.68" y="255.5" >_..</text>
</g>
<g >
<title>ether_demux (1,244 samples, 0.76%)</title><rect x="1107.7" y="181" width="9.0" height="15.0" fill="rgb(231,9,2)" rx="2" ry="2" />
<text  x="1110.67" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (101 samples, 0.06%)</title><rect x="1069.7" y="213" width="0.7" height="15.0" fill="rgb(248,127,6)" rx="2" ry="2" />
<text  x="1072.66" y="223.5" ></text>
</g>
<g >
<title>lock_delay (27 samples, 0.02%)</title><rect x="62.5" y="213" width="0.2" height="15.0" fill="rgb(247,92,13)" rx="2" ry="2" />
<text  x="65.47" y="223.5" ></text>
</g>
<g >
<title>lradix6_lookup (7,898 samples, 4.85%)</title><rect x="500.2" y="53" width="57.2" height="15.0" fill="rgb(228,124,44)" rx="2" ry="2" />
<text  x="503.19" y="63.5" >lradix..</text>
</g>
<g >
<title>netmap_rx_irq (186 samples, 0.11%)</title><rect x="724.2" y="213" width="1.3" height="15.0" fill="rgb(225,111,23)" rx="2" ry="2" />
<text  x="727.19" y="223.5" ></text>
</g>
<g >
<title>uma_small_alloc (23 samples, 0.01%)</title><rect x="592.3" y="117" width="0.2" height="15.0" fill="rgb(224,75,4)" rx="2" ry="2" />
<text  x="595.34" y="127.5" ></text>
</g>
<g >
<title>ether_demux (395 samples, 0.24%)</title><rect x="21.4" y="197" width="2.9" height="15.0" fill="rgb(221,208,37)" rx="2" ry="2" />
<text  x="24.43" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (905 samples, 0.56%)</title><rect x="78.3" y="197" width="6.6" height="15.0" fill="rgb(206,151,37)" rx="2" ry="2" />
<text  x="81.31" y="207.5" ></text>
</g>
<g >
<title>setrunnable (346 samples, 0.21%)</title><rect x="1168.5" y="197" width="2.5" height="15.0" fill="rgb(243,137,11)" rx="2" ry="2" />
<text  x="1171.52" y="207.5" ></text>
</g>
<g >
<title>ether_input (395 samples, 0.24%)</title><rect x="21.4" y="245" width="2.9" height="15.0" fill="rgb(245,58,54)" rx="2" ry="2" />
<text  x="24.43" y="255.5" ></text>
</g>
<g >
<title>sleepq_resume_thread (122 samples, 0.07%)</title><rect x="23.4" y="53" width="0.9" height="15.0" fill="rgb(231,33,9)" rx="2" ry="2" />
<text  x="26.40" y="63.5" ></text>
</g>
<g >
<title>iflib_encap (21,100 samples, 12.95%)</title><rect x="890.3" y="181" width="152.7" height="15.0" fill="rgb(239,149,42)" rx="2" ry="2" />
<text  x="893.27" y="191.5" >iflib_encap</text>
</g>
<g >
<title>memcmp (357 samples, 0.22%)</title><rect x="561.1" y="149" width="2.6" height="15.0" fill="rgb(235,49,3)" rx="2" ry="2" />
<text  x="564.13" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (21 samples, 0.01%)</title><rect x="1081.9" y="229" width="0.2" height="15.0" fill="rgb(221,181,16)" rx="2" ry="2" />
<text  x="1084.95" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (3,360 samples, 2.06%)</title><rect x="1116.7" y="181" width="24.3" height="15.0" fill="rgb(251,61,40)" rx="2" ry="2" />
<text  x="1119.68" y="191.5" >e..</text>
</g>
<g >
<title>spinlock_enter (1,357 samples, 0.83%)</title><rect x="1118.2" y="37" width="9.8" height="15.0" fill="rgb(216,164,1)" rx="2" ry="2" />
<text  x="1121.21" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (216 samples, 0.13%)</title><rect x="1141.0" y="277" width="1.6" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="1144.01" y="287.5" ></text>
</g>
<g >
<title>sleepq_switch (120 samples, 0.07%)</title><rect x="1080.9" y="229" width="0.8" height="15.0" fill="rgb(248,55,9)" rx="2" ry="2" />
<text  x="1083.85" y="239.5" ></text>
</g>
<g >
<title>tsc_get_config (21 samples, 0.01%)</title><rect x="1188.8" y="181" width="0.1" height="15.0" fill="rgb(240,26,30)" rx="2" ry="2" />
<text  x="1191.76" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (216 samples, 0.13%)</title><rect x="1141.0" y="229" width="1.6" height="15.0" fill="rgb(235,188,53)" rx="2" ry="2" />
<text  x="1144.01" y="239.5" ></text>
</g>
<g >
<title>cache_alloc (147 samples, 0.09%)</title><rect x="591.6" y="165" width="1.1" height="15.0" fill="rgb(214,211,19)" rx="2" ry="2" />
<text  x="594.63" y="175.5" ></text>
</g>
<g >
<title>VOP_WRITE_APV (93 samples, 0.06%)</title><rect x="1083.4" y="213" width="0.6" height="15.0" fill="rgb(218,50,44)" rx="2" ry="2" />
<text  x="1086.36" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (1,205 samples, 0.74%)</title><rect x="1168.0" y="213" width="8.7" height="15.0" fill="rgb(234,176,35)" rx="2" ry="2" />
<text  x="1170.97" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (395 samples, 0.24%)</title><rect x="21.4" y="117" width="2.9" height="15.0" fill="rgb(224,67,13)" rx="2" ry="2" />
<text  x="24.43" y="127.5" ></text>
</g>
<g >
<title>if_getcapenable (34 samples, 0.02%)</title><rect x="564.0" y="197" width="0.3" height="15.0" fill="rgb(235,205,45)" rx="2" ry="2" />
<text  x="567.01" y="207.5" ></text>
</g>
<g >
<title>kbdc_data_ready (106 samples, 0.07%)</title><rect x="1082.5" y="197" width="0.8" height="15.0" fill="rgb(223,198,23)" rx="2" ry="2" />
<text  x="1085.50" y="207.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (203 samples, 0.12%)</title><rect x="1116.7" y="37" width="1.5" height="15.0" fill="rgb(239,219,30)" rx="2" ry="2" />
<text  x="1119.69" y="47.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (364 samples, 0.22%)</title><rect x="56.5" y="229" width="2.6" height="15.0" fill="rgb(228,71,53)" rx="2" ry="2" />
<text  x="59.50" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (18 samples, 0.01%)</title><rect x="1107.4" y="229" width="0.2" height="15.0" fill="rgb(217,181,54)" rx="2" ry="2" />
<text  x="1110.43" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (656 samples, 0.40%)</title><rect x="417.2" y="69" width="4.7" height="15.0" fill="rgb(215,156,5)" rx="2" ry="2" />
<text  x="420.19" y="79.5" ></text>
</g>
<g >
<title>iap_get_config (23 samples, 0.01%)</title><rect x="1187.9" y="181" width="0.2" height="15.0" fill="rgb(222,55,38)" rx="2" ry="2" />
<text  x="1190.89" y="191.5" ></text>
</g>
<g >
<title>runq_add (48 samples, 0.03%)</title><rect x="1141.0" y="37" width="0.4" height="15.0" fill="rgb(249,202,29)" rx="2" ry="2" />
<text  x="1144.02" y="47.5" ></text>
</g>
<g >
<title>ether_output (395 samples, 0.24%)</title><rect x="21.4" y="133" width="2.9" height="15.0" fill="rgb(240,65,27)" rx="2" ry="2" />
<text  x="24.43" y="143.5" ></text>
</g>
<g >
<title>pmap_kextract (243 samples, 0.15%)</title><rect x="1010.5" y="117" width="1.7" height="15.0" fill="rgb(246,42,21)" rx="2" ry="2" />
<text  x="1013.46" y="127.5" ></text>
</g>
<g >
<title>m_free (3,559 samples, 2.18%)</title><rect x="864.5" y="149" width="25.8" height="15.0" fill="rgb(226,69,6)" rx="2" ry="2" />
<text  x="867.50" y="159.5" >m..</text>
</g>
<g >
<title>runq_add (46 samples, 0.03%)</title><rect x="1169.7" y="165" width="0.3" height="15.0" fill="rgb(242,41,27)" rx="2" ry="2" />
<text  x="1172.66" y="175.5" ></text>
</g>
<g >
<title>lock_delay (168 samples, 0.10%)</title><rect x="1107.7" y="37" width="1.2" height="15.0" fill="rgb(241,218,40)" rx="2" ry="2" />
<text  x="1110.68" y="47.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (1,895 samples, 1.16%)</title><rect x="437.4" y="53" width="13.7" height="15.0" fill="rgb(231,203,17)" rx="2" ry="2" />
<text  x="440.40" y="63.5" ></text>
</g>
<g >
<title>rn_match (6,993 samples, 4.29%)</title><rect x="506.7" y="37" width="50.7" height="15.0" fill="rgb(239,46,29)" rx="2" ry="2" />
<text  x="509.74" y="47.5" >rn_ma..</text>
</g>
<g >
<title>in6_localip (3,879 samples, 2.38%)</title><rect x="455.7" y="85" width="28.1" height="15.0" fill="rgb(232,178,3)" rx="2" ry="2" />
<text  x="458.67" y="95.5" >i..</text>
</g>
<g >
<title>zone_alloc_item (16 samples, 0.01%)</title><rect x="592.5" y="117" width="0.1" height="15.0" fill="rgb(232,89,30)" rx="2" ry="2" />
<text  x="595.50" y="127.5" ></text>
</g>
<g >
<title>if_getdrvflags (24 samples, 0.01%)</title><rect x="1050.8" y="213" width="0.2" height="15.0" fill="rgb(209,55,5)" rx="2" ry="2" />
<text  x="1053.85" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (145 samples, 0.09%)</title><rect x="1114.4" y="37" width="1.1" height="15.0" fill="rgb(222,34,39)" rx="2" ry="2" />
<text  x="1117.41" y="47.5" ></text>
</g>
<g >
<title>_bus_dmamap_load_mbuf_sg (3,579 samples, 2.20%)</title><rect x="986.3" y="149" width="25.9" height="15.0" fill="rgb(225,123,20)" rx="2" ry="2" />
<text  x="989.31" y="159.5" >_..</text>
</g>
<g >
<title>getblk (23 samples, 0.01%)</title><rect x="1083.7" y="165" width="0.2" height="15.0" fill="rgb(206,69,31)" rx="2" ry="2" />
<text  x="1086.73" y="175.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (123 samples, 0.08%)</title><rect x="979.7" y="165" width="0.9" height="15.0" fill="rgb(247,198,31)" rx="2" ry="2" />
<text  x="982.68" y="175.5" ></text>
</g>
<g >
<title>intr_lookup_source (181 samples, 0.11%)</title><rect x="1183.2" y="261" width="1.3" height="15.0" fill="rgb(216,81,0)" rx="2" ry="2" />
<text  x="1186.24" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (33 samples, 0.02%)</title><rect x="1109.1" y="37" width="0.2" height="15.0" fill="rgb(209,123,54)" rx="2" ry="2" />
<text  x="1112.08" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (240 samples, 0.15%)</title><rect x="1165.6" y="213" width="1.7" height="15.0" fill="rgb(211,139,37)" rx="2" ry="2" />
<text  x="1168.55" y="223.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (394 samples, 0.24%)</title><rect x="21.4" y="85" width="2.9" height="15.0" fill="rgb(207,126,16)" rx="2" ry="2" />
<text  x="24.43" y="95.5" ></text>
</g>
</g>
</svg>
