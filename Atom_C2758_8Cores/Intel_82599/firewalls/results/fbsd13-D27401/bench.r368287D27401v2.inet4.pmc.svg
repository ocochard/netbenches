<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>vm_phys_alloc_npages (5 samples, 0.02%)</title><rect x="639.8" y="37" width="0.3" height="15.0" fill="rgb(214,181,18)" rx="2" ry="2" />
<text  x="642.80" y="47.5" ></text>
</g>
<g >
<title>vm_page_zone_import (8 samples, 0.04%)</title><rect x="639.6" y="53" width="0.5" height="15.0" fill="rgb(230,95,21)" rx="2" ry="2" />
<text  x="642.64" y="63.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (7 samples, 0.03%)</title><rect x="1155.5" y="53" width="0.4" height="15.0" fill="rgb(214,166,13)" rx="2" ry="2" />
<text  x="1158.54" y="63.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (11 samples, 0.05%)</title><rect x="47.2" y="213" width="0.6" height="15.0" fill="rgb(253,123,0)" rx="2" ry="2" />
<text  x="50.17" y="223.5" ></text>
</g>
<g >
<title>rn_match (1,105 samples, 4.97%)</title><rect x="541.0" y="37" width="58.7" height="15.0" fill="rgb(209,153,20)" rx="2" ry="2" />
<text  x="544.03" y="47.5" >rn_match</text>
</g>
<g >
<title>sleepq_release (11 samples, 0.05%)</title><rect x="1178.6" y="197" width="0.6" height="15.0" fill="rgb(245,170,10)" rx="2" ry="2" />
<text  x="1181.58" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (25 samples, 0.11%)</title><rect x="19.8" y="101" width="1.4" height="15.0" fill="rgb(233,229,8)" rx="2" ry="2" />
<text  x="22.82" y="111.5" ></text>
</g>
<g >
<title>_rm_rlock (272 samples, 1.22%)</title><rect x="496.0" y="69" width="14.4" height="15.0" fill="rgb(247,220,14)" rx="2" ry="2" />
<text  x="499.01" y="79.5" ></text>
</g>
<g >
<title>zone_alloc_limit (3 samples, 0.01%)</title><rect x="636.4" y="149" width="0.2" height="15.0" fill="rgb(219,125,45)" rx="2" ry="2" />
<text  x="639.40" y="159.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (3 samples, 0.01%)</title><rect x="635.7" y="165" width="0.1" height="15.0" fill="rgb(248,114,22)" rx="2" ry="2" />
<text  x="638.66" y="175.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,585 samples, 7.13%)</title><rect x="387.8" y="53" width="84.2" height="15.0" fill="rgb(233,214,39)" rx="2" ry="2" />
<text  x="390.79" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.04%)</title><rect x="1119.5" y="37" width="0.4" height="15.0" fill="rgb(231,223,27)" rx="2" ry="2" />
<text  x="1122.49" y="47.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (47 samples, 0.21%)</title><rect x="1180.4" y="229" width="2.5" height="15.0" fill="rgb(216,202,32)" rx="2" ry="2" />
<text  x="1183.39" y="239.5" ></text>
</g>
<g >
<title>ether_demux (563 samples, 2.53%)</title><rect x="1125.6" y="165" width="29.9" height="15.0" fill="rgb(231,160,38)" rx="2" ry="2" />
<text  x="1128.65" y="175.5" >et..</text>
</g>
<g >
<title>netisr_dispatch_src (25 samples, 0.11%)</title><rect x="19.8" y="181" width="1.4" height="15.0" fill="rgb(213,50,13)" rx="2" ry="2" />
<text  x="22.82" y="191.5" ></text>
</g>
<g >
<title>soft_get_config (2 samples, 0.01%)</title><rect x="1188.8" y="181" width="0.1" height="15.0" fill="rgb(214,66,1)" rx="2" ry="2" />
<text  x="1191.78" y="191.5" ></text>
</g>
<g >
<title>lock_delay (11 samples, 0.05%)</title><rect x="1118.9" y="37" width="0.6" height="15.0" fill="rgb(208,229,42)" rx="2" ry="2" />
<text  x="1121.90" y="47.5" ></text>
</g>
<g >
<title>all (22,223 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(212,116,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (323 samples, 1.45%)</title><rect x="868.1" y="165" width="17.2" height="15.0" fill="rgb(227,14,49)" rx="2" ry="2" />
<text  x="871.12" y="175.5" ></text>
</g>
<g >
<title>ether_output (133 samples, 0.60%)</title><rect x="1118.5" y="117" width="7.1" height="15.0" fill="rgb(220,194,53)" rx="2" ry="2" />
<text  x="1121.53" y="127.5" ></text>
</g>
<g >
<title>vm_page_alloc_domain_after (15 samples, 0.07%)</title><rect x="639.4" y="101" width="0.8" height="15.0" fill="rgb(225,65,1)" rx="2" ry="2" />
<text  x="642.37" y="111.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (33 samples, 0.15%)</title><rect x="1125.6" y="37" width="1.8" height="15.0" fill="rgb(214,155,24)" rx="2" ry="2" />
<text  x="1128.65" y="47.5" ></text>
</g>
<g >
<title>ether_nh_input (133 samples, 0.60%)</title><rect x="1118.5" y="197" width="7.1" height="15.0" fill="rgb(246,6,30)" rx="2" ry="2" />
<text  x="1121.53" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (2 samples, 0.01%)</title><rect x="45.7" y="213" width="0.1" height="15.0" fill="rgb(245,77,33)" rx="2" ry="2" />
<text  x="48.68" y="223.5" ></text>
</g>
<g >
<title>iflib_if_transmit (133 samples, 0.60%)</title><rect x="1118.5" y="85" width="7.1" height="15.0" fill="rgb(251,176,10)" rx="2" ry="2" />
<text  x="1121.53" y="95.5" ></text>
</g>
<g >
<title>mac_ifnet_create_mbuf (75 samples, 0.34%)</title><rect x="599.7" y="149" width="4.0" height="15.0" fill="rgb(213,71,47)" rx="2" ry="2" />
<text  x="602.71" y="159.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (310 samples, 1.39%)</title><rect x="645.7" y="181" width="16.5" height="15.0" fill="rgb(230,159,23)" rx="2" ry="2" />
<text  x="648.74" y="191.5" ></text>
</g>
<g >
<title>softclock_call_cc (9 samples, 0.04%)</title><rect x="1115.4" y="229" width="0.5" height="15.0" fill="rgb(254,21,21)" rx="2" ry="2" />
<text  x="1118.40" y="239.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (25 samples, 0.11%)</title><rect x="1102.7" y="213" width="1.3" height="15.0" fill="rgb(242,16,35)" rx="2" ry="2" />
<text  x="1105.71" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (29 samples, 0.13%)</title><rect x="1174.0" y="213" width="1.5" height="15.0" fill="rgb(244,210,33)" rx="2" ry="2" />
<text  x="1176.96" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (2 samples, 0.01%)</title><rect x="19.8" y="69" width="0.1" height="15.0" fill="rgb(226,12,46)" rx="2" ry="2" />
<text  x="22.82" y="79.5" ></text>
</g>
<g >
<title>sleepq_broadcast (26 samples, 0.12%)</title><rect x="1110.5" y="213" width="1.3" height="15.0" fill="rgb(246,154,45)" rx="2" ry="2" />
<text  x="1113.46" y="223.5" ></text>
</g>
<g >
<title>cache_alloc (7 samples, 0.03%)</title><rect x="1155.5" y="181" width="0.4" height="15.0" fill="rgb(229,19,50)" rx="2" ry="2" />
<text  x="1158.54" y="191.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.01%)</title><rect x="1182.9" y="245" width="0.1" height="15.0" fill="rgb(214,29,37)" rx="2" ry="2" />
<text  x="1185.88" y="255.5" ></text>
</g>
<g >
<title>netmap_rx_irq (14 samples, 0.06%)</title><rect x="776.0" y="213" width="0.7" height="15.0" fill="rgb(229,74,53)" rx="2" ry="2" />
<text  x="778.99" y="223.5" ></text>
</g>
<g >
<title>mac_mbuf_init (66 samples, 0.30%)</title><rect x="704.9" y="197" width="3.5" height="15.0" fill="rgb(226,188,41)" rx="2" ry="2" />
<text  x="707.90" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (13 samples, 0.06%)</title><rect x="1124.9" y="37" width="0.7" height="15.0" fill="rgb(206,100,32)" rx="2" ry="2" />
<text  x="1127.90" y="47.5" ></text>
</g>
<g >
<title>in_localip (596 samples, 2.68%)</title><rect x="483.1" y="85" width="31.7" height="15.0" fill="rgb(230,82,5)" rx="2" ry="2" />
<text  x="486.10" y="95.5" >in..</text>
</g>
<g >
<title>ixgbe_write_reg (60 samples, 0.27%)</title><rect x="1095.2" y="181" width="3.2" height="15.0" fill="rgb(215,189,10)" rx="2" ry="2" />
<text  x="1098.17" y="191.5" ></text>
</g>
<g >
<title>intr_lookup_source (18 samples, 0.08%)</title><rect x="1184.6" y="261" width="1.0" height="15.0" fill="rgb(230,114,22)" rx="2" ry="2" />
<text  x="1187.64" y="271.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (244 samples, 1.10%)</title><rect x="1167.4" y="229" width="13.0" height="15.0" fill="rgb(248,178,10)" rx="2" ry="2" />
<text  x="1170.43" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (23 samples, 0.10%)</title><rect x="19.9" y="69" width="1.3" height="15.0" fill="rgb(215,187,22)" rx="2" ry="2" />
<text  x="22.93" y="79.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (69 samples, 0.31%)</title><rect x="1091.5" y="181" width="3.7" height="15.0" fill="rgb(252,202,5)" rx="2" ry="2" />
<text  x="1094.50" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (20 samples, 0.09%)</title><rect x="71.5" y="181" width="1.0" height="15.0" fill="rgb(254,71,11)" rx="2" ry="2" />
<text  x="74.49" y="191.5" ></text>
</g>
<g >
<title>m_adj (118 samples, 0.53%)</title><rect x="208.8" y="133" width="6.3" height="15.0" fill="rgb(245,147,11)" rx="2" ry="2" />
<text  x="211.80" y="143.5" ></text>
</g>
<g >
<title>fork_exit (20,638 samples, 92.87%)</title><rect x="22.7" y="277" width="1095.8" height="15.0" fill="rgb(239,141,44)" rx="2" ry="2" />
<text  x="25.69" y="287.5" >fork_exit</text>
</g>
<g >
<title>iflib_fl_refill (7 samples, 0.03%)</title><rect x="1155.5" y="213" width="0.4" height="15.0" fill="rgb(227,96,4)" rx="2" ry="2" />
<text  x="1158.54" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (67 samples, 0.30%)</title><rect x="641.8" y="181" width="3.6" height="15.0" fill="rgb(205,229,24)" rx="2" ry="2" />
<text  x="644.81" y="191.5" ></text>
</g>
<g >
<title>iflib_get_ifp (3 samples, 0.01%)</title><rect x="1181.8" y="213" width="0.2" height="15.0" fill="rgb(239,223,45)" rx="2" ry="2" />
<text  x="1184.82" y="223.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.01%)</title><rect x="71.1" y="181" width="0.1" height="15.0" fill="rgb(240,150,35)" rx="2" ry="2" />
<text  x="74.12" y="191.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (13 samples, 0.06%)</title><rect x="22.7" y="245" width="0.7" height="15.0" fill="rgb(250,229,32)" rx="2" ry="2" />
<text  x="25.69" y="255.5" ></text>
</g>
<g >
<title>fib4_lookup (1,477 samples, 6.65%)</title><rect x="521.3" y="69" width="78.4" height="15.0" fill="rgb(239,20,24)" rx="2" ry="2" />
<text  x="524.28" y="79.5" >fib4_lookup</text>
</g>
<g >
<title>sched_clock (3 samples, 0.01%)</title><rect x="1189.7" y="213" width="0.1" height="15.0" fill="rgb(217,101,51)" rx="2" ry="2" />
<text  x="1192.68" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (5,877 samples, 26.45%)</title><rect x="786.3" y="197" width="312.1" height="15.0" fill="rgb(251,104,14)" rx="2" ry="2" />
<text  x="789.29" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>wakeup_any (85 samples, 0.38%)</title><rect x="1175.9" y="213" width="4.5" height="15.0" fill="rgb(238,179,2)" rx="2" ry="2" />
<text  x="1178.88" y="223.5" ></text>
</g>
<g >
<title>_task_fn_tx (6,164 samples, 27.74%)</title><rect x="776.7" y="229" width="327.3" height="15.0" fill="rgb(250,106,7)" rx="2" ry="2" />
<text  x="779.74" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>wakeup_any (12 samples, 0.05%)</title><rect x="1154.9" y="37" width="0.6" height="15.0" fill="rgb(207,23,17)" rx="2" ry="2" />
<text  x="1157.90" y="47.5" ></text>
</g>
<g >
<title>ether_output (3,355 samples, 15.10%)</title><rect x="305.0" y="85" width="178.1" height="15.0" fill="rgb(237,103,0)" rx="2" ry="2" />
<text  x="307.96" y="95.5" >ether_output</text>
</g>
<g >
<title>grouptaskqueue_enqueue (126 samples, 0.57%)</title><rect x="1118.9" y="69" width="6.7" height="15.0" fill="rgb(238,58,51)" rx="2" ry="2" />
<text  x="1121.90" y="79.5" ></text>
</g>
<g >
<title>cache_alloc_retry (10 samples, 0.04%)</title><rect x="639.6" y="85" width="0.5" height="15.0" fill="rgb(233,120,25)" rx="2" ry="2" />
<text  x="642.58" y="95.5" ></text>
</g>
<g >
<title>msi_vector (9 samples, 0.04%)</title><rect x="1183.7" y="261" width="0.5" height="15.0" fill="rgb(248,65,26)" rx="2" ry="2" />
<text  x="1186.73" y="271.5" ></text>
</g>
<g >
<title>wakeup_any (100 samples, 0.45%)</title><rect x="1120.3" y="53" width="5.3" height="15.0" fill="rgb(212,121,6)" rx="2" ry="2" />
<text  x="1123.28" y="63.5" ></text>
</g>
<g >
<title>et_start (2 samples, 0.01%)</title><rect x="1186.8" y="229" width="0.1" height="15.0" fill="rgb(213,72,0)" rx="2" ry="2" />
<text  x="1189.81" y="239.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (6 samples, 0.03%)</title><rect x="641.2" y="117" width="0.3" height="15.0" fill="rgb(239,78,15)" rx="2" ry="2" />
<text  x="644.23" y="127.5" ></text>
</g>
<g >
<title>intr_execute_handlers (532 samples, 2.39%)</title><rect x="1156.0" y="277" width="28.2" height="15.0" fill="rgb(223,151,40)" rx="2" ry="2" />
<text  x="1158.96" y="287.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (563 samples, 2.53%)</title><rect x="1125.6" y="149" width="29.9" height="15.0" fill="rgb(215,152,41)" rx="2" ry="2" />
<text  x="1128.65" y="159.5" >ne..</text>
</g>
<g >
<title>sleepq_signal (5 samples, 0.02%)</title><rect x="71.2" y="181" width="0.3" height="15.0" fill="rgb(254,5,26)" rx="2" ry="2" />
<text  x="74.22" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (8,198 samples, 36.89%)</title><rect x="172.3" y="165" width="435.3" height="15.0" fill="rgb(228,138,53)" rx="2" ry="2" />
<text  x="175.32" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>drain_ring_lockless (7 samples, 0.03%)</title><rect x="1118.5" y="69" width="0.4" height="15.0" fill="rgb(226,60,28)" rx="2" ry="2" />
<text  x="1121.53" y="79.5" ></text>
</g>
<g >
<title>lapic_handle_timer (83 samples, 0.37%)</title><rect x="1185.6" y="277" width="4.4" height="15.0" fill="rgb(223,159,31)" rx="2" ry="2" />
<text  x="1188.59" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (23 samples, 0.10%)</title><rect x="19.9" y="37" width="1.3" height="15.0" fill="rgb(225,119,49)" rx="2" ry="2" />
<text  x="22.93" y="47.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (46 samples, 0.21%)</title><rect x="1115.9" y="229" width="2.5" height="15.0" fill="rgb(224,144,12)" rx="2" ry="2" />
<text  x="1118.93" y="239.5" ></text>
</g>
<g >
<title>lapic_et_start (4 samples, 0.02%)</title><rect x="1189.3" y="229" width="0.2" height="15.0" fill="rgb(244,36,6)" rx="2" ry="2" />
<text  x="1192.26" y="239.5" ></text>
</g>
<g >
<title>ip_input (563 samples, 2.53%)</title><rect x="1125.6" y="133" width="29.9" height="15.0" fill="rgb(248,36,24)" rx="2" ry="2" />
<text  x="1128.65" y="143.5" >ip..</text>
</g>
<g >
<title>cache_alloc (103 samples, 0.46%)</title><rect x="636.1" y="165" width="5.4" height="15.0" fill="rgb(216,84,29)" rx="2" ry="2" />
<text  x="639.08" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (133 samples, 0.60%)</title><rect x="1118.5" y="213" width="7.1" height="15.0" fill="rgb(242,128,23)" rx="2" ry="2" />
<text  x="1121.53" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (563 samples, 2.53%)</title><rect x="1125.6" y="181" width="29.9" height="15.0" fill="rgb(218,147,34)" rx="2" ry="2" />
<text  x="1128.65" y="191.5" >et..</text>
</g>
<g >
<title>loadtimer (2 samples, 0.01%)</title><rect x="1189.5" y="229" width="0.1" height="15.0" fill="rgb(231,63,8)" rx="2" ry="2" />
<text  x="1192.47" y="239.5" ></text>
</g>
<g >
<title>iflib_encap (3,341 samples, 15.03%)</title><rect x="914.1" y="181" width="177.4" height="15.0" fill="rgb(208,56,33)" rx="2" ry="2" />
<text  x="917.10" y="191.5" >iflib_encap</text>
</g>
<g >
<title>tc_ticktock (5 samples, 0.02%)</title><rect x="1189.0" y="213" width="0.3" height="15.0" fill="rgb(239,208,52)" rx="2" ry="2" />
<text  x="1191.99" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (14 samples, 0.06%)</title><rect x="72.5" y="213" width="0.8" height="15.0" fill="rgb(222,11,39)" rx="2" ry="2" />
<text  x="75.55" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (7,214 samples, 32.46%)</title><rect x="216.7" y="133" width="383.0" height="15.0" fill="rgb(239,105,13)" rx="2" ry="2" />
<text  x="219.66" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>lock_delay (3 samples, 0.01%)</title><rect x="47.9" y="213" width="0.1" height="15.0" fill="rgb(211,185,40)" rx="2" ry="2" />
<text  x="50.86" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (7 samples, 0.03%)</title><rect x="847.8" y="181" width="0.4" height="15.0" fill="rgb(223,203,32)" rx="2" ry="2" />
<text  x="850.78" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (25 samples, 0.11%)</title><rect x="19.8" y="213" width="1.4" height="15.0" fill="rgb(206,120,17)" rx="2" ry="2" />
<text  x="22.82" y="223.5" ></text>
</g>
<g >
<title>if_getsoftc (42 samples, 0.19%)</title><rect x="437.3" y="37" width="2.2" height="15.0" fill="rgb(219,119,11)" rx="2" ry="2" />
<text  x="440.28" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (13,203 samples, 59.41%)</title><rect x="73.3" y="213" width="701.0" height="15.0" fill="rgb(241,38,8)" rx="2" ry="2" />
<text  x="76.29" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>spinlock_enter (14 samples, 0.06%)</title><rect x="1177.8" y="181" width="0.8" height="15.0" fill="rgb(228,113,25)" rx="2" ry="2" />
<text  x="1180.84" y="191.5" ></text>
</g>
<g >
<title>ithread_loop (10 samples, 0.04%)</title><rect x="1115.3" y="261" width="0.6" height="15.0" fill="rgb(246,147,51)" rx="2" ry="2" />
<text  x="1118.34" y="271.5" ></text>
</g>
<g >
<title>vm_page_zone_import (7 samples, 0.03%)</title><rect x="1155.5" y="69" width="0.4" height="15.0" fill="rgb(250,32,23)" rx="2" ry="2" />
<text  x="1158.54" y="79.5" ></text>
</g>
<g >
<title>m_pkthdr_init (5 samples, 0.02%)</title><rect x="775.7" y="213" width="0.3" height="15.0" fill="rgb(223,131,1)" rx="2" ry="2" />
<text  x="778.73" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (7 samples, 0.03%)</title><rect x="1118.5" y="53" width="0.4" height="15.0" fill="rgb(240,203,51)" rx="2" ry="2" />
<text  x="1121.53" y="63.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (6 samples, 0.03%)</title><rect x="47.8" y="229" width="0.3" height="15.0" fill="rgb(234,169,12)" rx="2" ry="2" />
<text  x="50.75" y="239.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (22 samples, 0.10%)</title><rect x="773.2" y="197" width="1.1" height="15.0" fill="rgb(250,144,47)" rx="2" ry="2" />
<text  x="776.18" y="207.5" ></text>
</g>
<g >
<title>iflib_fl_refill (996 samples, 4.48%)</title><rect x="609.3" y="197" width="52.9" height="15.0" fill="rgb(220,221,22)" rx="2" ry="2" />
<text  x="612.32" y="207.5" >iflib..</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (5 samples, 0.02%)</title><rect x="641.5" y="181" width="0.3" height="15.0" fill="rgb(251,159,41)" rx="2" ry="2" />
<text  x="644.55" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (1,774 samples, 7.98%)</title><rect x="377.8" y="69" width="94.2" height="15.0" fill="rgb(222,224,35)" rx="2" ry="2" />
<text  x="380.76" y="79.5" >ether_outpu..</text>
</g>
<g >
<title>mac_ifnet_check_transmit (103 samples, 0.46%)</title><rect x="472.0" y="69" width="5.4" height="15.0" fill="rgb(218,170,26)" rx="2" ry="2" />
<text  x="474.95" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (5 samples, 0.02%)</title><rect x="1103.8" y="197" width="0.2" height="15.0" fill="rgb(245,33,32)" rx="2" ry="2" />
<text  x="1106.77" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (370 samples, 1.66%)</title><rect x="1035.3" y="133" width="19.7" height="15.0" fill="rgb(225,154,28)" rx="2" ry="2" />
<text  x="1038.33" y="143.5" ></text>
</g>
<g >
<title>drain_ring_lockless (2 samples, 0.01%)</title><rect x="19.8" y="85" width="0.1" height="15.0" fill="rgb(214,14,35)" rx="2" ry="2" />
<text  x="22.82" y="95.5" ></text>
</g>
<g >
<title>cache_alloc_retry (108 samples, 0.49%)</title><rect x="635.8" y="181" width="5.7" height="15.0" fill="rgb(216,198,19)" rx="2" ry="2" />
<text  x="638.81" y="191.5" ></text>
</g>
<g >
<title>tc_windup (4 samples, 0.02%)</title><rect x="1189.0" y="197" width="0.3" height="15.0" fill="rgb(217,119,27)" rx="2" ry="2" />
<text  x="1192.04" y="207.5" ></text>
</g>
<g >
<title>binuptime (7 samples, 0.03%)</title><rect x="1186.0" y="245" width="0.4" height="15.0" fill="rgb(207,203,38)" rx="2" ry="2" />
<text  x="1189.02" y="255.5" ></text>
</g>
<g >
<title>ether_demux (7,609 samples, 34.24%)</title><rect x="195.7" y="149" width="404.0" height="15.0" fill="rgb(215,69,23)" rx="2" ry="2" />
<text  x="198.68" y="159.5" >ether_demux</text>
</g>
<g >
<title>rxd_frag_to_sd (843 samples, 3.79%)</title><rect x="728.4" y="197" width="44.8" height="15.0" fill="rgb(247,89,51)" rx="2" ry="2" />
<text  x="731.42" y="207.5" >rxd_..</text>
</g>
<g >
<title>netisr_dispatch (30 samples, 0.13%)</title><rect x="215.1" y="133" width="1.6" height="15.0" fill="rgb(248,165,33)" rx="2" ry="2" />
<text  x="218.07" y="143.5" ></text>
</g>
<g >
<title>sleepq_release (9 samples, 0.04%)</title><rect x="1114.3" y="213" width="0.5" height="15.0" fill="rgb(252,140,45)" rx="2" ry="2" />
<text  x="1117.28" y="223.5" ></text>
</g>
<g >
<title>softclock (9 samples, 0.04%)</title><rect x="1115.4" y="245" width="0.5" height="15.0" fill="rgb(218,220,3)" rx="2" ry="2" />
<text  x="1118.40" y="255.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (26 samples, 0.12%)</title><rect x="1118.9" y="53" width="1.4" height="15.0" fill="rgb(246,121,48)" rx="2" ry="2" />
<text  x="1121.90" y="63.5" ></text>
</g>
<g >
<title>ether_output (25 samples, 0.11%)</title><rect x="19.8" y="133" width="1.4" height="15.0" fill="rgb(240,90,16)" rx="2" ry="2" />
<text  x="22.82" y="143.5" ></text>
</g>
<g >
<title>atkbd_timeout (9 samples, 0.04%)</title><rect x="1115.4" y="213" width="0.5" height="15.0" fill="rgb(240,107,26)" rx="2" ry="2" />
<text  x="1118.40" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.02%)</title><rect x="1179.2" y="197" width="0.2" height="15.0" fill="rgb(237,7,18)" rx="2" ry="2" />
<text  x="1182.17" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (41 samples, 0.18%)</title><rect x="1176.4" y="197" width="2.2" height="15.0" fill="rgb(229,49,31)" rx="2" ry="2" />
<text  x="1179.41" y="207.5" ></text>
</g>
<g >
<title>doreti (29 samples, 0.13%)</title><rect x="21.2" y="277" width="1.5" height="15.0" fill="rgb(240,83,35)" rx="2" ry="2" />
<text  x="24.15" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (11 samples, 0.05%)</title><rect x="1114.8" y="213" width="0.5" height="15.0" fill="rgb(218,178,34)" rx="2" ry="2" />
<text  x="1117.76" y="223.5" ></text>
</g>
<g >
<title>uma_zfree_arg (375 samples, 1.69%)</title><rect x="894.2" y="133" width="19.9" height="15.0" fill="rgb(252,87,22)" rx="2" ry="2" />
<text  x="897.19" y="143.5" ></text>
</g>
<g >
<title>ip_findroute (1,600 samples, 7.20%)</title><rect x="514.8" y="85" width="84.9" height="15.0" fill="rgb(226,208,13)" rx="2" ry="2" />
<text  x="517.75" y="95.5" >ip_findro..</text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.02%)</title><rect x="1114.0" y="197" width="0.3" height="15.0" fill="rgb(249,116,50)" rx="2" ry="2" />
<text  x="1117.02" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (570 samples, 2.56%)</title><rect x="1125.6" y="277" width="30.3" height="15.0" fill="rgb(250,54,0)" rx="2" ry="2" />
<text  x="1128.65" y="287.5" >gt..</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (670 samples, 3.01%)</title><rect x="1019.7" y="165" width="35.5" height="15.0" fill="rgb(214,83,25)" rx="2" ry="2" />
<text  x="1022.66" y="175.5" >bus..</text>
</g>
<g >
<title>arpresolve (621 samples, 2.79%)</title><rect x="344.8" y="69" width="33.0" height="15.0" fill="rgb(242,194,34)" rx="2" ry="2" />
<text  x="347.78" y="79.5" >ar..</text>
</g>
<g >
<title>cache_alloc (7 samples, 0.03%)</title><rect x="1155.5" y="85" width="0.4" height="15.0" fill="rgb(238,74,10)" rx="2" ry="2" />
<text  x="1158.54" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (25 samples, 0.11%)</title><rect x="19.8" y="229" width="1.4" height="15.0" fill="rgb(218,173,32)" rx="2" ry="2" />
<text  x="22.82" y="239.5" ></text>
</g>
<g >
<title>swi_sched (3 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(205,166,54)" rx="2" ry="2" />
<text  x="1192.84" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (13 samples, 0.06%)</title><rect x="61.3" y="197" width="0.7" height="15.0" fill="rgb(233,187,50)" rx="2" ry="2" />
<text  x="64.29" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (33 samples, 0.15%)</title><rect x="912.3" y="117" width="1.8" height="15.0" fill="rgb(233,198,27)" rx="2" ry="2" />
<text  x="915.35" y="127.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (5 samples, 0.02%)</title><rect x="640.7" y="69" width="0.3" height="15.0" fill="rgb(225,110,28)" rx="2" ry="2" />
<text  x="643.70" y="79.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (11 samples, 0.05%)</title><rect x="640.4" y="85" width="0.6" height="15.0" fill="rgb(252,53,23)" rx="2" ry="2" />
<text  x="643.38" y="95.5" ></text>
</g>
<g >
<title>ether_input (133 samples, 0.60%)</title><rect x="1118.5" y="229" width="7.1" height="15.0" fill="rgb(238,13,48)" rx="2" ry="2" />
<text  x="1121.53" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (128 samples, 0.58%)</title><rect x="65.8" y="197" width="6.7" height="15.0" fill="rgb(243,15,16)" rx="2" ry="2" />
<text  x="68.75" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (7 samples, 0.03%)</title><rect x="1119.9" y="37" width="0.4" height="15.0" fill="rgb(209,74,0)" rx="2" ry="2" />
<text  x="1122.91" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (208 samples, 0.94%)</title><rect x="1127.5" y="37" width="11.0" height="15.0" fill="rgb(225,201,39)" rx="2" ry="2" />
<text  x="1130.45" y="47.5" ></text>
</g>
<g >
<title>pagezero_erms (27 samples, 0.12%)</title><rect x="637.9" y="101" width="1.5" height="15.0" fill="rgb(253,182,51)" rx="2" ry="2" />
<text  x="640.94" y="111.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (480 samples, 2.16%)</title><rect x="411.8" y="37" width="25.5" height="15.0" fill="rgb(211,186,42)" rx="2" ry="2" />
<text  x="414.79" y="47.5" >g..</text>
</g>
<g >
<title>uma_small_alloc (50 samples, 0.22%)</title><rect x="637.5" y="117" width="2.7" height="15.0" fill="rgb(213,122,24)" rx="2" ry="2" />
<text  x="640.51" y="127.5" ></text>
</g>
<g >
<title>ether_output_frame (133 samples, 0.60%)</title><rect x="1118.5" y="101" width="7.1" height="15.0" fill="rgb(244,43,8)" rx="2" ry="2" />
<text  x="1121.53" y="111.5" ></text>
</g>
<g >
<title>timekeep_push_vdso (3 samples, 0.01%)</title><rect x="1189.1" y="181" width="0.2" height="15.0" fill="rgb(245,65,15)" rx="2" ry="2" />
<text  x="1192.10" y="191.5" ></text>
</g>
<g >
<title>in_lltable_lookup (271 samples, 1.22%)</title><rect x="360.4" y="53" width="14.4" height="15.0" fill="rgb(248,70,44)" rx="2" ry="2" />
<text  x="363.39" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (59 samples, 0.27%)</title><rect x="62.0" y="197" width="3.1" height="15.0" fill="rgb(222,13,24)" rx="2" ry="2" />
<text  x="64.98" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (134 samples, 0.60%)</title><rect x="1118.5" y="277" width="7.1" height="15.0" fill="rgb(212,48,38)" rx="2" ry="2" />
<text  x="1121.53" y="287.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (2 samples, 0.01%)</title><rect x="1172.2" y="213" width="0.1" height="15.0" fill="rgb(207,179,16)" rx="2" ry="2" />
<text  x="1175.16" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch (22 samples, 0.10%)</title><rect x="154.5" y="181" width="1.2" height="15.0" fill="rgb(238,23,50)" rx="2" ry="2" />
<text  x="157.53" y="191.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (12 samples, 0.05%)</title><rect x="65.1" y="197" width="0.7" height="15.0" fill="rgb(211,202,35)" rx="2" ry="2" />
<text  x="68.12" y="207.5" ></text>
</g>
<g >
<title>pmc_hook_handler (34 samples, 0.15%)</title><rect x="1187.2" y="213" width="1.8" height="15.0" fill="rgb(210,138,52)" rx="2" ry="2" />
<text  x="1190.19" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (7 samples, 0.03%)</title><rect x="645.4" y="181" width="0.3" height="15.0" fill="rgb(213,127,34)" rx="2" ry="2" />
<text  x="648.37" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (20,578 samples, 92.60%)</title><rect x="22.7" y="261" width="1092.6" height="15.0" fill="rgb(221,48,17)" rx="2" ry="2" />
<text  x="25.69" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>netisr_dispatch_src (133 samples, 0.60%)</title><rect x="1118.5" y="165" width="7.1" height="15.0" fill="rgb(209,174,33)" rx="2" ry="2" />
<text  x="1121.53" y="175.5" ></text>
</g>
<g >
<title>m_free (482 samples, 2.17%)</title><rect x="888.5" y="149" width="25.6" height="15.0" fill="rgb(233,165,34)" rx="2" ry="2" />
<text  x="891.51" y="159.5" >m..</text>
</g>
<g >
<title>pmc_process_samples (30 samples, 0.13%)</title><rect x="1187.4" y="197" width="1.6" height="15.0" fill="rgb(211,149,53)" rx="2" ry="2" />
<text  x="1190.40" y="207.5" ></text>
</g>
<g >
<title>zone_import (94 samples, 0.42%)</title><rect x="636.6" y="149" width="4.9" height="15.0" fill="rgb(236,150,48)" rx="2" ry="2" />
<text  x="639.56" y="159.5" ></text>
</g>
<g >
<title>spinlock_exit (295 samples, 1.33%)</title><rect x="1138.5" y="37" width="15.7" height="15.0" fill="rgb(219,214,54)" rx="2" ry="2" />
<text  x="1141.49" y="47.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (11 samples, 0.05%)</title><rect x="641.0" y="133" width="0.5" height="15.0" fill="rgb(250,215,26)" rx="2" ry="2" />
<text  x="643.97" y="143.5" ></text>
</g>
<g >
<title>ip_input (25 samples, 0.11%)</title><rect x="19.8" y="165" width="1.4" height="15.0" fill="rgb(231,60,30)" rx="2" ry="2" />
<text  x="22.82" y="175.5" ></text>
</g>
<g >
<title>zone_import (7 samples, 0.03%)</title><rect x="1155.5" y="165" width="0.4" height="15.0" fill="rgb(214,157,3)" rx="2" ry="2" />
<text  x="1158.54" y="175.5" ></text>
</g>
<g >
<title>ether_output_frame (25 samples, 0.11%)</title><rect x="19.8" y="117" width="1.4" height="15.0" fill="rgb(227,192,39)" rx="2" ry="2" />
<text  x="22.82" y="127.5" ></text>
</g>
<g >
<title>_task_fn_rx (25 samples, 0.11%)</title><rect x="19.8" y="277" width="1.4" height="15.0" fill="rgb(253,174,48)" rx="2" ry="2" />
<text  x="22.82" y="287.5" ></text>
</g>
<g >
<title>drain_ring_lockless (6,018 samples, 27.08%)</title><rect x="779.3" y="213" width="319.6" height="15.0" fill="rgb(248,3,19)" rx="2" ry="2" />
<text  x="782.34" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>if_inc_counter (17 samples, 0.08%)</title><rect x="608.4" y="197" width="0.9" height="15.0" fill="rgb(249,143,41)" rx="2" ry="2" />
<text  x="611.42" y="207.5" ></text>
</g>
<g >
<title>_bus_dmamap_load_mbuf_sg (546 samples, 2.46%)</title><rect x="1026.0" y="149" width="29.0" height="15.0" fill="rgb(208,191,10)" rx="2" ry="2" />
<text  x="1028.98" y="159.5" >_b..</text>
</g>
<g >
<title>iflib_if_transmit (563 samples, 2.53%)</title><rect x="1125.6" y="69" width="29.9" height="15.0" fill="rgb(248,46,8)" rx="2" ry="2" />
<text  x="1128.65" y="79.5" >if..</text>
</g>
<g >
<title>ether_output_frame (563 samples, 2.53%)</title><rect x="1125.6" y="85" width="29.9" height="15.0" fill="rgb(226,63,43)" rx="2" ry="2" />
<text  x="1128.65" y="95.5" >et..</text>
</g>
<g >
<title>iflib_encap (6 samples, 0.03%)</title><rect x="1118.5" y="37" width="0.3" height="15.0" fill="rgb(222,119,26)" rx="2" ry="2" />
<text  x="1121.53" y="47.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (37 samples, 0.17%)</title><rect x="45.8" y="229" width="2.0" height="15.0" fill="rgb(220,57,9)" rx="2" ry="2" />
<text  x="48.79" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (563 samples, 2.53%)</title><rect x="1125.6" y="53" width="29.9" height="15.0" fill="rgb(221,170,42)" rx="2" ry="2" />
<text  x="1128.65" y="63.5" >gr..</text>
</g>
<g >
<title>intr_event_handle (427 samples, 1.92%)</title><rect x="1161.1" y="261" width="22.6" height="15.0" fill="rgb(217,95,10)" rx="2" ry="2" />
<text  x="1164.06" y="271.5" >i..</text>
</g>
<g >
<title>_rxq_refill_cb (3 samples, 0.01%)</title><rect x="635.5" y="165" width="0.2" height="15.0" fill="rgb(253,226,47)" rx="2" ry="2" />
<text  x="638.50" y="175.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (46 samples, 0.21%)</title><rect x="1115.9" y="213" width="2.5" height="15.0" fill="rgb(237,44,8)" rx="2" ry="2" />
<text  x="1118.93" y="223.5" ></text>
</g>
<g >
<title>memcmp (67 samples, 0.30%)</title><rect x="603.7" y="149" width="3.5" height="15.0" fill="rgb(216,78,24)" rx="2" ry="2" />
<text  x="606.69" y="159.5" ></text>
</g>
<g >
<title>cache_alloc (10 samples, 0.04%)</title><rect x="639.6" y="69" width="0.5" height="15.0" fill="rgb(208,177,27)" rx="2" ry="2" />
<text  x="642.58" y="79.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (611 samples, 2.75%)</title><rect x="439.5" y="37" width="32.5" height="15.0" fill="rgb(207,170,25)" rx="2" ry="2" />
<text  x="442.51" y="47.5" >if..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (26 samples, 0.12%)</title><rect x="774.3" y="213" width="1.4" height="15.0" fill="rgb(218,151,42)" rx="2" ry="2" />
<text  x="777.35" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (134 samples, 0.60%)</title><rect x="1118.5" y="245" width="7.1" height="15.0" fill="rgb(240,186,51)" rx="2" ry="2" />
<text  x="1121.53" y="255.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (5 samples, 0.02%)</title><rect x="1188.5" y="181" width="0.3" height="15.0" fill="rgb(239,43,16)" rx="2" ry="2" />
<text  x="1191.51" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (683 samples, 3.07%)</title><rect x="1055.2" y="165" width="36.3" height="15.0" fill="rgb(211,89,53)" rx="2" ry="2" />
<text  x="1058.24" y="175.5" >ixg..</text>
</g>
<g >
<title>lapic_handle_intr (26 samples, 0.12%)</title><rect x="1184.2" y="277" width="1.4" height="15.0" fill="rgb(236,152,5)" rx="2" ry="2" />
<text  x="1187.21" y="287.5" ></text>
</g>
<g >
<title>memcpy_erms (107 samples, 0.48%)</title><rect x="477.4" y="69" width="5.7" height="15.0" fill="rgb(209,49,40)" rx="2" ry="2" />
<text  x="480.42" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (7 samples, 0.03%)</title><rect x="775.4" y="197" width="0.3" height="15.0" fill="rgb(254,153,3)" rx="2" ry="2" />
<text  x="778.36" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (133 samples, 0.60%)</title><rect x="1118.5" y="133" width="7.1" height="15.0" fill="rgb(252,94,2)" rx="2" ry="2" />
<text  x="1121.53" y="143.5" ></text>
</g>
<g >
<title>wakeup (115 samples, 0.52%)</title><rect x="1109.2" y="229" width="6.1" height="15.0" fill="rgb(218,90,25)" rx="2" ry="2" />
<text  x="1112.24" y="239.5" ></text>
</g>
<g >
<title>statclock (3 samples, 0.01%)</title><rect x="1189.7" y="229" width="0.1" height="15.0" fill="rgb(216,170,2)" rx="2" ry="2" />
<text  x="1192.68" y="239.5" ></text>
</g>
<g >
<title>ether_demux (133 samples, 0.60%)</title><rect x="1118.5" y="181" width="7.1" height="15.0" fill="rgb(249,69,49)" rx="2" ry="2" />
<text  x="1121.53" y="191.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (70 samples, 0.31%)</title><rect x="1099.0" y="213" width="3.7" height="15.0" fill="rgb(220,153,14)" rx="2" ry="2" />
<text  x="1101.99" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (25 samples, 0.11%)</title><rect x="19.8" y="261" width="1.4" height="15.0" fill="rgb(230,103,22)" rx="2" ry="2" />
<text  x="22.82" y="271.5" ></text>
</g>
<g >
<title>tsc_get_config (2 samples, 0.01%)</title><rect x="1188.9" y="181" width="0.1" height="15.0" fill="rgb(216,198,52)" rx="2" ry="2" />
<text  x="1191.88" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.02%)</title><rect x="728.2" y="197" width="0.2" height="15.0" fill="rgb(248,103,33)" rx="2" ry="2" />
<text  x="731.15" y="207.5" ></text>
</g>
<g >
<title>keg_alloc_slab (7 samples, 0.03%)</title><rect x="1155.5" y="149" width="0.4" height="15.0" fill="rgb(247,131,45)" rx="2" ry="2" />
<text  x="1158.54" y="159.5" ></text>
</g>
<g >
<title>cpu_idle (47 samples, 0.21%)</title><rect x="1115.9" y="245" width="2.5" height="15.0" fill="rgb(217,193,16)" rx="2" ry="2" />
<text  x="1118.87" y="255.5" ></text>
</g>
<g >
<title>ether_demux (25 samples, 0.11%)</title><rect x="19.8" y="197" width="1.4" height="15.0" fill="rgb(236,126,5)" rx="2" ry="2" />
<text  x="22.82" y="207.5" ></text>
</g>
<g >
<title>bus_dmamap_load (6 samples, 0.03%)</title><rect x="635.5" y="181" width="0.3" height="15.0" fill="rgb(236,159,0)" rx="2" ry="2" />
<text  x="638.50" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (563 samples, 2.53%)</title><rect x="1125.6" y="197" width="29.9" height="15.0" fill="rgb(239,208,2)" rx="2" ry="2" />
<text  x="1128.65" y="207.5" >ne..</text>
</g>
<g >
<title>Xtimerint (3 samples, 0.01%)</title><rect x="19.7" y="277" width="0.1" height="15.0" fill="rgb(237,146,34)" rx="2" ry="2" />
<text  x="22.66" y="287.5" ></text>
</g>
<g >
<title>zone_alloc_item (15 samples, 0.07%)</title><rect x="640.2" y="117" width="0.8" height="15.0" fill="rgb(230,16,22)" rx="2" ry="2" />
<text  x="643.17" y="127.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (10 samples, 0.04%)</title><rect x="1098.4" y="197" width="0.5" height="15.0" fill="rgb(246,205,34)" rx="2" ry="2" />
<text  x="1101.35" y="207.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (105 samples, 0.47%)</title><rect x="14.1" y="277" width="5.6" height="15.0" fill="rgb(209,208,25)" rx="2" ry="2" />
<text  x="17.09" y="287.5" ></text>
</g>
<g >
<title>ether_output (563 samples, 2.53%)</title><rect x="1125.6" y="101" width="29.9" height="15.0" fill="rgb(254,68,20)" rx="2" ry="2" />
<text  x="1128.65" y="111.5" >et..</text>
</g>
<g >
<title>kbdc_data_ready (9 samples, 0.04%)</title><rect x="1115.4" y="197" width="0.5" height="15.0" fill="rgb(248,227,25)" rx="2" ry="2" />
<text  x="1118.40" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (23 samples, 0.10%)</title><rect x="19.9" y="53" width="1.3" height="15.0" fill="rgb(220,210,16)" rx="2" ry="2" />
<text  x="22.93" y="63.5" ></text>
</g>
<g >
<title>vm_page_alloc_domain_after (7 samples, 0.03%)</title><rect x="1155.5" y="117" width="0.4" height="15.0" fill="rgb(220,84,3)" rx="2" ry="2" />
<text  x="1158.54" y="127.5" ></text>
</g>
<g >
<title>ether_input (8,751 samples, 39.38%)</title><rect x="143.0" y="197" width="464.6" height="15.0" fill="rgb(217,220,34)" rx="2" ry="2" />
<text  x="145.96" y="207.5" >ether_input</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (5 samples, 0.02%)</title><rect x="1055.0" y="149" width="0.2" height="15.0" fill="rgb(209,185,34)" rx="2" ry="2" />
<text  x="1057.97" y="159.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (38 samples, 0.17%)</title><rect x="910.3" y="117" width="2.0" height="15.0" fill="rgb(227,88,24)" rx="2" ry="2" />
<text  x="913.33" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (570 samples, 2.56%)</title><rect x="1125.6" y="261" width="30.3" height="15.0" fill="rgb(251,10,49)" rx="2" ry="2" />
<text  x="1128.65" y="271.5" >gt..</text>
</g>
<g >
<title>bounce_bus_dmamap_complete (13 samples, 0.06%)</title><rect x="1019.0" y="165" width="0.7" height="15.0" fill="rgb(239,5,4)" rx="2" ry="2" />
<text  x="1021.97" y="175.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (1,216 samples, 5.47%)</title><rect x="849.5" y="181" width="64.6" height="15.0" fill="rgb(231,125,42)" rx="2" ry="2" />
<text  x="852.53" y="191.5" >iflib_c..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (392 samples, 1.76%)</title><rect x="51.7" y="213" width="20.8" height="15.0" fill="rgb(248,68,30)" rx="2" ry="2" />
<text  x="54.74" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (15 samples, 0.07%)</title><rect x="70.3" y="165" width="0.8" height="15.0" fill="rgb(213,48,41)" rx="2" ry="2" />
<text  x="73.32" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (182 samples, 0.82%)</title><rect x="662.2" y="197" width="9.7" height="15.0" fill="rgb(213,41,2)" rx="2" ry="2" />
<text  x="665.20" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (19 samples, 0.09%)</title><rect x="1179.4" y="197" width="1.0" height="15.0" fill="rgb(219,172,48)" rx="2" ry="2" />
<text  x="1182.38" y="207.5" ></text>
</g>
<g >
<title>pmap_kextract (40 samples, 0.18%)</title><rect x="1052.8" y="117" width="2.2" height="15.0" fill="rgb(208,54,1)" rx="2" ry="2" />
<text  x="1055.85" y="127.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (17 samples, 0.08%)</title><rect x="1182.0" y="213" width="0.9" height="15.0" fill="rgb(231,58,24)" rx="2" ry="2" />
<text  x="1184.98" y="223.5" ></text>
</g>
<g >
<title>ip_tryforward (6,412 samples, 28.85%)</title><rect x="259.2" y="101" width="340.5" height="15.0" fill="rgb(254,124,9)" rx="2" ry="2" />
<text  x="262.24" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ip_tryforward (563 samples, 2.53%)</title><rect x="1125.6" y="117" width="29.9" height="15.0" fill="rgb(244,221,2)" rx="2" ry="2" />
<text  x="1128.65" y="127.5" >ip..</text>
</g>
<g >
<title>_epoch_enter_preempt (30 samples, 0.13%)</title><rect x="44.2" y="229" width="1.6" height="15.0" fill="rgb(237,69,49)" rx="2" ry="2" />
<text  x="47.20" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (13,722 samples, 61.75%)</title><rect x="48.1" y="229" width="728.6" height="15.0" fill="rgb(212,52,44)" rx="2" ry="2" />
<text  x="51.12" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>uma_small_alloc (7 samples, 0.03%)</title><rect x="1155.5" y="133" width="0.4" height="15.0" fill="rgb(219,176,48)" rx="2" ry="2" />
<text  x="1158.54" y="143.5" ></text>
</g>
<g >
<title>m_freem (543 samples, 2.44%)</title><rect x="885.3" y="165" width="28.8" height="15.0" fill="rgb(209,47,22)" rx="2" ry="2" />
<text  x="888.27" y="175.5" >m_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (20,565 samples, 92.54%)</title><rect x="23.4" y="245" width="1091.9" height="15.0" fill="rgb(247,229,0)" rx="2" ry="2" />
<text  x="26.38" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>iflib_fast_intr (357 samples, 1.61%)</title><rect x="1163.9" y="245" width="19.0" height="15.0" fill="rgb(235,132,38)" rx="2" ry="2" />
<text  x="1166.93" y="255.5" ></text>
</g>
<g >
<title>ether_input (25 samples, 0.11%)</title><rect x="19.8" y="245" width="1.4" height="15.0" fill="rgb(239,82,20)" rx="2" ry="2" />
<text  x="22.82" y="255.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (5 samples, 0.02%)</title><rect x="637.2" y="117" width="0.3" height="15.0" fill="rgb(226,15,32)" rx="2" ry="2" />
<text  x="640.25" y="127.5" ></text>
</g>
<g >
<title>acpi_cpu_idle_mwait (46 samples, 0.21%)</title><rect x="1115.9" y="197" width="2.5" height="15.0" fill="rgb(239,62,18)" rx="2" ry="2" />
<text  x="1118.93" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (570 samples, 2.56%)</title><rect x="1125.6" y="229" width="30.3" height="15.0" fill="rgb(234,69,30)" rx="2" ry="2" />
<text  x="1128.65" y="239.5" >if..</text>
</g>
<g >
<title>netisr_dispatch_src (8,511 samples, 38.30%)</title><rect x="155.7" y="181" width="451.9" height="15.0" fill="rgb(236,131,1)" rx="2" ry="2" />
<text  x="158.70" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.02%)</title><rect x="1124.7" y="37" width="0.2" height="15.0" fill="rgb(211,174,24)" rx="2" ry="2" />
<text  x="1127.69" y="47.5" ></text>
</g>
<g >
<title>keg_alloc_slab (78 samples, 0.35%)</title><rect x="636.8" y="133" width="4.2" height="15.0" fill="rgb(230,125,15)" rx="2" ry="2" />
<text  x="639.82" y="143.5" ></text>
</g>
<g >
<title>m_pkthdr_init (161 samples, 0.72%)</title><rect x="696.3" y="197" width="8.6" height="15.0" fill="rgb(221,51,14)" rx="2" ry="2" />
<text  x="699.35" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (23 samples, 0.10%)</title><rect x="19.9" y="85" width="1.3" height="15.0" fill="rgb(211,120,20)" rx="2" ry="2" />
<text  x="22.93" y="95.5" ></text>
</g>
<g >
<title>if_getdrvflags (14 samples, 0.06%)</title><rect x="607.7" y="197" width="0.7" height="15.0" fill="rgb(235,107,18)" rx="2" ry="2" />
<text  x="610.67" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (48 samples, 0.22%)</title><rect x="1104.0" y="229" width="2.6" height="15.0" fill="rgb(207,127,20)" rx="2" ry="2" />
<text  x="1107.03" y="239.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (14 samples, 0.06%)</title><rect x="1154.2" y="37" width="0.7" height="15.0" fill="rgb(210,139,13)" rx="2" ry="2" />
<text  x="1157.16" y="47.5" ></text>
</g>
<g >
<title>lradix4_lookup (1,214 samples, 5.46%)</title><rect x="535.2" y="53" width="64.5" height="15.0" fill="rgb(234,134,25)" rx="2" ry="2" />
<text  x="538.25" y="63.5" >lradix4..</text>
</g>
<g >
<title>handleevents (68 samples, 0.31%)</title><rect x="1186.4" y="245" width="3.6" height="15.0" fill="rgb(207,120,41)" rx="2" ry="2" />
<text  x="1189.39" y="255.5" ></text>
</g>
<g >
<title>hardclock (44 samples, 0.20%)</title><rect x="1186.9" y="229" width="2.4" height="15.0" fill="rgb(212,109,17)" rx="2" ry="2" />
<text  x="1189.92" y="239.5" ></text>
</g>
<g >
<title>iflib_get_ifp (24 samples, 0.11%)</title><rect x="695.1" y="181" width="1.2" height="15.0" fill="rgb(232,57,34)" rx="2" ry="2" />
<text  x="698.07" y="191.5" ></text>
</g>
<g >
<title>sleepq_lock (81 samples, 0.36%)</title><rect x="1120.3" y="37" width="4.3" height="15.0" fill="rgb(221,7,30)" rx="2" ry="2" />
<text  x="1123.28" y="47.5" ></text>
</g>
<g >
<title>iflib_get_softc (3 samples, 0.01%)</title><rect x="1103.6" y="197" width="0.2" height="15.0" fill="rgb(226,220,8)" rx="2" ry="2" />
<text  x="1106.61" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (460 samples, 2.07%)</title><rect x="671.9" y="197" width="24.4" height="15.0" fill="rgb(253,138,34)" rx="2" ry="2" />
<text  x="674.92" y="207.5" >i..</text>
</g>
<g >
<title>mb_ctor_mbuf (88 samples, 0.40%)</title><rect x="657.5" y="165" width="4.7" height="15.0" fill="rgb(220,1,15)" rx="2" ry="2" />
<text  x="660.53" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (50 samples, 0.22%)</title><rect x="1106.6" y="229" width="2.6" height="15.0" fill="rgb(234,126,28)" rx="2" ry="2" />
<text  x="1109.58" y="239.5" ></text>
</g>
<g >
<title>_rm_runlock (81 samples, 0.36%)</title><rect x="510.4" y="69" width="4.4" height="15.0" fill="rgb(215,87,31)" rx="2" ry="2" />
<text  x="513.45" y="79.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (3 samples, 0.01%)</title><rect x="61.1" y="197" width="0.2" height="15.0" fill="rgb(235,95,5)" rx="2" ry="2" />
<text  x="64.13" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (7 samples, 0.03%)</title><rect x="607.2" y="149" width="0.4" height="15.0" fill="rgb(226,63,0)" rx="2" ry="2" />
<text  x="610.25" y="159.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.01%)</title><rect x="1124.6" y="37" width="0.1" height="15.0" fill="rgb(220,41,36)" rx="2" ry="2" />
<text  x="1127.58" y="47.5" ></text>
</g>
<g >
<title>zone_import (15 samples, 0.07%)</title><rect x="640.2" y="101" width="0.8" height="15.0" fill="rgb(228,168,36)" rx="2" ry="2" />
<text  x="643.17" y="111.5" ></text>
</g>
<g >
<title>timercb (79 samples, 0.36%)</title><rect x="1185.8" y="261" width="4.2" height="15.0" fill="rgb(245,145,51)" rx="2" ry="2" />
<text  x="1188.81" y="271.5" ></text>
</g>
<g >
<title>ip_tryforward (25 samples, 0.11%)</title><rect x="19.8" y="149" width="1.4" height="15.0" fill="rgb(232,73,14)" rx="2" ry="2" />
<text  x="22.82" y="159.5" ></text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.03%)</title><rect x="1155.5" y="101" width="0.4" height="15.0" fill="rgb(252,45,4)" rx="2" ry="2" />
<text  x="1158.54" y="111.5" ></text>
</g>
<g >
<title>lock_delay (4 samples, 0.02%)</title><rect x="641.3" y="101" width="0.2" height="15.0" fill="rgb(253,109,22)" rx="2" ry="2" />
<text  x="644.34" y="111.5" ></text>
</g>
<g >
<title>ip_input (6,969 samples, 31.36%)</title><rect x="229.7" y="117" width="370.0" height="15.0" fill="rgb(205,159,8)" rx="2" ry="2" />
<text  x="232.67" y="127.5" >ip_input</text>
</g>
<g >
<title>memcpy_erms (372 samples, 1.67%)</title><rect x="708.4" y="197" width="19.8" height="15.0" fill="rgb(218,33,52)" rx="2" ry="2" />
<text  x="711.40" y="207.5" ></text>
</g>
<g >
<title>sched_idletd (48 samples, 0.22%)</title><rect x="1115.9" y="261" width="2.5" height="15.0" fill="rgb(206,43,42)" rx="2" ry="2" />
<text  x="1118.87" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (46 samples, 0.21%)</title><rect x="1111.8" y="213" width="2.5" height="15.0" fill="rgb(252,25,42)" rx="2" ry="2" />
<text  x="1114.84" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (134 samples, 0.60%)</title><rect x="1118.5" y="261" width="7.1" height="15.0" fill="rgb(226,56,24)" rx="2" ry="2" />
<text  x="1121.53" y="271.5" ></text>
</g>
<g >
<title>ip_input (133 samples, 0.60%)</title><rect x="1118.5" y="149" width="7.1" height="15.0" fill="rgb(239,91,17)" rx="2" ry="2" />
<text  x="1121.53" y="159.5" ></text>
</g>
<g >
<title>_task_fn_rx (570 samples, 2.56%)</title><rect x="1125.6" y="245" width="30.3" height="15.0" fill="rgb(254,60,10)" rx="2" ry="2" />
<text  x="1128.65" y="255.5" >_t..</text>
</g>
<g >
<title>spinlock_enter (32 samples, 0.14%)</title><rect x="1172.3" y="213" width="1.7" height="15.0" fill="rgb(235,53,23)" rx="2" ry="2" />
<text  x="1175.27" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (93 samples, 0.42%)</title><rect x="66.2" y="181" width="4.9" height="15.0" fill="rgb(208,27,48)" rx="2" ry="2" />
<text  x="69.18" y="191.5" ></text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.03%)</title><rect x="1155.5" y="197" width="0.4" height="15.0" fill="rgb(220,18,24)" rx="2" ry="2" />
<text  x="1158.54" y="207.5" ></text>
</g>
<g >
<title>memmove_erms (56 samples, 0.25%)</title><rect x="374.8" y="53" width="3.0" height="15.0" fill="rgb(233,36,8)" rx="2" ry="2" />
<text  x="377.78" y="63.5" ></text>
</g>
<g >
<title>lock_delay (7 samples, 0.03%)</title><rect x="1155.5" y="37" width="0.4" height="15.0" fill="rgb(218,43,30)" rx="2" ry="2" />
<text  x="1158.54" y="47.5" ></text>
</g>
<g >
<title>Xapic_isr1 (77 samples, 0.35%)</title><rect x="10.0" y="277" width="4.1" height="15.0" fill="rgb(218,132,16)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>native_lapic_eoi (14 samples, 0.06%)</title><rect x="1183.0" y="245" width="0.7" height="15.0" fill="rgb(228,74,32)" rx="2" ry="2" />
<text  x="1185.99" y="255.5" ></text>
</g>
<g >
<title>if_inc_counter (26 samples, 0.12%)</title><rect x="848.2" y="181" width="1.3" height="15.0" fill="rgb(234,44,9)" rx="2" ry="2" />
<text  x="851.15" y="191.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (7 samples, 0.03%)</title><rect x="1175.5" y="213" width="0.4" height="15.0" fill="rgb(232,129,24)" rx="2" ry="2" />
<text  x="1178.50" y="223.5" ></text>
</g>
<g >
<title>ether_input (563 samples, 2.53%)</title><rect x="1125.6" y="213" width="29.9" height="15.0" fill="rgb(219,160,37)" rx="2" ry="2" />
<text  x="1128.65" y="223.5" >et..</text>
</g>
</g>
</svg>
