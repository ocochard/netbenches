<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>grouptaskqueue_enqueue (461 samples, 2.07%)</title><rect x="368.9" y="37" width="24.4" height="15.0" fill="rgb(206,50,35)" rx="2" ry="2" />
<text  x="371.88" y="47.5" >g..</text>
</g>
<g >
<title>_task_fn_rx (128 samples, 0.57%)</title><rect x="1115.8" y="261" width="6.7" height="15.0" fill="rgb(217,199,29)" rx="2" ry="2" />
<text  x="1118.76" y="271.5" ></text>
</g>
<g >
<title>softclock (9 samples, 0.04%)</title><rect x="1112.5" y="245" width="0.5" height="15.0" fill="rgb(251,37,13)" rx="2" ry="2" />
<text  x="1115.47" y="255.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (553 samples, 2.48%)</title><rect x="1122.5" y="197" width="29.3" height="15.0" fill="rgb(231,186,28)" rx="2" ry="2" />
<text  x="1125.54" y="207.5" >ne..</text>
</g>
<g >
<title>spinlock_exit (17 samples, 0.08%)</title><rect x="1121.6" y="37" width="0.9" height="15.0" fill="rgb(206,108,0)" rx="2" ry="2" />
<text  x="1124.63" y="47.5" ></text>
</g>
<g >
<title>cpu_idle_acpi (47 samples, 0.21%)</title><rect x="1113.1" y="229" width="2.4" height="15.0" fill="rgb(243,110,5)" rx="2" ry="2" />
<text  x="1116.06" y="239.5" ></text>
</g>
<g >
<title>ether_input (553 samples, 2.48%)</title><rect x="1122.5" y="213" width="29.3" height="15.0" fill="rgb(252,224,12)" rx="2" ry="2" />
<text  x="1125.54" y="223.5" >et..</text>
</g>
<g >
<title>binuptime (9 samples, 0.04%)</title><rect x="1184.9" y="245" width="0.5" height="15.0" fill="rgb(206,43,52)" rx="2" ry="2" />
<text  x="1187.92" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (55 samples, 0.25%)</title><rect x="1103.7" y="229" width="2.9" height="15.0" fill="rgb(221,50,9)" rx="2" ry="2" />
<text  x="1106.68" y="239.5" ></text>
</g>
<g >
<title>iap_get_config (4 samples, 0.02%)</title><rect x="1188.4" y="181" width="0.2" height="15.0" fill="rgb(217,33,40)" rx="2" ry="2" />
<text  x="1191.41" y="191.5" ></text>
</g>
<g >
<title>mb_ctor_mbuf (86 samples, 0.39%)</title><rect x="655.6" y="165" width="4.5" height="15.0" fill="rgb(235,13,30)" rx="2" ry="2" />
<text  x="658.58" y="175.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (16 samples, 0.07%)</title><rect x="637.1" y="133" width="0.8" height="15.0" fill="rgb(234,48,43)" rx="2" ry="2" />
<text  x="640.10" y="143.5" ></text>
</g>
<g >
<title>ip6_findroute (1,679 samples, 7.53%)</title><rect x="506.0" y="85" width="88.9" height="15.0" fill="rgb(209,118,9)" rx="2" ry="2" />
<text  x="508.98" y="95.5" >ip6_findro..</text>
</g>
<g >
<title>Xapic_isr1 (60 samples, 0.27%)</title><rect x="10.0" y="277" width="3.2" height="15.0" fill="rgb(219,92,14)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>loadtimer (3 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.2" height="15.0" fill="rgb(244,54,36)" rx="2" ry="2" />
<text  x="1192.63" y="239.5" ></text>
</g>
<g >
<title>memcmp (7 samples, 0.03%)</title><rect x="505.6" y="69" width="0.4" height="15.0" fill="rgb(229,118,49)" rx="2" ry="2" />
<text  x="508.61" y="79.5" ></text>
</g>
<g >
<title>cpu_search_highest (2 samples, 0.01%)</title><rect x="1115.5" y="213" width="0.2" height="15.0" fill="rgb(248,128,15)" rx="2" ry="2" />
<text  x="1118.55" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (34 samples, 0.15%)</title><rect x="1173.3" y="213" width="1.8" height="15.0" fill="rgb(247,103,29)" rx="2" ry="2" />
<text  x="1176.27" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (6 samples, 0.03%)</title><rect x="1094.9" y="197" width="0.4" height="15.0" fill="rgb(226,131,13)" rx="2" ry="2" />
<text  x="1097.95" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (19 samples, 0.09%)</title><rect x="1180.8" y="213" width="1.0" height="15.0" fill="rgb(253,68,41)" rx="2" ry="2" />
<text  x="1183.79" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (16 samples, 0.07%)</title><rect x="68.8" y="181" width="0.8" height="15.0" fill="rgb(234,138,8)" rx="2" ry="2" />
<text  x="71.78" y="191.5" ></text>
</g>
<g >
<title>cache_alloc_retry (121 samples, 0.54%)</title><rect x="631.5" y="181" width="6.4" height="15.0" fill="rgb(245,17,26)" rx="2" ry="2" />
<text  x="634.53" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (14 samples, 0.06%)</title><rect x="19.5" y="69" width="0.7" height="15.0" fill="rgb(232,195,15)" rx="2" ry="2" />
<text  x="22.48" y="79.5" ></text>
</g>
<g >
<title>vm_page_zone_import (5 samples, 0.02%)</title><rect x="636.2" y="53" width="0.3" height="15.0" fill="rgb(240,63,18)" rx="2" ry="2" />
<text  x="639.25" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (553 samples, 2.48%)</title><rect x="1122.5" y="149" width="29.3" height="15.0" fill="rgb(216,93,40)" rx="2" ry="2" />
<text  x="1125.54" y="159.5" >ne..</text>
</g>
<g >
<title>iflib_if_transmit (128 samples, 0.57%)</title><rect x="1115.8" y="85" width="6.7" height="15.0" fill="rgb(224,200,44)" rx="2" ry="2" />
<text  x="1118.76" y="95.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (4 samples, 0.02%)</title><rect x="636.9" y="69" width="0.2" height="15.0" fill="rgb(207,116,39)" rx="2" ry="2" />
<text  x="639.88" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (8 samples, 0.04%)</title><rect x="1100.5" y="197" width="0.4" height="15.0" fill="rgb(240,134,4)" rx="2" ry="2" />
<text  x="1103.45" y="207.5" ></text>
</g>
<g >
<title>ether_demux (7,597 samples, 34.09%)</title><rect x="192.6" y="149" width="402.3" height="15.0" fill="rgb(229,193,19)" rx="2" ry="2" />
<text  x="195.59" y="159.5" >ether_demux</text>
</g>
<g >
<title>netisr_dispatch (15 samples, 0.07%)</title><rect x="151.5" y="181" width="0.8" height="15.0" fill="rgb(209,157,44)" rx="2" ry="2" />
<text  x="154.55" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (14 samples, 0.06%)</title><rect x="19.5" y="181" width="0.7" height="15.0" fill="rgb(207,222,18)" rx="2" ry="2" />
<text  x="22.48" y="191.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (33 samples, 0.15%)</title><rect x="772.0" y="197" width="1.7" height="15.0" fill="rgb(231,71,1)" rx="2" ry="2" />
<text  x="774.97" y="207.5" ></text>
</g>
<g >
<title>sleepq_release (5 samples, 0.02%)</title><rect x="1121.1" y="37" width="0.3" height="15.0" fill="rgb(251,124,0)" rx="2" ry="2" />
<text  x="1124.11" y="47.5" ></text>
</g>
<g >
<title>cache_alloc_retry (7 samples, 0.03%)</title><rect x="636.1" y="85" width="0.4" height="15.0" fill="rgb(229,87,23)" rx="2" ry="2" />
<text  x="639.14" y="95.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (14 samples, 0.06%)</title><rect x="19.5" y="229" width="0.7" height="15.0" fill="rgb(226,21,48)" rx="2" ry="2" />
<text  x="22.48" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (3 samples, 0.01%)</title><rect x="637.9" y="181" width="0.2" height="15.0" fill="rgb(209,128,49)" rx="2" ry="2" />
<text  x="640.94" y="191.5" ></text>
</g>
<g >
<title>intr_event_handle (480 samples, 2.15%)</title><rect x="1157.3" y="261" width="25.4" height="15.0" fill="rgb(209,58,49)" rx="2" ry="2" />
<text  x="1160.27" y="271.5" >i..</text>
</g>
<g >
<title>tsc_get_timecount_low_lfence (5 samples, 0.02%)</title><rect x="1185.1" y="229" width="0.3" height="15.0" fill="rgb(230,8,17)" rx="2" ry="2" />
<text  x="1188.13" y="239.5" ></text>
</g>
<g >
<title>wakeup_any (64 samples, 0.29%)</title><rect x="1175.6" y="213" width="3.4" height="15.0" fill="rgb(244,126,34)" rx="2" ry="2" />
<text  x="1178.65" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (5 samples, 0.02%)</title><rect x="1121.4" y="37" width="0.2" height="15.0" fill="rgb(253,37,6)" rx="2" ry="2" />
<text  x="1124.37" y="47.5" ></text>
</g>
<g >
<title>iflib_txq_drain (2 samples, 0.01%)</title><rect x="1115.8" y="53" width="0.1" height="15.0" fill="rgb(214,94,37)" rx="2" ry="2" />
<text  x="1118.76" y="63.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (8 samples, 0.04%)</title><rect x="47.7" y="213" width="0.4" height="15.0" fill="rgb(245,191,27)" rx="2" ry="2" />
<text  x="50.65" y="223.5" ></text>
</g>
<g >
<title>lock_delay (12 samples, 0.05%)</title><rect x="633.8" y="101" width="0.6" height="15.0" fill="rgb(254,0,27)" rx="2" ry="2" />
<text  x="636.81" y="111.5" ></text>
</g>
<g >
<title>lock_delay (3 samples, 0.01%)</title><rect x="636.9" y="53" width="0.2" height="15.0" fill="rgb(250,136,31)" rx="2" ry="2" />
<text  x="639.94" y="63.5" ></text>
</g>
<g >
<title>ip6_tryforward (553 samples, 2.48%)</title><rect x="1122.5" y="117" width="29.3" height="15.0" fill="rgb(240,78,15)" rx="2" ry="2" />
<text  x="1125.54" y="127.5" >ip..</text>
</g>
<g >
<title>m_pkthdr_init (7 samples, 0.03%)</title><rect x="775.1" y="213" width="0.4" height="15.0" fill="rgb(212,31,52)" rx="2" ry="2" />
<text  x="778.10" y="223.5" ></text>
</g>
<g >
<title>cache_free (2 samples, 0.01%)</title><rect x="916.0" y="117" width="0.1" height="15.0" fill="rgb(221,213,51)" rx="2" ry="2" />
<text  x="918.96" y="127.5" ></text>
</g>
<g >
<title>lradix6_lookup (1,280 samples, 5.74%)</title><rect x="527.1" y="53" width="67.8" height="15.0" fill="rgb(246,33,25)" rx="2" ry="2" />
<text  x="530.11" y="63.5" >lradix6..</text>
</g>
<g >
<title>_rm_rlock (239 samples, 1.07%)</title><rect x="487.7" y="69" width="12.7" height="15.0" fill="rgb(250,150,52)" rx="2" ry="2" />
<text  x="490.71" y="79.5" ></text>
</g>
<g >
<title>ether_demux (553 samples, 2.48%)</title><rect x="1122.5" y="165" width="29.3" height="15.0" fill="rgb(238,60,19)" rx="2" ry="2" />
<text  x="1125.54" y="175.5" >et..</text>
</g>
<g >
<title>__mtx_lock_sleep (8 samples, 0.04%)</title><rect x="637.5" y="117" width="0.4" height="15.0" fill="rgb(215,203,27)" rx="2" ry="2" />
<text  x="640.52" y="127.5" ></text>
</g>
<g >
<title>intr_lookup_source (17 samples, 0.08%)</title><rect x="1183.6" y="261" width="0.9" height="15.0" fill="rgb(221,155,29)" rx="2" ry="2" />
<text  x="1186.59" y="271.5" ></text>
</g>
<g >
<title>cpu_idle (49 samples, 0.22%)</title><rect x="1113.0" y="245" width="2.5" height="15.0" fill="rgb(214,150,29)" rx="2" ry="2" />
<text  x="1115.95" y="255.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (28 samples, 0.13%)</title><rect x="1122.5" y="37" width="1.5" height="15.0" fill="rgb(237,4,24)" rx="2" ry="2" />
<text  x="1125.54" y="47.5" ></text>
</g>
<g >
<title>spinlock_exit (6 samples, 0.03%)</title><rect x="1112.1" y="213" width="0.3" height="15.0" fill="rgb(251,165,26)" rx="2" ry="2" />
<text  x="1115.10" y="223.5" ></text>
</g>
<g >
<title>ip6_tryforward (6,377 samples, 28.62%)</title><rect x="257.2" y="101" width="337.7" height="15.0" fill="rgb(247,16,17)" rx="2" ry="2" />
<text  x="260.19" y="111.5" >ip6_tryforward</text>
</g>
<g >
<title>pagezero_erms (25 samples, 0.11%)</title><rect x="634.8" y="101" width="1.3" height="15.0" fill="rgb(238,153,0)" rx="2" ry="2" />
<text  x="637.77" y="111.5" ></text>
</g>
<g >
<title>cpu_search_highest (2 samples, 0.01%)</title><rect x="1115.5" y="245" width="0.2" height="15.0" fill="rgb(253,38,27)" rx="2" ry="2" />
<text  x="1118.55" y="255.5" ></text>
</g>
<g >
<title>spinlock_exit (41 samples, 0.18%)</title><rect x="60.7" y="197" width="2.1" height="15.0" fill="rgb(222,145,25)" rx="2" ry="2" />
<text  x="63.68" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (87 samples, 0.39%)</title><rect x="63.7" y="181" width="4.6" height="15.0" fill="rgb(241,98,5)" rx="2" ry="2" />
<text  x="66.70" y="191.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (331 samples, 1.49%)</title><rect x="642.6" y="181" width="17.5" height="15.0" fill="rgb(247,224,22)" rx="2" ry="2" />
<text  x="645.60" y="191.5" ></text>
</g>
<g >
<title>m_free (475 samples, 2.13%)</title><rect x="894.3" y="149" width="25.2" height="15.0" fill="rgb(217,134,53)" rx="2" ry="2" />
<text  x="897.30" y="159.5" >m..</text>
</g>
<g >
<title>sleepq_release (9 samples, 0.04%)</title><rect x="68.3" y="181" width="0.5" height="15.0" fill="rgb(223,187,7)" rx="2" ry="2" />
<text  x="71.30" y="191.5" ></text>
</g>
<g >
<title>rn_match (1,157 samples, 5.19%)</title><rect x="533.6" y="37" width="61.3" height="15.0" fill="rgb(226,126,10)" rx="2" ry="2" />
<text  x="536.62" y="47.5" >rn_match</text>
</g>
<g >
<title>pmclog_process_callchain (7 samples, 0.03%)</title><rect x="1188.6" y="181" width="0.4" height="15.0" fill="rgb(210,158,36)" rx="2" ry="2" />
<text  x="1191.62" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (52 samples, 0.23%)</title><rect x="1100.9" y="229" width="2.8" height="15.0" fill="rgb(224,146,31)" rx="2" ry="2" />
<text  x="1103.93" y="239.5" ></text>
</g>
<g >
<title>sched_idletd (52 samples, 0.23%)</title><rect x="1113.0" y="261" width="2.7" height="15.0" fill="rgb(215,219,13)" rx="2" ry="2" />
<text  x="1115.95" y="271.5" ></text>
</g>
<g >
<title>native_lapic_eoi (15 samples, 0.07%)</title><rect x="1181.9" y="245" width="0.8" height="15.0" fill="rgb(240,8,43)" rx="2" ry="2" />
<text  x="1184.90" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (655 samples, 2.94%)</title><rect x="1052.4" y="165" width="34.7" height="15.0" fill="rgb(222,220,48)" rx="2" ry="2" />
<text  x="1055.42" y="175.5" >ix..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (14 samples, 0.06%)</title><rect x="19.5" y="85" width="0.7" height="15.0" fill="rgb(235,175,13)" rx="2" ry="2" />
<text  x="22.48" y="95.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1,600 samples, 7.18%)</title><rect x="343.5" y="53" width="84.7" height="15.0" fill="rgb(212,38,18)" rx="2" ry="2" />
<text  x="346.46" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>lock_delay (7 samples, 0.03%)</title><rect x="48.6" y="213" width="0.3" height="15.0" fill="rgb(236,97,4)" rx="2" ry="2" />
<text  x="51.55" y="223.5" ></text>
</g>
<g >
<title>pmc_hook_handler (50 samples, 0.22%)</title><rect x="1186.6" y="213" width="2.7" height="15.0" fill="rgb(245,192,30)" rx="2" ry="2" />
<text  x="1189.61" y="223.5" ></text>
</g>
<g >
<title>mac_ifnet_check_transmit (98 samples, 0.44%)</title><rect x="428.2" y="69" width="5.2" height="15.0" fill="rgb(243,193,21)" rx="2" ry="2" />
<text  x="431.19" y="79.5" ></text>
</g>
<g >
<title>mac_mbuf_init (73 samples, 0.33%)</title><rect x="705.6" y="197" width="3.8" height="15.0" fill="rgb(232,184,25)" rx="2" ry="2" />
<text  x="708.57" y="207.5" ></text>
</g>
<g >
<title>atkbd_timeout (9 samples, 0.04%)</title><rect x="1112.5" y="213" width="0.5" height="15.0" fill="rgb(247,188,53)" rx="2" ry="2" />
<text  x="1115.47" y="223.5" ></text>
</g>
<g >
<title>m_pkthdr_init (192 samples, 0.86%)</title><rect x="695.4" y="197" width="10.2" height="15.0" fill="rgb(247,20,35)" rx="2" ry="2" />
<text  x="698.40" y="207.5" ></text>
</g>
<g >
<title>memmove_erms (95 samples, 0.43%)</title><rect x="468.0" y="53" width="5.0" height="15.0" fill="rgb(210,90,0)" rx="2" ry="2" />
<text  x="471.01" y="63.5" ></text>
</g>
<g >
<title>ether_output (553 samples, 2.48%)</title><rect x="1122.5" y="101" width="29.3" height="15.0" fill="rgb(220,206,27)" rx="2" ry="2" />
<text  x="1125.54" y="111.5" >et..</text>
</g>
<g >
<title>ithread_loop (9 samples, 0.04%)</title><rect x="1112.5" y="261" width="0.5" height="15.0" fill="rgb(244,139,36)" rx="2" ry="2" />
<text  x="1115.47" y="271.5" ></text>
</g>
<g >
<title>ip6_input (128 samples, 0.57%)</title><rect x="1115.8" y="149" width="6.7" height="15.0" fill="rgb(227,189,41)" rx="2" ry="2" />
<text  x="1118.76" y="159.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (19 samples, 0.09%)</title><rect x="633.4" y="117" width="1.0" height="15.0" fill="rgb(227,166,54)" rx="2" ry="2" />
<text  x="636.44" y="127.5" ></text>
</g>
<g >
<title>ether_input (8,739 samples, 39.22%)</title><rect x="139.3" y="197" width="462.7" height="15.0" fill="rgb(253,90,0)" rx="2" ry="2" />
<text  x="142.26" y="207.5" >ether_input</text>
</g>
<g >
<title>in6_localip (622 samples, 2.79%)</title><rect x="473.0" y="85" width="33.0" height="15.0" fill="rgb(223,197,45)" rx="2" ry="2" />
<text  x="476.04" y="95.5" >in..</text>
</g>
<g >
<title>taskqueue_thread_enqueue (11 samples, 0.05%)</title><rect x="1175.1" y="213" width="0.5" height="15.0" fill="rgb(212,128,23)" rx="2" ry="2" />
<text  x="1178.07" y="223.5" ></text>
</g>
<g >
<title>iflib_encap (2 samples, 0.01%)</title><rect x="1115.8" y="37" width="0.1" height="15.0" fill="rgb(225,2,42)" rx="2" ry="2" />
<text  x="1118.76" y="47.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (3 samples, 0.01%)</title><rect x="1171.2" y="213" width="0.2" height="15.0" fill="rgb(235,98,53)" rx="2" ry="2" />
<text  x="1174.20" y="223.5" ></text>
</g>
<g >
<title>memcmp (46 samples, 0.21%)</title><rect x="599.3" y="149" width="2.5" height="15.0" fill="rgb(253,178,15)" rx="2" ry="2" />
<text  x="602.34" y="159.5" ></text>
</g>
<g >
<title>Xtimerint (2 samples, 0.01%)</title><rect x="19.0" y="277" width="0.1" height="15.0" fill="rgb(240,109,50)" rx="2" ry="2" />
<text  x="22.00" y="287.5" ></text>
</g>
<g >
<title>zone_alloc_item (11 samples, 0.05%)</title><rect x="636.5" y="117" width="0.6" height="15.0" fill="rgb(237,155,54)" rx="2" ry="2" />
<text  x="639.51" y="127.5" ></text>
</g>
<g >
<title>cpu_search_highest (2 samples, 0.01%)</title><rect x="1115.5" y="229" width="0.2" height="15.0" fill="rgb(214,108,44)" rx="2" ry="2" />
<text  x="1118.55" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (128 samples, 0.57%)</title><rect x="1115.8" y="277" width="6.7" height="15.0" fill="rgb(235,4,51)" rx="2" ry="2" />
<text  x="1118.76" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.03%)</title><rect x="774.8" y="197" width="0.3" height="15.0" fill="rgb(254,16,10)" rx="2" ry="2" />
<text  x="777.78" y="207.5" ></text>
</g>
<g >
<title>_task_fn_tx (6,125 samples, 27.49%)</title><rect x="776.5" y="229" width="324.4" height="15.0" fill="rgb(252,227,49)" rx="2" ry="2" />
<text  x="779.53" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>iflib_fl_refill (1,061 samples, 4.76%)</title><rect x="603.9" y="197" width="56.2" height="15.0" fill="rgb(206,4,31)" rx="2" ry="2" />
<text  x="606.95" y="207.5" >iflib..</text>
</g>
<g >
<title>msi_vector (2 samples, 0.01%)</title><rect x="1182.7" y="261" width="0.2" height="15.0" fill="rgb(215,206,29)" rx="2" ry="2" />
<text  x="1185.75" y="271.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (128 samples, 0.57%)</title><rect x="1115.8" y="165" width="6.7" height="15.0" fill="rgb(224,206,22)" rx="2" ry="2" />
<text  x="1118.76" y="175.5" ></text>
</g>
<g >
<title>soft_get_config (5 samples, 0.02%)</title><rect x="1189.0" y="181" width="0.3" height="15.0" fill="rgb(221,83,3)" rx="2" ry="2" />
<text  x="1191.99" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (20,593 samples, 92.42%)</title><rect x="22.0" y="261" width="1090.5" height="15.0" fill="rgb(208,136,24)" rx="2" ry="2" />
<text  x="24.97" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>spinlock_enter (36 samples, 0.16%)</title><rect x="1171.4" y="213" width="1.9" height="15.0" fill="rgb(249,14,50)" rx="2" ry="2" />
<text  x="1174.36" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (554 samples, 2.49%)</title><rect x="1122.5" y="277" width="29.4" height="15.0" fill="rgb(209,187,25)" rx="2" ry="2" />
<text  x="1125.54" y="287.5" >gt..</text>
</g>
<g >
<title>_bus_dmamap_load_mbuf_sg (520 samples, 2.33%)</title><rect x="1024.8" y="149" width="27.6" height="15.0" fill="rgb(230,117,37)" rx="2" ry="2" />
<text  x="1027.83" y="159.5" >_..</text>
</g>
<g >
<title>netisr_dispatch_src (8,492 samples, 38.11%)</title><rect x="152.3" y="181" width="449.7" height="15.0" fill="rgb(206,30,25)" rx="2" ry="2" />
<text  x="155.34" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>handleevents (87 samples, 0.39%)</title><rect x="1185.4" y="245" width="4.6" height="15.0" fill="rgb(218,79,24)" rx="2" ry="2" />
<text  x="1188.39" y="255.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (110 samples, 0.49%)</title><rect x="13.2" y="277" width="5.8" height="15.0" fill="rgb(238,11,16)" rx="2" ry="2" />
<text  x="16.18" y="287.5" ></text>
</g>
<g >
<title>sleepq_lock (47 samples, 0.21%)</title><rect x="1109.0" y="213" width="2.5" height="15.0" fill="rgb(221,28,50)" rx="2" ry="2" />
<text  x="1112.03" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (7,270 samples, 32.63%)</title><rect x="209.9" y="133" width="385.0" height="15.0" fill="rgb(210,25,11)" rx="2" ry="2" />
<text  x="212.91" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>uma_zfree_arg (352 samples, 1.58%)</title><rect x="900.8" y="133" width="18.7" height="15.0" fill="rgb(221,9,1)" rx="2" ry="2" />
<text  x="903.81" y="143.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.01%)</title><rect x="1116.9" y="37" width="0.1" height="15.0" fill="rgb(244,134,25)" rx="2" ry="2" />
<text  x="1119.87" y="47.5" ></text>
</g>
<g >
<title>memcmp (42 samples, 0.19%)</title><rect x="465.8" y="37" width="2.2" height="15.0" fill="rgb(223,27,43)" rx="2" ry="2" />
<text  x="468.79" y="47.5" ></text>
</g>
<g >
<title>_task_fn_admin (2 samples, 0.01%)</title><rect x="49.0" y="229" width="0.1" height="15.0" fill="rgb(220,174,45)" rx="2" ry="2" />
<text  x="51.98" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (79 samples, 0.35%)</title><rect x="638.1" y="181" width="4.2" height="15.0" fill="rgb(225,155,41)" rx="2" ry="2" />
<text  x="641.10" y="191.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (1,235 samples, 5.54%)</title><rect x="854.1" y="181" width="65.4" height="15.0" fill="rgb(254,114,27)" rx="2" ry="2" />
<text  x="857.05" y="191.5" >iflib_c..</text>
</g>
<g >
<title>cache_alloc (7 samples, 0.03%)</title><rect x="636.1" y="69" width="0.4" height="15.0" fill="rgb(242,195,33)" rx="2" ry="2" />
<text  x="639.14" y="79.5" ></text>
</g>
<g >
<title>et_start (2 samples, 0.01%)</title><rect x="1185.9" y="229" width="0.1" height="15.0" fill="rgb(244,136,30)" rx="2" ry="2" />
<text  x="1188.87" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (128 samples, 0.57%)</title><rect x="1115.8" y="197" width="6.7" height="15.0" fill="rgb(252,91,15)" rx="2" ry="2" />
<text  x="1118.76" y="207.5" ></text>
</g>
<g >
<title>ip6_input (7,070 samples, 31.73%)</title><rect x="220.5" y="117" width="374.4" height="15.0" fill="rgb(207,188,30)" rx="2" ry="2" />
<text  x="223.50" y="127.5" >ip6_input</text>
</g>
<g >
<title>ether_nh_input (553 samples, 2.48%)</title><rect x="1122.5" y="181" width="29.3" height="15.0" fill="rgb(242,9,17)" rx="2" ry="2" />
<text  x="1125.54" y="191.5" >et..</text>
</g>
<g >
<title>netisr_dispatch_src (128 samples, 0.57%)</title><rect x="1115.8" y="213" width="6.7" height="15.0" fill="rgb(242,173,20)" rx="2" ry="2" />
<text  x="1118.76" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (14 samples, 0.06%)</title><rect x="19.5" y="261" width="0.7" height="15.0" fill="rgb(226,115,13)" rx="2" ry="2" />
<text  x="22.48" y="271.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (335 samples, 1.50%)</title><rect x="1034.6" y="133" width="17.8" height="15.0" fill="rgb(216,139,29)" rx="2" ry="2" />
<text  x="1037.63" y="143.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (77 samples, 0.35%)</title><rect x="1087.1" y="181" width="4.1" height="15.0" fill="rgb(247,157,13)" rx="2" ry="2" />
<text  x="1090.11" y="191.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.03%)</title><rect x="1111.1" y="197" width="0.4" height="15.0" fill="rgb(245,27,31)" rx="2" ry="2" />
<text  x="1114.15" y="207.5" ></text>
</g>
<g >
<title>iflib_txq_drain (5,831 samples, 26.17%)</title><rect x="786.2" y="197" width="308.7" height="15.0" fill="rgb(240,42,18)" rx="2" ry="2" />
<text  x="789.16" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>_mtx_lock_spin_cookie (17 samples, 0.08%)</title><rect x="48.1" y="229" width="0.9" height="15.0" fill="rgb(239,113,15)" rx="2" ry="2" />
<text  x="51.07" y="239.5" ></text>
</g>
<g >
<title>fork_exit (20,655 samples, 92.69%)</title><rect x="22.0" y="277" width="1093.8" height="15.0" fill="rgb(205,189,41)" rx="2" ry="2" />
<text  x="24.97" y="287.5" >fork_exit</text>
</g>
<g >
<title>doreti (33 samples, 0.15%)</title><rect x="20.2" y="277" width="1.8" height="15.0" fill="rgb(254,215,48)" rx="2" ry="2" />
<text  x="23.22" y="287.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (71 samples, 0.32%)</title><rect x="1091.2" y="181" width="3.7" height="15.0" fill="rgb(228,205,45)" rx="2" ry="2" />
<text  x="1094.19" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (8 samples, 0.04%)</title><rect x="1117.0" y="37" width="0.5" height="15.0" fill="rgb(246,193,49)" rx="2" ry="2" />
<text  x="1120.03" y="47.5" ></text>
</g>
<g >
<title>ip6_tryforward (14 samples, 0.06%)</title><rect x="19.5" y="149" width="0.7" height="15.0" fill="rgb(216,156,38)" rx="2" ry="2" />
<text  x="22.48" y="159.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (22 samples, 0.10%)</title><rect x="916.1" y="117" width="1.1" height="15.0" fill="rgb(214,24,12)" rx="2" ry="2" />
<text  x="919.06" y="127.5" ></text>
</g>
<g >
<title>fib6_lookup (1,573 samples, 7.06%)</title><rect x="511.6" y="69" width="83.3" height="15.0" fill="rgb(211,209,52)" rx="2" ry="2" />
<text  x="514.59" y="79.5" >fib6_lookup</text>
</g>
<g >
<title>cache_alloc (115 samples, 0.52%)</title><rect x="631.9" y="165" width="6.0" height="15.0" fill="rgb(246,194,20)" rx="2" ry="2" />
<text  x="634.85" y="175.5" ></text>
</g>
<g >
<title>if_inc_counter (20 samples, 0.09%)</title><rect x="853.0" y="181" width="1.1" height="15.0" fill="rgb(236,86,46)" rx="2" ry="2" />
<text  x="855.99" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (554 samples, 2.49%)</title><rect x="1122.5" y="261" width="29.4" height="15.0" fill="rgb(228,109,7)" rx="2" ry="2" />
<text  x="1125.54" y="271.5" >gt..</text>
</g>
<g >
<title>ether_nh_input (14 samples, 0.06%)</title><rect x="19.5" y="213" width="0.7" height="15.0" fill="rgb(237,224,28)" rx="2" ry="2" />
<text  x="22.48" y="223.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (8 samples, 0.04%)</title><rect x="45.2" y="213" width="0.4" height="15.0" fill="rgb(207,157,30)" rx="2" ry="2" />
<text  x="48.16" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (14 samples, 0.06%)</title><rect x="19.5" y="277" width="0.7" height="15.0" fill="rgb(214,3,13)" rx="2" ry="2" />
<text  x="22.48" y="287.5" ></text>
</g>
<g >
<title>keg_alloc_slab (80 samples, 0.36%)</title><rect x="632.9" y="133" width="4.2" height="15.0" fill="rgb(238,187,43)" rx="2" ry="2" />
<text  x="635.86" y="143.5" ></text>
</g>
<g >
<title>nd6_resolve (656 samples, 2.94%)</title><rect x="438.3" y="69" width="34.7" height="15.0" fill="rgb(225,16,21)" rx="2" ry="2" />
<text  x="441.30" y="79.5" >nd..</text>
</g>
<g >
<title>iflib_rxeof (13,278 samples, 59.59%)</title><rect x="70.6" y="213" width="703.1" height="15.0" fill="rgb(236,193,46)" rx="2" ry="2" />
<text  x="73.58" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>sleepq_lock (14 samples, 0.06%)</title><rect x="19.5" y="53" width="0.7" height="15.0" fill="rgb(238,58,30)" rx="2" ry="2" />
<text  x="22.48" y="63.5" ></text>
</g>
<g >
<title>pmap_kextract (42 samples, 0.19%)</title><rect x="917.2" y="117" width="2.3" height="15.0" fill="rgb(213,193,7)" rx="2" ry="2" />
<text  x="920.23" y="127.5" ></text>
</g>
<g >
<title>kbdc_data_ready (9 samples, 0.04%)</title><rect x="1112.5" y="197" width="0.5" height="15.0" fill="rgb(240,187,50)" rx="2" ry="2" />
<text  x="1115.47" y="207.5" ></text>
</g>
<g >
<title>zone_import (101 samples, 0.45%)</title><rect x="632.6" y="149" width="5.3" height="15.0" fill="rgb(212,152,16)" rx="2" ry="2" />
<text  x="635.59" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch (6 samples, 0.03%)</title><rect x="728.0" y="197" width="0.3" height="15.0" fill="rgb(240,94,20)" rx="2" ry="2" />
<text  x="731.02" y="207.5" ></text>
</g>
<g >
<title>pmc_process_samples (46 samples, 0.21%)</title><rect x="1186.8" y="197" width="2.5" height="15.0" fill="rgb(234,192,5)" rx="2" ry="2" />
<text  x="1189.82" y="207.5" ></text>
</g>
<g >
<title>_task_fn_rx (554 samples, 2.49%)</title><rect x="1122.5" y="245" width="29.4" height="15.0" fill="rgb(209,51,33)" rx="2" ry="2" />
<text  x="1125.54" y="255.5" >_t..</text>
</g>
<g >
<title>ether_input (128 samples, 0.57%)</title><rect x="1115.8" y="229" width="6.7" height="15.0" fill="rgb(206,111,40)" rx="2" ry="2" />
<text  x="1118.76" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (14 samples, 0.06%)</title><rect x="19.5" y="37" width="0.7" height="15.0" fill="rgb(205,124,12)" rx="2" ry="2" />
<text  x="22.48" y="47.5" ></text>
</g>
<g >
<title>_mtx_lock_spin_cookie (30 samples, 0.13%)</title><rect x="1115.9" y="53" width="1.6" height="15.0" fill="rgb(246,46,18)" rx="2" ry="2" />
<text  x="1118.86" y="63.5" ></text>
</g>
<g >
<title>iflib_rxeof (128 samples, 0.57%)</title><rect x="1115.8" y="245" width="6.7" height="15.0" fill="rgb(236,168,18)" rx="2" ry="2" />
<text  x="1118.76" y="255.5" ></text>
</g>
<g >
<title>lock_delay (7 samples, 0.03%)</title><rect x="637.6" y="101" width="0.3" height="15.0" fill="rgb(214,50,3)" rx="2" ry="2" />
<text  x="640.57" y="111.5" ></text>
</g>
<g >
<title>vm_page_alloc_domain_after (8 samples, 0.04%)</title><rect x="636.1" y="101" width="0.4" height="15.0" fill="rgb(230,34,18)" rx="2" ry="2" />
<text  x="639.09" y="111.5" ></text>
</g>
<g >
<title>lock_delay (2 samples, 0.01%)</title><rect x="1171.3" y="197" width="0.1" height="15.0" fill="rgb(240,84,12)" rx="2" ry="2" />
<text  x="1174.25" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (493 samples, 2.21%)</title><rect x="669.3" y="197" width="26.1" height="15.0" fill="rgb(216,183,42)" rx="2" ry="2" />
<text  x="672.29" y="207.5" >i..</text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.01%)</title><rect x="1095.3" y="213" width="0.2" height="15.0" fill="rgb(238,116,10)" rx="2" ry="2" />
<text  x="1098.32" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (6 samples, 0.03%)</title><rect x="642.3" y="181" width="0.3" height="15.0" fill="rgb(227,174,18)" rx="2" ry="2" />
<text  x="645.28" y="191.5" ></text>
</g>
<g >
<title>acpi_cpu_idle_mwait (47 samples, 0.21%)</title><rect x="1113.1" y="197" width="2.4" height="15.0" fill="rgb(209,201,36)" rx="2" ry="2" />
<text  x="1116.06" y="207.5" ></text>
</g>
<g >
<title>in6_lltable_lookup (242 samples, 1.09%)</title><rect x="455.2" y="53" width="12.8" height="15.0" fill="rgb(222,94,14)" rx="2" ry="2" />
<text  x="458.19" y="63.5" ></text>
</g>
<g >
<title>ether_demux (14 samples, 0.06%)</title><rect x="19.5" y="197" width="0.7" height="15.0" fill="rgb(244,102,6)" rx="2" ry="2" />
<text  x="22.48" y="207.5" ></text>
</g>
<g >
<title>sleepq_release (7 samples, 0.03%)</title><rect x="1177.9" y="197" width="0.4" height="15.0" fill="rgb(239,27,49)" rx="2" ry="2" />
<text  x="1180.93" y="207.5" ></text>
</g>
<g >
<title>m_adj (94 samples, 0.42%)</title><rect x="203.9" y="133" width="5.0" height="15.0" fill="rgb(208,29,31)" rx="2" ry="2" />
<text  x="206.92" y="143.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (47 samples, 0.21%)</title><rect x="45.6" y="229" width="2.5" height="15.0" fill="rgb(218,42,45)" rx="2" ry="2" />
<text  x="48.59" y="239.5" ></text>
</g>
<g >
<title>if_inc_counter (13 samples, 0.06%)</title><rect x="603.3" y="197" width="0.6" height="15.0" fill="rgb(229,177,27)" rx="2" ry="2" />
<text  x="606.26" y="207.5" ></text>
</g>
<g >
<title>lapic_handle_timer (104 samples, 0.47%)</title><rect x="1184.5" y="277" width="5.5" height="15.0" fill="rgb(211,208,5)" rx="2" ry="2" />
<text  x="1187.49" y="287.5" ></text>
</g>
<g >
<title>acpi_cpu_idle (47 samples, 0.21%)</title><rect x="1113.1" y="213" width="2.4" height="15.0" fill="rgb(239,7,15)" rx="2" ry="2" />
<text  x="1116.06" y="223.5" ></text>
</g>
<g >
<title>drain_ring_lockless (2 samples, 0.01%)</title><rect x="1115.8" y="69" width="0.1" height="15.0" fill="rgb(220,150,52)" rx="2" ry="2" />
<text  x="1118.76" y="79.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (52 samples, 0.23%)</title><rect x="1179.0" y="229" width="2.8" height="15.0" fill="rgb(223,133,4)" rx="2" ry="2" />
<text  x="1182.04" y="239.5" ></text>
</g>
<g >
<title>zone_import (10 samples, 0.04%)</title><rect x="636.6" y="101" width="0.5" height="15.0" fill="rgb(244,93,47)" rx="2" ry="2" />
<text  x="639.57" y="111.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (553 samples, 2.48%)</title><rect x="1122.5" y="53" width="29.3" height="15.0" fill="rgb(244,51,29)" rx="2" ry="2" />
<text  x="1125.54" y="63.5" >gr..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (315 samples, 1.41%)</title><rect x="875.1" y="165" width="16.7" height="15.0" fill="rgb(208,186,16)" rx="2" ry="2" />
<text  x="878.13" y="175.5" ></text>
</g>
<g >
<title>lock_delay (19 samples, 0.09%)</title><rect x="1115.9" y="37" width="1.0" height="15.0" fill="rgb(211,87,4)" rx="2" ry="2" />
<text  x="1118.86" y="47.5" ></text>
</g>
<g >
<title>ip6_input (14 samples, 0.06%)</title><rect x="19.5" y="165" width="0.7" height="15.0" fill="rgb(238,212,42)" rx="2" ry="2" />
<text  x="22.48" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (259 samples, 1.16%)</title><rect x="1165.3" y="229" width="13.7" height="15.0" fill="rgb(220,104,46)" rx="2" ry="2" />
<text  x="1168.32" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (8,193 samples, 36.77%)</title><rect x="168.2" y="165" width="433.8" height="15.0" fill="rgb(246,171,29)" rx="2" ry="2" />
<text  x="171.18" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>uma_small_alloc (39 samples, 0.18%)</title><rect x="634.4" y="117" width="2.1" height="15.0" fill="rgb(236,180,8)" rx="2" ry="2" />
<text  x="637.45" y="127.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (8 samples, 0.04%)</title><rect x="636.7" y="85" width="0.4" height="15.0" fill="rgb(235,45,46)" rx="2" ry="2" />
<text  x="639.67" y="95.5" ></text>
</g>
<g >
<title>ether_demux (128 samples, 0.57%)</title><rect x="1115.8" y="181" width="6.7" height="15.0" fill="rgb(215,40,17)" rx="2" ry="2" />
<text  x="1118.76" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.02%)</title><rect x="601.8" y="149" width="0.2" height="15.0" fill="rgb(206,181,28)" rx="2" ry="2" />
<text  x="604.77" y="159.5" ></text>
</g>
<g >
<title>ether_input (14 samples, 0.06%)</title><rect x="19.5" y="245" width="0.7" height="15.0" fill="rgb(213,176,23)" rx="2" ry="2" />
<text  x="22.48" y="255.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (5 samples, 0.02%)</title><rect x="22.0" y="245" width="0.2" height="15.0" fill="rgb(211,205,19)" rx="2" ry="2" />
<text  x="24.97" y="255.5" ></text>
</g>
<g >
<title>iflib_fast_intr (395 samples, 1.77%)</title><rect x="1160.9" y="245" width="20.9" height="15.0" fill="rgb(248,152,27)" rx="2" ry="2" />
<text  x="1163.87" y="255.5" ></text>
</g>
<g >
<title>all (22,283 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(216,123,29)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ip6_tryforward (128 samples, 0.57%)</title><rect x="1115.8" y="133" width="6.7" height="15.0" fill="rgb(214,224,53)" rx="2" ry="2" />
<text  x="1118.76" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (20,587 samples, 92.39%)</title><rect x="22.2" y="245" width="1090.2" height="15.0" fill="rgb(242,190,24)" rx="2" ry="2" />
<text  x="25.23" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>rxd_frag_to_sd (824 samples, 3.70%)</title><rect x="728.3" y="197" width="43.7" height="15.0" fill="rgb(222,209,8)" rx="2" ry="2" />
<text  x="731.34" y="207.5" >rxd_..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (126 samples, 0.57%)</title><rect x="1115.9" y="69" width="6.6" height="15.0" fill="rgb(231,158,32)" rx="2" ry="2" />
<text  x="1118.86" y="79.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (26 samples, 0.12%)</title><rect x="773.7" y="213" width="1.4" height="15.0" fill="rgb(210,62,24)" rx="2" ry="2" />
<text  x="776.72" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (553 samples, 2.48%)</title><rect x="1122.5" y="85" width="29.3" height="15.0" fill="rgb(218,104,53)" rx="2" ry="2" />
<text  x="1125.54" y="95.5" >et..</text>
</g>
<g >
<title>netisr_dispatch (19 samples, 0.09%)</title><rect x="208.9" y="133" width="1.0" height="15.0" fill="rgb(220,85,21)" rx="2" ry="2" />
<text  x="211.90" y="143.5" ></text>
</g>
<g >
<title>sleepq_broadcast (31 samples, 0.14%)</title><rect x="1107.4" y="213" width="1.6" height="15.0" fill="rgb(217,2,32)" rx="2" ry="2" />
<text  x="1110.39" y="223.5" ></text>
</g>
<g >
<title>cpu_activeclock (2 samples, 0.01%)</title><rect x="1113.0" y="229" width="0.1" height="15.0" fill="rgb(236,170,19)" rx="2" ry="2" />
<text  x="1115.95" y="239.5" ></text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.02%)</title><rect x="1180.6" y="213" width="0.2" height="15.0" fill="rgb(226,112,16)" rx="2" ry="2" />
<text  x="1183.57" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (32 samples, 0.14%)</title><rect x="1050.7" y="117" width="1.7" height="15.0" fill="rgb(206,34,24)" rx="2" ry="2" />
<text  x="1053.67" y="127.5" ></text>
</g>
<g >
<title>lapic_handle_intr (31 samples, 0.14%)</title><rect x="1182.9" y="277" width="1.6" height="15.0" fill="rgb(243,132,17)" rx="2" ry="2" />
<text  x="1185.85" y="287.5" ></text>
</g>
<g >
<title>if_getsoftc (59 samples, 0.26%)</title><rect x="393.3" y="37" width="3.1" height="15.0" fill="rgb(248,67,18)" rx="2" ry="2" />
<text  x="396.29" y="47.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (10 samples, 0.04%)</title><rect x="62.8" y="197" width="0.6" height="15.0" fill="rgb(238,76,38)" rx="2" ry="2" />
<text  x="65.85" y="207.5" ></text>
</g>
<g >
<title>iflib_encap (3,166 samples, 14.21%)</title><rect x="919.5" y="181" width="167.6" height="15.0" fill="rgb(219,126,21)" rx="2" ry="2" />
<text  x="922.45" y="191.5" >iflib_encap</text>
</g>
<g >
<title>spinlock_enter (211 samples, 0.95%)</title><rect x="1124.1" y="37" width="11.1" height="15.0" fill="rgb(253,28,37)" rx="2" ry="2" />
<text  x="1127.07" y="47.5" ></text>
</g>
<g >
<title>mac_ifnet_create_mbuf (84 samples, 0.38%)</title><rect x="594.9" y="149" width="4.4" height="15.0" fill="rgb(214,186,36)" rx="2" ry="2" />
<text  x="597.89" y="159.5" ></text>
</g>
<g >
<title>sleepq_lock (34 samples, 0.15%)</title><rect x="1176.1" y="197" width="1.8" height="15.0" fill="rgb(249,59,43)" rx="2" ry="2" />
<text  x="1179.13" y="207.5" ></text>
</g>
<g >
<title>hardclock (63 samples, 0.28%)</title><rect x="1186.0" y="229" width="3.3" height="15.0" fill="rgb(225,55,14)" rx="2" ry="2" />
<text  x="1188.98" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (40 samples, 0.18%)</title><rect x="43.5" y="229" width="2.1" height="15.0" fill="rgb(224,220,0)" rx="2" ry="2" />
<text  x="46.47" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (13 samples, 0.06%)</title><rect x="1177.2" y="181" width="0.7" height="15.0" fill="rgb(206,179,52)" rx="2" ry="2" />
<text  x="1180.24" y="191.5" ></text>
</g>
<g >
<title>ether_output (14 samples, 0.06%)</title><rect x="19.5" y="133" width="0.7" height="15.0" fill="rgb(241,19,23)" rx="2" ry="2" />
<text  x="22.48" y="143.5" ></text>
</g>
<g >
<title>intr_execute_handlers (585 samples, 2.63%)</title><rect x="1151.9" y="277" width="31.0" height="15.0" fill="rgb(241,5,28)" rx="2" ry="2" />
<text  x="1154.87" y="287.5" >in..</text>
</g>
<g >
<title>spinlock_enter (10 samples, 0.04%)</title><rect x="67.8" y="165" width="0.5" height="15.0" fill="rgb(231,223,38)" rx="2" ry="2" />
<text  x="70.77" y="175.5" ></text>
</g>
<g >
<title>ether_output (3,295 samples, 14.79%)</title><rect x="298.6" y="85" width="174.4" height="15.0" fill="rgb(236,97,54)" rx="2" ry="2" />
<text  x="301.55" y="95.5" >ether_output</text>
</g>
<g >
<title>_task_fn_rx (13,737 samples, 61.65%)</title><rect x="49.1" y="229" width="727.4" height="15.0" fill="rgb(233,210,41)" rx="2" ry="2" />
<text  x="52.08" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>iflib_rxeof (554 samples, 2.49%)</title><rect x="1122.5" y="229" width="29.4" height="15.0" fill="rgb(214,21,35)" rx="2" ry="2" />
<text  x="1125.54" y="239.5" >if..</text>
</g>
<g >
<title>ip6_input (553 samples, 2.48%)</title><rect x="1122.5" y="133" width="29.3" height="15.0" fill="rgb(216,176,1)" rx="2" ry="2" />
<text  x="1125.54" y="143.5" >ip..</text>
</g>
<g >
<title>ether_output_frame (1,758 samples, 7.89%)</title><rect x="335.1" y="69" width="93.1" height="15.0" fill="rgb(220,209,15)" rx="2" ry="2" />
<text  x="338.09" y="79.5" >ether_outpu..</text>
</g>
<g >
<title>memcpy_erms (351 samples, 1.58%)</title><rect x="709.4" y="197" width="18.6" height="15.0" fill="rgb(228,183,27)" rx="2" ry="2" />
<text  x="712.43" y="207.5" ></text>
</g>
<g >
<title>sleepq_release (11 samples, 0.05%)</title><rect x="1111.5" y="213" width="0.6" height="15.0" fill="rgb(225,191,33)" rx="2" ry="2" />
<text  x="1114.52" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (7 samples, 0.03%)</title><rect x="1151.4" y="37" width="0.4" height="15.0" fill="rgb(216,0,37)" rx="2" ry="2" />
<text  x="1154.45" y="47.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (41 samples, 0.18%)</title><rect x="1098.7" y="213" width="2.2" height="15.0" fill="rgb(237,187,17)" rx="2" ry="2" />
<text  x="1101.71" y="223.5" ></text>
</g>
<g >
<title>netmap_rx_irq (20 samples, 0.09%)</title><rect x="775.5" y="213" width="1.0" height="15.0" fill="rgb(210,103,16)" rx="2" ry="2" />
<text  x="778.47" y="223.5" ></text>
</g>
<g >
<title>ether_output (128 samples, 0.57%)</title><rect x="1115.8" y="117" width="6.7" height="15.0" fill="rgb(253,76,15)" rx="2" ry="2" />
<text  x="1118.76" y="127.5" ></text>
</g>
<g >
<title>Xtimerint_pti (7 samples, 0.03%)</title><rect x="19.1" y="277" width="0.4" height="15.0" fill="rgb(231,117,21)" rx="2" ry="2" />
<text  x="22.11" y="287.5" ></text>
</g>
<g >
<title>m_freem (522 samples, 2.34%)</title><rect x="891.8" y="165" width="27.7" height="15.0" fill="rgb(241,204,16)" rx="2" ry="2" />
<text  x="894.81" y="175.5" >m..</text>
</g>
<g >
<title>ifmp_ring_check_drainage (61 samples, 0.27%)</title><rect x="1095.5" y="213" width="3.2" height="15.0" fill="rgb(227,220,14)" rx="2" ry="2" />
<text  x="1098.48" y="223.5" ></text>
</g>
<g >
<title>softclock_call_cc (9 samples, 0.04%)</title><rect x="1112.5" y="229" width="0.5" height="15.0" fill="rgb(235,19,18)" rx="2" ry="2" />
<text  x="1115.47" y="239.5" ></text>
</g>
<g >
<title>iflib_if_transmit (553 samples, 2.48%)</title><rect x="1122.5" y="69" width="29.3" height="15.0" fill="rgb(241,222,53)" rx="2" ry="2" />
<text  x="1125.54" y="79.5" >if..</text>
</g>
<g >
<title>iflib_if_transmit (14 samples, 0.06%)</title><rect x="19.5" y="101" width="0.7" height="15.0" fill="rgb(237,41,32)" rx="2" ry="2" />
<text  x="22.48" y="111.5" ></text>
</g>
<g >
<title>lapic_et_start (6 samples, 0.03%)</title><rect x="1189.3" y="229" width="0.3" height="15.0" fill="rgb(234,39,38)" rx="2" ry="2" />
<text  x="1192.31" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (18 samples, 0.08%)</title><rect x="69.6" y="213" width="1.0" height="15.0" fill="rgb(244,103,48)" rx="2" ry="2" />
<text  x="72.63" y="223.5" ></text>
</g>
<g >
<title>timercb (98 samples, 0.44%)</title><rect x="1184.8" y="261" width="5.2" height="15.0" fill="rgb(232,214,41)" rx="2" ry="2" />
<text  x="1187.81" y="271.5" ></text>
</g>
<g >
<title>taskqueue_thread_enqueue (17 samples, 0.08%)</title><rect x="1150.5" y="37" width="0.9" height="15.0" fill="rgb(232,72,11)" rx="2" ry="2" />
<text  x="1153.55" y="47.5" ></text>
</g>
<g >
<title>_rm_runlock (99 samples, 0.44%)</title><rect x="500.4" y="69" width="5.2" height="15.0" fill="rgb(232,94,33)" rx="2" ry="2" />
<text  x="503.36" y="79.5" ></text>
</g>
<g >
<title>memcpy_erms (93 samples, 0.42%)</title><rect x="433.4" y="69" width="4.9" height="15.0" fill="rgb(249,67,54)" rx="2" ry="2" />
<text  x="436.38" y="79.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (600 samples, 2.69%)</title><rect x="396.4" y="37" width="31.8" height="15.0" fill="rgb(239,168,33)" rx="2" ry="2" />
<text  x="399.41" y="47.5" >if..</text>
</g>
<g >
<title>if_getdrvflags (22 samples, 0.10%)</title><rect x="602.1" y="197" width="1.2" height="15.0" fill="rgb(217,2,47)" rx="2" ry="2" />
<text  x="605.09" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (173 samples, 0.78%)</title><rect x="660.1" y="197" width="9.2" height="15.0" fill="rgb(235,177,0)" rx="2" ry="2" />
<text  x="663.13" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (128 samples, 0.57%)</title><rect x="1115.8" y="101" width="6.7" height="15.0" fill="rgb(236,225,19)" rx="2" ry="2" />
<text  x="1118.76" y="111.5" ></text>
</g>
<g >
<title>wakeup (110 samples, 0.49%)</title><rect x="1106.6" y="229" width="5.8" height="15.0" fill="rgb(237,93,45)" rx="2" ry="2" />
<text  x="1109.60" y="239.5" ></text>
</g>
<g >
<title>iaf_get_config (2 samples, 0.01%)</title><rect x="1188.3" y="181" width="0.1" height="15.0" fill="rgb(229,13,11)" rx="2" ry="2" />
<text  x="1191.31" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.04%)</title><rect x="852.6" y="181" width="0.4" height="15.0" fill="rgb(220,17,4)" rx="2" ry="2" />
<text  x="855.57" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (289 samples, 1.30%)</title><rect x="1135.2" y="37" width="15.3" height="15.0" fill="rgb(234,149,53)" rx="2" ry="2" />
<text  x="1138.24" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (69 samples, 0.31%)</title><rect x="1117.5" y="37" width="3.6" height="15.0" fill="rgb(206,159,31)" rx="2" ry="2" />
<text  x="1120.45" y="47.5" ></text>
</g>
<g >
<title>drain_ring_lockless (5,969 samples, 26.79%)</title><rect x="779.2" y="213" width="316.1" height="15.0" fill="rgb(218,30,36)" rx="2" ry="2" />
<text  x="782.17" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ether_output_frame (14 samples, 0.06%)</title><rect x="19.5" y="117" width="0.7" height="15.0" fill="rgb(237,39,50)" rx="2" ry="2" />
<text  x="22.48" y="127.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (14 samples, 0.06%)</title><rect x="1017.9" y="165" width="0.7" height="15.0" fill="rgb(212,113,44)" rx="2" ry="2" />
<text  x="1020.90" y="175.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.01%)</title><rect x="1181.8" y="245" width="0.1" height="15.0" fill="rgb(221,207,11)" rx="2" ry="2" />
<text  x="1184.79" y="255.5" ></text>
</g>
<g >
<title>iflib_get_ifp (30 samples, 0.13%)</title><rect x="693.8" y="181" width="1.6" height="15.0" fill="rgb(243,151,31)" rx="2" ry="2" />
<text  x="696.81" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (96 samples, 0.43%)</title><rect x="1117.5" y="53" width="5.0" height="15.0" fill="rgb(243,218,15)" rx="2" ry="2" />
<text  x="1120.45" y="63.5" ></text>
</g>
<g >
<title>iflib_get_softc (5 samples, 0.02%)</title><rect x="774.5" y="197" width="0.3" height="15.0" fill="rgb(250,207,40)" rx="2" ry="2" />
<text  x="777.51" y="207.5" ></text>
</g>
<g >
<title>spinlock_exit (13 samples, 0.06%)</title><rect x="1178.3" y="197" width="0.7" height="15.0" fill="rgb(231,117,46)" rx="2" ry="2" />
<text  x="1181.35" y="207.5" ></text>
</g>
<g >
<title>iflib_get_softc (10 samples, 0.04%)</title><rect x="1099.9" y="197" width="0.6" height="15.0" fill="rgb(247,180,1)" rx="2" ry="2" />
<text  x="1102.92" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (118 samples, 0.53%)</title><rect x="63.4" y="197" width="6.2" height="15.0" fill="rgb(232,84,26)" rx="2" ry="2" />
<text  x="66.38" y="207.5" ></text>
</g>
<g >
<title>vm_phys_alloc_npages (3 samples, 0.01%)</title><rect x="636.4" y="37" width="0.1" height="15.0" fill="rgb(220,55,53)" rx="2" ry="2" />
<text  x="639.35" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (638 samples, 2.86%)</title><rect x="1018.6" y="165" width="33.8" height="15.0" fill="rgb(240,8,38)" rx="2" ry="2" />
<text  x="1021.64" y="175.5" >bu..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (314 samples, 1.41%)</title><rect x="53.0" y="213" width="16.6" height="15.0" fill="rgb(232,225,20)" rx="2" ry="2" />
<text  x="56.00" y="223.5" ></text>
</g>
<g >
<title>spinlock_enter (14 samples, 0.06%)</title><rect x="59.9" y="197" width="0.8" height="15.0" fill="rgb(225,190,5)" rx="2" ry="2" />
<text  x="62.94" y="207.5" ></text>
</g>
</g>
</svg>
