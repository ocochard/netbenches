<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>Xtimerint (1 samples, 0.02%)</title><rect x="28.8" y="277" width="0.3" height="15.0" fill="rgb(245,168,29)" rx="2" ry="2" />
<text  x="31.81" y="287.5" ></text>
</g>
<g >
<title>cache_alloc_retry (8 samples, 0.19%)</title><rect x="786.2" y="181" width="2.2" height="15.0" fill="rgb(222,180,16)" rx="2" ry="2" />
<text  x="789.16" y="191.5" ></text>
</g>
<g >
<title>ether_output (1,373 samples, 32.18%)</title><rect x="313.2" y="85" width="379.7" height="15.0" fill="rgb(235,205,14)" rx="2" ry="2" />
<text  x="316.16" y="95.5" >ether_output</text>
</g>
<g >
<title>pmap_kextract (9 samples, 0.21%)</title><rect x="1011.6" y="37" width="2.5" height="15.0" fill="rgb(249,35,31)" rx="2" ry="2" />
<text  x="1014.59" y="47.5" ></text>
</g>
<g >
<title>ether_input (5 samples, 0.12%)</title><rect x="1123.3" y="261" width="1.4" height="15.0" fill="rgb(218,71,1)" rx="2" ry="2" />
<text  x="1126.34" y="271.5" ></text>
</g>
<g >
<title>handleevents (15 samples, 0.35%)</title><rect x="1185.9" y="245" width="4.1" height="15.0" fill="rgb(208,220,23)" rx="2" ry="2" />
<text  x="1188.85" y="255.5" ></text>
</g>
<g >
<title>doreti (2 samples, 0.05%)</title><rect x="46.2" y="277" width="0.6" height="15.0" fill="rgb(211,207,7)" rx="2" ry="2" />
<text  x="49.24" y="287.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.05%)</title><rect x="977.0" y="197" width="0.6" height="15.0" fill="rgb(253,118,11)" rx="2" ry="2" />
<text  x="980.01" y="207.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (99 samples, 2.32%)</title><rect x="792.5" y="181" width="27.4" height="15.0" fill="rgb(254,25,15)" rx="2" ry="2" />
<text  x="795.52" y="191.5" >u..</text>
</g>
<g >
<title>gtaskqueue_thread_loop (3,365 samples, 78.88%)</title><rect x="46.8" y="261" width="930.8" height="15.0" fill="rgb(206,157,37)" rx="2" ry="2" />
<text  x="49.79" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>m_freem (11 samples, 0.26%)</title><rect x="1020.2" y="37" width="3.0" height="15.0" fill="rgb(240,49,11)" rx="2" ry="2" />
<text  x="1023.16" y="47.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.09%)</title><rect x="1155.7" y="213" width="1.1" height="15.0" fill="rgb(252,164,35)" rx="2" ry="2" />
<text  x="1158.70" y="223.5" ></text>
</g>
<g >
<title>memcmp (15 samples, 0.35%)</title><rect x="748.8" y="149" width="4.2" height="15.0" fill="rgb(238,16,21)" rx="2" ry="2" />
<text  x="751.81" y="159.5" ></text>
</g>
<g >
<title>ether_nh_input (395 samples, 9.26%)</title><rect x="1014.1" y="181" width="109.2" height="15.0" fill="rgb(220,97,37)" rx="2" ry="2" />
<text  x="1017.08" y="191.5" >ether_nh_input</text>
</g>
<g >
<title>ip_tryforward (5 samples, 0.12%)</title><rect x="1123.3" y="165" width="1.4" height="15.0" fill="rgb(241,204,1)" rx="2" ry="2" />
<text  x="1126.34" y="175.5" ></text>
</g>
<g >
<title>_task_fn_tx (17 samples, 0.40%)</title><rect x="964.6" y="229" width="4.7" height="15.0" fill="rgb(229,73,11)" rx="2" ry="2" />
<text  x="967.57" y="239.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (6 samples, 0.14%)</title><rect x="987.0" y="37" width="1.6" height="15.0" fill="rgb(213,80,2)" rx="2" ry="2" />
<text  x="989.97" y="47.5" ></text>
</g>
<g >
<title>ether_demux (5 samples, 0.12%)</title><rect x="1123.3" y="213" width="1.4" height="15.0" fill="rgb(223,48,23)" rx="2" ry="2" />
<text  x="1126.34" y="223.5" ></text>
</g>
<g >
<title>if_getnumadomain (16 samples, 0.38%)</title><rect x="755.7" y="197" width="4.5" height="15.0" fill="rgb(223,56,23)" rx="2" ry="2" />
<text  x="758.73" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (5 samples, 0.12%)</title><rect x="1123.3" y="133" width="1.4" height="15.0" fill="rgb(232,44,11)" rx="2" ry="2" />
<text  x="1126.34" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (61 samples, 1.43%)</title><rect x="29.4" y="229" width="16.8" height="15.0" fill="rgb(208,204,27)" rx="2" ry="2" />
<text  x="32.36" y="239.5" ></text>
</g>
<g >
<title>uma_small_alloc (4 samples, 0.09%)</title><rect x="787.3" y="117" width="1.1" height="15.0" fill="rgb(216,49,38)" rx="2" ry="2" />
<text  x="790.26" y="127.5" ></text>
</g>
<g >
<title>ether_demux (2,115 samples, 49.58%)</title><rect x="163.5" y="149" width="585.0" height="15.0" fill="rgb(206,138,16)" rx="2" ry="2" />
<text  x="166.52" y="159.5" >ether_demux</text>
</g>
<g >
<title>iflib_rxeof (132 samples, 3.09%)</title><rect x="977.6" y="245" width="36.5" height="15.0" fill="rgb(216,38,48)" rx="2" ry="2" />
<text  x="980.57" y="255.5" >ifl..</text>
</g>
<g >
<title>rxd_frag_to_sd (72 samples, 1.69%)</title><rect x="943.0" y="197" width="19.9" height="15.0" fill="rgb(217,46,15)" rx="2" ry="2" />
<text  x="945.99" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (61 samples, 1.43%)</title><rect x="29.4" y="149" width="16.8" height="15.0" fill="rgb(245,210,13)" rx="2" ry="2" />
<text  x="32.36" y="159.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (3 samples, 0.07%)</title><rect x="46.8" y="245" width="0.8" height="15.0" fill="rgb(234,203,14)" rx="2" ry="2" />
<text  x="49.79" y="255.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (6 samples, 0.14%)</title><rect x="55.1" y="229" width="1.6" height="15.0" fill="rgb(229,23,2)" rx="2" ry="2" />
<text  x="58.09" y="239.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (5 samples, 0.12%)</title><rect x="1123.3" y="37" width="1.4" height="15.0" fill="rgb(223,21,49)" rx="2" ry="2" />
<text  x="1126.34" y="47.5" ></text>
</g>
<g >
<title>cache_alloc (8 samples, 0.19%)</title><rect x="786.2" y="165" width="2.2" height="15.0" fill="rgb(212,122,7)" rx="2" ry="2" />
<text  x="789.16" y="175.5" ></text>
</g>
<g >
<title>ip_findroute (153 samples, 3.59%)</title><rect x="706.2" y="85" width="42.3" height="15.0" fill="rgb(219,61,23)" rx="2" ry="2" />
<text  x="709.22" y="95.5" >ip_..</text>
</g>
<g >
<title>ifmp_ring_check_drainage (2 samples, 0.05%)</title><rect x="967.3" y="213" width="0.6" height="15.0" fill="rgb(238,138,4)" rx="2" ry="2" />
<text  x="970.33" y="223.5" ></text>
</g>
<g >
<title>wakeup (12 samples, 0.28%)</title><rect x="974.2" y="229" width="3.4" height="15.0" fill="rgb(225,67,8)" rx="2" ry="2" />
<text  x="977.25" y="239.5" ></text>
</g>
<g >
<title>binuptime (2 samples, 0.05%)</title><rect x="1185.3" y="245" width="0.6" height="15.0" fill="rgb(213,86,46)" rx="2" ry="2" />
<text  x="1188.30" y="255.5" ></text>
</g>
<g >
<title>all (4,266 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(251,141,54)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ip_input (61 samples, 1.43%)</title><rect x="29.4" y="165" width="16.8" height="15.0" fill="rgb(219,225,37)" rx="2" ry="2" />
<text  x="32.36" y="175.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="62.8" y="213" width="0.3" height="15.0" fill="rgb(232,191,46)" rx="2" ry="2" />
<text  x="65.83" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (22 samples, 0.52%)</title><rect x="1014.1" y="37" width="6.1" height="15.0" fill="rgb(232,200,26)" rx="2" ry="2" />
<text  x="1017.08" y="47.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (60 samples, 1.41%)</title><rect x="29.4" y="85" width="16.6" height="15.0" fill="rgb(237,153,5)" rx="2" ry="2" />
<text  x="32.36" y="95.5" ></text>
</g>
<g >
<title>iflib_encap (1 samples, 0.02%)</title><rect x="46.0" y="85" width="0.2" height="15.0" fill="rgb(249,32,5)" rx="2" ry="2" />
<text  x="48.96" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.07%)</title><rect x="59.5" y="197" width="0.8" height="15.0" fill="rgb(214,186,37)" rx="2" ry="2" />
<text  x="62.51" y="207.5" ></text>
</g>
<g >
<title>ip_input (1,981 samples, 46.44%)</title><rect x="200.6" y="117" width="547.9" height="15.0" fill="rgb(225,33,13)" rx="2" ry="2" />
<text  x="203.58" y="127.5" >ip_input</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (33 samples, 0.77%)</title><rect x="1168.1" y="229" width="9.2" height="15.0" fill="rgb(250,9,21)" rx="2" ry="2" />
<text  x="1171.15" y="239.5" ></text>
</g>
<g >
<title>ether_demux (61 samples, 1.43%)</title><rect x="29.4" y="197" width="16.8" height="15.0" fill="rgb(212,143,1)" rx="2" ry="2" />
<text  x="32.36" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.05%)</title><rect x="968.7" y="197" width="0.6" height="15.0" fill="rgb(235,2,21)" rx="2" ry="2" />
<text  x="971.72" y="207.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (395 samples, 9.26%)</title><rect x="1014.1" y="69" width="109.2" height="15.0" fill="rgb(211,68,32)" rx="2" ry="2" />
<text  x="1017.08" y="79.5" >iflib_simple_..</text>
</g>
<g >
<title>ip_input (395 samples, 9.26%)</title><rect x="1014.1" y="133" width="109.2" height="15.0" fill="rgb(222,213,23)" rx="2" ry="2" />
<text  x="1017.08" y="143.5" >ip_input</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="967.1" y="213" width="0.2" height="15.0" fill="rgb(224,100,27)" rx="2" ry="2" />
<text  x="970.06" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (3,360 samples, 78.76%)</title><rect x="48.2" y="245" width="929.4" height="15.0" fill="rgb(219,42,31)" rx="2" ry="2" />
<text  x="51.17" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (4 samples, 0.09%)</title><rect x="787.3" y="101" width="1.1" height="15.0" fill="rgb(249,112,2)" rx="2" ry="2" />
<text  x="790.26" y="111.5" ></text>
</g>
<g >
<title>ether_nh_input (5 samples, 0.12%)</title><rect x="1123.3" y="229" width="1.4" height="15.0" fill="rgb(212,99,44)" rx="2" ry="2" />
<text  x="1126.34" y="239.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (2 samples, 0.05%)</title><rect x="47.6" y="245" width="0.6" height="15.0" fill="rgb(237,149,18)" rx="2" ry="2" />
<text  x="50.62" y="255.5" ></text>
</g>
<g >
<title>ether_output (395 samples, 9.26%)</title><rect x="1014.1" y="101" width="109.2" height="15.0" fill="rgb(219,177,39)" rx="2" ry="2" />
<text  x="1017.08" y="111.5" >ether_output</text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.02%)</title><rect x="684.6" y="53" width="0.3" height="15.0" fill="rgb(254,114,43)" rx="2" ry="2" />
<text  x="687.64" y="63.5" ></text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.02%)</title><rect x="1189.2" y="229" width="0.2" height="15.0" fill="rgb(246,51,4)" rx="2" ry="2" />
<text  x="1192.17" y="239.5" ></text>
</g>
<g >
<title>if_getsoftc (10 samples, 0.23%)</title><rect x="505.7" y="37" width="2.7" height="15.0" fill="rgb(248,124,37)" rx="2" ry="2" />
<text  x="508.68" y="47.5" ></text>
</g>
<g >
<title>iflib_encap (362 samples, 8.49%)</title><rect x="1023.2" y="53" width="100.1" height="15.0" fill="rgb(239,67,24)" rx="2" ry="2" />
<text  x="1026.21" y="63.5" >iflib_encap</text>
</g>
<g >
<title>ether_output (132 samples, 3.09%)</title><rect x="977.6" y="117" width="36.5" height="15.0" fill="rgb(218,146,13)" rx="2" ry="2" />
<text  x="980.57" y="127.5" >eth..</text>
</g>
<g >
<title>netisr_dispatch_src (395 samples, 9.26%)</title><rect x="1014.1" y="149" width="109.2" height="15.0" fill="rgb(221,114,39)" rx="2" ry="2" />
<text  x="1017.08" y="159.5" >netisr_dispat..</text>
</g>
<g >
<title>m_free (60 samples, 1.41%)</title><rect x="29.4" y="53" width="16.6" height="15.0" fill="rgb(207,191,46)" rx="2" ry="2" />
<text  x="32.36" y="63.5" ></text>
</g>
<g >
<title>uma_zfree_arg (55 samples, 1.29%)</title><rect x="30.7" y="37" width="15.3" height="15.0" fill="rgb(220,10,51)" rx="2" ry="2" />
<text  x="33.75" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.09%)</title><rect x="969.5" y="229" width="1.2" height="15.0" fill="rgb(225,68,3)" rx="2" ry="2" />
<text  x="972.55" y="239.5" ></text>
</g>
<g >
<title>arpresolve (113 samples, 2.65%)</title><rect x="358.0" y="69" width="31.2" height="15.0" fill="rgb(225,10,14)" rx="2" ry="2" />
<text  x="360.97" y="79.5" >ar..</text>
</g>
<g >
<title>bsearch4_lookup (75 samples, 1.76%)</title><rect x="712.0" y="69" width="20.8" height="15.0" fill="rgb(219,78,24)" rx="2" ry="2" />
<text  x="715.03" y="79.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (342 samples, 8.02%)</title><rect x="513.4" y="37" width="94.6" height="15.0" fill="rgb(249,154,44)" rx="2" ry="2" />
<text  x="516.42" y="47.5" >iflib_compl..</text>
</g>
<g >
<title>m_adj (19 samples, 0.45%)</title><rect x="181.5" y="133" width="5.3" height="15.0" fill="rgb(225,84,39)" rx="2" ry="2" />
<text  x="184.50" y="143.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (395 samples, 9.26%)</title><rect x="1014.1" y="261" width="109.2" height="15.0" fill="rgb(231,227,7)" rx="2" ry="2" />
<text  x="1017.08" y="271.5" >gtaskqueue_ru..</text>
</g>
<g >
<title>sleepq_lock (10 samples, 0.23%)</title><rect x="1162.6" y="197" width="2.8" height="15.0" fill="rgb(218,202,20)" rx="2" ry="2" />
<text  x="1165.62" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="942.7" y="197" width="0.3" height="15.0" fill="rgb(230,22,29)" rx="2" ry="2" />
<text  x="945.71" y="207.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (2 samples, 0.05%)</title><rect x="962.9" y="197" width="0.6" height="15.0" fill="rgb(210,12,23)" rx="2" ry="2" />
<text  x="965.91" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (55 samples, 1.29%)</title><rect x="1150.2" y="229" width="15.2" height="15.0" fill="rgb(249,163,12)" rx="2" ry="2" />
<text  x="1153.17" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.12%)</title><rect x="1156.8" y="213" width="1.4" height="15.0" fill="rgb(225,121,4)" rx="2" ry="2" />
<text  x="1159.81" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (83 samples, 1.95%)</title><rect x="988.6" y="37" width="23.0" height="15.0" fill="rgb(207,49,5)" rx="2" ry="2" />
<text  x="991.63" y="47.5" >b..</text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (1 samples, 0.02%)</title><rect x="46.0" y="69" width="0.2" height="15.0" fill="rgb(245,96,53)" rx="2" ry="2" />
<text  x="48.96" y="79.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="969.3" y="229" width="0.2" height="15.0" fill="rgb(245,145,19)" rx="2" ry="2" />
<text  x="972.27" y="239.5" ></text>
</g>
<g >
<title>spinlock_exit (13 samples, 0.30%)</title><rect x="970.7" y="229" width="3.5" height="15.0" fill="rgb(209,71,41)" rx="2" ry="2" />
<text  x="973.65" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.07%)</title><rect x="753.0" y="149" width="0.8" height="15.0" fill="rgb(214,200,28)" rx="2" ry="2" />
<text  x="755.96" y="159.5" ></text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.07%)</title><rect x="760.2" y="197" width="0.8" height="15.0" fill="rgb(220,46,51)" rx="2" ry="2" />
<text  x="763.15" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.07%)</title><rect x="1181.4" y="213" width="0.9" height="15.0" fill="rgb(218,178,30)" rx="2" ry="2" />
<text  x="1184.43" y="223.5" ></text>
</g>
<g >
<title>pagezero_erms (4 samples, 0.09%)</title><rect x="787.3" y="85" width="1.1" height="15.0" fill="rgb(243,120,6)" rx="2" ry="2" />
<text  x="790.26" y="95.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (5 samples, 0.12%)</title><rect x="1123.3" y="117" width="1.4" height="15.0" fill="rgb(253,0,31)" rx="2" ry="2" />
<text  x="1126.34" y="127.5" ></text>
</g>
<g >
<title>pmclog_process_callchain (3 samples, 0.07%)</title><rect x="1187.8" y="181" width="0.8" height="15.0" fill="rgb(225,158,44)" rx="2" ry="2" />
<text  x="1190.79" y="191.5" ></text>
</g>
<g >
<title>ip_input (5 samples, 0.12%)</title><rect x="1123.3" y="181" width="1.4" height="15.0" fill="rgb(237,43,1)" rx="2" ry="2" />
<text  x="1126.34" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (5 samples, 0.12%)</title><rect x="118.4" y="181" width="1.4" height="15.0" fill="rgb(243,212,0)" rx="2" ry="2" />
<text  x="121.43" y="191.5" ></text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.02%)</title><rect x="1188.9" y="213" width="0.3" height="15.0" fill="rgb(242,174,48)" rx="2" ry="2" />
<text  x="1191.89" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,292 samples, 53.73%)</title><rect x="119.8" y="181" width="634.0" height="15.0" fill="rgb(235,67,33)" rx="2" ry="2" />
<text  x="122.81" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_output (5 samples, 0.12%)</title><rect x="1123.3" y="149" width="1.4" height="15.0" fill="rgb(217,210,30)" rx="2" ry="2" />
<text  x="1126.34" y="159.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,282 samples, 76.93%)</title><rect x="56.7" y="229" width="907.9" height="15.0" fill="rgb(239,176,23)" rx="2" ry="2" />
<text  x="59.75" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1180.0" y="213" width="0.3" height="15.0" fill="rgb(208,111,12)" rx="2" ry="2" />
<text  x="1183.04" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (27 samples, 0.63%)</title><rect x="677.2" y="37" width="7.4" height="15.0" fill="rgb(215,184,16)" rx="2" ry="2" />
<text  x="680.17" y="47.5" ></text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1187.5" y="181" width="0.3" height="15.0" fill="rgb(233,41,15)" rx="2" ry="2" />
<text  x="1190.51" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (8 samples, 0.19%)</title><rect x="1186.7" y="197" width="2.2" height="15.0" fill="rgb(205,34,38)" rx="2" ry="2" />
<text  x="1189.68" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (395 samples, 9.26%)</title><rect x="1014.1" y="197" width="109.2" height="15.0" fill="rgb(249,184,12)" rx="2" ry="2" />
<text  x="1017.08" y="207.5" >netisr_dispat..</text>
</g>
<g >
<title>ixgbe_isc_txd_encap (301 samples, 7.06%)</title><rect x="1040.1" y="37" width="83.2" height="15.0" fill="rgb(226,183,10)" rx="2" ry="2" />
<text  x="1043.08" y="47.5" >ixgbe_isc..</text>
</g>
<g >
<title>sleepq_broadcast (2 samples, 0.05%)</title><rect x="974.8" y="213" width="0.6" height="15.0" fill="rgb(241,170,44)" rx="2" ry="2" />
<text  x="977.80" y="223.5" ></text>
</g>
<g >
<title>iflib_encap (238 samples, 5.58%)</title><rect x="608.0" y="37" width="65.9" height="15.0" fill="rgb(247,66,11)" rx="2" ry="2" />
<text  x="611.02" y="47.5" >iflib_e..</text>
</g>
<g >
<title>loadtimer (1 samples, 0.02%)</title><rect x="1189.4" y="229" width="0.3" height="15.0" fill="rgb(232,179,25)" rx="2" ry="2" />
<text  x="1192.45" y="239.5" ></text>
</g>
<g >
<title>timercb (20 samples, 0.47%)</title><rect x="1184.5" y="261" width="5.5" height="15.0" fill="rgb(232,100,48)" rx="2" ry="2" />
<text  x="1187.47" y="271.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (5 samples, 0.12%)</title><rect x="1166.8" y="229" width="1.3" height="15.0" fill="rgb(235,58,48)" rx="2" ry="2" />
<text  x="1169.77" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (395 samples, 9.26%)</title><rect x="1014.1" y="229" width="109.2" height="15.0" fill="rgb(240,224,49)" rx="2" ry="2" />
<text  x="1017.08" y="239.5" >iflib_rxeof</text>
</g>
<g >
<title>intr_event_handle (175 samples, 4.10%)</title><rect x="1133.8" y="261" width="48.5" height="15.0" fill="rgb(219,122,18)" rx="2" ry="2" />
<text  x="1136.85" y="271.5" >intr..</text>
</g>
<g >
<title>ether_demux (395 samples, 9.26%)</title><rect x="1014.1" y="165" width="109.2" height="15.0" fill="rgb(238,67,17)" rx="2" ry="2" />
<text  x="1017.08" y="175.5" >ether_demux</text>
</g>
<g >
<title>ether_nh_input (132 samples, 3.09%)</title><rect x="977.6" y="197" width="36.5" height="15.0" fill="rgb(223,207,25)" rx="2" ry="2" />
<text  x="980.57" y="207.5" >eth..</text>
</g>
<g >
<title>ether_nh_input (61 samples, 1.43%)</title><rect x="29.4" y="213" width="16.8" height="15.0" fill="rgb(236,102,8)" rx="2" ry="2" />
<text  x="32.36" y="223.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1188.6" y="181" width="0.3" height="15.0" fill="rgb(235,203,38)" rx="2" ry="2" />
<text  x="1191.62" y="191.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (33 samples, 0.77%)</title><rect x="1014.1" y="53" width="9.1" height="15.0" fill="rgb(227,149,8)" rx="2" ry="2" />
<text  x="1017.08" y="63.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (1 samples, 0.02%)</title><rect x="46.0" y="53" width="0.2" height="15.0" fill="rgb(254,147,32)" rx="2" ry="2" />
<text  x="48.96" y="63.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (18 samples, 0.42%)</title><rect x="1177.3" y="229" width="5.0" height="15.0" fill="rgb(217,159,27)" rx="2" ry="2" />
<text  x="1180.28" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (395 samples, 9.26%)</title><rect x="1014.1" y="245" width="109.2" height="15.0" fill="rgb(217,118,41)" rx="2" ry="2" />
<text  x="1017.08" y="255.5" >_task_fn_rx</text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.09%)</title><rect x="504.6" y="37" width="1.1" height="15.0" fill="rgb(252,170,34)" rx="2" ry="2" />
<text  x="507.57" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (11 samples, 0.26%)</title><rect x="1162.3" y="213" width="3.1" height="15.0" fill="rgb(223,162,48)" rx="2" ry="2" />
<text  x="1165.34" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1_pti (42 samples, 0.98%)</title><rect x="17.2" y="277" width="11.6" height="15.0" fill="rgb(217,170,22)" rx="2" ry="2" />
<text  x="20.19" y="287.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (4 samples, 0.09%)</title><rect x="54.0" y="229" width="1.1" height="15.0" fill="rgb(223,132,50)" rx="2" ry="2" />
<text  x="56.98" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (2,237 samples, 52.44%)</title><rect x="135.0" y="165" width="618.8" height="15.0" fill="rgb(233,50,27)" rx="2" ry="2" />
<text  x="138.03" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.12%)</title><rect x="1123.3" y="197" width="1.4" height="15.0" fill="rgb(211,136,21)" rx="2" ry="2" />
<text  x="1126.34" y="207.5" ></text>
</g>
<g >
<title>intr_execute_handlers (209 samples, 4.90%)</title><rect x="1124.7" y="277" width="57.8" height="15.0" fill="rgb(234,183,33)" rx="2" ry="2" />
<text  x="1127.72" y="287.5" >intr_e..</text>
</g>
<g >
<title>ether_output_frame (395 samples, 9.26%)</title><rect x="1014.1" y="85" width="109.2" height="15.0" fill="rgb(210,57,19)" rx="2" ry="2" />
<text  x="1017.08" y="95.5" >ether_output_..</text>
</g>
<g >
<title>gtaskqueue_run_locked (132 samples, 3.09%)</title><rect x="977.6" y="277" width="36.5" height="15.0" fill="rgb(215,223,52)" rx="2" ry="2" />
<text  x="980.57" y="287.5" >gta..</text>
</g>
<g >
<title>Xtimerint_pti (1 samples, 0.02%)</title><rect x="29.1" y="277" width="0.3" height="15.0" fill="rgb(234,47,31)" rx="2" ry="2" />
<text  x="32.09" y="287.5" ></text>
</g>
<g >
<title>iflib_fl_refill (213 samples, 4.99%)</title><rect x="761.0" y="197" width="58.9" height="15.0" fill="rgb(219,65,42)" rx="2" ry="2" />
<text  x="763.98" y="207.5" >iflib_..</text>
</g>
<g >
<title>if_getcapenable (2 samples, 0.05%)</title><rect x="966.5" y="213" width="0.6" height="15.0" fill="rgb(212,55,16)" rx="2" ry="2" />
<text  x="969.50" y="223.5" ></text>
</g>
<g >
<title>ether_input (395 samples, 9.26%)</title><rect x="1014.1" y="213" width="109.2" height="15.0" fill="rgb(207,70,45)" rx="2" ry="2" />
<text  x="1017.08" y="223.5" >ether_input</text>
</g>
<g >
<title>mb_ctor_mbuf (18 samples, 0.42%)</title><rect x="814.9" y="165" width="5.0" height="15.0" fill="rgb(208,49,54)" rx="2" ry="2" />
<text  x="817.92" y="175.5" ></text>
</g>
<g >
<title>iflib_rxeof (61 samples, 1.43%)</title><rect x="29.4" y="261" width="16.8" height="15.0" fill="rgb(242,129,10)" rx="2" ry="2" />
<text  x="32.36" y="271.5" ></text>
</g>
<g >
<title>ether_demux (132 samples, 3.09%)</title><rect x="977.6" y="181" width="36.5" height="15.0" fill="rgb(235,107,1)" rx="2" ry="2" />
<text  x="980.57" y="191.5" >eth..</text>
</g>
<g >
<title>ether_output_frame (1,069 samples, 25.06%)</title><rect x="389.2" y="69" width="295.7" height="15.0" fill="rgb(248,10,50)" rx="2" ry="2" />
<text  x="392.23" y="79.5" >ether_output_frame</text>
</g>
<g >
<title>in_lltable_lookup (40 samples, 0.94%)</title><rect x="374.3" y="53" width="11.1" height="15.0" fill="rgb(214,129,39)" rx="2" ry="2" />
<text  x="377.29" y="63.5" ></text>
</g>
<g >
<title>tc_windup (1 samples, 0.02%)</title><rect x="1188.9" y="197" width="0.3" height="15.0" fill="rgb(250,67,18)" rx="2" ry="2" />
<text  x="1191.89" y="207.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (5 samples, 0.12%)</title><rect x="1165.4" y="229" width="1.4" height="15.0" fill="rgb(223,71,43)" rx="2" ry="2" />
<text  x="1168.38" y="239.5" ></text>
</g>
<g >
<title>m_freem (60 samples, 1.41%)</title><rect x="29.4" y="69" width="16.6" height="15.0" fill="rgb(226,124,27)" rx="2" ry="2" />
<text  x="32.36" y="79.5" ></text>
</g>
<g >
<title>iflib_simple_transmit (61 samples, 1.43%)</title><rect x="29.4" y="101" width="16.8" height="15.0" fill="rgb(213,67,45)" rx="2" ry="2" />
<text  x="32.36" y="111.5" ></text>
</g>
<g >
<title>fib4_lookup (57 samples, 1.34%)</title><rect x="732.8" y="69" width="15.7" height="15.0" fill="rgb(222,161,46)" rx="2" ry="2" />
<text  x="735.77" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (6 samples, 0.14%)</title><rect x="1154.0" y="213" width="1.7" height="15.0" fill="rgb(244,173,33)" rx="2" ry="2" />
<text  x="1157.04" y="223.5" ></text>
</g>
<g >
<title>spinlock_exit (9 samples, 0.21%)</title><rect x="60.3" y="197" width="2.5" height="15.0" fill="rgb(252,119,53)" rx="2" ry="2" />
<text  x="63.34" y="207.5" ></text>
</g>
<g >
<title>bsearch4_lookup (6 samples, 0.14%)</title><rect x="746.9" y="53" width="1.6" height="15.0" fill="rgb(205,51,30)" rx="2" ry="2" />
<text  x="749.88" y="63.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (146 samples, 3.42%)</title><rect x="1141.9" y="245" width="40.4" height="15.0" fill="rgb(207,52,28)" rx="2" ry="2" />
<text  x="1144.87" y="255.5" >ifl..</text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.02%)</title><rect x="1187.2" y="181" width="0.3" height="15.0" fill="rgb(212,189,32)" rx="2" ry="2" />
<text  x="1190.23" y="191.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (395 samples, 9.26%)</title><rect x="1014.1" y="277" width="109.2" height="15.0" fill="rgb(205,47,4)" rx="2" ry="2" />
<text  x="1017.08" y="287.5" >gtaskqueue_th..</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (13 samples, 0.30%)</title><rect x="788.4" y="181" width="3.6" height="15.0" fill="rgb(235,71,45)" rx="2" ry="2" />
<text  x="791.37" y="191.5" ></text>
</g>
<g >
<title>ether_input (2,352 samples, 55.13%)</title><rect x="103.2" y="197" width="650.6" height="15.0" fill="rgb(212,49,48)" rx="2" ry="2" />
<text  x="106.22" y="207.5" >ether_input</text>
</g>
<g >
<title>_task_fn_rx (132 samples, 3.09%)</title><rect x="977.6" y="261" width="36.5" height="15.0" fill="rgb(244,89,40)" rx="2" ry="2" />
<text  x="980.57" y="271.5" >_ta..</text>
</g>
<g >
<title>ip_tryforward (395 samples, 9.26%)</title><rect x="1014.1" y="117" width="109.2" height="15.0" fill="rgb(232,89,49)" rx="2" ry="2" />
<text  x="1017.08" y="127.5" >ip_tryforward</text>
</g>
<g >
<title>if_inc_counter (18 samples, 0.42%)</title><rect x="508.4" y="37" width="5.0" height="15.0" fill="rgb(216,20,26)" rx="2" ry="2" />
<text  x="511.44" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (16 samples, 0.38%)</title><rect x="58.4" y="213" width="4.4" height="15.0" fill="rgb(219,182,53)" rx="2" ry="2" />
<text  x="61.41" y="223.5" ></text>
</g>
<g >
<title>ether_input (61 samples, 1.43%)</title><rect x="29.4" y="245" width="16.8" height="15.0" fill="rgb(216,141,39)" rx="2" ry="2" />
<text  x="32.36" y="255.5" ></text>
</g>
<g >
<title>uma_zfree_arg (5 samples, 0.12%)</title><rect x="1123.3" y="53" width="1.4" height="15.0" fill="rgb(223,29,17)" rx="2" ry="2" />
<text  x="1126.34" y="63.5" ></text>
</g>
<g >
<title>fork_exit (3,365 samples, 78.88%)</title><rect x="46.8" y="277" width="930.8" height="15.0" fill="rgb(252,221,10)" rx="2" ry="2" />
<text  x="49.79" y="287.5" >fork_exit</text>
</g>
<g >
<title>m_adj (1 samples, 0.02%)</title><rect x="748.5" y="149" width="0.3" height="15.0" fill="rgb(244,71,50)" rx="2" ry="2" />
<text  x="751.54" y="159.5" ></text>
</g>
<g >
<title>zone_import (8 samples, 0.19%)</title><rect x="786.2" y="149" width="2.2" height="15.0" fill="rgb(207,126,29)" rx="2" ry="2" />
<text  x="789.16" y="159.5" ></text>
</g>
<g >
<title>ether_input (132 samples, 3.09%)</title><rect x="977.6" y="229" width="36.5" height="15.0" fill="rgb(222,48,14)" rx="2" ry="2" />
<text  x="980.57" y="239.5" >eth..</text>
</g>
<g >
<title>intr_lookup_source (4 samples, 0.09%)</title><rect x="1183.4" y="261" width="1.1" height="15.0" fill="rgb(249,167,46)" rx="2" ry="2" />
<text  x="1186.36" y="271.5" ></text>
</g>
<g >
<title>iflib_encap (98 samples, 2.30%)</title><rect x="987.0" y="69" width="27.1" height="15.0" fill="rgb(219,186,46)" rx="2" ry="2" />
<text  x="989.97" y="79.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (132 samples, 3.09%)</title><rect x="977.6" y="213" width="36.5" height="15.0" fill="rgb(253,179,11)" rx="2" ry="2" />
<text  x="980.57" y="223.5" >net..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (5 samples, 0.12%)</title><rect x="967.9" y="213" width="1.4" height="15.0" fill="rgb(236,136,39)" rx="2" ry="2" />
<text  x="970.89" y="223.5" ></text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.14%)</title><rect x="786.7" y="133" width="1.7" height="15.0" fill="rgb(211,217,18)" rx="2" ry="2" />
<text  x="789.71" y="143.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.05%)</title><rect x="186.8" y="133" width="0.5" height="15.0" fill="rgb(222,123,52)" rx="2" ry="2" />
<text  x="189.75" y="143.5" ></text>
</g>
<g >
<title>in_localip (48 samples, 1.13%)</title><rect x="692.9" y="85" width="13.3" height="15.0" fill="rgb(217,95,18)" rx="2" ry="2" />
<text  x="695.94" y="95.5" ></text>
</g>
<g >
<title>iflib_get_ifp (4 samples, 0.09%)</title><rect x="1180.3" y="213" width="1.1" height="15.0" fill="rgb(229,159,38)" rx="2" ry="2" />
<text  x="1183.32" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (8 samples, 0.19%)</title><rect x="975.4" y="213" width="2.2" height="15.0" fill="rgb(206,13,49)" rx="2" ry="2" />
<text  x="978.35" y="223.5" ></text>
</g>
<g >
<title>hardclock (9 samples, 0.21%)</title><rect x="1186.7" y="229" width="2.5" height="15.0" fill="rgb(232,94,37)" rx="2" ry="2" />
<text  x="1189.68" y="239.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.16%)</title><rect x="1163.4" y="181" width="2.0" height="15.0" fill="rgb(252,137,34)" rx="2" ry="2" />
<text  x="1166.45" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (15 samples, 0.35%)</title><rect x="1158.2" y="213" width="4.1" height="15.0" fill="rgb(231,210,35)" rx="2" ry="2" />
<text  x="1161.19" y="223.5" ></text>
</g>
<g >
<title>m_freem (34 samples, 0.80%)</title><rect x="977.6" y="53" width="9.4" height="15.0" fill="rgb(250,202,42)" rx="2" ry="2" />
<text  x="980.57" y="63.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (132 samples, 3.09%)</title><rect x="977.6" y="165" width="36.5" height="15.0" fill="rgb(210,163,22)" rx="2" ry="2" />
<text  x="980.57" y="175.5" >net..</text>
</g>
<g >
<title>lapic_handle_timer (20 samples, 0.47%)</title><rect x="1184.5" y="277" width="5.5" height="15.0" fill="rgb(233,98,40)" rx="2" ry="2" />
<text  x="1187.47" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (61 samples, 1.43%)</title><rect x="29.4" y="181" width="16.8" height="15.0" fill="rgb(221,220,38)" rx="2" ry="2" />
<text  x="32.36" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (132 samples, 3.09%)</title><rect x="977.6" y="101" width="36.5" height="15.0" fill="rgb(216,191,50)" rx="2" ry="2" />
<text  x="980.57" y="111.5" >eth..</text>
</g>
<g >
<title>iflib_simple_transmit (1,019 samples, 23.89%)</title><rect x="402.8" y="53" width="281.8" height="15.0" fill="rgb(242,83,0)" rx="2" ry="2" />
<text  x="405.78" y="63.5" >iflib_simple_transmit</text>
</g>
<g >
<title>ip_tryforward (1,831 samples, 42.92%)</title><rect x="242.1" y="101" width="506.4" height="15.0" fill="rgb(226,146,47)" rx="2" ry="2" />
<text  x="245.07" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>m_free (5 samples, 0.12%)</title><rect x="1123.3" y="69" width="1.4" height="15.0" fill="rgb(239,212,41)" rx="2" ry="2" />
<text  x="1126.34" y="79.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (93 samples, 2.18%)</title><rect x="827.6" y="197" width="25.8" height="15.0" fill="rgb(244,160,46)" rx="2" ry="2" />
<text  x="830.65" y="207.5" >i..</text>
</g>
<g >
<title>ether_output (61 samples, 1.43%)</title><rect x="29.4" y="133" width="16.8" height="15.0" fill="rgb(209,67,32)" rx="2" ry="2" />
<text  x="32.36" y="143.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.05%)</title><rect x="792.0" y="181" width="0.5" height="15.0" fill="rgb(245,185,15)" rx="2" ry="2" />
<text  x="794.96" y="191.5" ></text>
</g>
<g >
<title>m_pkthdr_init (41 samples, 0.96%)</title><rect x="853.4" y="197" width="11.3" height="15.0" fill="rgb(231,157,27)" rx="2" ry="2" />
<text  x="856.37" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (132 samples, 3.09%)</title><rect x="977.6" y="133" width="36.5" height="15.0" fill="rgb(220,150,27)" rx="2" ry="2" />
<text  x="980.57" y="143.5" >ip_..</text>
</g>
<g >
<title>memcpy_erms (29 samples, 0.68%)</title><rect x="684.9" y="69" width="8.0" height="15.0" fill="rgb(222,120,54)" rx="2" ry="2" />
<text  x="687.92" y="79.5" ></text>
</g>
<g >
<title>m_freem (5 samples, 0.12%)</title><rect x="1123.3" y="85" width="1.4" height="15.0" fill="rgb(238,155,42)" rx="2" ry="2" />
<text  x="1126.34" y="95.5" ></text>
</g>
<g >
<title>_task_fn_rx (61 samples, 1.43%)</title><rect x="29.4" y="277" width="16.8" height="15.0" fill="rgb(249,79,7)" rx="2" ry="2" />
<text  x="32.36" y="287.5" ></text>
</g>
<g >
<title>statclock (1 samples, 0.02%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(249,158,16)" rx="2" ry="2" />
<text  x="1192.72" y="239.5" ></text>
</g>
<g >
<title>msi_vector (1 samples, 0.02%)</title><rect x="1182.3" y="261" width="0.2" height="15.0" fill="rgb(214,205,8)" rx="2" ry="2" />
<text  x="1185.26" y="271.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,255 samples, 76.30%)</title><rect x="63.1" y="213" width="900.4" height="15.0" fill="rgb(228,120,17)" rx="2" ry="2" />
<text  x="66.11" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>if_getdrvflags (6 samples, 0.14%)</title><rect x="754.1" y="197" width="1.6" height="15.0" fill="rgb(211,121,1)" rx="2" ry="2" />
<text  x="757.07" y="207.5" ></text>
</g>
<g >
<title>if_getnetmapadapter (1 samples, 0.02%)</title><rect x="964.3" y="197" width="0.3" height="15.0" fill="rgb(209,204,0)" rx="2" ry="2" />
<text  x="967.29" y="207.5" ></text>
</g>
<g >
<title>rdtsc (1 samples, 0.02%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(221,113,3)" rx="2" ry="2" />
<text  x="1192.72" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (5 samples, 0.12%)</title><rect x="29.4" y="37" width="1.3" height="15.0" fill="rgb(239,48,44)" rx="2" ry="2" />
<text  x="32.36" y="47.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (34 samples, 0.80%)</title><rect x="977.6" y="69" width="9.4" height="15.0" fill="rgb(245,183,20)" rx="2" ry="2" />
<text  x="980.57" y="79.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.05%)</title><rect x="1166.2" y="213" width="0.6" height="15.0" fill="rgb(227,229,39)" rx="2" ry="2" />
<text  x="1169.21" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="46.0" y="37" width="0.2" height="15.0" fill="rgb(252,80,52)" rx="2" ry="2" />
<text  x="48.96" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (12 samples, 0.28%)</title><rect x="673.9" y="37" width="3.3" height="15.0" fill="rgb(229,67,6)" rx="2" ry="2" />
<text  x="676.85" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (61 samples, 1.43%)</title><rect x="1023.2" y="37" width="16.9" height="15.0" fill="rgb(250,56,47)" rx="2" ry="2" />
<text  x="1026.21" y="47.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (98 samples, 2.30%)</title><rect x="987.0" y="53" width="27.1" height="15.0" fill="rgb(206,81,1)" rx="2" ry="2" />
<text  x="989.97" y="63.5" >b..</text>
</g>
<g >
<title>Xapic_isr1 (26 samples, 0.61%)</title><rect x="10.0" y="277" width="7.2" height="15.0" fill="rgb(249,59,53)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2,029 samples, 47.56%)</title><rect x="187.3" y="133" width="561.2" height="15.0" fill="rgb(218,105,2)" rx="2" ry="2" />
<text  x="190.30" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>iflib_simple_transmit (132 samples, 3.09%)</title><rect x="977.6" y="85" width="36.5" height="15.0" fill="rgb(220,221,54)" rx="2" ry="2" />
<text  x="980.57" y="95.5" >ifl..</text>
</g>
<g >
<title>ip_input (132 samples, 3.09%)</title><rect x="977.6" y="149" width="36.5" height="15.0" fill="rgb(239,8,20)" rx="2" ry="2" />
<text  x="980.57" y="159.5" >ip_..</text>
</g>
<g >
<title>lapic_handle_intr (7 samples, 0.16%)</title><rect x="1182.5" y="277" width="2.0" height="15.0" fill="rgb(228,141,3)" rx="2" ry="2" />
<text  x="1185.53" y="287.5" ></text>
</g>
<g >
<title>m_free (34 samples, 0.80%)</title><rect x="977.6" y="37" width="9.4" height="15.0" fill="rgb(228,134,32)" rx="2" ry="2" />
<text  x="980.57" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (282 samples, 6.61%)</title><rect x="864.7" y="197" width="78.0" height="15.0" fill="rgb(232,94,6)" rx="2" ry="2" />
<text  x="867.71" y="207.5" >memcpy_erms</text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="753.8" y="197" width="0.3" height="15.0" fill="rgb(217,38,26)" rx="2" ry="2" />
<text  x="756.79" y="207.5" ></text>
</g>
<g >
<title>pmc_hook_handler (8 samples, 0.19%)</title><rect x="1186.7" y="213" width="2.2" height="15.0" fill="rgb(253,143,8)" rx="2" ry="2" />
<text  x="1189.68" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (5 samples, 0.12%)</title><rect x="1123.3" y="245" width="1.4" height="15.0" fill="rgb(241,115,31)" rx="2" ry="2" />
<text  x="1126.34" y="255.5" ></text>
</g>
<g >
<title>ether_output_frame (61 samples, 1.43%)</title><rect x="29.4" y="117" width="16.8" height="15.0" fill="rgb(253,127,5)" rx="2" ry="2" />
<text  x="32.36" y="127.5" ></text>
</g>
<g >
<title>iflib_completed_tx_reclaim (5 samples, 0.12%)</title><rect x="1123.3" y="101" width="1.4" height="15.0" fill="rgb(222,190,48)" rx="2" ry="2" />
<text  x="1126.34" y="111.5" ></text>
</g>
<g >
<title>netmap_rx_irq (4 samples, 0.09%)</title><rect x="963.5" y="213" width="1.1" height="15.0" fill="rgb(223,4,32)" rx="2" ry="2" />
<text  x="966.46" y="223.5" ></text>
</g>
<g >
<title>iflib_rxeof (5 samples, 0.12%)</title><rect x="1123.3" y="277" width="1.4" height="15.0" fill="rgb(241,118,25)" rx="2" ry="2" />
<text  x="1126.34" y="287.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (28 samples, 0.66%)</title><rect x="819.9" y="197" width="7.7" height="15.0" fill="rgb(239,199,7)" rx="2" ry="2" />
<text  x="822.90" y="207.5" ></text>
</g>
<g >
<title>memmove_erms (14 samples, 0.33%)</title><rect x="385.4" y="53" width="3.8" height="15.0" fill="rgb(209,141,7)" rx="2" ry="2" />
<text  x="388.35" y="63.5" ></text>
</g>
</g>
</svg>
