<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>sched_clock (2 samples, 0.04%)</title><rect x="1189.5" y="213" width="0.5" height="15.0" fill="rgb(231,18,50)" rx="2" ry="2" />
<text  x="1192.54" y="223.5" ></text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.12%)</title><rect x="570.9" y="133" width="1.4" height="15.0" fill="rgb(220,50,12)" rx="2" ry="2" />
<text  x="573.92" y="143.5" ></text>
</g>
<g >
<title>sleepq_release (2 samples, 0.04%)</title><rect x="1084.0" y="229" width="0.5" height="15.0" fill="rgb(232,41,5)" rx="2" ry="2" />
<text  x="1087.05" y="239.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (9 samples, 0.18%)</title><rect x="35.9" y="229" width="2.0" height="15.0" fill="rgb(209,16,12)" rx="2" ry="2" />
<text  x="38.85" y="239.5" ></text>
</g>
<g >
<title>handleevents (20 samples, 0.39%)</title><rect x="1185.4" y="245" width="4.6" height="15.0" fill="rgb(247,182,53)" rx="2" ry="2" />
<text  x="1188.38" y="255.5" ></text>
</g>
<g >
<title>Xapic_isr1 (24 samples, 0.47%)</title><rect x="10.0" y="277" width="5.5" height="15.0" fill="rgb(230,42,50)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>ether_demux (140 samples, 2.74%)</title><rect x="1093.1" y="165" width="32.3" height="15.0" fill="rgb(253,0,30)" rx="2" ry="2" />
<text  x="1096.05" y="175.5" >et..</text>
</g>
<g >
<title>ifmp_ring_enqueue (8 samples, 0.16%)</title><rect x="1080.6" y="213" width="1.8" height="15.0" fill="rgb(246,144,47)" rx="2" ry="2" />
<text  x="1083.59" y="223.5" ></text>
</g>
<g >
<title>hardclock (13 samples, 0.25%)</title><rect x="1185.6" y="229" width="3.0" height="15.0" fill="rgb(229,177,2)" rx="2" ry="2" />
<text  x="1188.61" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (140 samples, 2.74%)</title><rect x="1093.1" y="229" width="32.3" height="15.0" fill="rgb(248,43,50)" rx="2" ry="2" />
<text  x="1096.05" y="239.5" >if..</text>
</g>
<g >
<title>ip_tryforward (1,322 samples, 25.86%)</title><rect x="217.1" y="101" width="305.1" height="15.0" fill="rgb(242,19,20)" rx="2" ry="2" />
<text  x="220.05" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>m_freem (157 samples, 3.07%)</title><rect x="871.9" y="165" width="36.3" height="15.0" fill="rgb(220,168,16)" rx="2" ry="2" />
<text  x="874.92" y="175.5" >m_f..</text>
</g>
<g >
<title>if_getnumadomain (70 samples, 1.37%)</title><rect x="525.7" y="197" width="16.1" height="15.0" fill="rgb(226,41,17)" rx="2" ry="2" />
<text  x="528.67" y="207.5" ></text>
</g>
<g >
<title>ether_output (4 samples, 0.08%)</title><rect x="24.1" y="133" width="0.9" height="15.0" fill="rgb(243,59,34)" rx="2" ry="2" />
<text  x="27.08" y="143.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (6 samples, 0.12%)</title><rect x="1082.4" y="213" width="1.4" height="15.0" fill="rgb(218,180,39)" rx="2" ry="2" />
<text  x="1085.43" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (1 samples, 0.02%)</title><rect x="1079.7" y="181" width="0.2" height="15.0" fill="rgb(251,202,23)" rx="2" ry="2" />
<text  x="1082.66" y="191.5" ></text>
</g>
<g >
<title>spinlock_exit (16 samples, 0.31%)</title><rect x="1086.4" y="229" width="3.7" height="15.0" fill="rgb(226,73,27)" rx="2" ry="2" />
<text  x="1089.36" y="239.5" ></text>
</g>
<g >
<title>tc_ticktock (1 samples, 0.02%)</title><rect x="1188.4" y="213" width="0.2" height="15.0" fill="rgb(237,165,28)" rx="2" ry="2" />
<text  x="1191.38" y="223.5" ></text>
</g>
<g >
<title>if_getsoftc (16 samples, 0.31%)</title><rect x="419.3" y="37" width="3.7" height="15.0" fill="rgb(214,218,11)" rx="2" ry="2" />
<text  x="422.26" y="47.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (150 samples, 2.93%)</title><rect x="1143.1" y="245" width="34.7" height="15.0" fill="rgb(208,136,46)" rx="2" ry="2" />
<text  x="1146.14" y="255.5" >if..</text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="35.6" y="229" width="0.3" height="15.0" fill="rgb(229,82,20)" rx="2" ry="2" />
<text  x="38.62" y="239.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (2 samples, 0.04%)</title><rect x="37.5" y="213" width="0.4" height="15.0" fill="rgb(251,124,30)" rx="2" ry="2" />
<text  x="40.47" y="223.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="570.9" y="117" width="0.2" height="15.0" fill="rgb(215,156,47)" rx="2" ry="2" />
<text  x="573.92" y="127.5" ></text>
</g>
<g >
<title>cache_alloc_retry (17 samples, 0.33%)</title><rect x="568.6" y="181" width="3.9" height="15.0" fill="rgb(251,112,19)" rx="2" ry="2" />
<text  x="571.61" y="191.5" ></text>
</g>
<g >
<title>_task_fn_rx (4 samples, 0.08%)</title><rect x="24.1" y="277" width="0.9" height="15.0" fill="rgb(209,21,53)" rx="2" ry="2" />
<text  x="27.08" y="287.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.06%)</title><rect x="525.0" y="197" width="0.7" height="15.0" fill="rgb(233,10,27)" rx="2" ry="2" />
<text  x="527.98" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="42.5" y="197" width="1.0" height="15.0" fill="rgb(227,1,17)" rx="2" ry="2" />
<text  x="45.55" y="207.5" ></text>
</g>
<g >
<title>pmc_hook_handler (12 samples, 0.23%)</title><rect x="1185.6" y="213" width="2.8" height="15.0" fill="rgb(213,143,39)" rx="2" ry="2" />
<text  x="1188.61" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (140 samples, 2.74%)</title><rect x="1093.1" y="277" width="32.3" height="15.0" fill="rgb(217,227,15)" rx="2" ry="2" />
<text  x="1096.05" y="287.5" >gt..</text>
</g>
<g >
<title>ixgbe_write_reg (8 samples, 0.16%)</title><rect x="1175.9" y="213" width="1.9" height="15.0" fill="rgb(220,22,29)" rx="2" ry="2" />
<text  x="1178.92" y="223.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="1153.1" y="213" width="0.4" height="15.0" fill="rgb(229,56,34)" rx="2" ry="2" />
<text  x="1156.07" y="223.5" ></text>
</g>
<g >
<title>ether_input (140 samples, 2.74%)</title><rect x="1093.1" y="213" width="32.3" height="15.0" fill="rgb(230,1,48)" rx="2" ry="2" />
<text  x="1096.05" y="223.5" >et..</text>
</g>
<g >
<title>ether_nh_input (140 samples, 2.74%)</title><rect x="1093.1" y="181" width="32.3" height="15.0" fill="rgb(222,3,25)" rx="2" ry="2" />
<text  x="1096.05" y="191.5" >et..</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="42.3" y="197" width="0.2" height="15.0" fill="rgb(213,206,36)" rx="2" ry="2" />
<text  x="45.32" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (4 samples, 0.08%)</title><rect x="1092.1" y="133" width="1.0" height="15.0" fill="rgb(209,47,17)" rx="2" ry="2" />
<text  x="1095.13" y="143.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (3 samples, 0.06%)</title><rect x="571.4" y="101" width="0.7" height="15.0" fill="rgb(212,77,29)" rx="2" ry="2" />
<text  x="574.38" y="111.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.08%)</title><rect x="24.1" y="229" width="0.9" height="15.0" fill="rgb(223,118,3)" rx="2" ry="2" />
<text  x="27.08" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (4 samples, 0.08%)</title><rect x="24.1" y="213" width="0.9" height="15.0" fill="rgb(244,163,17)" rx="2" ry="2" />
<text  x="27.08" y="223.5" ></text>
</g>
<g >
<title>netmap_rx_irq (6 samples, 0.12%)</title><rect x="772.7" y="213" width="1.3" height="15.0" fill="rgb(219,177,14)" rx="2" ry="2" />
<text  x="775.66" y="223.5" ></text>
</g>
<g >
<title>ether_nh_input (1,751 samples, 34.25%)</title><rect x="120.8" y="165" width="404.2" height="15.0" fill="rgb(244,23,10)" rx="2" ry="2" />
<text  x="123.80" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>in_lltable_lookup (56 samples, 1.10%)</title><rect x="341.0" y="53" width="12.9" height="15.0" fill="rgb(244,79,11)" rx="2" ry="2" />
<text  x="344.01" y="63.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1174.1" y="213" width="0.2" height="15.0" fill="rgb(218,186,25)" rx="2" ry="2" />
<text  x="1177.07" y="223.5" ></text>
</g>
<g >
<title>iflib_fl_refill (252 samples, 4.93%)</title><rect x="542.8" y="197" width="58.1" height="15.0" fill="rgb(208,78,32)" rx="2" ry="2" />
<text  x="545.75" y="207.5" >iflib_..</text>
</g>
<g >
<title>ifmp_ring_enqueue (148 samples, 2.90%)</title><rect x="423.0" y="37" width="34.1" height="15.0" fill="rgb(222,191,41)" rx="2" ry="2" />
<text  x="425.95" y="47.5" >if..</text>
</g>
<g >
<title>iflib_if_transmit (4 samples, 0.08%)</title><rect x="24.1" y="101" width="0.9" height="15.0" fill="rgb(221,43,35)" rx="2" ry="2" />
<text  x="27.08" y="111.5" ></text>
</g>
<g >
<title>lapic_handle_intr (17 samples, 0.33%)</title><rect x="1179.6" y="277" width="3.9" height="15.0" fill="rgb(245,99,8)" rx="2" ry="2" />
<text  x="1182.61" y="287.5" ></text>
</g>
<g >
<title>sleepq_signal (4 samples, 0.08%)</title><rect x="1094.4" y="37" width="1.0" height="15.0" fill="rgb(240,145,6)" rx="2" ry="2" />
<text  x="1097.44" y="47.5" ></text>
</g>
<g >
<title>iflib_rxeof (4 samples, 0.08%)</title><rect x="24.1" y="261" width="0.9" height="15.0" fill="rgb(227,133,43)" rx="2" ry="2" />
<text  x="27.08" y="271.5" ></text>
</g>
<g >
<title>_task_fn_rx (4 samples, 0.08%)</title><rect x="1092.1" y="261" width="1.0" height="15.0" fill="rgb(254,90,18)" rx="2" ry="2" />
<text  x="1095.13" y="271.5" ></text>
</g>
<g >
<title>spinlock_enter (5 samples, 0.10%)</title><rect x="46.7" y="165" width="1.2" height="15.0" fill="rgb(254,32,17)" rx="2" ry="2" />
<text  x="49.70" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.08%)</title><rect x="1092.1" y="213" width="1.0" height="15.0" fill="rgb(253,31,39)" rx="2" ry="2" />
<text  x="1095.13" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (7 samples, 0.14%)</title><rect x="1157.2" y="197" width="1.6" height="15.0" fill="rgb(212,40,20)" rx="2" ry="2" />
<text  x="1160.22" y="207.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (178 samples, 3.48%)</title><rect x="985.9" y="165" width="41.1" height="15.0" fill="rgb(252,134,48)" rx="2" ry="2" />
<text  x="988.95" y="175.5" >bus..</text>
</g>
<g >
<title>gtaskqueue_run_locked (4 samples, 0.08%)</title><rect x="1092.1" y="277" width="1.0" height="15.0" fill="rgb(217,226,50)" rx="2" ry="2" />
<text  x="1095.13" y="287.5" ></text>
</g>
<g >
<title>rdtsc (1 samples, 0.02%)</title><rect x="1189.3" y="213" width="0.2" height="15.0" fill="rgb(243,128,7)" rx="2" ry="2" />
<text  x="1192.31" y="223.5" ></text>
</g>
<g >
<title>lapic_eoi (2 samples, 0.04%)</title><rect x="1177.8" y="245" width="0.4" height="15.0" fill="rgb(249,101,39)" rx="2" ry="2" />
<text  x="1180.77" y="255.5" ></text>
</g>
<g >
<title>__mtx_lock_sleep (1 samples, 0.02%)</title><rect x="572.3" y="117" width="0.2" height="15.0" fill="rgb(227,183,49)" rx="2" ry="2" />
<text  x="575.30" y="127.5" ></text>
</g>
<g >
<title>if_input (1 samples, 0.02%)</title><rect x="47.9" y="213" width="0.2" height="15.0" fill="rgb(228,152,31)" rx="2" ry="2" />
<text  x="50.86" y="223.5" ></text>
</g>
<g >
<title>pmap_kextract (3 samples, 0.06%)</title><rect x="1024.7" y="133" width="0.7" height="15.0" fill="rgb(254,134,13)" rx="2" ry="2" />
<text  x="1027.73" y="143.5" ></text>
</g>
<g >
<title>cache_free (3 samples, 0.06%)</title><rect x="906.5" y="117" width="0.7" height="15.0" fill="rgb(226,122,2)" rx="2" ry="2" />
<text  x="909.54" y="127.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,609 samples, 90.16%)</title><rect x="28.2" y="245" width="1063.9" height="15.0" fill="rgb(251,55,14)" rx="2" ry="2" />
<text  x="31.24" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.08%)</title><rect x="24.1" y="53" width="0.9" height="15.0" fill="rgb(206,129,24)" rx="2" ry="2" />
<text  x="27.08" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="24.1" y="37" width="0.9" height="15.0" fill="rgb(215,102,1)" rx="2" ry="2" />
<text  x="27.08" y="47.5" ></text>
</g>
<g >
<title>intr_lookup_source (6 samples, 0.12%)</title><rect x="1182.2" y="261" width="1.3" height="15.0" fill="rgb(229,26,32)" rx="2" ry="2" />
<text  x="1185.15" y="271.5" ></text>
</g>
<g >
<title>doreti (12 samples, 0.23%)</title><rect x="25.0" y="277" width="2.8" height="15.0" fill="rgb(211,184,35)" rx="2" ry="2" />
<text  x="28.00" y="287.5" ></text>
</g>
<g >
<title>ether_output_frame (4 samples, 0.08%)</title><rect x="24.1" y="117" width="0.9" height="15.0" fill="rgb(237,95,52)" rx="2" ry="2" />
<text  x="27.08" y="127.5" ></text>
</g>
<g >
<title>fib4_lookup (73 samples, 1.43%)</title><rect x="505.4" y="69" width="16.8" height="15.0" fill="rgb(222,29,29)" rx="2" ry="2" />
<text  x="508.36" y="79.5" ></text>
</g>
<g >
<title>ether_input (4 samples, 0.08%)</title><rect x="1092.1" y="229" width="1.0" height="15.0" fill="rgb(251,176,11)" rx="2" ry="2" />
<text  x="1095.13" y="239.5" ></text>
</g>
<g >
<title>memcmp (10 samples, 0.20%)</title><rect x="522.4" y="149" width="2.3" height="15.0" fill="rgb(240,55,6)" rx="2" ry="2" />
<text  x="525.44" y="159.5" ></text>
</g>
<g >
<title>ip_findroute (203 samples, 3.97%)</title><rect x="475.4" y="85" width="46.8" height="15.0" fill="rgb(218,123,47)" rx="2" ry="2" />
<text  x="478.35" y="95.5" >ip_f..</text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="572.3" y="133" width="0.2" height="15.0" fill="rgb(215,108,14)" rx="2" ry="2" />
<text  x="575.30" y="143.5" ></text>
</g>
<g >
<title>sleepq_lock (5 samples, 0.10%)</title><rect x="1091.0" y="213" width="1.1" height="15.0" fill="rgb(231,58,14)" rx="2" ry="2" />
<text  x="1093.97" y="223.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (1 samples, 0.02%)</title><rect x="1083.8" y="229" width="0.2" height="15.0" fill="rgb(220,1,51)" rx="2" ry="2" />
<text  x="1086.82" y="239.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.08%)</title><rect x="1092.1" y="69" width="1.0" height="15.0" fill="rgb(225,115,23)" rx="2" ry="2" />
<text  x="1095.13" y="79.5" ></text>
</g>
<g >
<title>iflib_rxeof (4 samples, 0.08%)</title><rect x="1092.1" y="245" width="1.0" height="15.0" fill="rgb(251,32,38)" rx="2" ry="2" />
<text  x="1095.13" y="255.5" ></text>
</g>
<g >
<title>Xtimerint_pti (2 samples, 0.04%)</title><rect x="23.6" y="277" width="0.5" height="15.0" fill="rgb(242,30,8)" rx="2" ry="2" />
<text  x="26.62" y="287.5" ></text>
</g>
<g >
<title>intr_execute_handlers (235 samples, 4.60%)</title><rect x="1125.4" y="277" width="54.2" height="15.0" fill="rgb(224,149,33)" rx="2" ry="2" />
<text  x="1128.37" y="287.5" >intr_..</text>
</g>
<g >
<title>wakeup_any (4 samples, 0.08%)</title><rect x="1092.1" y="53" width="1.0" height="15.0" fill="rgb(207,79,43)" rx="2" ry="2" />
<text  x="1095.13" y="63.5" ></text>
</g>
<g >
<title>if_inc_counter (4 samples, 0.08%)</title><rect x="807.5" y="181" width="0.9" height="15.0" fill="rgb(210,4,26)" rx="2" ry="2" />
<text  x="810.52" y="191.5" ></text>
</g>
<g >
<title>ether_output_frame (4 samples, 0.08%)</title><rect x="1092.1" y="101" width="1.0" height="15.0" fill="rgb(230,114,13)" rx="2" ry="2" />
<text  x="1095.13" y="111.5" ></text>
</g>
<g >
<title>iflib_if_transmit (4 samples, 0.08%)</title><rect x="1092.1" y="85" width="1.0" height="15.0" fill="rgb(208,63,17)" rx="2" ry="2" />
<text  x="1095.13" y="95.5" ></text>
</g>
<g >
<title>pmap_zero_page (1 samples, 0.02%)</title><rect x="571.8" y="85" width="0.3" height="15.0" fill="rgb(218,119,48)" rx="2" ry="2" />
<text  x="574.84" y="95.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,181 samples, 62.23%)</title><rect x="39.8" y="229" width="734.2" height="15.0" fill="rgb(246,124,8)" rx="2" ry="2" />
<text  x="42.78" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>Xapic_isr1_pti (35 samples, 0.68%)</title><rect x="15.5" y="277" width="8.1" height="15.0" fill="rgb(220,126,37)" rx="2" ry="2" />
<text  x="18.54" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (72 samples, 1.41%)</title><rect x="1108.7" y="37" width="16.7" height="15.0" fill="rgb(243,72,52)" rx="2" ry="2" />
<text  x="1111.75" y="47.5" ></text>
</g>
<g >
<title>statclock (3 samples, 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(214,181,11)" rx="2" ry="2" />
<text  x="1192.31" y="239.5" ></text>
</g>
<g >
<title>memcpy_erms (383 samples, 7.49%)</title><rect x="662.1" y="197" width="88.4" height="15.0" fill="rgb(252,35,21)" rx="2" ry="2" />
<text  x="665.09" y="207.5" >memcpy_erms</text>
</g>
<g >
<title>_epoch_exit_preempt (2 samples, 0.04%)</title><rect x="27.8" y="245" width="0.4" height="15.0" fill="rgb(223,118,12)" rx="2" ry="2" />
<text  x="30.77" y="255.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (6 samples, 0.12%)</title><rect x="1093.1" y="37" width="1.3" height="15.0" fill="rgb(249,223,25)" rx="2" ry="2" />
<text  x="1096.05" y="47.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (3 samples, 0.06%)</title><rect x="41.6" y="197" width="0.7" height="15.0" fill="rgb(242,113,13)" rx="2" ry="2" />
<text  x="44.62" y="207.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (30 samples, 0.59%)</title><rect x="40.9" y="213" width="7.0" height="15.0" fill="rgb(253,24,44)" rx="2" ry="2" />
<text  x="43.93" y="223.5" ></text>
</g>
<g >
<title>uma_small_alloc (4 samples, 0.08%)</title><rect x="571.1" y="117" width="1.0" height="15.0" fill="rgb(230,178,7)" rx="2" ry="2" />
<text  x="574.15" y="127.5" ></text>
</g>
<g >
<title>zone_import (7 samples, 0.14%)</title><rect x="570.9" y="149" width="1.6" height="15.0" fill="rgb(222,36,54)" rx="2" ry="2" />
<text  x="573.92" y="159.5" ></text>
</g>
<g >
<title>et_start (1 samples, 0.02%)</title><rect x="1185.4" y="229" width="0.2" height="15.0" fill="rgb(227,48,17)" rx="2" ry="2" />
<text  x="1188.38" y="239.5" ></text>
</g>
<g >
<title>sched_priority (1 samples, 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(212,226,27)" rx="2" ry="2" />
<text  x="1192.77" y="207.5" ></text>
</g>
<g >
<title>netisr_dispatch (10 samples, 0.20%)</title><rect x="96.6" y="181" width="2.3" height="15.0" fill="rgb(229,104,36)" rx="2" ry="2" />
<text  x="99.56" y="191.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (3 samples, 0.06%)</title><rect x="781.4" y="197" width="0.7" height="15.0" fill="rgb(218,72,23)" rx="2" ry="2" />
<text  x="784.43" y="207.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,342 samples, 26.25%)</title><rect x="774.0" y="229" width="309.8" height="15.0" fill="rgb(233,116,33)" rx="2" ry="2" />
<text  x="777.05" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (32 samples, 0.63%)</title><rect x="572.5" y="181" width="7.4" height="15.0" fill="rgb(237,86,42)" rx="2" ry="2" />
<text  x="575.53" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.08%)</title><rect x="24.1" y="181" width="0.9" height="15.0" fill="rgb(254,30,43)" rx="2" ry="2" />
<text  x="27.08" y="191.5" ></text>
</g>
<g >
<title>wakeup_any (10 samples, 0.20%)</title><rect x="45.5" y="197" width="2.4" height="15.0" fill="rgb(222,12,18)" rx="2" ry="2" />
<text  x="48.55" y="207.5" ></text>
</g>
<g >
<title>ether_demux (4 samples, 0.08%)</title><rect x="24.1" y="197" width="0.9" height="15.0" fill="rgb(207,220,45)" rx="2" ry="2" />
<text  x="27.08" y="207.5" ></text>
</g>
<g >
<title>wakeup_any (4 samples, 0.08%)</title><rect x="24.1" y="69" width="0.9" height="15.0" fill="rgb(254,80,40)" rx="2" ry="2" />
<text  x="27.08" y="79.5" ></text>
</g>
<g >
<title>ether_output_frame (140 samples, 2.74%)</title><rect x="1093.1" y="85" width="32.3" height="15.0" fill="rgb(219,101,31)" rx="2" ry="2" />
<text  x="1096.05" y="95.5" >et..</text>
</g>
<g >
<title>spinlock_exit (9 samples, 0.18%)</title><rect x="43.5" y="197" width="2.0" height="15.0" fill="rgb(236,151,11)" rx="2" ry="2" />
<text  x="46.47" y="207.5" ></text>
</g>
<g >
<title>sleepq_broadcast (2 samples, 0.04%)</title><rect x="1090.5" y="213" width="0.5" height="15.0" fill="rgb(241,74,54)" rx="2" ry="2" />
<text  x="1093.51" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="1083.4" y="197" width="0.4" height="15.0" fill="rgb(224,159,51)" rx="2" ry="2" />
<text  x="1086.36" y="207.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (126 samples, 2.46%)</title><rect x="1027.0" y="165" width="29.1" height="15.0" fill="rgb(232,17,43)" rx="2" ry="2" />
<text  x="1030.03" y="175.5" >ix..</text>
</g>
<g >
<title>drain_ring_lockless (1,310 samples, 25.63%)</title><rect x="777.5" y="213" width="302.4" height="15.0" fill="rgb(207,105,0)" rx="2" ry="2" />
<text  x="780.51" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>grouptaskqueue_enqueue (140 samples, 2.74%)</title><rect x="1093.1" y="53" width="32.3" height="15.0" fill="rgb(238,219,2)" rx="2" ry="2" />
<text  x="1096.05" y="63.5" >gr..</text>
</g>
<g >
<title>mb_dtor_mbuf (4 samples, 0.08%)</title><rect x="907.2" y="117" width="1.0" height="15.0" fill="rgb(228,223,23)" rx="2" ry="2" />
<text  x="910.23" y="127.5" ></text>
</g>
<g >
<title>spinlock_enter (4 samples, 0.08%)</title><rect x="1157.9" y="181" width="0.9" height="15.0" fill="rgb(238,53,53)" rx="2" ry="2" />
<text  x="1160.91" y="191.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (115 samples, 2.25%)</title><rect x="610.2" y="197" width="26.5" height="15.0" fill="rgb(240,106,5)" rx="2" ry="2" />
<text  x="613.16" y="207.5" >i..</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (37 samples, 0.72%)</title><rect x="1162.8" y="229" width="8.5" height="15.0" fill="rgb(215,12,13)" rx="2" ry="2" />
<text  x="1165.76" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (4 samples, 0.08%)</title><rect x="1092.1" y="197" width="1.0" height="15.0" fill="rgb(246,42,22)" rx="2" ry="2" />
<text  x="1095.13" y="207.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (3 samples, 0.06%)</title><rect x="1079.9" y="213" width="0.7" height="15.0" fill="rgb(237,206,10)" rx="2" ry="2" />
<text  x="1082.89" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (40 samples, 0.78%)</title><rect x="600.9" y="197" width="9.3" height="15.0" fill="rgb(240,82,37)" rx="2" ry="2" />
<text  x="603.92" y="207.5" ></text>
</g>
<g >
<title>m_free (146 samples, 2.86%)</title><rect x="874.5" y="149" width="33.7" height="15.0" fill="rgb(249,128,9)" rx="2" ry="2" />
<text  x="877.46" y="159.5" >m_..</text>
</g>
<g >
<title>msi_vector (5 samples, 0.10%)</title><rect x="1178.5" y="261" width="1.1" height="15.0" fill="rgb(237,29,31)" rx="2" ry="2" />
<text  x="1181.46" y="271.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (11 samples, 0.22%)</title><rect x="770.1" y="197" width="2.6" height="15.0" fill="rgb(246,113,40)" rx="2" ry="2" />
<text  x="773.12" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.08%)</title><rect x="1152.1" y="213" width="1.0" height="15.0" fill="rgb(226,40,54)" rx="2" ry="2" />
<text  x="1155.14" y="223.5" ></text>
</g>
<g >
<title>ether_output_frame (430 samples, 8.41%)</title><rect x="358.1" y="69" width="99.2" height="15.0" fill="rgb(244,28,31)" rx="2" ry="2" />
<text  x="361.09" y="79.5" >ether_output..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (7 samples, 0.14%)</title><rect x="1161.1" y="229" width="1.7" height="15.0" fill="rgb(220,37,29)" rx="2" ry="2" />
<text  x="1164.15" y="239.5" ></text>
</g>
<g >
<title>lapic_et_start (3 samples, 0.06%)</title><rect x="1188.6" y="229" width="0.7" height="15.0" fill="rgb(212,31,54)" rx="2" ry="2" />
<text  x="1191.62" y="239.5" ></text>
</g>
<g >
<title>if_getnetmapadapter (3 samples, 0.06%)</title><rect x="773.4" y="197" width="0.6" height="15.0" fill="rgb(229,143,13)" rx="2" ry="2" />
<text  x="776.35" y="207.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (99 samples, 1.94%)</title><rect x="1002.6" y="149" width="22.8" height="15.0" fill="rgb(212,40,51)" rx="2" ry="2" />
<text  x="1005.57" y="159.5" >b..</text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.02%)</title><rect x="1187.9" y="181" width="0.3" height="15.0" fill="rgb(214,132,35)" rx="2" ry="2" />
<text  x="1190.92" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (12 samples, 0.23%)</title><rect x="1185.6" y="197" width="2.8" height="15.0" fill="rgb(247,21,35)" rx="2" ry="2" />
<text  x="1188.61" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.16%)</title><rect x="1153.5" y="213" width="1.9" height="15.0" fill="rgb(224,166,1)" rx="2" ry="2" />
<text  x="1156.53" y="223.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (4 samples, 0.08%)</title><rect x="1001.6" y="149" width="1.0" height="15.0" fill="rgb(237,155,42)" rx="2" ry="2" />
<text  x="1004.64" y="159.5" ></text>
</g>
<g >
<title>ether_input (1,905 samples, 37.27%)</title><rect x="85.3" y="197" width="439.7" height="15.0" fill="rgb(235,119,2)" rx="2" ry="2" />
<text  x="88.25" y="207.5" >ether_input</text>
</g>
<g >
<title>rxd_frag_to_sd (84 samples, 1.64%)</title><rect x="750.7" y="197" width="19.4" height="15.0" fill="rgb(218,2,33)" rx="2" ry="2" />
<text  x="753.73" y="207.5" ></text>
</g>
<g >
<title>uma_zalloc_arg (90 samples, 1.76%)</title><rect x="580.1" y="181" width="20.8" height="15.0" fill="rgb(205,167,27)" rx="2" ry="2" />
<text  x="583.15" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (4 samples, 0.08%)</title><rect x="170.4" y="133" width="0.9" height="15.0" fill="rgb(238,200,41)" rx="2" ry="2" />
<text  x="173.43" y="143.5" ></text>
</g>
<g >
<title>ether_demux (4 samples, 0.08%)</title><rect x="1092.1" y="181" width="1.0" height="15.0" fill="rgb(245,61,14)" rx="2" ry="2" />
<text  x="1095.13" y="191.5" ></text>
</g>
<g >
<title>wakeup (9 samples, 0.18%)</title><rect x="1090.1" y="229" width="2.0" height="15.0" fill="rgb(214,17,10)" rx="2" ry="2" />
<text  x="1093.05" y="239.5" ></text>
</g>
<g >
<title>iflib_rxeof (3,139 samples, 61.40%)</title><rect x="48.1" y="213" width="724.6" height="15.0" fill="rgb(206,36,33)" rx="2" ry="2" />
<text  x="51.09" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>mb_ctor_mbuf (10 samples, 0.20%)</title><rect x="598.6" y="165" width="2.3" height="15.0" fill="rgb(234,18,50)" rx="2" ry="2" />
<text  x="601.62" y="175.5" ></text>
</g>
<g >
<title>ether_output (816 samples, 15.96%)</title><rect x="275.5" y="85" width="188.3" height="15.0" fill="rgb(235,71,11)" rx="2" ry="2" />
<text  x="278.45" y="95.5" >ether_output</text>
</g>
<g >
<title>memmove_erms (18 samples, 0.35%)</title><rect x="353.9" y="53" width="4.2" height="15.0" fill="rgb(220,27,25)" rx="2" ry="2" />
<text  x="356.94" y="63.5" ></text>
</g>
<g >
<title>if_inc_counter (3 samples, 0.06%)</title><rect x="542.1" y="197" width="0.7" height="15.0" fill="rgb(232,136,44)" rx="2" ry="2" />
<text  x="545.06" y="207.5" ></text>
</g>
<g >
<title>all (5,112 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(248,140,13)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>ether_input (4 samples, 0.08%)</title><rect x="24.1" y="245" width="0.9" height="15.0" fill="rgb(208,27,39)" rx="2" ry="2" />
<text  x="27.08" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (17 samples, 0.33%)</title><rect x="868.0" y="165" width="3.9" height="15.0" fill="rgb(249,104,47)" rx="2" ry="2" />
<text  x="870.99" y="175.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1188.2" y="181" width="0.2" height="15.0" fill="rgb(254,205,54)" rx="2" ry="2" />
<text  x="1191.15" y="191.5" ></text>
</g>
<g >
<title>fork_exit (4,611 samples, 90.20%)</title><rect x="27.8" y="277" width="1064.3" height="15.0" fill="rgb(225,22,21)" rx="2" ry="2" />
<text  x="30.77" y="287.5" >fork_exit</text>
</g>
<g >
<title>ip_input (4 samples, 0.08%)</title><rect x="24.1" y="165" width="0.9" height="15.0" fill="rgb(240,188,50)" rx="2" ry="2" />
<text  x="27.08" y="175.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (2 samples, 0.04%)</title><rect x="1078.5" y="165" width="0.5" height="15.0" fill="rgb(244,35,8)" rx="2" ry="2" />
<text  x="1081.51" y="175.5" ></text>
</g>
<g >
<title>ether_output (4 samples, 0.08%)</title><rect x="1092.1" y="117" width="1.0" height="15.0" fill="rgb(252,212,36)" rx="2" ry="2" />
<text  x="1095.13" y="127.5" ></text>
</g>
<g >
<title>if_getvnet (1 samples, 0.02%)</title><rect x="541.8" y="197" width="0.3" height="15.0" fill="rgb(227,163,39)" rx="2" ry="2" />
<text  x="544.83" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (9 samples, 0.18%)</title><rect x="45.8" y="181" width="2.1" height="15.0" fill="rgb(251,173,50)" rx="2" ry="2" />
<text  x="48.78" y="191.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1160.5" y="213" width="0.2" height="15.0" fill="rgb(215,209,2)" rx="2" ry="2" />
<text  x="1163.45" y="223.5" ></text>
</g>
<g >
<title>msi_eoi_source (1 samples, 0.02%)</title><rect x="1178.2" y="245" width="0.3" height="15.0" fill="rgb(248,51,9)" rx="2" ry="2" />
<text  x="1181.23" y="255.5" ></text>
</g>
<g >
<title>ip_input (1,464 samples, 28.64%)</title><rect x="184.3" y="117" width="337.9" height="15.0" fill="rgb(247,37,33)" rx="2" ry="2" />
<text  x="187.28" y="127.5" >ip_input</text>
</g>
<g >
<title>m_pkthdr_init (110 samples, 2.15%)</title><rect x="636.7" y="197" width="25.4" height="15.0" fill="rgb(208,209,50)" rx="2" ry="2" />
<text  x="639.70" y="207.5" >m..</text>
</g>
<g >
<title>if_getdrvflags (10 samples, 0.20%)</title><rect x="805.2" y="181" width="2.3" height="15.0" fill="rgb(216,194,6)" rx="2" ry="2" />
<text  x="808.21" y="191.5" ></text>
</g>
<g >
<title>iflib_encap (641 samples, 12.54%)</title><rect x="908.2" y="181" width="147.9" height="15.0" fill="rgb(208,70,10)" rx="2" ry="2" />
<text  x="911.16" y="191.5" >iflib_encap</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (432 samples, 8.45%)</title><rect x="808.4" y="181" width="99.8" height="15.0" fill="rgb(216,165,32)" rx="2" ry="2" />
<text  x="811.44" y="191.5" >iflib_comple..</text>
</g>
<g >
<title>m_adj (31 samples, 0.61%)</title><rect x="163.3" y="133" width="7.1" height="15.0" fill="rgb(253,175,42)" rx="2" ry="2" />
<text  x="166.27" y="143.5" ></text>
</g>
<g >
<title>_task_fn_rx (140 samples, 2.74%)</title><rect x="1093.1" y="245" width="32.3" height="15.0" fill="rgb(246,179,26)" rx="2" ry="2" />
<text  x="1096.05" y="255.5" >_t..</text>
</g>
<g >
<title>_epoch_exit_preempt (8 samples, 0.16%)</title><rect x="37.9" y="229" width="1.9" height="15.0" fill="rgb(217,77,14)" rx="2" ry="2" />
<text  x="40.93" y="239.5" ></text>
</g>
<g >
<title>arpresolve (156 samples, 3.05%)</title><rect x="322.1" y="69" width="36.0" height="15.0" fill="rgb(236,48,5)" rx="2" ry="2" />
<text  x="325.08" y="79.5" >arp..</text>
</g>
<g >
<title>bsearch4_lookup (6 samples, 0.12%)</title><rect x="520.8" y="53" width="1.4" height="15.0" fill="rgb(206,121,0)" rx="2" ry="2" />
<text  x="523.83" y="63.5" ></text>
</g>
<g >
<title>spinlock_exit (8 samples, 0.16%)</title><rect x="1155.4" y="213" width="1.8" height="15.0" fill="rgb(223,161,6)" rx="2" ry="2" />
<text  x="1158.38" y="223.5" ></text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.08%)</title><rect x="1092.1" y="37" width="1.0" height="15.0" fill="rgb(231,135,54)" rx="2" ry="2" />
<text  x="1095.13" y="47.5" ></text>
</g>
<g >
<title>ip_input (4 samples, 0.08%)</title><rect x="1092.1" y="149" width="1.0" height="15.0" fill="rgb(244,1,9)" rx="2" ry="2" />
<text  x="1095.13" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,846 samples, 36.11%)</title><rect x="98.9" y="181" width="426.1" height="15.0" fill="rgb(250,174,32)" rx="2" ry="2" />
<text  x="101.87" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ip_tryforward (140 samples, 2.74%)</title><rect x="1093.1" y="117" width="32.3" height="15.0" fill="rgb(227,51,24)" rx="2" ry="2" />
<text  x="1096.05" y="127.5" >ip..</text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="457.1" y="37" width="0.2" height="15.0" fill="rgb(243,104,4)" rx="2" ry="2" />
<text  x="460.12" y="47.5" ></text>
</g>
<g >
<title>spinlock_enter (58 samples, 1.13%)</title><rect x="1095.4" y="37" width="13.3" height="15.0" fill="rgb(226,120,3)" rx="2" ry="2" />
<text  x="1098.36" y="47.5" ></text>
</g>
<g >
<title>binuptime (3 samples, 0.06%)</title><rect x="1184.7" y="245" width="0.7" height="15.0" fill="rgb(212,142,6)" rx="2" ry="2" />
<text  x="1187.69" y="255.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (140 samples, 2.74%)</title><rect x="1093.1" y="261" width="32.3" height="15.0" fill="rgb(250,48,24)" rx="2" ry="2" />
<text  x="1096.05" y="271.5" >gt..</text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1187.7" y="181" width="0.2" height="15.0" fill="rgb(234,94,36)" rx="2" ry="2" />
<text  x="1190.69" y="191.5" ></text>
</g>
<g >
<title>ixgbe_msix_que (28 samples, 0.55%)</title><rect x="1171.3" y="229" width="6.5" height="15.0" fill="rgb(213,49,40)" rx="2" ry="2" />
<text  x="1174.30" y="239.5" ></text>
</g>
<g >
<title>ip_input (140 samples, 2.74%)</title><rect x="1093.1" y="133" width="32.3" height="15.0" fill="rgb(230,215,36)" rx="2" ry="2" />
<text  x="1096.05" y="143.5" >ip..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (55 samples, 1.08%)</title><rect x="404.3" y="37" width="12.7" height="15.0" fill="rgb(237,106,50)" rx="2" ry="2" />
<text  x="407.26" y="47.5" ></text>
</g>
<g >
<title>zone_alloc_item (1 samples, 0.02%)</title><rect x="572.1" y="117" width="0.2" height="15.0" fill="rgb(251,192,34)" rx="2" ry="2" />
<text  x="575.07" y="127.5" ></text>
</g>
<g >
<title>in_localip (50 samples, 0.98%)</title><rect x="463.8" y="85" width="11.6" height="15.0" fill="rgb(206,88,27)" rx="2" ry="2" />
<text  x="466.81" y="95.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (102 samples, 2.00%)</title><rect x="1056.1" y="181" width="23.6" height="15.0" fill="rgb(208,181,8)" rx="2" ry="2" />
<text  x="1059.12" y="191.5" >i..</text>
</g>
<g >
<title>netisr_dispatch_src (140 samples, 2.74%)</title><rect x="1093.1" y="149" width="32.3" height="15.0" fill="rgb(252,32,45)" rx="2" ry="2" />
<text  x="1096.05" y="159.5" >ne..</text>
</g>
<g >
<title>netisr_dispatch_src (1,520 samples, 29.73%)</title><rect x="171.3" y="133" width="350.9" height="15.0" fill="rgb(231,67,26)" rx="2" ry="2" />
<text  x="174.35" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>spinlock_enter (8 samples, 0.16%)</title><rect x="1084.5" y="229" width="1.9" height="15.0" fill="rgb(252,0,17)" rx="2" ry="2" />
<text  x="1087.51" y="239.5" ></text>
</g>
<g >
<title>ip_tryforward (4 samples, 0.08%)</title><rect x="24.1" y="149" width="0.9" height="15.0" fill="rgb(217,126,5)" rx="2" ry="2" />
<text  x="27.08" y="159.5" ></text>
</g>
<g >
<title>zone_fetch_bucket (2 samples, 0.04%)</title><rect x="570.5" y="149" width="0.4" height="15.0" fill="rgb(208,58,42)" rx="2" ry="2" />
<text  x="573.45" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (1 samples, 0.02%)</title><rect x="579.9" y="181" width="0.2" height="15.0" fill="rgb(236,75,26)" rx="2" ry="2" />
<text  x="582.92" y="191.5" ></text>
</g>
<g >
<title>iflib_get_ifp (7 samples, 0.14%)</title><rect x="1174.3" y="213" width="1.6" height="15.0" fill="rgb(243,97,22)" rx="2" ry="2" />
<text  x="1177.30" y="223.5" ></text>
</g>
<g >
<title>memcpy_erms (28 samples, 0.55%)</title><rect x="457.3" y="69" width="6.5" height="15.0" fill="rgb(212,69,45)" rx="2" ry="2" />
<text  x="460.35" y="79.5" ></text>
</g>
<g >
<title>ether_output (140 samples, 2.74%)</title><rect x="1093.1" y="101" width="32.3" height="15.0" fill="rgb(213,102,46)" rx="2" ry="2" />
<text  x="1096.05" y="111.5" >et..</text>
</g>
<g >
<title>timercb (25 samples, 0.49%)</title><rect x="1184.2" y="261" width="5.8" height="15.0" fill="rgb(214,146,16)" rx="2" ry="2" />
<text  x="1187.23" y="271.5" ></text>
</g>
<g >
<title>ether_demux (1,614 samples, 31.57%)</title><rect x="149.7" y="149" width="372.5" height="15.0" fill="rgb(217,105,50)" rx="2" ry="2" />
<text  x="152.65" y="159.5" >ether_demux</text>
</g>
<g >
<title>iflib_txq_drain (1,290 samples, 25.23%)</title><rect x="782.1" y="197" width="297.8" height="15.0" fill="rgb(212,42,26)" rx="2" ry="2" />
<text  x="785.12" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>pmap_kextract (4 samples, 0.08%)</title><rect x="885.1" y="133" width="0.9" height="15.0" fill="rgb(221,81,23)" rx="2" ry="2" />
<text  x="888.07" y="143.5" ></text>
</g>
<g >
<title>pmap_kextract (7 samples, 0.14%)</title><rect x="1025.4" y="149" width="1.6" height="15.0" fill="rgb(225,102,40)" rx="2" ry="2" />
<text  x="1028.42" y="159.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (2 samples, 0.04%)</title><rect x="417.0" y="37" width="0.4" height="15.0" fill="rgb(246,14,15)" rx="2" ry="2" />
<text  x="419.95" y="47.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (38 samples, 0.74%)</title><rect x="1150.1" y="229" width="8.7" height="15.0" fill="rgb(221,24,34)" rx="2" ry="2" />
<text  x="1153.07" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="1160.7" y="213" width="0.4" height="15.0" fill="rgb(251,218,30)" rx="2" ry="2" />
<text  x="1163.68" y="223.5" ></text>
</g>
<g >
<title>zone_put_bucket (2 samples, 0.04%)</title><rect x="906.8" y="101" width="0.4" height="15.0" fill="rgb(236,190,6)" rx="2" ry="2" />
<text  x="909.77" y="111.5" ></text>
</g>
<g >
<title>uma_zfree_arg (96 samples, 1.88%)</title><rect x="886.0" y="133" width="22.2" height="15.0" fill="rgb(248,33,24)" rx="2" ry="2" />
<text  x="889.00" y="143.5" >u..</text>
</g>
<g >
<title>iaf_get_config (1 samples, 0.02%)</title><rect x="1187.5" y="181" width="0.2" height="15.0" fill="rgb(244,33,21)" rx="2" ry="2" />
<text  x="1190.46" y="191.5" ></text>
</g>
<g >
<title>iflib_if_transmit (349 samples, 6.83%)</title><rect x="376.8" y="53" width="80.5" height="15.0" fill="rgb(247,172,42)" rx="2" ry="2" />
<text  x="379.79" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>iflib_if_transmit (140 samples, 2.74%)</title><rect x="1093.1" y="69" width="32.3" height="15.0" fill="rgb(210,132,3)" rx="2" ry="2" />
<text  x="1096.05" y="79.5" >if..</text>
</g>
<g >
<title>m_adj (1 samples, 0.02%)</title><rect x="522.2" y="149" width="0.2" height="15.0" fill="rgb(225,191,42)" rx="2" ry="2" />
<text  x="525.21" y="159.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.16%)</title><rect x="417.4" y="37" width="1.9" height="15.0" fill="rgb(245,163,3)" rx="2" ry="2" />
<text  x="420.41" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="750.5" y="197" width="0.2" height="15.0" fill="rgb(238,102,46)" rx="2" ry="2" />
<text  x="753.50" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,611 samples, 90.20%)</title><rect x="27.8" y="261" width="1064.3" height="15.0" fill="rgb(242,44,54)" rx="2" ry="2" />
<text  x="30.77" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>bsearch4_lookup (99 samples, 1.94%)</title><rect x="482.5" y="69" width="22.9" height="15.0" fill="rgb(208,199,16)" rx="2" ry="2" />
<text  x="485.51" y="79.5" >b..</text>
</g>
<g >
<title>lapic_handle_timer (28 samples, 0.55%)</title><rect x="1183.5" y="277" width="6.5" height="15.0" fill="rgb(251,206,9)" rx="2" ry="2" />
<text  x="1186.54" y="287.5" ></text>
</g>
<g >
<title>netisr_dispatch (1 samples, 0.02%)</title><rect x="524.7" y="149" width="0.3" height="15.0" fill="rgb(223,165,40)" rx="2" ry="2" />
<text  x="527.75" y="159.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (4 samples, 0.08%)</title><rect x="1092.1" y="165" width="1.0" height="15.0" fill="rgb(251,127,47)" rx="2" ry="2" />
<text  x="1095.13" y="175.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (140 samples, 2.74%)</title><rect x="1093.1" y="197" width="32.3" height="15.0" fill="rgb(224,215,45)" rx="2" ry="2" />
<text  x="1096.05" y="207.5" >ne..</text>
</g>
<g >
<title>pagezero_erms (2 samples, 0.04%)</title><rect x="571.4" y="85" width="0.4" height="15.0" fill="rgb(205,164,44)" rx="2" ry="2" />
<text  x="574.38" y="95.5" ></text>
</g>
<g >
<title>intr_event_handle (177 samples, 3.46%)</title><rect x="1137.6" y="261" width="40.9" height="15.0" fill="rgb(251,64,29)" rx="2" ry="2" />
<text  x="1140.60" y="271.5" >int..</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (10 samples, 0.20%)</title><rect x="1158.8" y="229" width="2.3" height="15.0" fill="rgb(208,144,19)" rx="2" ry="2" />
<text  x="1161.84" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="1079.0" y="165" width="0.7" height="15.0" fill="rgb(219,202,15)" rx="2" ry="2" />
<text  x="1081.97" y="175.5" ></text>
</g>
<g >
<title>cache_alloc (14 samples, 0.27%)</title><rect x="569.3" y="165" width="3.2" height="15.0" fill="rgb(230,169,13)" rx="2" ry="2" />
<text  x="572.30" y="175.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (4 samples, 0.08%)</title><rect x="24.1" y="85" width="0.9" height="15.0" fill="rgb(240,94,10)" rx="2" ry="2" />
<text  x="27.08" y="95.5" ></text>
</g>
<g >
<title>wakeup_any (7 samples, 0.14%)</title><rect x="1157.2" y="213" width="1.6" height="15.0" fill="rgb(245,189,12)" rx="2" ry="2" />
<text  x="1160.22" y="223.5" ></text>
</g>
<g >
<title>tc_windup (1 samples, 0.02%)</title><rect x="1188.4" y="197" width="0.2" height="15.0" fill="rgb(213,8,24)" rx="2" ry="2" />
<text  x="1191.38" y="207.5" ></text>
</g>
</g>
</svg>
