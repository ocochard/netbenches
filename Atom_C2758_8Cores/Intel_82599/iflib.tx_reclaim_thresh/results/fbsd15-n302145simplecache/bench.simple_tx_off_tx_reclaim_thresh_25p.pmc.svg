<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>m_adj (2 samples, 0.04%)</title><rect x="523.2" y="149" width="0.5" height="15.0" fill="rgb(216,122,43)" rx="2" ry="2" />
<text  x="526.22" y="159.5" ></text>
</g>
<g >
<title>tsc_get_config (2 samples, 0.04%)</title><rect x="1189.1" y="181" width="0.4" height="15.0" fill="rgb(253,116,22)" rx="2" ry="2" />
<text  x="1192.07" y="191.5" ></text>
</g>
<g >
<title>pmc_process_samples (9 samples, 0.18%)</title><rect x="1187.4" y="197" width="2.1" height="15.0" fill="rgb(224,223,37)" rx="2" ry="2" />
<text  x="1190.43" y="207.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (7 samples, 0.14%)</title><rect x="39.4" y="229" width="1.6" height="15.0" fill="rgb(234,110,53)" rx="2" ry="2" />
<text  x="42.41" y="239.5" ></text>
</g>
<g >
<title>drain_ring_lockless (1,347 samples, 26.64%)</title><rect x="751.9" y="213" width="314.4" height="15.0" fill="rgb(250,100,43)" rx="2" ry="2" />
<text  x="754.93" y="223.5" >drain_ring_lockless</text>
</g>
<g >
<title>ether_output (1 samples, 0.02%)</title><rect x="29.1" y="133" width="0.3" height="15.0" fill="rgb(225,197,23)" rx="2" ry="2" />
<text  x="32.14" y="143.5" ></text>
</g>
<g >
<title>if_getdrvflags (8 samples, 0.16%)</title><rect x="527.9" y="197" width="1.9" height="15.0" fill="rgb(213,166,42)" rx="2" ry="2" />
<text  x="530.88" y="207.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (9 samples, 0.18%)</title><rect x="1180.7" y="213" width="2.1" height="15.0" fill="rgb(210,111,54)" rx="2" ry="2" />
<text  x="1183.66" y="223.5" ></text>
</g>
<g >
<title>fib4_lookup (113 samples, 2.23%)</title><rect x="496.6" y="69" width="26.4" height="15.0" fill="rgb(249,71,7)" rx="2" ry="2" />
<text  x="499.61" y="79.5" >f..</text>
</g>
<g >
<title>rxd_frag_to_sd (86 samples, 1.70%)</title><rect x="727.0" y="197" width="20.0" height="15.0" fill="rgb(210,155,23)" rx="2" ry="2" />
<text  x="729.96" y="207.5" ></text>
</g>
<g >
<title>ether_input (1 samples, 0.02%)</title><rect x="29.1" y="245" width="0.3" height="15.0" fill="rgb(206,32,13)" rx="2" ry="2" />
<text  x="32.14" y="255.5" ></text>
</g>
<g >
<title>lapic_handle_timer (1 samples, 0.02%)</title><rect x="523.0" y="101" width="0.2" height="15.0" fill="rgb(210,26,45)" rx="2" ry="2" />
<text  x="525.98" y="111.5" ></text>
</g>
<g >
<title>wakeup (21 samples, 0.42%)</title><rect x="1076.1" y="229" width="4.9" height="15.0" fill="rgb(216,202,34)" rx="2" ry="2" />
<text  x="1079.11" y="239.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (2 samples, 0.04%)</title><rect x="1069.6" y="197" width="0.4" height="15.0" fill="rgb(208,181,47)" rx="2" ry="2" />
<text  x="1072.57" y="207.5" ></text>
</g>
<g >
<title>sleepq_lock (2 samples, 0.04%)</title><rect x="1081.0" y="37" width="0.5" height="15.0" fill="rgb(223,48,34)" rx="2" ry="2" />
<text  x="1084.01" y="47.5" ></text>
</g>
<g >
<title>iflib_if_transmit (1 samples, 0.02%)</title><rect x="29.1" y="101" width="0.3" height="15.0" fill="rgb(240,178,45)" rx="2" ry="2" />
<text  x="32.14" y="111.5" ></text>
</g>
<g >
<title>iflib_fast_intr_rxtx (180 samples, 3.56%)</title><rect x="1140.8" y="245" width="42.0" height="15.0" fill="rgb(218,163,44)" rx="2" ry="2" />
<text  x="1143.76" y="255.5" >ifl..</text>
</g>
<g >
<title>wakeup_any (2 samples, 0.04%)</title><rect x="1081.0" y="53" width="0.5" height="15.0" fill="rgb(241,113,32)" rx="2" ry="2" />
<text  x="1084.01" y="63.5" ></text>
</g>
<g >
<title>ether_output (798 samples, 15.78%)</title><rect x="267.2" y="85" width="186.2" height="15.0" fill="rgb(244,81,53)" rx="2" ry="2" />
<text  x="270.19" y="95.5" >ether_output</text>
</g>
<g >
<title>gtaskqueue_run_locked (184 samples, 3.64%)</title><rect x="1081.5" y="261" width="42.9" height="15.0" fill="rgb(253,33,41)" rx="2" ry="2" />
<text  x="1084.48" y="271.5" >gtas..</text>
</g>
<g >
<title>ifmp_ring_enqueue (8 samples, 0.16%)</title><rect x="1067.0" y="213" width="1.9" height="15.0" fill="rgb(253,97,40)" rx="2" ry="2" />
<text  x="1070.01" y="223.5" ></text>
</g>
<g >
<title>ether_output (2 samples, 0.04%)</title><rect x="1081.0" y="117" width="0.5" height="15.0" fill="rgb(213,20,52)" rx="2" ry="2" />
<text  x="1084.01" y="127.5" ></text>
</g>
<g >
<title>in_localip (57 samples, 1.13%)</title><rect x="453.4" y="85" width="13.3" height="15.0" fill="rgb(214,26,34)" rx="2" ry="2" />
<text  x="456.43" y="95.5" ></text>
</g>
<g >
<title>bsearch4_lookup (96 samples, 1.90%)</title><rect x="474.2" y="69" width="22.4" height="15.0" fill="rgb(244,73,38)" rx="2" ry="2" />
<text  x="477.20" y="79.5" >b..</text>
</g>
<g >
<title>netmap_rx_irq (9 samples, 0.18%)</title><rect x="748.0" y="213" width="2.1" height="15.0" fill="rgb(234,220,50)" rx="2" ry="2" />
<text  x="750.97" y="223.5" ></text>
</g>
<g >
<title>if_getcapenable (1 samples, 0.02%)</title><rect x="527.7" y="197" width="0.2" height="15.0" fill="rgb(228,160,18)" rx="2" ry="2" />
<text  x="530.65" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (2 samples, 0.04%)</title><rect x="1081.0" y="133" width="0.5" height="15.0" fill="rgb(225,227,11)" rx="2" ry="2" />
<text  x="1084.01" y="143.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (184 samples, 3.64%)</title><rect x="1081.5" y="53" width="42.9" height="15.0" fill="rgb(243,10,48)" rx="2" ry="2" />
<text  x="1084.48" y="63.5" >grou..</text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="1081.0" y="213" width="0.5" height="15.0" fill="rgb(217,121,14)" rx="2" ry="2" />
<text  x="1084.01" y="223.5" ></text>
</g>
<g >
<title>_epoch_exit_preempt (2 samples, 0.04%)</title><rect x="30.8" y="245" width="0.4" height="15.0" fill="rgb(244,135,27)" rx="2" ry="2" />
<text  x="33.77" y="255.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_available (41 samples, 0.81%)</title><rect x="594.9" y="197" width="9.5" height="15.0" fill="rgb(229,191,16)" rx="2" ry="2" />
<text  x="597.87" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (11 samples, 0.22%)</title><rect x="1070.3" y="229" width="2.5" height="15.0" fill="rgb(252,159,8)" rx="2" ry="2" />
<text  x="1073.27" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_encap (167 samples, 3.30%)</title><rect x="995.6" y="165" width="39.0" height="15.0" fill="rgb(237,46,35)" rx="2" ry="2" />
<text  x="998.59" y="175.5" >ixg..</text>
</g>
<g >
<title>pmap_kextract (1 samples, 0.02%)</title><rect x="851.4" y="117" width="0.2" height="15.0" fill="rgb(216,83,10)" rx="2" ry="2" />
<text  x="854.36" y="127.5" ></text>
</g>
<g >
<title>pmc_hook_handler (9 samples, 0.18%)</title><rect x="1187.4" y="213" width="2.1" height="15.0" fill="rgb(205,34,30)" rx="2" ry="2" />
<text  x="1190.43" y="223.5" ></text>
</g>
<g >
<title>if_getdrvflags (3 samples, 0.06%)</title><rect x="49.0" y="213" width="0.7" height="15.0" fill="rgb(208,148,12)" rx="2" ry="2" />
<text  x="51.98" y="223.5" ></text>
</g>
<g >
<title>iflib_txd_db_check (136 samples, 2.69%)</title><rect x="1034.6" y="181" width="31.7" height="15.0" fill="rgb(249,208,11)" rx="2" ry="2" />
<text  x="1037.56" y="191.5" >if..</text>
</g>
<g >
<title>spinlock_enter (82 samples, 1.62%)</title><rect x="1083.1" y="37" width="19.1" height="15.0" fill="rgb(247,127,4)" rx="2" ry="2" />
<text  x="1086.11" y="47.5" ></text>
</g>
<g >
<title>netisr_dispatch (12 samples, 0.24%)</title><rect x="95.4" y="181" width="2.8" height="15.0" fill="rgb(205,145,27)" rx="2" ry="2" />
<text  x="98.42" y="191.5" ></text>
</g>
<g >
<title>pmap_kextract (4 samples, 0.08%)</title><rect x="993.3" y="133" width="0.9" height="15.0" fill="rgb(240,226,27)" rx="2" ry="2" />
<text  x="996.26" y="143.5" ></text>
</g>
<g >
<title>Xtimerint_pti (2 samples, 0.04%)</title><rect x="28.7" y="277" width="0.4" height="15.0" fill="rgb(224,74,8)" rx="2" ry="2" />
<text  x="31.67" y="287.5" ></text>
</g>
<g >
<title>sleepq_lock (1 samples, 0.02%)</title><rect x="29.1" y="53" width="0.3" height="15.0" fill="rgb(223,9,52)" rx="2" ry="2" />
<text  x="32.14" y="63.5" ></text>
</g>
<g >
<title>if_getdrvflags (4 samples, 0.08%)</title><rect x="1179.0" y="213" width="1.0" height="15.0" fill="rgb(223,89,40)" rx="2" ry="2" />
<text  x="1182.03" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (2 samples, 0.04%)</title><rect x="1081.0" y="165" width="0.5" height="15.0" fill="rgb(209,207,27)" rx="2" ry="2" />
<text  x="1084.01" y="175.5" ></text>
</g>
<g >
<title>ip_tryforward (184 samples, 3.64%)</title><rect x="1081.5" y="117" width="42.9" height="15.0" fill="rgb(216,57,28)" rx="2" ry="2" />
<text  x="1084.48" y="127.5" >ip_t..</text>
</g>
<g >
<title>iflib_if_transmit (2 samples, 0.04%)</title><rect x="1081.0" y="85" width="0.5" height="15.0" fill="rgb(221,66,3)" rx="2" ry="2" />
<text  x="1084.01" y="95.5" ></text>
</g>
<g >
<title>m_free (127 samples, 2.51%)</title><rect x="822.0" y="149" width="29.6" height="15.0" fill="rgb(220,65,30)" rx="2" ry="2" />
<text  x="824.95" y="159.5" >m_..</text>
</g>
<g >
<title>ixgbe_msix_que (28 samples, 0.55%)</title><rect x="1176.2" y="229" width="6.6" height="15.0" fill="rgb(225,150,17)" rx="2" ry="2" />
<text  x="1179.23" y="239.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (4,498 samples, 88.96%)</title><rect x="31.2" y="245" width="1049.8" height="15.0" fill="rgb(206,226,21)" rx="2" ry="2" />
<text  x="34.24" y="255.5" >gtaskqueue_run_locked</text>
</g>
<g >
<title>intr_event_handle (219 samples, 4.33%)</title><rect x="1132.4" y="261" width="51.1" height="15.0" fill="rgb(215,0,18)" rx="2" ry="2" />
<text  x="1135.35" y="271.5" >intr_..</text>
</g>
<g >
<title>netisr_dispatch_src (184 samples, 3.64%)</title><rect x="1081.5" y="149" width="42.9" height="15.0" fill="rgb(217,157,42)" rx="2" ry="2" />
<text  x="1084.48" y="159.5" >neti..</text>
</g>
<g >
<title>ether_input (184 samples, 3.64%)</title><rect x="1081.5" y="213" width="42.9" height="15.0" fill="rgb(243,53,19)" rx="2" ry="2" />
<text  x="1084.48" y="223.5" >ethe..</text>
</g>
<g >
<title>Xapic_isr1_pti (40 samples, 0.79%)</title><rect x="19.3" y="277" width="9.4" height="15.0" fill="rgb(213,149,23)" rx="2" ry="2" />
<text  x="22.34" y="287.5" ></text>
</g>
<g >
<title>spinlock_exit (10 samples, 0.20%)</title><rect x="1159.9" y="213" width="2.3" height="15.0" fill="rgb(206,179,36)" rx="2" ry="2" />
<text  x="1162.89" y="223.5" ></text>
</g>
<g >
<title>fork_exit (4,501 samples, 89.02%)</title><rect x="30.5" y="277" width="1050.5" height="15.0" fill="rgb(227,180,5)" rx="2" ry="2" />
<text  x="33.54" y="287.5" >fork_exit</text>
</g>
<g >
<title>gtaskqueue_thread_loop (4,501 samples, 89.02%)</title><rect x="30.5" y="261" width="1050.5" height="15.0" fill="rgb(226,156,2)" rx="2" ry="2" />
<text  x="33.54" y="271.5" >gtaskqueue_thread_loop</text>
</g>
<g >
<title>if_inc_counter (5 samples, 0.10%)</title><rect x="534.9" y="197" width="1.2" height="15.0" fill="rgb(215,100,33)" rx="2" ry="2" />
<text  x="537.89" y="207.5" ></text>
</g>
<g >
<title>iflib_if_transmit (184 samples, 3.64%)</title><rect x="1081.5" y="69" width="42.9" height="15.0" fill="rgb(235,34,10)" rx="2" ry="2" />
<text  x="1084.48" y="79.5" >ifli..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (45 samples, 0.89%)</title><rect x="1152.9" y="229" width="10.5" height="15.0" fill="rgb(234,204,23)" rx="2" ry="2" />
<text  x="1155.89" y="239.5" ></text>
</g>
<g >
<title>ether_demux (1,629 samples, 32.22%)</title><rect x="143.0" y="149" width="380.2" height="15.0" fill="rgb(231,197,30)" rx="2" ry="2" />
<text  x="146.03" y="159.5" >ether_demux</text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (18 samples, 0.36%)</title><rect x="814.5" y="165" width="4.2" height="15.0" fill="rgb(239,100,42)" rx="2" ry="2" />
<text  x="817.48" y="175.5" ></text>
</g>
<g >
<title>bus_dmamap_load_mbuf_sg (187 samples, 3.70%)</title><rect x="951.9" y="165" width="43.7" height="15.0" fill="rgb(206,8,15)" rx="2" ry="2" />
<text  x="954.95" y="175.5" >bus_..</text>
</g>
<g >
<title>m_pkthdr_init (73 samples, 1.44%)</title><rect x="628.2" y="197" width="17.1" height="15.0" fill="rgb(242,218,25)" rx="2" ry="2" />
<text  x="631.24" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (1 samples, 0.02%)</title><rect x="29.1" y="261" width="0.3" height="15.0" fill="rgb(235,27,33)" rx="2" ry="2" />
<text  x="32.14" y="271.5" ></text>
</g>
<g >
<title>spinlock_exit (14 samples, 0.28%)</title><rect x="1072.8" y="229" width="3.3" height="15.0" fill="rgb(212,140,49)" rx="2" ry="2" />
<text  x="1075.84" y="239.5" ></text>
</g>
<g >
<title>_task_fn_tx (1,371 samples, 27.12%)</title><rect x="750.1" y="229" width="319.9" height="15.0" fill="rgb(246,136,42)" rx="2" ry="2" />
<text  x="753.07" y="239.5" >_task_fn_tx</text>
</g>
<g >
<title>ether_nh_input (184 samples, 3.64%)</title><rect x="1081.5" y="181" width="42.9" height="15.0" fill="rgb(233,64,6)" rx="2" ry="2" />
<text  x="1084.48" y="191.5" >ethe..</text>
</g>
<g >
<title>ixgbe_isc_rxd_available (8 samples, 0.16%)</title><rect x="1166.0" y="229" width="1.8" height="15.0" fill="rgb(248,202,24)" rx="2" ry="2" />
<text  x="1168.96" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,537 samples, 30.40%)</title><rect x="164.5" y="133" width="358.7" height="15.0" fill="rgb(241,41,0)" rx="2" ry="2" />
<text  x="167.50" y="143.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ether_output_frame (184 samples, 3.64%)</title><rect x="1081.5" y="85" width="42.9" height="15.0" fill="rgb(212,133,5)" rx="2" ry="2" />
<text  x="1084.48" y="95.5" >ethe..</text>
</g>
<g >
<title>uma_zfree_arg (87 samples, 1.72%)</title><rect x="831.3" y="133" width="20.3" height="15.0" fill="rgb(231,110,28)" rx="2" ry="2" />
<text  x="834.29" y="143.5" ></text>
</g>
<g >
<title>ip_input (184 samples, 3.64%)</title><rect x="1081.5" y="133" width="42.9" height="15.0" fill="rgb(246,116,2)" rx="2" ry="2" />
<text  x="1084.48" y="143.5" >ip_i..</text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="29.1" y="181" width="0.3" height="15.0" fill="rgb(211,214,53)" rx="2" ry="2" />
<text  x="32.14" y="191.5" ></text>
</g>
<g >
<title>ifmp_ring_enqueue (135 samples, 2.67%)</title><rect x="415.6" y="37" width="31.5" height="15.0" fill="rgb(254,65,24)" rx="2" ry="2" />
<text  x="418.62" y="47.5" >if..</text>
</g>
<g >
<title>ixgbe_isc_rxd_pkt_get (101 samples, 2.00%)</title><rect x="604.4" y="197" width="23.6" height="15.0" fill="rgb(205,147,3)" rx="2" ry="2" />
<text  x="607.43" y="207.5" >i..</text>
</g>
<g >
<title>uma_zalloc_arg (86 samples, 1.70%)</title><rect x="574.8" y="181" width="20.1" height="15.0" fill="rgb(235,148,19)" rx="2" ry="2" />
<text  x="577.79" y="191.5" ></text>
</g>
<g >
<title>if_getvnet (1 samples, 0.02%)</title><rect x="534.7" y="197" width="0.2" height="15.0" fill="rgb(230,183,21)" rx="2" ry="2" />
<text  x="537.65" y="207.5" ></text>
</g>
<g >
<title>pagezero_erms (3 samples, 0.06%)</title><rect x="567.3" y="85" width="0.7" height="15.0" fill="rgb(206,73,49)" rx="2" ry="2" />
<text  x="570.33" y="95.5" ></text>
</g>
<g >
<title>intr_lookup_source (3 samples, 0.06%)</title><rect x="1185.8" y="261" width="0.7" height="15.0" fill="rgb(227,36,39)" rx="2" ry="2" />
<text  x="1188.80" y="271.5" ></text>
</g>
<g >
<title>ether_bpf_mtap_if (7 samples, 0.14%)</title><rect x="754.3" y="197" width="1.6" height="15.0" fill="rgb(207,99,46)" rx="2" ry="2" />
<text  x="757.27" y="207.5" ></text>
</g>
<g >
<title>lapic_eoi (3 samples, 0.06%)</title><rect x="1182.8" y="245" width="0.7" height="15.0" fill="rgb(207,121,3)" rx="2" ry="2" />
<text  x="1185.77" y="255.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (2 samples, 0.04%)</title><rect x="1081.0" y="69" width="0.5" height="15.0" fill="rgb(223,146,33)" rx="2" ry="2" />
<text  x="1084.01" y="79.5" ></text>
</g>
<g >
<title>pmap_zero_page (1 samples, 0.02%)</title><rect x="568.0" y="85" width="0.3" height="15.0" fill="rgb(254,177,21)" rx="2" ry="2" />
<text  x="571.03" y="95.5" ></text>
</g>
<g >
<title>spinlock_enter (13 samples, 0.26%)</title><rect x="1156.9" y="213" width="3.0" height="15.0" fill="rgb(239,8,3)" rx="2" ry="2" />
<text  x="1159.86" y="223.5" ></text>
</g>
<g >
<title>wakeup_any (7 samples, 0.14%)</title><rect x="47.3" y="197" width="1.7" height="15.0" fill="rgb(218,71,17)" rx="2" ry="2" />
<text  x="50.34" y="207.5" ></text>
</g>
<g >
<title>if_getnumadomain (21 samples, 0.42%)</title><rect x="529.8" y="197" width="4.9" height="15.0" fill="rgb(246,41,39)" rx="2" ry="2" />
<text  x="532.75" y="207.5" ></text>
</g>
<g >
<title>iflib_rxeof (184 samples, 3.64%)</title><rect x="1081.5" y="229" width="42.9" height="15.0" fill="rgb(237,186,28)" rx="2" ry="2" />
<text  x="1084.48" y="239.5" >ifli..</text>
</g>
<g >
<title>netisr_dispatch_src (184 samples, 3.64%)</title><rect x="1081.5" y="197" width="42.9" height="15.0" fill="rgb(230,158,2)" rx="2" ry="2" />
<text  x="1084.48" y="207.5" >neti..</text>
</g>
<g >
<title>arpresolve (130 samples, 2.57%)</title><rect x="314.8" y="69" width="30.3" height="15.0" fill="rgb(214,229,9)" rx="2" ry="2" />
<text  x="317.80" y="79.5" >ar..</text>
</g>
<g >
<title>lapic_handle_intr (6 samples, 0.12%)</title><rect x="1185.1" y="277" width="1.4" height="15.0" fill="rgb(237,190,10)" rx="2" ry="2" />
<text  x="1188.10" y="287.5" ></text>
</g>
<g >
<title>_task_fn_rx (2 samples, 0.04%)</title><rect x="1081.0" y="261" width="0.5" height="15.0" fill="rgb(240,206,6)" rx="2" ry="2" />
<text  x="1084.01" y="271.5" ></text>
</g>
<g >
<title>keg_fetch_free_slab (1 samples, 0.02%)</title><rect x="568.3" y="133" width="0.2" height="15.0" fill="rgb(233,182,47)" rx="2" ry="2" />
<text  x="571.26" y="143.5" ></text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (11 samples, 0.22%)</title><rect x="1163.4" y="229" width="2.6" height="15.0" fill="rgb(252,65,39)" rx="2" ry="2" />
<text  x="1166.39" y="239.5" ></text>
</g>
<g >
<title>pmap_kextract (6 samples, 0.12%)</title><rect x="994.2" y="149" width="1.4" height="15.0" fill="rgb(211,171,40)" rx="2" ry="2" />
<text  x="997.19" y="159.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="1065.6" y="165" width="0.7" height="15.0" fill="rgb(221,92,54)" rx="2" ry="2" />
<text  x="1068.61" y="175.5" ></text>
</g>
<g >
<title>ifmp_ring_check_drainage (2 samples, 0.04%)</title><rect x="1066.5" y="213" width="0.5" height="15.0" fill="rgb(209,7,18)" rx="2" ry="2" />
<text  x="1069.54" y="223.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1 samples, 0.02%)</title><rect x="29.1" y="229" width="0.3" height="15.0" fill="rgb(223,139,9)" rx="2" ry="2" />
<text  x="32.14" y="239.5" ></text>
</g>
<g >
<title>_ck_epoch_addref (3 samples, 0.06%)</title><rect x="38.7" y="213" width="0.7" height="15.0" fill="rgb(212,24,22)" rx="2" ry="2" />
<text  x="41.71" y="223.5" ></text>
</g>
<g >
<title>Xapic_isr1 (40 samples, 0.79%)</title><rect x="10.0" y="277" width="9.3" height="15.0" fill="rgb(240,219,51)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>iflib_if_transmit (351 samples, 6.94%)</title><rect x="365.2" y="53" width="81.9" height="15.0" fill="rgb(244,175,7)" rx="2" ry="2" />
<text  x="368.21" y="63.5" >iflib_if_..</text>
</g>
<g >
<title>if_getdrvflags (6 samples, 0.12%)</title><rect x="776.9" y="181" width="1.4" height="15.0" fill="rgb(233,39,48)" rx="2" ry="2" />
<text  x="779.91" y="191.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (57 samples, 1.13%)</title><rect x="397.2" y="37" width="13.3" height="15.0" fill="rgb(251,120,51)" rx="2" ry="2" />
<text  x="400.19" y="47.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (1 samples, 0.02%)</title><rect x="628.0" y="197" width="0.2" height="15.0" fill="rgb(228,165,41)" rx="2" ry="2" />
<text  x="631.01" y="207.5" ></text>
</g>
<g >
<title>timercb (15 samples, 0.30%)</title><rect x="1186.5" y="261" width="3.5" height="15.0" fill="rgb(220,68,41)" rx="2" ry="2" />
<text  x="1189.50" y="271.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (5 samples, 0.10%)</title><rect x="1081.5" y="37" width="1.1" height="15.0" fill="rgb(236,137,16)" rx="2" ry="2" />
<text  x="1084.48" y="47.5" ></text>
</g>
<g >
<title>wakeup_any (5 samples, 0.10%)</title><rect x="1162.2" y="213" width="1.2" height="15.0" fill="rgb(214,63,36)" rx="2" ry="2" />
<text  x="1165.23" y="223.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (4 samples, 0.08%)</title><rect x="1165.0" y="213" width="1.0" height="15.0" fill="rgb(224,51,47)" rx="2" ry="2" />
<text  x="1168.03" y="223.5" ></text>
</g>
<g >
<title>soft_get_config (1 samples, 0.02%)</title><rect x="1188.8" y="181" width="0.3" height="15.0" fill="rgb(209,27,46)" rx="2" ry="2" />
<text  x="1191.83" y="191.5" ></text>
</g>
<g >
<title>memcpy_erms (27 samples, 0.53%)</title><rect x="447.1" y="69" width="6.3" height="15.0" fill="rgb(237,133,14)" rx="2" ry="2" />
<text  x="450.13" y="79.5" ></text>
</g>
<g >
<title>tcp_lro_flush_all (4 samples, 0.08%)</title><rect x="747.0" y="197" width="1.0" height="15.0" fill="rgb(250,126,34)" rx="2" ry="2" />
<text  x="750.03" y="207.5" ></text>
</g>
<g >
<title>spinlock_enter (1 samples, 0.02%)</title><rect x="29.1" y="37" width="0.3" height="15.0" fill="rgb(210,178,8)" rx="2" ry="2" />
<text  x="32.14" y="47.5" ></text>
</g>
<g >
<title>all (5,056 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(238,199,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>cache_alloc_retry (11 samples, 0.22%)</title><rect x="565.9" y="181" width="2.6" height="15.0" fill="rgb(232,108,36)" rx="2" ry="2" />
<text  x="568.93" y="191.5" ></text>
</g>
<g >
<title>loadtimer (1 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(229,128,19)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>_task_fn_rx (184 samples, 3.64%)</title><rect x="1081.5" y="245" width="42.9" height="15.0" fill="rgb(208,47,26)" rx="2" ry="2" />
<text  x="1084.48" y="255.5" >_tas..</text>
</g>
<g >
<title>mb_ctor_mbuf (11 samples, 0.22%)</title><rect x="592.3" y="165" width="2.6" height="15.0" fill="rgb(244,19,10)" rx="2" ry="2" />
<text  x="595.30" y="175.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_loop (184 samples, 3.64%)</title><rect x="1081.5" y="277" width="42.9" height="15.0" fill="rgb(207,44,1)" rx="2" ry="2" />
<text  x="1084.48" y="287.5" >gtas..</text>
</g>
<g >
<title>ether_demux (2 samples, 0.04%)</title><rect x="1081.0" y="181" width="0.5" height="15.0" fill="rgb(240,113,36)" rx="2" ry="2" />
<text  x="1084.01" y="191.5" ></text>
</g>
<g >
<title>ether_nh_input (1 samples, 0.02%)</title><rect x="29.1" y="213" width="0.3" height="15.0" fill="rgb(218,221,15)" rx="2" ry="2" />
<text  x="32.14" y="223.5" ></text>
</g>
<g >
<title>_task_fn_rx (3,038 samples, 60.09%)</title><rect x="41.0" y="229" width="709.1" height="15.0" fill="rgb(227,9,33)" rx="2" ry="2" />
<text  x="44.04" y="239.5" >_task_fn_rx</text>
</g>
<g >
<title>iflib_completed_tx_reclaim (308 samples, 6.09%)</title><rect x="779.7" y="181" width="71.9" height="15.0" fill="rgb(222,97,4)" rx="2" ry="2" />
<text  x="782.71" y="191.5" >iflib_co..</text>
</g>
<g >
<title>grouptaskqueue_enqueue (27 samples, 0.53%)</title><rect x="42.7" y="213" width="6.3" height="15.0" fill="rgb(245,210,3)" rx="2" ry="2" />
<text  x="45.67" y="223.5" ></text>
</g>
<g >
<title>m_adj (27 samples, 0.53%)</title><rect x="157.7" y="133" width="6.3" height="15.0" fill="rgb(244,31,27)" rx="2" ry="2" />
<text  x="160.73" y="143.5" ></text>
</g>
<g >
<title>_task_fn_rx (1 samples, 0.02%)</title><rect x="29.1" y="277" width="0.3" height="15.0" fill="rgb(241,115,45)" rx="2" ry="2" />
<text  x="32.14" y="287.5" ></text>
</g>
<g >
<title>ether_output_frame (2 samples, 0.04%)</title><rect x="1081.0" y="101" width="0.5" height="15.0" fill="rgb(232,61,9)" rx="2" ry="2" />
<text  x="1084.01" y="111.5" ></text>
</g>
<g >
<title>ip_input (2 samples, 0.04%)</title><rect x="1081.0" y="149" width="0.5" height="15.0" fill="rgb(239,189,6)" rx="2" ry="2" />
<text  x="1084.01" y="159.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_credits_update (36 samples, 0.71%)</title><rect x="1167.8" y="229" width="8.4" height="15.0" fill="rgb(232,164,36)" rx="2" ry="2" />
<text  x="1170.83" y="239.5" ></text>
</g>
<g >
<title>if_getdrvflags (1 samples, 0.02%)</title><rect x="1066.3" y="213" width="0.2" height="15.0" fill="rgb(231,154,47)" rx="2" ry="2" />
<text  x="1069.31" y="223.5" ></text>
</g>
<g >
<title>iap_get_config (1 samples, 0.02%)</title><rect x="1188.4" y="181" width="0.2" height="15.0" fill="rgb(254,149,20)" rx="2" ry="2" />
<text  x="1191.37" y="191.5" ></text>
</g>
<g >
<title>m_freem (141 samples, 2.79%)</title><rect x="818.7" y="165" width="32.9" height="15.0" fill="rgb(229,30,16)" rx="2" ry="2" />
<text  x="821.68" y="175.5" >m_..</text>
</g>
<g >
<title>ixgbe_isc_rxd_flush (1 samples, 0.02%)</title><rect x="568.5" y="181" width="0.2" height="15.0" fill="rgb(240,167,1)" rx="2" ry="2" />
<text  x="571.49" y="191.5" ></text>
</g>
<g >
<title>netisr_dispatch (2 samples, 0.04%)</title><rect x="164.0" y="133" width="0.5" height="15.0" fill="rgb(230,173,22)" rx="2" ry="2" />
<text  x="167.03" y="143.5" ></text>
</g>
<g >
<title>in_lltable_lookup (35 samples, 0.69%)</title><rect x="333.2" y="53" width="8.2" height="15.0" fill="rgb(233,182,5)" rx="2" ry="2" />
<text  x="336.24" y="63.5" ></text>
</g>
<g >
<title>spinlock_enter (2 samples, 0.04%)</title><rect x="1162.9" y="181" width="0.5" height="15.0" fill="rgb(220,36,34)" rx="2" ry="2" />
<text  x="1165.93" y="191.5" ></text>
</g>
<g >
<title>if_getdrvflags (5 samples, 0.10%)</title><rect x="411.9" y="37" width="1.2" height="15.0" fill="rgb(243,53,6)" rx="2" ry="2" />
<text  x="414.89" y="47.5" ></text>
</g>
<g >
<title>memcpy_erms (347 samples, 6.86%)</title><rect x="645.3" y="197" width="81.0" height="15.0" fill="rgb(226,163,9)" rx="2" ry="2" />
<text  x="648.28" y="207.5" >memcpy_erms</text>
</g>
<g >
<title>iflib_rxeof (2 samples, 0.04%)</title><rect x="1081.0" y="245" width="0.5" height="15.0" fill="rgb(250,8,21)" rx="2" ry="2" />
<text  x="1084.01" y="255.5" ></text>
</g>
<g >
<title>ip_input (1 samples, 0.02%)</title><rect x="29.1" y="165" width="0.3" height="15.0" fill="rgb(216,44,10)" rx="2" ry="2" />
<text  x="32.14" y="175.5" ></text>
</g>
<g >
<title>binuptime (2 samples, 0.04%)</title><rect x="1186.7" y="245" width="0.5" height="15.0" fill="rgb(225,88,2)" rx="2" ry="2" />
<text  x="1189.73" y="255.5" ></text>
</g>
<g >
<title>sleepq_broadcast (3 samples, 0.06%)</title><rect x="1076.8" y="213" width="0.7" height="15.0" fill="rgb(205,40,41)" rx="2" ry="2" />
<text  x="1079.81" y="223.5" ></text>
</g>
<g >
<title>gtaskqueue_run_locked (2 samples, 0.04%)</title><rect x="1081.0" y="277" width="0.5" height="15.0" fill="rgb(243,11,23)" rx="2" ry="2" />
<text  x="1084.01" y="287.5" ></text>
</g>
<g >
<title>ether_demux (1 samples, 0.02%)</title><rect x="29.1" y="197" width="0.3" height="15.0" fill="rgb(241,131,35)" rx="2" ry="2" />
<text  x="32.14" y="207.5" ></text>
</g>
<g >
<title>cache_alloc (9 samples, 0.18%)</title><rect x="566.4" y="165" width="2.1" height="15.0" fill="rgb(209,111,31)" rx="2" ry="2" />
<text  x="569.39" y="175.5" ></text>
</g>
<g >
<title>spinlock_exit (95 samples, 1.88%)</title><rect x="1102.2" y="37" width="22.2" height="15.0" fill="rgb(220,192,33)" rx="2" ry="2" />
<text  x="1105.25" y="47.5" >s..</text>
</g>
<g >
<title>pmap_kextract (2 samples, 0.04%)</title><rect x="830.8" y="133" width="0.5" height="15.0" fill="rgb(232,158,41)" rx="2" ry="2" />
<text  x="833.82" y="143.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="568.3" y="117" width="0.2" height="15.0" fill="rgb(247,145,41)" rx="2" ry="2" />
<text  x="571.26" y="127.5" ></text>
</g>
<g >
<title>if_inc_counter (6 samples, 0.12%)</title><rect x="778.3" y="181" width="1.4" height="15.0" fill="rgb(231,31,46)" rx="2" ry="2" />
<text  x="781.31" y="191.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="1156.4" y="213" width="0.5" height="15.0" fill="rgb(218,166,39)" rx="2" ry="2" />
<text  x="1159.39" y="223.5" ></text>
</g>
<g >
<title>iflib_txq_drain (1,330 samples, 26.31%)</title><rect x="755.9" y="197" width="310.4" height="15.0" fill="rgb(234,185,37)" rx="2" ry="2" />
<text  x="758.90" y="207.5" >iflib_txq_drain</text>
</g>
<g >
<title>iflib_get_ifp (3 samples, 0.06%)</title><rect x="1180.0" y="213" width="0.7" height="15.0" fill="rgb(246,64,32)" rx="2" ry="2" />
<text  x="1182.96" y="223.5" ></text>
</g>
<g >
<title>lock_delay (1 samples, 0.02%)</title><rect x="566.9" y="117" width="0.2" height="15.0" fill="rgb(217,100,43)" rx="2" ry="2" />
<text  x="569.86" y="127.5" ></text>
</g>
<g >
<title>ether_input (1,888 samples, 37.34%)</title><rect x="87.0" y="197" width="440.7" height="15.0" fill="rgb(235,61,21)" rx="2" ry="2" />
<text  x="90.02" y="207.5" >ether_input</text>
</g>
<g >
<title>doreti (5 samples, 0.10%)</title><rect x="29.4" y="277" width="1.1" height="15.0" fill="rgb(214,10,17)" rx="2" ry="2" />
<text  x="32.37" y="287.5" ></text>
</g>
<g >
<title>sleepq_release (1 samples, 0.02%)</title><rect x="1070.0" y="229" width="0.3" height="15.0" fill="rgb(215,41,50)" rx="2" ry="2" />
<text  x="1073.04" y="239.5" ></text>
</g>
<g >
<title>ether_nh_input (2 samples, 0.04%)</title><rect x="1081.0" y="197" width="0.5" height="15.0" fill="rgb(218,23,14)" rx="2" ry="2" />
<text  x="1084.01" y="207.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (4 samples, 0.08%)</title><rect x="43.8" y="197" width="1.0" height="15.0" fill="rgb(234,28,49)" rx="2" ry="2" />
<text  x="46.84" y="207.5" ></text>
</g>
<g >
<title>msi_eoi_source (2 samples, 0.04%)</title><rect x="1183.5" y="261" width="0.4" height="15.0" fill="rgb(229,153,31)" rx="2" ry="2" />
<text  x="1186.47" y="271.5" ></text>
</g>
<g >
<title>sleepq_lock (15 samples, 0.30%)</title><rect x="1077.5" y="213" width="3.5" height="15.0" fill="rgb(250,14,22)" rx="2" ry="2" />
<text  x="1080.51" y="223.5" ></text>
</g>
<g >
<title>ip_findroute (241 samples, 4.77%)</title><rect x="466.7" y="85" width="56.3" height="15.0" fill="rgb(244,14,30)" rx="2" ry="2" />
<text  x="469.74" y="95.5" >ip_fi..</text>
</g>
<g >
<title>ip_tryforward (1,348 samples, 26.66%)</title><rect x="208.4" y="101" width="314.6" height="15.0" fill="rgb(230,10,51)" rx="2" ry="2" />
<text  x="211.38" y="111.5" >ip_tryforward</text>
</g>
<g >
<title>ether_output_frame (437 samples, 8.64%)</title><rect x="345.1" y="69" width="102.0" height="15.0" fill="rgb(235,149,5)" rx="2" ry="2" />
<text  x="348.14" y="79.5" >ether_output..</text>
</g>
<g >
<title>pmclog_process_callchain (1 samples, 0.02%)</title><rect x="1188.6" y="181" width="0.2" height="15.0" fill="rgb(219,59,21)" rx="2" ry="2" />
<text  x="1191.60" y="191.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_load_buffer (112 samples, 2.22%)</title><rect x="968.0" y="149" width="26.2" height="15.0" fill="rgb(219,83,39)" rx="2" ry="2" />
<text  x="971.05" y="159.5" >b..</text>
</g>
<g >
<title>sleepq_lock (4 samples, 0.08%)</title><rect x="1162.5" y="197" width="0.9" height="15.0" fill="rgb(254,20,17)" rx="2" ry="2" />
<text  x="1165.46" y="207.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (1 samples, 0.02%)</title><rect x="30.5" y="245" width="0.3" height="15.0" fill="rgb(248,191,36)" rx="2" ry="2" />
<text  x="33.54" y="255.5" ></text>
</g>
<g >
<title>bsearch4_lookup (11 samples, 0.22%)</title><rect x="520.4" y="53" width="2.6" height="15.0" fill="rgb(229,146,30)" rx="2" ry="2" />
<text  x="523.42" y="63.5" ></text>
</g>
<g >
<title>iflib_encap (784 samples, 15.51%)</title><rect x="851.6" y="181" width="183.0" height="15.0" fill="rgb(242,89,13)" rx="2" ry="2" />
<text  x="854.59" y="191.5" >iflib_encap</text>
</g>
<g >
<title>memcmp (17 samples, 0.34%)</title><rect x="523.7" y="149" width="4.0" height="15.0" fill="rgb(211,188,47)" rx="2" ry="2" />
<text  x="526.68" y="159.5" ></text>
</g>
<g >
<title>hardclock (10 samples, 0.20%)</title><rect x="1187.2" y="229" width="2.3" height="15.0" fill="rgb(244,85,53)" rx="2" ry="2" />
<text  x="1190.20" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch_src (1,840 samples, 36.39%)</title><rect x="98.2" y="181" width="429.5" height="15.0" fill="rgb(228,166,4)" rx="2" ry="2" />
<text  x="101.22" y="191.5" >netisr_dispatch_src</text>
</g>
<g >
<title>ixgbe_if_rx_queue_intr_enable (5 samples, 0.10%)</title><rect x="1068.9" y="213" width="1.1" height="15.0" fill="rgb(237,114,35)" rx="2" ry="2" />
<text  x="1071.87" y="223.5" ></text>
</g>
<g >
<title>ixgbe_isc_rxd_refill (23 samples, 0.45%)</title><rect x="568.7" y="181" width="5.4" height="15.0" fill="rgb(240,48,8)" rx="2" ry="2" />
<text  x="571.73" y="191.5" ></text>
</g>
<g >
<title>ether_input (2 samples, 0.04%)</title><rect x="1081.0" y="229" width="0.5" height="15.0" fill="rgb(221,76,46)" rx="2" ry="2" />
<text  x="1084.01" y="239.5" ></text>
</g>
<g >
<title>netisr_dispatch (3 samples, 0.06%)</title><rect x="726.3" y="197" width="0.7" height="15.0" fill="rgb(234,24,40)" rx="2" ry="2" />
<text  x="729.26" y="207.5" ></text>
</g>
<g >
<title>if_getsoftc (11 samples, 0.22%)</title><rect x="413.1" y="37" width="2.5" height="15.0" fill="rgb(250,67,46)" rx="2" ry="2" />
<text  x="416.06" y="47.5" ></text>
</g>
<g >
<title>memmove_erms (16 samples, 0.32%)</title><rect x="341.4" y="53" width="3.7" height="15.0" fill="rgb(206,210,20)" rx="2" ry="2" />
<text  x="344.41" y="63.5" ></text>
</g>
<g >
<title>msi_vector (5 samples, 0.10%)</title><rect x="1183.9" y="261" width="1.2" height="15.0" fill="rgb(247,165,14)" rx="2" ry="2" />
<text  x="1186.93" y="271.5" ></text>
</g>
<g >
<title>keg_alloc_slab (6 samples, 0.12%)</title><rect x="566.9" y="133" width="1.4" height="15.0" fill="rgb(217,152,25)" rx="2" ry="2" />
<text  x="569.86" y="143.5" ></text>
</g>
<g >
<title>mb_dtor_mbuf (6 samples, 0.12%)</title><rect x="850.0" y="117" width="1.4" height="15.0" fill="rgb(235,21,47)" rx="2" ry="2" />
<text  x="852.96" y="127.5" ></text>
</g>
<g >
<title>grouptaskqueue_enqueue (1 samples, 0.02%)</title><rect x="29.1" y="85" width="0.3" height="15.0" fill="rgb(228,55,19)" rx="2" ry="2" />
<text  x="32.14" y="95.5" ></text>
</g>
<g >
<title>zone_import (8 samples, 0.16%)</title><rect x="566.6" y="149" width="1.9" height="15.0" fill="rgb(234,10,26)" rx="2" ry="2" />
<text  x="569.63" y="159.5" ></text>
</g>
<g >
<title>sleepq_signal (1 samples, 0.02%)</title><rect x="44.8" y="197" width="0.2" height="15.0" fill="rgb(227,229,26)" rx="2" ry="2" />
<text  x="47.77" y="207.5" ></text>
</g>
<g >
<title>ether_output_frame (1 samples, 0.02%)</title><rect x="29.1" y="117" width="0.3" height="15.0" fill="rgb(219,113,21)" rx="2" ry="2" />
<text  x="32.14" y="127.5" ></text>
</g>
<g >
<title>if_altq_is_enabled (6 samples, 0.12%)</title><rect x="410.5" y="37" width="1.4" height="15.0" fill="rgb(232,201,37)" rx="2" ry="2" />
<text  x="413.49" y="47.5" ></text>
</g>
<g >
<title>bounce_bus_dmamap_complete (3 samples, 0.06%)</title><rect x="967.3" y="149" width="0.7" height="15.0" fill="rgb(234,209,35)" rx="2" ry="2" />
<text  x="970.35" y="159.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="48.3" y="165" width="0.7" height="15.0" fill="rgb(240,31,7)" rx="2" ry="2" />
<text  x="51.28" y="175.5" ></text>
</g>
<g >
<title>sleepq_signal (2 samples, 0.04%)</title><rect x="1082.6" y="37" width="0.5" height="15.0" fill="rgb(242,206,5)" rx="2" ry="2" />
<text  x="1085.64" y="47.5" ></text>
</g>
<g >
<title>sleepq_lock (7 samples, 0.14%)</title><rect x="47.3" y="181" width="1.7" height="15.0" fill="rgb(247,46,3)" rx="2" ry="2" />
<text  x="50.34" y="191.5" ></text>
</g>
<g >
<title>vm_page_alloc_noobj_domain (4 samples, 0.08%)</title><rect x="567.3" y="101" width="1.0" height="15.0" fill="rgb(206,197,46)" rx="2" ry="2" />
<text  x="570.33" y="111.5" ></text>
</g>
<g >
<title>spinlock_enter (3 samples, 0.06%)</title><rect x="1080.3" y="197" width="0.7" height="15.0" fill="rgb(229,43,18)" rx="2" ry="2" />
<text  x="1083.31" y="207.5" ></text>
</g>
<g >
<title>iflib_fl_refill (252 samples, 4.98%)</title><rect x="536.1" y="197" width="58.8" height="15.0" fill="rgb(241,120,29)" rx="2" ry="2" />
<text  x="539.05" y="207.5" >iflib_..</text>
</g>
<g >
<title>lapic_handle_timer (15 samples, 0.30%)</title><rect x="1186.5" y="277" width="3.5" height="15.0" fill="rgb(247,65,24)" rx="2" ry="2" />
<text  x="1189.50" y="287.5" ></text>
</g>
<g >
<title>ether_nh_input (1,770 samples, 35.01%)</title><rect x="114.6" y="165" width="413.1" height="15.0" fill="rgb(229,185,43)" rx="2" ry="2" />
<text  x="117.56" y="175.5" >ether_nh_input</text>
</g>
<g >
<title>ip_input (1,485 samples, 29.37%)</title><rect x="176.6" y="117" width="346.6" height="15.0" fill="rgb(234,67,3)" rx="2" ry="2" />
<text  x="179.64" y="127.5" >ip_input</text>
</g>
<g >
<title>lapic_et_start (1 samples, 0.02%)</title><rect x="1189.5" y="229" width="0.3" height="15.0" fill="rgb(215,39,9)" rx="2" ry="2" />
<text  x="1192.53" y="239.5" ></text>
</g>
<g >
<title>uma_small_alloc (5 samples, 0.10%)</title><rect x="567.1" y="117" width="1.2" height="15.0" fill="rgb(244,119,27)" rx="2" ry="2" />
<text  x="570.09" y="127.5" ></text>
</g>
<g >
<title>spinlock_enter (7 samples, 0.14%)</title><rect x="45.0" y="197" width="1.6" height="15.0" fill="rgb(219,53,28)" rx="2" ry="2" />
<text  x="48.01" y="207.5" ></text>
</g>
<g >
<title>_ck_epoch_delref (1 samples, 0.02%)</title><rect x="37.3" y="229" width="0.2" height="15.0" fill="rgb(238,167,10)" rx="2" ry="2" />
<text  x="40.31" y="239.5" ></text>
</g>
<g >
<title>intr_execute_handlers (260 samples, 5.14%)</title><rect x="1124.4" y="277" width="60.7" height="15.0" fill="rgb(216,34,13)" rx="2" ry="2" />
<text  x="1127.42" y="287.5" >intr_e..</text>
</g>
<g >
<title>iflib_rxeof (2,992 samples, 59.18%)</title><rect x="49.7" y="213" width="698.3" height="15.0" fill="rgb(229,130,20)" rx="2" ry="2" />
<text  x="52.68" y="223.5" >iflib_rxeof</text>
</g>
<g >
<title>spinlock_exit (3 samples, 0.06%)</title><rect x="46.6" y="197" width="0.7" height="15.0" fill="rgb(252,31,19)" rx="2" ry="2" />
<text  x="49.64" y="207.5" ></text>
</g>
<g >
<title>handleevents (12 samples, 0.24%)</title><rect x="1187.2" y="245" width="2.8" height="15.0" fill="rgb(207,124,8)" rx="2" ry="2" />
<text  x="1190.20" y="255.5" ></text>
</g>
<g >
<title>ether_output (184 samples, 3.64%)</title><rect x="1081.5" y="101" width="42.9" height="15.0" fill="rgb(218,47,12)" rx="2" ry="2" />
<text  x="1084.48" y="111.5" >ethe..</text>
</g>
<g >
<title>wakeup_any (1 samples, 0.02%)</title><rect x="29.1" y="69" width="0.3" height="15.0" fill="rgb(233,193,43)" rx="2" ry="2" />
<text  x="32.14" y="79.5" ></text>
</g>
<g >
<title>gtaskqueue_thread_enqueue (3 samples, 0.06%)</title><rect x="1155.7" y="213" width="0.7" height="15.0" fill="rgb(226,186,21)" rx="2" ry="2" />
<text  x="1158.69" y="223.5" ></text>
</g>
<g >
<title>_epoch_enter_preempt (8 samples, 0.16%)</title><rect x="37.5" y="229" width="1.9" height="15.0" fill="rgb(241,146,20)" rx="2" ry="2" />
<text  x="40.54" y="239.5" ></text>
</g>
<g >
<title>ixgbe_isc_txd_flush (10 samples, 0.20%)</title><rect x="1063.3" y="165" width="2.3" height="15.0" fill="rgb(251,6,51)" rx="2" ry="2" />
<text  x="1066.27" y="175.5" ></text>
</g>
<g >
<title>ixgbe_write_reg (3 samples, 0.06%)</title><rect x="574.1" y="181" width="0.7" height="15.0" fill="rgb(227,207,4)" rx="2" ry="2" />
<text  x="577.09" y="191.5" ></text>
</g>
<g >
<title>iflib_get_softc (1 samples, 0.02%)</title><rect x="1164.8" y="213" width="0.2" height="15.0" fill="rgb(225,88,22)" rx="2" ry="2" />
<text  x="1167.79" y="223.5" ></text>
</g>
<g >
<title>ether_demux (184 samples, 3.64%)</title><rect x="1081.5" y="165" width="42.9" height="15.0" fill="rgb(245,71,29)" rx="2" ry="2" />
<text  x="1084.48" y="175.5" >ethe..</text>
</g>
<g >
<title>if_getnetmapadapter (1 samples, 0.02%)</title><rect x="749.8" y="197" width="0.3" height="15.0" fill="rgb(221,165,37)" rx="2" ry="2" />
<text  x="752.83" y="207.5" ></text>
</g>
<g >
<title>ip_tryforward (1 samples, 0.02%)</title><rect x="29.1" y="149" width="0.3" height="15.0" fill="rgb(247,138,42)" rx="2" ry="2" />
<text  x="32.14" y="159.5" ></text>
</g>
</g>
</svg>
